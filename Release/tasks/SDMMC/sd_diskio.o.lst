   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"sd_diskio.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.data
  21              	Stat:
  22 0000 01       		.byte	1
  23              		.bss
  24              		.align	2
  25              	IsCardType:
  26 0000 00000000 		.space	4
  27              		.align	2
  28              	CSD_Tab:
  29 0004 00000000 		.space	16
  29      00000000 
  29      00000000 
  29      00000000 
  30              		.align	2
  31              	CID_Tab:
  32 0014 00000000 		.space	16
  32      00000000 
  32      00000000 
  32      00000000 
  33              		.align	2
  34              	RCA:
  35 0024 00000000 		.space	4
  36              		.comm	SDIO_InitStructure,24,4
  37              		.comm	SDIO_CmdInitStructure,20,4
  38              		.comm	SDIO_DataInitStructure,24,4
  39              		.align	2
  40              	DeviceMode:
  41 0028 00000000 		.space	4
  42              		.global	SD_Driver
  43              		.data
  44 0001 000000   		.align	2
  47              	SD_Driver:
  48 0004 00000000 		.word	SD_initialize
  49 0008 00000000 		.word	SD_status
  50 000c 00000000 		.word	SD_read
  51 0010 00000000 		.word	SD_write
  52 0014 00000000 		.word	SD_ioctl
  53              		.text
  54              		.align	2
  55              		.global	SD_initialize
  56              		.thumb
  57              		.thumb_func
  59              	SD_initialize:
  60              	.LFB55:
  61              		.file 1 "../tasks/SDMMC/sd_diskio.c"
   1:../tasks/SDMMC/sd_diskio.c **** /**
   2:../tasks/SDMMC/sd_diskio.c ****   ******************************************************************************
   3:../tasks/SDMMC/sd_diskio.c ****   * @file    sd_diskio.c
   4:../tasks/SDMMC/sd_diskio.c ****   * @author  sagok
   5:../tasks/SDMMC/sd_diskio.c ****   * @version V1.0.0
   6:../tasks/SDMMC/sd_diskio.c ****   * @date    26-February-2015
   7:../tasks/SDMMC/sd_diskio.c ****   * @brief   SD Disk I/O driver
   8:../tasks/SDMMC/sd_diskio.c ****   ******************************************************************************
   9:../tasks/SDMMC/sd_diskio.c ****   */ 
  10:../tasks/SDMMC/sd_diskio.c **** 
  11:../tasks/SDMMC/sd_diskio.c **** /* Includes ------------------------------------------------------------------*/
  12:../tasks/SDMMC/sd_diskio.c **** #include <string.h>
  13:../tasks/SDMMC/sd_diskio.c **** #include <integer.h>
  14:../tasks/SDMMC/sd_diskio.c **** #include "ff_gen_drv.h"
  15:../tasks/SDMMC/sd_diskio.c **** 
  16:../tasks/SDMMC/sd_diskio.c **** #include "sd_diskio.h"
  17:../tasks/SDMMC/sd_diskio.c **** #include "stm32f2xx_hal.h"
  18:../tasks/SDMMC/sd_diskio.c **** 
  19:../tasks/SDMMC/sd_diskio.c **** /* Private typedef -----------------------------------------------------------*/
  20:../tasks/SDMMC/sd_diskio.c **** /* Private define ------------------------------------------------------------*/
  21:../tasks/SDMMC/sd_diskio.c **** #define SD_DMAx_Tx_STREAM	  DMA2_Stream6
  22:../tasks/SDMMC/sd_diskio.c **** #define SD_DMAx_Rx_STREAM	  DMA2_Stream3
  23:../tasks/SDMMC/sd_diskio.c **** #define SD_DMAx_Tx_CHANNEL    DMA_CHANNEL_4
  24:../tasks/SDMMC/sd_diskio.c **** #define SD_DMAx_Rx_CHANNEL    DMA_CHANNEL_4
  25:../tasks/SDMMC/sd_diskio.c **** 
  26:../tasks/SDMMC/sd_diskio.c **** #define SD_DMAx_Tx_IRQn		  DMA2_Stream6_IRQn
  27:../tasks/SDMMC/sd_diskio.c **** #define SD_DMAx_Rx_IRQn		  DMA2_Stream3_IRQn
  28:../tasks/SDMMC/sd_diskio.c **** #define DMA_IRQHANDLERRx      DMA2_Stream3_IRQHandler
  29:../tasks/SDMMC/sd_diskio.c **** #define DMA_IRQHANDLERTx      DMA2_Stream6_IRQHandler
  30:../tasks/SDMMC/sd_diskio.c **** 
  31:../tasks/SDMMC/sd_diskio.c **** #define SD_SDIO_DMA_FLAG_FEIF         ((uint32_t)0x10400000)		//DMA_FLAG_FEIF3
  32:../tasks/SDMMC/sd_diskio.c **** #define SD_SDIO_DMA_FLAG_TCIF         ((uint32_t)0x18000000)		//DMA_FLAG_TCIF3
  33:../tasks/SDMMC/sd_diskio.c **** 
  34:../tasks/SDMMC/sd_diskio.c **** /* Block Size in Bytes */
  35:../tasks/SDMMC/sd_diskio.c **** #define BLOCK_SIZE                512
  36:../tasks/SDMMC/sd_diskio.c **** 
  37:../tasks/SDMMC/sd_diskio.c **** /* Private variables ---------------------------------------------------------*/
  38:../tasks/SDMMC/sd_diskio.c **** /* Disk status */
  39:../tasks/SDMMC/sd_diskio.c **** static volatile 		DSTATUS Stat = STA_NOINIT;
  40:../tasks/SDMMC/sd_diskio.c **** static uint32_t 		IsCardType =  SDIO_STD_CAPACITY_SD_CARD_V1_1;
  41:../tasks/SDMMC/sd_diskio.c **** static uint32_t 		CSD_Tab[4], CID_Tab[4], RCA = 0;
  42:../tasks/SDMMC/sd_diskio.c **** 
  43:../tasks/SDMMC/sd_diskio.c **** SDIO_InitTypeDef		SDIO_InitStructure;
  44:../tasks/SDMMC/sd_diskio.c **** SDIO_CmdInitTypeDef 	SDIO_CmdInitStructure;
  45:../tasks/SDMMC/sd_diskio.c **** SDIO_DataInitTypeDef 	SDIO_DataInitStructure;
  46:../tasks/SDMMC/sd_diskio.c **** 
  47:../tasks/SDMMC/sd_diskio.c **** extern SD_HandleTypeDef 		uSdHandle;
  48:../tasks/SDMMC/sd_diskio.c **** extern HAL_SD_CardInfoTypedef SD_CardInfo;
  49:../tasks/SDMMC/sd_diskio.c **** 
  50:../tasks/SDMMC/sd_diskio.c **** static uint32_t DeviceMode = SD_DMA_MODE;						 // Изменить для старта с этого значения
  51:../tasks/SDMMC/sd_diskio.c **** 
  52:../tasks/SDMMC/sd_diskio.c **** /* Private function prototypes -----------------------------------------------*/
  53:../tasks/SDMMC/sd_diskio.c **** //extern void Error_Handler(void);
  54:../tasks/SDMMC/sd_diskio.c **** 
  55:../tasks/SDMMC/sd_diskio.c **** FlagStatus 	SDIO_GetFlagStatus(uint32_t SDIO_FLAG);
  56:../tasks/SDMMC/sd_diskio.c **** void 		SDIO_ClearFlag(uint32_t SDIO_FLAG);
  57:../tasks/SDMMC/sd_diskio.c **** 
  58:../tasks/SDMMC/sd_diskio.c **** static HAL_SD_ErrorTypedef CmdError(void);
  59:../tasks/SDMMC/sd_diskio.c **** static HAL_SD_ErrorTypedef CmdResp1Error(uint8_t cmd);
  60:../tasks/SDMMC/sd_diskio.c **** static HAL_SD_ErrorTypedef CmdResp2Error(void);
  61:../tasks/SDMMC/sd_diskio.c **** static HAL_SD_ErrorTypedef CmdResp3Error(void);
  62:../tasks/SDMMC/sd_diskio.c **** static HAL_SD_ErrorTypedef CmdResp6Error(uint8_t cmd, uint16_t *prca);
  63:../tasks/SDMMC/sd_diskio.c **** static HAL_SD_ErrorTypedef CmdResp7Error(void);
  64:../tasks/SDMMC/sd_diskio.c **** static HAL_SD_ErrorTypedef SDEnWideBus(FunctionalState NewState);
  65:../tasks/SDMMC/sd_diskio.c **** static HAL_SD_ErrorTypedef FindSCR(uint16_t rca, uint32_t *pscr);
  66:../tasks/SDMMC/sd_diskio.c **** 
  67:../tasks/SDMMC/sd_diskio.c **** //HAL_SD_ErrorTypedef SD_Init(void);
  68:../tasks/SDMMC/sd_diskio.c **** HAL_SD_ErrorTypedef SDIO_PowerON(void);
  69:../tasks/SDMMC/sd_diskio.c **** HAL_SD_ErrorTypedef SD_InitializeCards(void);
  70:../tasks/SDMMC/sd_diskio.c **** HAL_SD_ErrorTypedef SD_GetCardInfo(HAL_SD_CardInfoTypedef *cardinfo);
  71:../tasks/SDMMC/sd_diskio.c **** HAL_SD_ErrorTypedef SD_SelectDeselect(uint32_t addr);
  72:../tasks/SDMMC/sd_diskio.c **** HAL_SD_ErrorTypedef SD_EnableWideBusOperation(uint32_t WideMode);
  73:../tasks/SDMMC/sd_diskio.c **** HAL_SD_ErrorTypedef SD_SendStatus(uint32_t *pcardstatus);
  74:../tasks/SDMMC/sd_diskio.c **** 
  75:../tasks/SDMMC/sd_diskio.c **** uint8_t 			SD_Detect(void);
  76:../tasks/SDMMC/sd_diskio.c **** //void 				SD_LowLevel_DeInit(void);
  77:../tasks/SDMMC/sd_diskio.c **** void 				SD_LowLevel_Init(void);
  78:../tasks/SDMMC/sd_diskio.c **** HAL_SD_ErrorTypedef SD_SetDeviceMode(uint32_t Mode);
  79:../tasks/SDMMC/sd_diskio.c **** 
  80:../tasks/SDMMC/sd_diskio.c **** void 						BSP_SD_GetCardInfo(HAL_SD_CardInfoTypedef *CardInfo);
  81:../tasks/SDMMC/sd_diskio.c **** uint8_t 					BSP_SD_ReadBlocks_DMA(uint32_t *pData, uint64_t ReadAddr, uint32_t BlockSize, uint32_t
  82:../tasks/SDMMC/sd_diskio.c **** uint8_t 					BSP_SD_WriteBlocks_DMA(uint32_t *pData, uint64_t WriteAddr, uint32_t BlockSize, uint32
  83:../tasks/SDMMC/sd_diskio.c **** HAL_SD_TransferStateTypedef BSP_SD_GetStatus(void);
  84:../tasks/SDMMC/sd_diskio.c **** uint8_t 					BSP_SD_Init(void);
  85:../tasks/SDMMC/sd_diskio.c **** 
  86:../tasks/SDMMC/sd_diskio.c **** void SDIO_ITConfig(uint32_t SDIO_IT, FunctionalState NewState);
  87:../tasks/SDMMC/sd_diskio.c **** void SDIO_DMACmd(FunctionalState NewState);
  88:../tasks/SDMMC/sd_diskio.c **** void SD_LowLevel_DMA_RxConfig(uint32_t *BufferDST, uint32_t BufferSize);
  89:../tasks/SDMMC/sd_diskio.c **** /*********************************************************************************/
  90:../tasks/SDMMC/sd_diskio.c **** DSTATUS SD_initialize (void);
  91:../tasks/SDMMC/sd_diskio.c **** DSTATUS SD_status (void);
  92:../tasks/SDMMC/sd_diskio.c **** DRESULT SD_read (BYTE*, DWORD, BYTE);
  93:../tasks/SDMMC/sd_diskio.c **** #if _USE_WRITE == 1
  94:../tasks/SDMMC/sd_diskio.c ****   DRESULT SD_write (const BYTE*, DWORD, BYTE);
  95:../tasks/SDMMC/sd_diskio.c **** #endif /* _USE_WRITE == 1 */
  96:../tasks/SDMMC/sd_diskio.c **** #if _USE_IOCTL == 1
  97:../tasks/SDMMC/sd_diskio.c ****   DRESULT SD_ioctl (BYTE, void*);
  98:../tasks/SDMMC/sd_diskio.c **** #endif  /* _USE_IOCTL == 1 */
  99:../tasks/SDMMC/sd_diskio.c ****   
 100:../tasks/SDMMC/sd_diskio.c ****   /*********************************************************************************/
 101:../tasks/SDMMC/sd_diskio.c **** Diskio_drvTypeDef  SD_Driver =
 102:../tasks/SDMMC/sd_diskio.c **** {
 103:../tasks/SDMMC/sd_diskio.c ****   SD_initialize,
 104:../tasks/SDMMC/sd_diskio.c ****   SD_status,
 105:../tasks/SDMMC/sd_diskio.c ****   SD_read,
 106:../tasks/SDMMC/sd_diskio.c **** #if  _USE_WRITE == 1
 107:../tasks/SDMMC/sd_diskio.c ****   SD_write,
 108:../tasks/SDMMC/sd_diskio.c **** #endif /* _USE_WRITE == 1 */
 109:../tasks/SDMMC/sd_diskio.c **** #if  _USE_IOCTL == 1
 110:../tasks/SDMMC/sd_diskio.c ****   SD_ioctl,
 111:../tasks/SDMMC/sd_diskio.c **** #endif /* _USE_IOCTL == 1 */
 112:../tasks/SDMMC/sd_diskio.c **** };
 113:../tasks/SDMMC/sd_diskio.c **** 
 114:../tasks/SDMMC/sd_diskio.c **** /* Private functions ---------------------------------------------------------*/
 115:../tasks/SDMMC/sd_diskio.c **** 
 116:../tasks/SDMMC/sd_diskio.c **** /****************************************************
 117:../tasks/SDMMC/sd_diskio.c **** * @brief  Initializes a Drive
 118:../tasks/SDMMC/sd_diskio.c **** * @param  None
 119:../tasks/SDMMC/sd_diskio.c **** * @retval DSTATUS: Operation status
 120:../tasks/SDMMC/sd_diskio.c **** *****************************************************/
 121:../tasks/SDMMC/sd_diskio.c **** DSTATUS SD_initialize(void)
 122:../tasks/SDMMC/sd_diskio.c **** {
  62              		.loc 1 122 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 1, uses_anonymous_args = 0
  66 0000 80B5     		push	{r7, lr}
  67              		.cfi_def_cfa_offset 8
  68              		.cfi_offset 7, -8
  69              		.cfi_offset 14, -4
  70 0002 00AF     		add	r7, sp, #0
  71              		.cfi_def_cfa_register 7
 123:../tasks/SDMMC/sd_diskio.c **** 	Stat = STA_NOINIT;
  72              		.loc 1 123 0
  73 0004 40F20003 		movw	r3, #:lower16:Stat
  74 0008 C0F20003 		movt	r3, #:upper16:Stat
  75 000c 0122     		movs	r2, #1
  76 000e 1A70     		strb	r2, [r3]
 124:../tasks/SDMMC/sd_diskio.c **** 
 125:../tasks/SDMMC/sd_diskio.c **** 	/* Configure the uSD device */
 126:../tasks/SDMMC/sd_diskio.c **** 	if(BSP_SD_Init() == MSD_OK)
  77              		.loc 1 126 0
  78 0010 FFF7FEFF 		bl	BSP_SD_Init
  79 0014 0346     		mov	r3, r0
  80 0016 002B     		cmp	r3, #0
  81 0018 0DD1     		bne	.L2
 127:../tasks/SDMMC/sd_diskio.c **** 	{
 128:../tasks/SDMMC/sd_diskio.c **** 	Stat &= ~STA_NOINIT;
  82              		.loc 1 128 0
  83 001a 40F20003 		movw	r3, #:lower16:Stat
  84 001e C0F20003 		movt	r3, #:upper16:Stat
  85 0022 1B78     		ldrb	r3, [r3]
  86 0024 DBB2     		uxtb	r3, r3
  87 0026 23F00103 		bic	r3, r3, #1
  88 002a DAB2     		uxtb	r2, r3
  89 002c 40F20003 		movw	r3, #:lower16:Stat
  90 0030 C0F20003 		movt	r3, #:upper16:Stat
  91 0034 1A70     		strb	r2, [r3]
  92              	.L2:
 129:../tasks/SDMMC/sd_diskio.c **** 	}
 130:../tasks/SDMMC/sd_diskio.c **** 	return Stat;
  93              		.loc 1 130 0
  94 0036 40F20003 		movw	r3, #:lower16:Stat
  95 003a C0F20003 		movt	r3, #:upper16:Stat
  96 003e 1B78     		ldrb	r3, [r3]
  97 0040 DBB2     		uxtb	r3, r3
 131:../tasks/SDMMC/sd_diskio.c **** }
  98              		.loc 1 131 0
  99 0042 1846     		mov	r0, r3
 100 0044 80BD     		pop	{r7, pc}
 101              		.cfi_endproc
 102              	.LFE55:
 104              		.section	.rodata
 105              		.align	2
 106              	.LC0:
 107 0000 5B53445D 		.ascii	"[SD] I:SD_GetStatus = SD_TRANSFER NOT OK\000"
 107      20493A53 
 107      445F4765 
 107      74537461 
 107      74757320 
 108              		.text
 109 0046 00BF     		.align	2
 110              		.global	SD_status
 111              		.thumb
 112              		.thumb_func
 114              	SD_status:
 115              	.LFB56:
 132:../tasks/SDMMC/sd_diskio.c **** 
 133:../tasks/SDMMC/sd_diskio.c **** /****************************************************
 134:../tasks/SDMMC/sd_diskio.c **** * @brief  Gets Disk Status
 135:../tasks/SDMMC/sd_diskio.c **** * @param  None
 136:../tasks/SDMMC/sd_diskio.c **** * @retval DSTATUS: Operation status
 137:../tasks/SDMMC/sd_diskio.c **** *****************************************************/
 138:../tasks/SDMMC/sd_diskio.c **** DSTATUS SD_status(void)
 139:../tasks/SDMMC/sd_diskio.c **** {
 116              		.loc 1 139 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 1, uses_anonymous_args = 0
 120 0048 80B5     		push	{r7, lr}
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 7, -8
 123              		.cfi_offset 14, -4
 124 004a 00AF     		add	r7, sp, #0
 125              		.cfi_def_cfa_register 7
 140:../tasks/SDMMC/sd_diskio.c ****   Stat = STA_NOINIT;
 126              		.loc 1 140 0
 127 004c 40F20003 		movw	r3, #:lower16:Stat
 128 0050 C0F20003 		movt	r3, #:upper16:Stat
 129 0054 0122     		movs	r2, #1
 130 0056 1A70     		strb	r2, [r3]
 141:../tasks/SDMMC/sd_diskio.c **** 
 142:../tasks/SDMMC/sd_diskio.c ****   if(BSP_SD_GetStatus() == 0)
 131              		.loc 1 142 0
 132 0058 FFF7FEFF 		bl	BSP_SD_GetStatus
 133 005c 0346     		mov	r3, r0
 134 005e 002B     		cmp	r3, #0
 135 0060 0ED1     		bne	.L5
 143:../tasks/SDMMC/sd_diskio.c ****   {
 144:../tasks/SDMMC/sd_diskio.c ****     Stat &= ~STA_NOINIT;
 136              		.loc 1 144 0
 137 0062 40F20003 		movw	r3, #:lower16:Stat
 138 0066 C0F20003 		movt	r3, #:upper16:Stat
 139 006a 1B78     		ldrb	r3, [r3]
 140 006c DBB2     		uxtb	r3, r3
 141 006e 23F00103 		bic	r3, r3, #1
 142 0072 DAB2     		uxtb	r2, r3
 143 0074 40F20003 		movw	r3, #:lower16:Stat
 144 0078 C0F20003 		movt	r3, #:upper16:Stat
 145 007c 1A70     		strb	r2, [r3]
 146 007e 05E0     		b	.L6
 147              	.L5:
 145:../tasks/SDMMC/sd_diskio.c ****   } else printf("[SD] I:SD_GetStatus = SD_TRANSFER NOT OK\n");
 148              		.loc 1 145 0
 149 0080 40F20000 		movw	r0, #:lower16:.LC0
 150 0084 C0F20000 		movt	r0, #:upper16:.LC0
 151 0088 FFF7FEFF 		bl	puts
 152              	.L6:
 146:../tasks/SDMMC/sd_diskio.c ****   
 147:../tasks/SDMMC/sd_diskio.c ****   return Stat;
 153              		.loc 1 147 0
 154 008c 40F20003 		movw	r3, #:lower16:Stat
 155 0090 C0F20003 		movt	r3, #:upper16:Stat
 156 0094 1B78     		ldrb	r3, [r3]
 157 0096 DBB2     		uxtb	r3, r3
 148:../tasks/SDMMC/sd_diskio.c **** }
 158              		.loc 1 148 0
 159 0098 1846     		mov	r0, r3
 160 009a 80BD     		pop	{r7, pc}
 161              		.cfi_endproc
 162              	.LFE56:
 164              		.align	2
 165              		.global	SD_read
 166              		.thumb
 167              		.thumb_func
 169              	SD_read:
 170              	.LFB57:
 149:../tasks/SDMMC/sd_diskio.c **** 
 150:../tasks/SDMMC/sd_diskio.c **** /****************************************************
 151:../tasks/SDMMC/sd_diskio.c **** * @brief  Reads Sector(s)
 152:../tasks/SDMMC/sd_diskio.c **** * @param  *buff: Data buffer to store read data
 153:../tasks/SDMMC/sd_diskio.c **** * @param  sector: Sector address (LBA)
 154:../tasks/SDMMC/sd_diskio.c **** * @param  count: Number of sectors to read (1..128)
 155:../tasks/SDMMC/sd_diskio.c **** * @retval DRESULT: Operation result
 156:../tasks/SDMMC/sd_diskio.c **** *****************************************************/
 157:../tasks/SDMMC/sd_diskio.c **** DRESULT SD_read(BYTE *buff, DWORD sector, BYTE count)
 158:../tasks/SDMMC/sd_diskio.c **** {
 171              		.loc 1 158 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 536
 174              		@ frame_needed = 1, uses_anonymous_args = 0
 175 009c 90B5     		push	{r4, r7, lr}
 176              		.cfi_def_cfa_offset 12
 177              		.cfi_offset 4, -12
 178              		.cfi_offset 7, -8
 179              		.cfi_offset 14, -4
 180 009e ADF5097D 		sub	sp, sp, #548
 181              		.cfi_def_cfa_offset 560
 182 00a2 02AF     		add	r7, sp, #8
 183              		.cfi_def_cfa 7, 552
 184 00a4 07F10C03 		add	r3, r7, #12
 185 00a8 1860     		str	r0, [r3]
 186 00aa 07F10803 		add	r3, r7, #8
 187 00ae 1960     		str	r1, [r3]
 188 00b0 FB1D     		adds	r3, r7, #7
 189 00b2 1A70     		strb	r2, [r3]
 159:../tasks/SDMMC/sd_diskio.c **** //	printf("[SD] I:SD_read: %d, %d, %d \n",*buff,(int)(sector),count);
 160:../tasks/SDMMC/sd_diskio.c **** 
 161:../tasks/SDMMC/sd_diskio.c **** 	  uint32_t timeout = 100000;
 190              		.loc 1 161 0
 191 00b4 48F2A063 		movw	r3, #34464
 192 00b8 C0F20103 		movt	r3, 1
 193 00bc C7F81432 		str	r3, [r7, #532]
 162:../tasks/SDMMC/sd_diskio.c **** 	  DWORD scratch [BLOCK_SIZE / 4];  /* Alignment ensured, need enough stack */
 163:../tasks/SDMMC/sd_diskio.c **** 	  uint8_t SD_state = MSD_OK;
 194              		.loc 1 163 0
 195 00c0 0023     		movs	r3, #0
 196 00c2 87F81332 		strb	r3, [r7, #531]
 164:../tasks/SDMMC/sd_diskio.c **** 
 165:../tasks/SDMMC/sd_diskio.c **** 	  if ((DWORD)buff & 3) /* DMA Alignment issue, do single up to aligned buffer */
 197              		.loc 1 165 0
 198 00c6 07F10C03 		add	r3, r7, #12
 199 00ca 1B68     		ldr	r3, [r3]
 200 00cc 03F00303 		and	r3, r3, #3
 201 00d0 002B     		cmp	r3, #0
 202 00d2 3DD0     		beq	.L9
 166:../tasks/SDMMC/sd_diskio.c **** 	  {
 167:../tasks/SDMMC/sd_diskio.c **** 	    while (count--)
 203              		.loc 1 167 0
 204 00d4 34E0     		b	.L10
 205              	.L14:
 168:../tasks/SDMMC/sd_diskio.c **** 	    {
 169:../tasks/SDMMC/sd_diskio.c **** 	      SD_state = BSP_SD_ReadBlocks_DMA((uint32_t*)scratch, (uint64_t) ((sector + count) * BLOCK_SI
 206              		.loc 1 169 0
 207 00d6 FB1D     		adds	r3, r7, #7
 208 00d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 209 00da 07F10803 		add	r3, r7, #8
 210 00de 1B68     		ldr	r3, [r3]
 211 00e0 1344     		add	r3, r3, r2
 212 00e2 5B02     		lsls	r3, r3, #9
 213 00e4 1A46     		mov	r2, r3
 214 00e6 4FF00003 		mov	r3, #0
 215 00ea 07F11001 		add	r1, r7, #16
 216 00ee 4FF40070 		mov	r0, #512
 217 00f2 0090     		str	r0, [sp]
 218 00f4 0120     		movs	r0, #1
 219 00f6 0190     		str	r0, [sp, #4]
 220 00f8 0846     		mov	r0, r1
 221 00fa FFF7FEFF 		bl	BSP_SD_ReadBlocks_DMA
 222 00fe 0346     		mov	r3, r0
 223 0100 87F81332 		strb	r3, [r7, #531]
 170:../tasks/SDMMC/sd_diskio.c **** //	  	printf("[SD] I:SD_read SD_state:%d \n",SD_state);
 171:../tasks/SDMMC/sd_diskio.c **** 
 172:../tasks/SDMMC/sd_diskio.c **** 	      while(BSP_SD_GetStatus() != SD_TRANSFER_OK)
 224              		.loc 1 172 0
 225 0104 08E0     		b	.L11
 226              	.L13:
 173:../tasks/SDMMC/sd_diskio.c **** 	      {
 174:../tasks/SDMMC/sd_diskio.c **** 	        if (timeout-- == 0)
 227              		.loc 1 174 0
 228 0106 D7F81432 		ldr	r3, [r7, #532]
 229 010a 5A1E     		subs	r2, r3, #1
 230 010c C7F81422 		str	r2, [r7, #532]
 231 0110 002B     		cmp	r3, #0
 232 0112 01D1     		bne	.L11
 175:../tasks/SDMMC/sd_diskio.c **** 	        {
 176:../tasks/SDMMC/sd_diskio.c **** 	          return RES_ERROR;
 233              		.loc 1 176 0
 234 0114 0123     		movs	r3, #1
 235 0116 46E0     		b	.L19
 236              	.L11:
 172:../tasks/SDMMC/sd_diskio.c **** 	      {
 237              		.loc 1 172 0 discriminator 1
 238 0118 FFF7FEFF 		bl	BSP_SD_GetStatus
 239 011c 0346     		mov	r3, r0
 240 011e 002B     		cmp	r3, #0
 241 0120 F1D1     		bne	.L13
 177:../tasks/SDMMC/sd_diskio.c **** 	        }
 178:../tasks/SDMMC/sd_diskio.c **** 	      }
 179:../tasks/SDMMC/sd_diskio.c **** 	      memcpy (&buff[count * BLOCK_SIZE] ,scratch, BLOCK_SIZE);
 242              		.loc 1 179 0
 243 0122 FB1D     		adds	r3, r7, #7
 244 0124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 245 0126 5B02     		lsls	r3, r3, #9
 246 0128 07F10C02 		add	r2, r7, #12
 247 012c 1268     		ldr	r2, [r2]
 248 012e 1A44     		add	r2, r2, r3
 249 0130 07F11003 		add	r3, r7, #16
 250 0134 1046     		mov	r0, r2
 251 0136 1946     		mov	r1, r3
 252 0138 4FF40072 		mov	r2, #512
 253 013c FFF7FEFF 		bl	memcpy
 254              	.L10:
 167:../tasks/SDMMC/sd_diskio.c **** 	    {
 255              		.loc 1 167 0 discriminator 1
 256 0140 FB1D     		adds	r3, r7, #7
 257 0142 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 258 0144 FA1D     		adds	r2, r7, #7
 259 0146 591E     		subs	r1, r3, #1
 260 0148 1170     		strb	r1, [r2]
 261 014a 002B     		cmp	r3, #0
 262 014c C3D1     		bne	.L14
 263 014e 23E0     		b	.L15
 264              	.L9:
 180:../tasks/SDMMC/sd_diskio.c **** 	    }
 181:../tasks/SDMMC/sd_diskio.c **** 	  }
 182:../tasks/SDMMC/sd_diskio.c **** 	  else
 183:../tasks/SDMMC/sd_diskio.c **** 	  {
 184:../tasks/SDMMC/sd_diskio.c **** 	    SD_state = BSP_SD_ReadBlocks_DMA((uint32_t*)buff, (uint64_t) (sector * BLOCK_SIZE), BLOCK_SIZE
 265              		.loc 1 184 0
 266 0150 07F10803 		add	r3, r7, #8
 267 0154 1B68     		ldr	r3, [r3]
 268 0156 5B02     		lsls	r3, r3, #9
 269 0158 1A46     		mov	r2, r3
 270 015a 4FF00003 		mov	r3, #0
 271 015e F91D     		adds	r1, r7, #7
 272 0160 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 273 0162 07F10C01 		add	r1, r7, #12
 274 0166 4FF40074 		mov	r4, #512
 275 016a 0094     		str	r4, [sp]
 276 016c 0190     		str	r0, [sp, #4]
 277 016e 0868     		ldr	r0, [r1]
 278 0170 FFF7FEFF 		bl	BSP_SD_ReadBlocks_DMA
 279 0174 0346     		mov	r3, r0
 280 0176 87F81332 		strb	r3, [r7, #531]
 185:../tasks/SDMMC/sd_diskio.c **** 
 186:../tasks/SDMMC/sd_diskio.c **** 	    while(BSP_SD_GetStatus() != SD_TRANSFER_OK)
 281              		.loc 1 186 0
 282 017a 08E0     		b	.L16
 283              	.L17:
 187:../tasks/SDMMC/sd_diskio.c **** 	    {
 188:../tasks/SDMMC/sd_diskio.c **** 	      if (timeout-- == 0)
 284              		.loc 1 188 0
 285 017c D7F81432 		ldr	r3, [r7, #532]
 286 0180 5A1E     		subs	r2, r3, #1
 287 0182 C7F81422 		str	r2, [r7, #532]
 288 0186 002B     		cmp	r3, #0
 289 0188 01D1     		bne	.L16
 189:../tasks/SDMMC/sd_diskio.c **** 	      {
 190:../tasks/SDMMC/sd_diskio.c **** 	        return RES_ERROR;
 290              		.loc 1 190 0
 291 018a 0123     		movs	r3, #1
 292 018c 0BE0     		b	.L19
 293              	.L16:
 186:../tasks/SDMMC/sd_diskio.c **** 	    {
 294              		.loc 1 186 0 discriminator 1
 295 018e FFF7FEFF 		bl	BSP_SD_GetStatus
 296 0192 0346     		mov	r3, r0
 297 0194 002B     		cmp	r3, #0
 298 0196 F1D1     		bne	.L17
 299              	.L15:
 191:../tasks/SDMMC/sd_diskio.c **** 	      }
 192:../tasks/SDMMC/sd_diskio.c **** 	    }
 193:../tasks/SDMMC/sd_diskio.c **** 	  }
 194:../tasks/SDMMC/sd_diskio.c **** 	  if (SD_state == MSD_OK)
 300              		.loc 1 194 0
 301 0198 97F81332 		ldrb	r3, [r7, #531]	@ zero_extendqisi2
 302 019c 002B     		cmp	r3, #0
 303 019e 01D1     		bne	.L18
 195:../tasks/SDMMC/sd_diskio.c **** 	  {
 196:../tasks/SDMMC/sd_diskio.c **** 	    return RES_OK;
 304              		.loc 1 196 0
 305 01a0 0023     		movs	r3, #0
 306 01a2 00E0     		b	.L19
 307              	.L18:
 197:../tasks/SDMMC/sd_diskio.c **** 	  }
 198:../tasks/SDMMC/sd_diskio.c **** 
 199:../tasks/SDMMC/sd_diskio.c **** 	  return RES_ERROR;
 308              		.loc 1 199 0
 309 01a4 0123     		movs	r3, #1
 310              	.L19:
 200:../tasks/SDMMC/sd_diskio.c **** }
 311              		.loc 1 200 0
 312 01a6 1846     		mov	r0, r3
 313 01a8 07F50777 		add	r7, r7, #540
 314 01ac BD46     		mov	sp, r7
 315              		@ sp needed
 316 01ae 90BD     		pop	{r4, r7, pc}
 317              		.cfi_endproc
 318              	.LFE57:
 320              		.align	2
 321              		.global	SD_write
 322              		.thumb
 323              		.thumb_func
 325              	SD_write:
 326              	.LFB58:
 201:../tasks/SDMMC/sd_diskio.c **** 
 202:../tasks/SDMMC/sd_diskio.c **** /****************************************************
 203:../tasks/SDMMC/sd_diskio.c **** * @brief  Writes Sector(s)
 204:../tasks/SDMMC/sd_diskio.c **** * @param  *buff: Data to be written
 205:../tasks/SDMMC/sd_diskio.c **** * @param  sector: Sector address (LBA)
 206:../tasks/SDMMC/sd_diskio.c **** * @param  count: Number of sectors to write (1..128)
 207:../tasks/SDMMC/sd_diskio.c **** * @retval DRESULT: Operation result
 208:../tasks/SDMMC/sd_diskio.c **** *****************************************************/
 209:../tasks/SDMMC/sd_diskio.c **** #if _USE_WRITE == 1
 210:../tasks/SDMMC/sd_diskio.c **** DRESULT SD_write(const BYTE *buff, DWORD sector, BYTE count)
 211:../tasks/SDMMC/sd_diskio.c **** {
 327              		.loc 1 211 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 536
 330              		@ frame_needed = 1, uses_anonymous_args = 0
 331 01b0 90B5     		push	{r4, r7, lr}
 332              		.cfi_def_cfa_offset 12
 333              		.cfi_offset 4, -12
 334              		.cfi_offset 7, -8
 335              		.cfi_offset 14, -4
 336 01b2 ADF5097D 		sub	sp, sp, #548
 337              		.cfi_def_cfa_offset 560
 338 01b6 02AF     		add	r7, sp, #8
 339              		.cfi_def_cfa 7, 552
 340 01b8 07F10C03 		add	r3, r7, #12
 341 01bc 1860     		str	r0, [r3]
 342 01be 07F10803 		add	r3, r7, #8
 343 01c2 1960     		str	r1, [r3]
 344 01c4 FB1D     		adds	r3, r7, #7
 345 01c6 1A70     		strb	r2, [r3]
 212:../tasks/SDMMC/sd_diskio.c **** 	 uint32_t timeout = 100000;
 346              		.loc 1 212 0
 347 01c8 48F2A063 		movw	r3, #34464
 348 01cc C0F20103 		movt	r3, 1
 349 01d0 C7F81432 		str	r3, [r7, #532]
 213:../tasks/SDMMC/sd_diskio.c **** 	  DWORD scratch [BLOCK_SIZE / 4];  /* Alignment ensured, need enough stack */
 214:../tasks/SDMMC/sd_diskio.c **** 	  uint8_t SD_state = MSD_OK;
 350              		.loc 1 214 0
 351 01d4 0023     		movs	r3, #0
 352 01d6 87F81332 		strb	r3, [r7, #531]
 215:../tasks/SDMMC/sd_diskio.c **** 
 216:../tasks/SDMMC/sd_diskio.c **** 	  if ((DWORD)buff & 3) /* DMA Alignment issue, do single up to aligned buffer */
 353              		.loc 1 216 0
 354 01da 07F10C03 		add	r3, r7, #12
 355 01de 1B68     		ldr	r3, [r3]
 356 01e0 03F00303 		and	r3, r3, #3
 357 01e4 002B     		cmp	r3, #0
 358 01e6 3DD0     		beq	.L21
 217:../tasks/SDMMC/sd_diskio.c **** 	  {
 218:../tasks/SDMMC/sd_diskio.c **** 	    while (count--)
 359              		.loc 1 218 0
 360 01e8 34E0     		b	.L22
 361              	.L26:
 219:../tasks/SDMMC/sd_diskio.c **** 	    {
 220:../tasks/SDMMC/sd_diskio.c **** 	      memcpy (scratch, &buff[count * BLOCK_SIZE], BLOCK_SIZE);
 362              		.loc 1 220 0
 363 01ea FB1D     		adds	r3, r7, #7
 364 01ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 365 01ee 5B02     		lsls	r3, r3, #9
 366 01f0 07F10C02 		add	r2, r7, #12
 367 01f4 1268     		ldr	r2, [r2]
 368 01f6 1344     		add	r3, r3, r2
 369 01f8 07F11002 		add	r2, r7, #16
 370 01fc 1046     		mov	r0, r2
 371 01fe 1946     		mov	r1, r3
 372 0200 4FF40072 		mov	r2, #512
 373 0204 FFF7FEFF 		bl	memcpy
 221:../tasks/SDMMC/sd_diskio.c **** 	      SD_state = BSP_SD_WriteBlocks_DMA((uint32_t*)scratch, (uint64_t)((sector + count) * BLOCK_SI
 374              		.loc 1 221 0
 375 0208 FB1D     		adds	r3, r7, #7
 376 020a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 377 020c 07F10803 		add	r3, r7, #8
 378 0210 1B68     		ldr	r3, [r3]
 379 0212 1344     		add	r3, r3, r2
 380 0214 5B02     		lsls	r3, r3, #9
 381 0216 1A46     		mov	r2, r3
 382 0218 4FF00003 		mov	r3, #0
 383 021c 07F11001 		add	r1, r7, #16
 384 0220 4FF40070 		mov	r0, #512
 385 0224 0090     		str	r0, [sp]
 386 0226 0120     		movs	r0, #1
 387 0228 0190     		str	r0, [sp, #4]
 388 022a 0846     		mov	r0, r1
 389 022c FFF7FEFF 		bl	BSP_SD_WriteBlocks_DMA
 390 0230 0346     		mov	r3, r0
 391 0232 87F81332 		strb	r3, [r7, #531]
 222:../tasks/SDMMC/sd_diskio.c **** 	      while(BSP_SD_GetStatus() != SD_TRANSFER_OK)
 392              		.loc 1 222 0
 393 0236 08E0     		b	.L23
 394              	.L25:
 223:../tasks/SDMMC/sd_diskio.c **** 	      {
 224:../tasks/SDMMC/sd_diskio.c **** 	        if (timeout-- == 0)
 395              		.loc 1 224 0
 396 0238 D7F81432 		ldr	r3, [r7, #532]
 397 023c 5A1E     		subs	r2, r3, #1
 398 023e C7F81422 		str	r2, [r7, #532]
 399 0242 002B     		cmp	r3, #0
 400 0244 01D1     		bne	.L23
 225:../tasks/SDMMC/sd_diskio.c **** 	        {
 226:../tasks/SDMMC/sd_diskio.c **** 	          return RES_ERROR;
 401              		.loc 1 226 0
 402 0246 0123     		movs	r3, #1
 403 0248 37E0     		b	.L31
 404              	.L23:
 222:../tasks/SDMMC/sd_diskio.c **** 	      {
 405              		.loc 1 222 0 discriminator 1
 406 024a FFF7FEFF 		bl	BSP_SD_GetStatus
 407 024e 0346     		mov	r3, r0
 408 0250 002B     		cmp	r3, #0
 409 0252 F1D1     		bne	.L25
 410              	.L22:
 218:../tasks/SDMMC/sd_diskio.c **** 	    {
 411              		.loc 1 218 0 discriminator 1
 412 0254 FB1D     		adds	r3, r7, #7
 413 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 414 0258 FA1D     		adds	r2, r7, #7
 415 025a 591E     		subs	r1, r3, #1
 416 025c 1170     		strb	r1, [r2]
 417 025e 002B     		cmp	r3, #0
 418 0260 C3D1     		bne	.L26
 419 0262 23E0     		b	.L27
 420              	.L21:
 227:../tasks/SDMMC/sd_diskio.c **** 	        }
 228:../tasks/SDMMC/sd_diskio.c **** 	      }
 229:../tasks/SDMMC/sd_diskio.c **** 	    }
 230:../tasks/SDMMC/sd_diskio.c **** 	  }
 231:../tasks/SDMMC/sd_diskio.c **** 	  else
 232:../tasks/SDMMC/sd_diskio.c **** 	  {
 233:../tasks/SDMMC/sd_diskio.c **** 	    SD_state = BSP_SD_WriteBlocks_DMA((uint32_t*)buff, (uint64_t)(sector * BLOCK_SIZE), BLOCK_SIZE
 421              		.loc 1 233 0
 422 0264 07F10803 		add	r3, r7, #8
 423 0268 1B68     		ldr	r3, [r3]
 424 026a 5B02     		lsls	r3, r3, #9
 425 026c 1A46     		mov	r2, r3
 426 026e 4FF00003 		mov	r3, #0
 427 0272 F91D     		adds	r1, r7, #7
 428 0274 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 429 0276 07F10C01 		add	r1, r7, #12
 430 027a 4FF40074 		mov	r4, #512
 431 027e 0094     		str	r4, [sp]
 432 0280 0190     		str	r0, [sp, #4]
 433 0282 0868     		ldr	r0, [r1]
 434 0284 FFF7FEFF 		bl	BSP_SD_WriteBlocks_DMA
 435 0288 0346     		mov	r3, r0
 436 028a 87F81332 		strb	r3, [r7, #531]
 234:../tasks/SDMMC/sd_diskio.c **** 	    while(BSP_SD_GetStatus() != SD_TRANSFER_OK)
 437              		.loc 1 234 0
 438 028e 08E0     		b	.L28
 439              	.L29:
 235:../tasks/SDMMC/sd_diskio.c **** 	    {
 236:../tasks/SDMMC/sd_diskio.c **** 	      if (timeout-- == 0)
 440              		.loc 1 236 0
 441 0290 D7F81432 		ldr	r3, [r7, #532]
 442 0294 5A1E     		subs	r2, r3, #1
 443 0296 C7F81422 		str	r2, [r7, #532]
 444 029a 002B     		cmp	r3, #0
 445 029c 01D1     		bne	.L28
 237:../tasks/SDMMC/sd_diskio.c **** 	      {
 238:../tasks/SDMMC/sd_diskio.c **** 	        return RES_ERROR;
 446              		.loc 1 238 0
 447 029e 0123     		movs	r3, #1
 448 02a0 0BE0     		b	.L31
 449              	.L28:
 234:../tasks/SDMMC/sd_diskio.c **** 	    {
 450              		.loc 1 234 0 discriminator 1
 451 02a2 FFF7FEFF 		bl	BSP_SD_GetStatus
 452 02a6 0346     		mov	r3, r0
 453 02a8 002B     		cmp	r3, #0
 454 02aa F1D1     		bne	.L29
 455              	.L27:
 239:../tasks/SDMMC/sd_diskio.c **** 	      }
 240:../tasks/SDMMC/sd_diskio.c **** 	    }
 241:../tasks/SDMMC/sd_diskio.c **** 	  }
 242:../tasks/SDMMC/sd_diskio.c **** 	  if (SD_state == MSD_OK)
 456              		.loc 1 242 0
 457 02ac 97F81332 		ldrb	r3, [r7, #531]	@ zero_extendqisi2
 458 02b0 002B     		cmp	r3, #0
 459 02b2 01D1     		bne	.L30
 243:../tasks/SDMMC/sd_diskio.c **** 	  {
 244:../tasks/SDMMC/sd_diskio.c **** 	    return RES_OK;
 460              		.loc 1 244 0
 461 02b4 0023     		movs	r3, #0
 462 02b6 00E0     		b	.L31
 463              	.L30:
 245:../tasks/SDMMC/sd_diskio.c **** 	  }
 246:../tasks/SDMMC/sd_diskio.c **** 	  return RES_ERROR;
 464              		.loc 1 246 0
 465 02b8 0123     		movs	r3, #1
 466              	.L31:
 247:../tasks/SDMMC/sd_diskio.c **** }
 467              		.loc 1 247 0
 468 02ba 1846     		mov	r0, r3
 469 02bc 07F50777 		add	r7, r7, #540
 470 02c0 BD46     		mov	sp, r7
 471              		@ sp needed
 472 02c2 90BD     		pop	{r4, r7, pc}
 473              		.cfi_endproc
 474              	.LFE58:
 476              		.align	2
 477              		.global	SD_ioctl
 478              		.thumb
 479              		.thumb_func
 481              	SD_ioctl:
 482              	.LFB59:
 248:../tasks/SDMMC/sd_diskio.c **** #endif /* _USE_WRITE == 1 */
 249:../tasks/SDMMC/sd_diskio.c **** 
 250:../tasks/SDMMC/sd_diskio.c **** /****************************************************
 251:../tasks/SDMMC/sd_diskio.c **** * @brief  I/O control operation
 252:../tasks/SDMMC/sd_diskio.c **** * @param  cmd: Control code
 253:../tasks/SDMMC/sd_diskio.c **** * @param  *buff: Buffer to send/receive control data
 254:../tasks/SDMMC/sd_diskio.c **** * @retval DRESULT: Operation result
 255:../tasks/SDMMC/sd_diskio.c **** *****************************************************/
 256:../tasks/SDMMC/sd_diskio.c **** #if _USE_IOCTL == 1
 257:../tasks/SDMMC/sd_diskio.c **** DRESULT SD_ioctl(BYTE cmd, void *buff)
 258:../tasks/SDMMC/sd_diskio.c **** {
 483              		.loc 1 258 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 104
 486              		@ frame_needed = 1, uses_anonymous_args = 0
 487 02c4 B0B5     		push	{r4, r5, r7, lr}
 488              		.cfi_def_cfa_offset 16
 489              		.cfi_offset 4, -16
 490              		.cfi_offset 5, -12
 491              		.cfi_offset 7, -8
 492              		.cfi_offset 14, -4
 493 02c6 9AB0     		sub	sp, sp, #104
 494              		.cfi_def_cfa_offset 120
 495 02c8 00AF     		add	r7, sp, #0
 496              		.cfi_def_cfa_register 7
 497 02ca 0346     		mov	r3, r0
 498 02cc 3960     		str	r1, [r7]
 499 02ce FB71     		strb	r3, [r7, #7]
 259:../tasks/SDMMC/sd_diskio.c ****   DRESULT res = RES_ERROR;
 500              		.loc 1 259 0
 501 02d0 0123     		movs	r3, #1
 502 02d2 87F86730 		strb	r3, [r7, #103]
 260:../tasks/SDMMC/sd_diskio.c ****   HAL_SD_CardInfoTypedef CardInfo;
 261:../tasks/SDMMC/sd_diskio.c **** 
 262:../tasks/SDMMC/sd_diskio.c ****   if (Stat & STA_NOINIT) return RES_NOTRDY;
 503              		.loc 1 262 0
 504 02d6 40F20003 		movw	r3, #:lower16:Stat
 505 02da C0F20003 		movt	r3, #:upper16:Stat
 506 02de 1B78     		ldrb	r3, [r3]
 507 02e0 DBB2     		uxtb	r3, r3
 508 02e2 03F00103 		and	r3, r3, #1
 509 02e6 002B     		cmp	r3, #0
 510 02e8 01D0     		beq	.L33
 511              		.loc 1 262 0 is_stmt 0 discriminator 1
 512 02ea 0323     		movs	r3, #3
 513 02ec 41E0     		b	.L43
 514              	.L33:
 263:../tasks/SDMMC/sd_diskio.c ****   
 264:../tasks/SDMMC/sd_diskio.c ****   switch (cmd)
 515              		.loc 1 264 0 is_stmt 1
 516 02ee FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 517 02f0 042B     		cmp	r3, #4
 518 02f2 39D8     		bhi	.L35
 519 02f4 01A2     		adr	r2, .L37
 520 02f6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 521 02fa 00BF     		.p2align 2
 522              	.L37:
 523 02fc 11030000 		.word	.L36+1
 524 0300 19030000 		.word	.L38+1
 525 0304 3D030000 		.word	.L39+1
 526 0308 4D030000 		.word	.L40+1
 527 030c 61030000 		.word	.L41+1
 528              	.L36:
 265:../tasks/SDMMC/sd_diskio.c ****   {
 266:../tasks/SDMMC/sd_diskio.c ****   /* Make sure that no pending write process */
 267:../tasks/SDMMC/sd_diskio.c ****   /* по этой команде устройство должно записать данные, хранящиеся в кэше и завершить запись.
 268:../tasks/SDMMC/sd_diskio.c ****    * Мы работаем с картой напрямую без кэша, данные записываем и всегда дожидаемся окончания
 269:../tasks/SDMMC/sd_diskio.c ****    * записи, поэтому по этой команде можно ничего не делать.*/
 270:../tasks/SDMMC/sd_diskio.c ****   case CTRL_SYNC :
 271:../tasks/SDMMC/sd_diskio.c ****     res = RES_OK;
 529              		.loc 1 271 0
 530 0310 0023     		movs	r3, #0
 531 0312 87F86730 		strb	r3, [r7, #103]
 272:../tasks/SDMMC/sd_diskio.c ****     break;
 532              		.loc 1 272 0
 533 0316 2AE0     		b	.L42
 534              	.L38:
 273:../tasks/SDMMC/sd_diskio.c ****   
 274:../tasks/SDMMC/sd_diskio.c ****   /* Get number of sectors on the disk (DWORD) */
 275:../tasks/SDMMC/sd_diskio.c ****   /* команда должна возвратить количество секторов на карте памяти. Берём SDCardInfo.CardCapacity
 276:../tasks/SDMMC/sd_diskio.c ****    * и делим на размер сектора SDCardInfo.CardBlockSize (всегда 512).*/
 277:../tasks/SDMMC/sd_diskio.c ****   case GET_SECTOR_COUNT :
 278:../tasks/SDMMC/sd_diskio.c ****     BSP_SD_GetCardInfo(&CardInfo);
 535              		.loc 1 278 0
 536 0318 07F10803 		add	r3, r7, #8
 537 031c 1846     		mov	r0, r3
 538 031e FFF7FEFF 		bl	BSP_SD_GetCardInfo
 279:../tasks/SDMMC/sd_diskio.c ****     *(DWORD*)buff =  CardInfo.CardCapacity / BLOCK_SIZE;//CardInfo.CardCapacity / CardInfo.CardBloc
 539              		.loc 1 279 0
 540 0322 D7E91423 		ldrd	r2, [r7, #80]
 541 0326 540A     		lsrs	r4, r2, #9
 542 0328 44EAC354 		orr	r4, r4, r3, lsl #23
 543 032c 5D0A     		lsrs	r5, r3, #9
 544 032e 2246     		mov	r2, r4
 545 0330 3B68     		ldr	r3, [r7]
 546 0332 1A60     		str	r2, [r3]
 280:../tasks/SDMMC/sd_diskio.c **** 
 281:../tasks/SDMMC/sd_diskio.c ****     res = RES_OK;
 547              		.loc 1 281 0
 548 0334 0023     		movs	r3, #0
 549 0336 87F86730 		strb	r3, [r7, #103]
 282:../tasks/SDMMC/sd_diskio.c ****     break;
 550              		.loc 1 282 0
 551 033a 18E0     		b	.L42
 552              	.L39:
 283:../tasks/SDMMC/sd_diskio.c ****   
 284:../tasks/SDMMC/sd_diskio.c ****   /* Get R/W sector size (WORD) */
 285:../tasks/SDMMC/sd_diskio.c ****   /* требуется возвратить размер сектора. Для режима _MAX_SS=512 (этот параметр всегда указывается
 286:../tasks/SDMMC/sd_diskio.c ****    * при работе с картой памяти) команда GET_SECTOR_SIZE не используется и реализовывать её также н
 287:../tasks/SDMMC/sd_diskio.c ****   case GET_SECTOR_SIZE :
 288:../tasks/SDMMC/sd_diskio.c ****     *(WORD*)buff = BLOCK_SIZE;//BLOCK_SIZE;
 553              		.loc 1 288 0
 554 033c 3B68     		ldr	r3, [r7]
 555 033e 4FF40072 		mov	r2, #512
 556 0342 1A80     		strh	r2, [r3]	@ movhi
 289:../tasks/SDMMC/sd_diskio.c ****     res = RES_OK;
 557              		.loc 1 289 0
 558 0344 0023     		movs	r3, #0
 559 0346 87F86730 		strb	r3, [r7, #103]
 290:../tasks/SDMMC/sd_diskio.c ****     break;
 560              		.loc 1 290 0
 561 034a 10E0     		b	.L42
 562              	.L40:
 291:../tasks/SDMMC/sd_diskio.c ****   
 292:../tasks/SDMMC/sd_diskio.c ****   /* Get erase block size in unit of sector (DWORD) */
 293:../tasks/SDMMC/sd_diskio.c ****   /* запрос количества секторов, объединяемых в один блок, который можно стереть.
 294:../tasks/SDMMC/sd_diskio.c ****    * Параметр используется в функции f_mkfs для правильной разметки диска.*/
 295:../tasks/SDMMC/sd_diskio.c ****   case GET_BLOCK_SIZE :
 296:../tasks/SDMMC/sd_diskio.c **** 	  BSP_SD_GetCardInfo(&CardInfo);
 563              		.loc 1 296 0
 564 034c 07F10803 		add	r3, r7, #8
 565 0350 1846     		mov	r0, r3
 566 0352 FFF7FEFF 		bl	BSP_SD_GetCardInfo
 297:../tasks/SDMMC/sd_diskio.c **** 	  *(DWORD*)buff = BLOCK_SIZE;//BLOCK_SIZE; //CardInfo.CardBlockSize;//BLOCK_SIZE;
 567              		.loc 1 297 0
 568 0356 3B68     		ldr	r3, [r7]
 569 0358 4FF40072 		mov	r2, #512
 570 035c 1A60     		str	r2, [r3]
 298:../tasks/SDMMC/sd_diskio.c **** 	  break;
 571              		.loc 1 298 0
 572 035e 06E0     		b	.L42
 573              	.L41:
 299:../tasks/SDMMC/sd_diskio.c **** 
 300:../tasks/SDMMC/sd_diskio.c ****   case CTRL_ERASE_SECTOR:
 301:../tasks/SDMMC/sd_diskio.c **** 	    res = RES_OK;
 574              		.loc 1 301 0
 575 0360 0023     		movs	r3, #0
 576 0362 87F86730 		strb	r3, [r7, #103]
 302:../tasks/SDMMC/sd_diskio.c **** 	break;
 577              		.loc 1 302 0
 578 0366 02E0     		b	.L42
 579              	.L35:
 303:../tasks/SDMMC/sd_diskio.c **** 
 304:../tasks/SDMMC/sd_diskio.c ****   default:
 305:../tasks/SDMMC/sd_diskio.c ****     res = RES_PARERR;
 580              		.loc 1 305 0
 581 0368 0423     		movs	r3, #4
 582 036a 87F86730 		strb	r3, [r7, #103]
 583              	.L42:
 306:../tasks/SDMMC/sd_diskio.c ****   }
 307:../tasks/SDMMC/sd_diskio.c ****   
 308:../tasks/SDMMC/sd_diskio.c ****   return res;
 584              		.loc 1 308 0
 585 036e 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 586              	.L43:
 309:../tasks/SDMMC/sd_diskio.c **** }
 587              		.loc 1 309 0
 588 0372 1846     		mov	r0, r3
 589 0374 6837     		adds	r7, r7, #104
 590 0376 BD46     		mov	sp, r7
 591              		@ sp needed
 592 0378 B0BD     		pop	{r4, r5, r7, pc}
 593              		.cfi_endproc
 594              	.LFE59:
 596 037a 00BF     		.align	2
 597              		.global	SD_LowLevel_Init
 598              		.thumb
 599              		.thumb_func
 601              	SD_LowLevel_Init:
 602              	.LFB60:
 310:../tasks/SDMMC/sd_diskio.c **** #endif /* _USE_IOCTL == 1 */
 311:../tasks/SDMMC/sd_diskio.c ****   
 312:../tasks/SDMMC/sd_diskio.c **** /****************************************************************
 313:../tasks/SDMMC/sd_diskio.c **** * @brief  Initializes the SD Card and put it into StandBy State
 314:../tasks/SDMMC/sd_diskio.c **** * 			(Ready for data transfer).
 315:../tasks/SDMMC/sd_diskio.c **** * @param  None
 316:../tasks/SDMMC/sd_diskio.c **** * @retval None
 317:../tasks/SDMMC/sd_diskio.c **** *****************************************************************/
 318:../tasks/SDMMC/sd_diskio.c **** void SD_LowLevel_Init(void)
 319:../tasks/SDMMC/sd_diskio.c **** {
 603              		.loc 1 319 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 24
 606              		@ frame_needed = 1, uses_anonymous_args = 0
 607 037c 80B5     		push	{r7, lr}
 608              		.cfi_def_cfa_offset 8
 609              		.cfi_offset 7, -8
 610              		.cfi_offset 14, -4
 611 037e 86B0     		sub	sp, sp, #24
 612              		.cfi_def_cfa_offset 32
 613 0380 00AF     		add	r7, sp, #0
 614              		.cfi_def_cfa_register 7
 320:../tasks/SDMMC/sd_diskio.c ****  static DMA_HandleTypeDef dmaRxHandle;
 321:../tasks/SDMMC/sd_diskio.c **** static DMA_HandleTypeDef dmaTxHandle;
 322:../tasks/SDMMC/sd_diskio.c **** GPIO_InitTypeDef  GPIO_InitStructure;
 323:../tasks/SDMMC/sd_diskio.c **** SD_HandleTypeDef *hsd = &uSdHandle;
 615              		.loc 1 323 0
 616 0382 40F20003 		movw	r3, #:lower16:uSdHandle
 617 0386 C0F20003 		movt	r3, #:upper16:uSdHandle
 618 038a 7B61     		str	r3, [r7, #20]
 324:../tasks/SDMMC/sd_diskio.c **** 
 325:../tasks/SDMMC/sd_diskio.c **** 
 326:../tasks/SDMMC/sd_diskio.c **** /* Enable the SDIO Clock */
 327:../tasks/SDMMC/sd_diskio.c **** __SDIO_CLK_ENABLE();
 619              		.loc 1 327 0
 620 038c 4FF46053 		mov	r3, #14336
 621 0390 C4F20203 		movt	r3, 16386
 622 0394 4FF46052 		mov	r2, #14336
 623 0398 C4F20202 		movt	r2, 16386
 624 039c 526C     		ldr	r2, [r2, #68]
 625 039e 42F40062 		orr	r2, r2, #2048
 626 03a2 5A64     		str	r2, [r3, #68]
 328:../tasks/SDMMC/sd_diskio.c **** __SDIO_ENABLE();
 627              		.loc 1 328 0
 628 03a4 48F2A003 		movw	r3, #32928
 629 03a8 C4F22523 		movt	r3, 16933
 630 03ac 0122     		movs	r2, #1
 631 03ae 1A60     		str	r2, [r3]
 329:../tasks/SDMMC/sd_diskio.c **** 
 330:../tasks/SDMMC/sd_diskio.c **** /* Enable the DMA2 Clock */
 331:../tasks/SDMMC/sd_diskio.c **** __DMA2_CLK_ENABLE();
 632              		.loc 1 331 0
 633 03b0 4FF46053 		mov	r3, #14336
 634 03b4 C4F20203 		movt	r3, 16386
 635 03b8 4FF46052 		mov	r2, #14336
 636 03bc C4F20202 		movt	r2, 16386
 637 03c0 126B     		ldr	r2, [r2, #48]
 638 03c2 42F48002 		orr	r2, r2, #4194304
 639 03c6 1A63     		str	r2, [r3, #48]
 332:../tasks/SDMMC/sd_diskio.c **** 
 333:../tasks/SDMMC/sd_diskio.c **** /* Enable GPIOs clock */
 334:../tasks/SDMMC/sd_diskio.c **** __GPIOB_CLK_ENABLE();
 640              		.loc 1 334 0
 641 03c8 4FF46053 		mov	r3, #14336
 642 03cc C4F20203 		movt	r3, 16386
 643 03d0 4FF46052 		mov	r2, #14336
 644 03d4 C4F20202 		movt	r2, 16386
 645 03d8 126B     		ldr	r2, [r2, #48]
 646 03da 42F00202 		orr	r2, r2, #2
 647 03de 1A63     		str	r2, [r3, #48]
 335:../tasks/SDMMC/sd_diskio.c **** __GPIOC_CLK_ENABLE();
 648              		.loc 1 335 0
 649 03e0 4FF46053 		mov	r3, #14336
 650 03e4 C4F20203 		movt	r3, 16386
 651 03e8 4FF46052 		mov	r2, #14336
 652 03ec C4F20202 		movt	r2, 16386
 653 03f0 126B     		ldr	r2, [r2, #48]
 654 03f2 42F00402 		orr	r2, r2, #4
 655 03f6 1A63     		str	r2, [r3, #48]
 336:../tasks/SDMMC/sd_diskio.c **** __GPIOD_CLK_ENABLE();
 656              		.loc 1 336 0
 657 03f8 4FF46053 		mov	r3, #14336
 658 03fc C4F20203 		movt	r3, 16386
 659 0400 4FF46052 		mov	r2, #14336
 660 0404 C4F20202 		movt	r2, 16386
 661 0408 126B     		ldr	r2, [r2, #48]
 662 040a 42F00802 		orr	r2, r2, #8
 663 040e 1A63     		str	r2, [r3, #48]
 337:../tasks/SDMMC/sd_diskio.c **** //__SD_DETECT_GPIO_CLK_ENABLE();
 338:../tasks/SDMMC/sd_diskio.c **** 
 339:../tasks/SDMMC/sd_diskio.c **** 
 340:../tasks/SDMMC/sd_diskio.c **** /* Configure PC.08, PC.09, PC.10, PC.11 pins: D0, D1, D2, D3 pins PC.12 pin: CLK pin */
 341:../tasks/SDMMC/sd_diskio.c **** GPIO_InitStructure.Pin 			= GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 ;//| GPIO_PIN_12;
 664              		.loc 1 341 0
 665 0410 4FF47063 		mov	r3, #3840
 666 0414 3B60     		str	r3, [r7]
 342:../tasks/SDMMC/sd_diskio.c **** GPIO_InitStructure.Speed 		= GPIO_SPEED_HIGH;
 667              		.loc 1 342 0
 668 0416 0323     		movs	r3, #3
 669 0418 FB60     		str	r3, [r7, #12]
 343:../tasks/SDMMC/sd_diskio.c **** GPIO_InitStructure.Mode 		= GPIO_MODE_AF_PP;//GPIO_MODE_AF_PP;//GPIO_Mode_AF;GPIO_OType_PP
 670              		.loc 1 343 0
 671 041a 0223     		movs	r3, #2
 672 041c 7B60     		str	r3, [r7, #4]
 344:../tasks/SDMMC/sd_diskio.c **** GPIO_InitStructure.Pull 		= GPIO_PULLUP;
 673              		.loc 1 344 0
 674 041e 0123     		movs	r3, #1
 675 0420 BB60     		str	r3, [r7, #8]
 345:../tasks/SDMMC/sd_diskio.c **** GPIO_InitStructure.Alternate 	= GPIO_AF12_SDIO;
 676              		.loc 1 345 0
 677 0422 0C23     		movs	r3, #12
 678 0424 3B61     		str	r3, [r7, #16]
 346:../tasks/SDMMC/sd_diskio.c **** HAL_GPIO_Init(GPIOC, &GPIO_InitStructure);
 679              		.loc 1 346 0
 680 0426 3B46     		mov	r3, r7
 681 0428 4FF40060 		mov	r0, #2048
 682 042c C4F20200 		movt	r0, 16386
 683 0430 1946     		mov	r1, r3
 684 0432 FFF7FEFF 		bl	HAL_GPIO_Init
 347:../tasks/SDMMC/sd_diskio.c **** 
 348:../tasks/SDMMC/sd_diskio.c **** /* Configure PC.12 pin: CLK pin */
 349:../tasks/SDMMC/sd_diskio.c **** GPIO_InitStructure.Pin = GPIO_PIN_12;
 685              		.loc 1 349 0
 686 0436 4FF48053 		mov	r3, #4096
 687 043a 3B60     		str	r3, [r7]
 350:../tasks/SDMMC/sd_diskio.c **** GPIO_InitStructure.Pull = GPIO_NOPULL;
 688              		.loc 1 350 0
 689 043c 0023     		movs	r3, #0
 690 043e BB60     		str	r3, [r7, #8]
 351:../tasks/SDMMC/sd_diskio.c **** GPIO_InitStructure.Alternate 	= GPIO_AF12_SDIO;
 691              		.loc 1 351 0
 692 0440 0C23     		movs	r3, #12
 693 0442 3B61     		str	r3, [r7, #16]
 352:../tasks/SDMMC/sd_diskio.c **** HAL_GPIO_Init(GPIOC, &GPIO_InitStructure);
 694              		.loc 1 352 0
 695 0444 3B46     		mov	r3, r7
 696 0446 4FF40060 		mov	r0, #2048
 697 044a C4F20200 		movt	r0, 16386
 698 044e 1946     		mov	r1, r3
 699 0450 FFF7FEFF 		bl	HAL_GPIO_Init
 353:../tasks/SDMMC/sd_diskio.c **** 
 354:../tasks/SDMMC/sd_diskio.c **** 
 355:../tasks/SDMMC/sd_diskio.c **** /* Configure PD.02 CMD line */
 356:../tasks/SDMMC/sd_diskio.c **** GPIO_InitStructure.Pin 			= GPIO_PIN_2;
 700              		.loc 1 356 0
 701 0454 0423     		movs	r3, #4
 702 0456 3B60     		str	r3, [r7]
 357:../tasks/SDMMC/sd_diskio.c **** GPIO_InitStructure.Alternate 	= GPIO_AF12_SDIO;
 703              		.loc 1 357 0
 704 0458 0C23     		movs	r3, #12
 705 045a 3B61     		str	r3, [r7, #16]
 358:../tasks/SDMMC/sd_diskio.c **** HAL_GPIO_Init(GPIOD, &GPIO_InitStructure);
 706              		.loc 1 358 0
 707 045c 3B46     		mov	r3, r7
 708 045e 4FF44060 		mov	r0, #3072
 709 0462 C4F20200 		movt	r0, 16386
 710 0466 1946     		mov	r1, r3
 711 0468 FFF7FEFF 		bl	HAL_GPIO_Init
 359:../tasks/SDMMC/sd_diskio.c **** 
 360:../tasks/SDMMC/sd_diskio.c **** 
 361:../tasks/SDMMC/sd_diskio.c **** /*!< Configure SD_SPI_DETECT_PIN pin: SD Card detect pin */
 362:../tasks/SDMMC/sd_diskio.c **** GPIO_InitStructure.Pin = SD_DETECT_PIN;
 712              		.loc 1 362 0
 713 046c 2023     		movs	r3, #32
 714 046e 3B60     		str	r3, [r7]
 363:../tasks/SDMMC/sd_diskio.c **** GPIO_InitStructure.Mode = GPIO_MODE_INPUT;
 715              		.loc 1 363 0
 716 0470 0023     		movs	r3, #0
 717 0472 7B60     		str	r3, [r7, #4]
 364:../tasks/SDMMC/sd_diskio.c **** GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
 718              		.loc 1 364 0
 719 0474 0323     		movs	r3, #3
 720 0476 FB60     		str	r3, [r7, #12]
 365:../tasks/SDMMC/sd_diskio.c **** GPIO_InitStructure.Pull = GPIO_PULLUP;
 721              		.loc 1 365 0
 722 0478 0123     		movs	r3, #1
 723 047a BB60     		str	r3, [r7, #8]
 366:../tasks/SDMMC/sd_diskio.c **** //GPIO_InitStructure.Alternate = ;
 367:../tasks/SDMMC/sd_diskio.c **** HAL_GPIO_Init(SD_DETECT_GPIO_PORT, &GPIO_InitStructure);
 724              		.loc 1 367 0
 725 047c 3B46     		mov	r3, r7
 726 047e 4FF48060 		mov	r0, #1024
 727 0482 C4F20200 		movt	r0, 16386
 728 0486 1946     		mov	r1, r3
 729 0488 FFF7FEFF 		bl	HAL_GPIO_Init
 368:../tasks/SDMMC/sd_diskio.c **** 
 369:../tasks/SDMMC/sd_diskio.c **** //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 370:../tasks/SDMMC/sd_diskio.c **** // добавим ДМА на чтение и запись
 371:../tasks/SDMMC/sd_diskio.c **** //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 372:../tasks/SDMMC/sd_diskio.c **** /* NVIC configuration for SDIO interrupts */
 373:../tasks/SDMMC/sd_diskio.c **** HAL_NVIC_SetPriority(SDIO_IRQn, 5, 0);		//5, 0)
 730              		.loc 1 373 0
 731 048c 3120     		movs	r0, #49
 732 048e 0521     		movs	r1, #5
 733 0490 0022     		movs	r2, #0
 734 0492 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 374:../tasks/SDMMC/sd_diskio.c **** HAL_NVIC_EnableIRQ(SDIO_IRQn);
 735              		.loc 1 374 0
 736 0496 3120     		movs	r0, #49
 737 0498 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 375:../tasks/SDMMC/sd_diskio.c **** 
 376:../tasks/SDMMC/sd_diskio.c **** /* Configure DMA Rx parameters */
 377:../tasks/SDMMC/sd_diskio.c **** dmaRxHandle.Init.Channel             = SD_DMAx_Rx_CHANNEL;
 738              		.loc 1 377 0
 739 049c 40F20003 		movw	r3, #:lower16:dmaRxHandle.9860
 740 04a0 C0F20003 		movt	r3, #:upper16:dmaRxHandle.9860
 741 04a4 4FF00062 		mov	r2, #134217728
 742 04a8 5A60     		str	r2, [r3, #4]
 378:../tasks/SDMMC/sd_diskio.c **** dmaRxHandle.Init.Direction           = DMA_PERIPH_TO_MEMORY;
 743              		.loc 1 378 0
 744 04aa 40F20003 		movw	r3, #:lower16:dmaRxHandle.9860
 745 04ae C0F20003 		movt	r3, #:upper16:dmaRxHandle.9860
 746 04b2 0022     		movs	r2, #0
 747 04b4 9A60     		str	r2, [r3, #8]
 379:../tasks/SDMMC/sd_diskio.c **** dmaRxHandle.Init.PeriphInc           = DMA_PINC_DISABLE;
 748              		.loc 1 379 0
 749 04b6 40F20003 		movw	r3, #:lower16:dmaRxHandle.9860
 750 04ba C0F20003 		movt	r3, #:upper16:dmaRxHandle.9860
 751 04be 0022     		movs	r2, #0
 752 04c0 DA60     		str	r2, [r3, #12]
 380:../tasks/SDMMC/sd_diskio.c **** dmaRxHandle.Init.MemInc              = DMA_MINC_ENABLE;
 753              		.loc 1 380 0
 754 04c2 40F20003 		movw	r3, #:lower16:dmaRxHandle.9860
 755 04c6 C0F20003 		movt	r3, #:upper16:dmaRxHandle.9860
 756 04ca 4FF48062 		mov	r2, #1024
 757 04ce 1A61     		str	r2, [r3, #16]
 381:../tasks/SDMMC/sd_diskio.c **** dmaRxHandle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 758              		.loc 1 381 0
 759 04d0 40F20003 		movw	r3, #:lower16:dmaRxHandle.9860
 760 04d4 C0F20003 		movt	r3, #:upper16:dmaRxHandle.9860
 761 04d8 4FF48052 		mov	r2, #4096
 762 04dc 5A61     		str	r2, [r3, #20]
 382:../tasks/SDMMC/sd_diskio.c **** dmaRxHandle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 763              		.loc 1 382 0
 764 04de 40F20003 		movw	r3, #:lower16:dmaRxHandle.9860
 765 04e2 C0F20003 		movt	r3, #:upper16:dmaRxHandle.9860
 766 04e6 4FF48042 		mov	r2, #16384
 767 04ea 9A61     		str	r2, [r3, #24]
 383:../tasks/SDMMC/sd_diskio.c **** dmaRxHandle.Init.Mode                = DMA_PFCTRL;
 768              		.loc 1 383 0
 769 04ec 40F20003 		movw	r3, #:lower16:dmaRxHandle.9860
 770 04f0 C0F20003 		movt	r3, #:upper16:dmaRxHandle.9860
 771 04f4 2022     		movs	r2, #32
 772 04f6 DA61     		str	r2, [r3, #28]
 384:../tasks/SDMMC/sd_diskio.c **** dmaRxHandle.Init.Priority            = DMA_PRIORITY_VERY_HIGH;
 773              		.loc 1 384 0
 774 04f8 40F20003 		movw	r3, #:lower16:dmaRxHandle.9860
 775 04fc C0F20003 		movt	r3, #:upper16:dmaRxHandle.9860
 776 0500 4FF44032 		mov	r2, #196608
 777 0504 1A62     		str	r2, [r3, #32]
 385:../tasks/SDMMC/sd_diskio.c **** dmaRxHandle.Init.FIFOMode            = DMA_FIFOMODE_ENABLE;
 778              		.loc 1 385 0
 779 0506 40F20003 		movw	r3, #:lower16:dmaRxHandle.9860
 780 050a C0F20003 		movt	r3, #:upper16:dmaRxHandle.9860
 781 050e 0422     		movs	r2, #4
 782 0510 5A62     		str	r2, [r3, #36]
 386:../tasks/SDMMC/sd_diskio.c **** dmaRxHandle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 783              		.loc 1 386 0
 784 0512 40F20003 		movw	r3, #:lower16:dmaRxHandle.9860
 785 0516 C0F20003 		movt	r3, #:upper16:dmaRxHandle.9860
 786 051a 0322     		movs	r2, #3
 787 051c 9A62     		str	r2, [r3, #40]
 387:../tasks/SDMMC/sd_diskio.c **** dmaRxHandle.Init.MemBurst            = DMA_MBURST_INC4;
 788              		.loc 1 387 0
 789 051e 40F20003 		movw	r3, #:lower16:dmaRxHandle.9860
 790 0522 C0F20003 		movt	r3, #:upper16:dmaRxHandle.9860
 791 0526 4FF40002 		mov	r2, #8388608
 792 052a DA62     		str	r2, [r3, #44]
 388:../tasks/SDMMC/sd_diskio.c **** dmaRxHandle.Init.PeriphBurst         = DMA_PBURST_INC4;
 793              		.loc 1 388 0
 794 052c 40F20003 		movw	r3, #:lower16:dmaRxHandle.9860
 795 0530 C0F20003 		movt	r3, #:upper16:dmaRxHandle.9860
 796 0534 4FF40012 		mov	r2, #2097152
 797 0538 1A63     		str	r2, [r3, #48]
 389:../tasks/SDMMC/sd_diskio.c **** 
 390:../tasks/SDMMC/sd_diskio.c **** dmaRxHandle.Instance = SD_DMAx_Rx_STREAM;
 798              		.loc 1 390 0
 799 053a 40F20003 		movw	r3, #:lower16:dmaRxHandle.9860
 800 053e C0F20003 		movt	r3, #:upper16:dmaRxHandle.9860
 801 0542 46F25842 		movw	r2, #25688
 802 0546 C4F20202 		movt	r2, 16386
 803 054a 1A60     		str	r2, [r3]
 391:../tasks/SDMMC/sd_diskio.c **** 
 392:../tasks/SDMMC/sd_diskio.c **** /* Associate the DMA handle */
 393:../tasks/SDMMC/sd_diskio.c **** __HAL_LINKDMA(hsd, hdmarx, dmaRxHandle);
 804              		.loc 1 393 0
 805 054c 7A69     		ldr	r2, [r7, #20]
 806 054e 40F20003 		movw	r3, #:lower16:dmaRxHandle.9860
 807 0552 C0F20003 		movt	r3, #:upper16:dmaRxHandle.9860
 808 0556 9365     		str	r3, [r2, #88]
 809 0558 40F20003 		movw	r3, #:lower16:dmaRxHandle.9860
 810 055c C0F20003 		movt	r3, #:upper16:dmaRxHandle.9860
 811 0560 7A69     		ldr	r2, [r7, #20]
 812 0562 9A63     		str	r2, [r3, #56]
 394:../tasks/SDMMC/sd_diskio.c **** 
 395:../tasks/SDMMC/sd_diskio.c **** /* Deinitialize the stream for new transfer */
 396:../tasks/SDMMC/sd_diskio.c **** HAL_DMA_DeInit(&dmaRxHandle);
 813              		.loc 1 396 0
 814 0564 40F20000 		movw	r0, #:lower16:dmaRxHandle.9860
 815 0568 C0F20000 		movt	r0, #:upper16:dmaRxHandle.9860
 816 056c FFF7FEFF 		bl	HAL_DMA_DeInit
 397:../tasks/SDMMC/sd_diskio.c **** 
 398:../tasks/SDMMC/sd_diskio.c **** /* Configure the DMA stream */
 399:../tasks/SDMMC/sd_diskio.c **** HAL_DMA_Init(&dmaRxHandle);
 817              		.loc 1 399 0
 818 0570 40F20000 		movw	r0, #:lower16:dmaRxHandle.9860
 819 0574 C0F20000 		movt	r0, #:upper16:dmaRxHandle.9860
 820 0578 FFF7FEFF 		bl	HAL_DMA_Init
 400:../tasks/SDMMC/sd_diskio.c **** 
 401:../tasks/SDMMC/sd_diskio.c **** /* Configure DMA Tx parameters */
 402:../tasks/SDMMC/sd_diskio.c **** dmaTxHandle.Init.Channel             = SD_DMAx_Tx_CHANNEL;
 821              		.loc 1 402 0
 822 057c 40F20003 		movw	r3, #:lower16:dmaTxHandle.9861
 823 0580 C0F20003 		movt	r3, #:upper16:dmaTxHandle.9861
 824 0584 4FF00062 		mov	r2, #134217728
 825 0588 5A60     		str	r2, [r3, #4]
 403:../tasks/SDMMC/sd_diskio.c **** dmaTxHandle.Init.Direction           = DMA_MEMORY_TO_PERIPH;
 826              		.loc 1 403 0
 827 058a 40F20003 		movw	r3, #:lower16:dmaTxHandle.9861
 828 058e C0F20003 		movt	r3, #:upper16:dmaTxHandle.9861
 829 0592 4022     		movs	r2, #64
 830 0594 9A60     		str	r2, [r3, #8]
 404:../tasks/SDMMC/sd_diskio.c **** dmaTxHandle.Init.PeriphInc           = DMA_PINC_DISABLE;
 831              		.loc 1 404 0
 832 0596 40F20003 		movw	r3, #:lower16:dmaTxHandle.9861
 833 059a C0F20003 		movt	r3, #:upper16:dmaTxHandle.9861
 834 059e 0022     		movs	r2, #0
 835 05a0 DA60     		str	r2, [r3, #12]
 405:../tasks/SDMMC/sd_diskio.c **** dmaTxHandle.Init.MemInc              = DMA_MINC_ENABLE;
 836              		.loc 1 405 0
 837 05a2 40F20003 		movw	r3, #:lower16:dmaTxHandle.9861
 838 05a6 C0F20003 		movt	r3, #:upper16:dmaTxHandle.9861
 839 05aa 4FF48062 		mov	r2, #1024
 840 05ae 1A61     		str	r2, [r3, #16]
 406:../tasks/SDMMC/sd_diskio.c **** dmaTxHandle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 841              		.loc 1 406 0
 842 05b0 40F20003 		movw	r3, #:lower16:dmaTxHandle.9861
 843 05b4 C0F20003 		movt	r3, #:upper16:dmaTxHandle.9861
 844 05b8 4FF48052 		mov	r2, #4096
 845 05bc 5A61     		str	r2, [r3, #20]
 407:../tasks/SDMMC/sd_diskio.c **** dmaTxHandle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 846              		.loc 1 407 0
 847 05be 40F20003 		movw	r3, #:lower16:dmaTxHandle.9861
 848 05c2 C0F20003 		movt	r3, #:upper16:dmaTxHandle.9861
 849 05c6 4FF48042 		mov	r2, #16384
 850 05ca 9A61     		str	r2, [r3, #24]
 408:../tasks/SDMMC/sd_diskio.c **** dmaTxHandle.Init.Mode                = DMA_PFCTRL;
 851              		.loc 1 408 0
 852 05cc 40F20003 		movw	r3, #:lower16:dmaTxHandle.9861
 853 05d0 C0F20003 		movt	r3, #:upper16:dmaTxHandle.9861
 854 05d4 2022     		movs	r2, #32
 855 05d6 DA61     		str	r2, [r3, #28]
 409:../tasks/SDMMC/sd_diskio.c **** dmaTxHandle.Init.Priority            = DMA_PRIORITY_VERY_HIGH;
 856              		.loc 1 409 0
 857 05d8 40F20003 		movw	r3, #:lower16:dmaTxHandle.9861
 858 05dc C0F20003 		movt	r3, #:upper16:dmaTxHandle.9861
 859 05e0 4FF44032 		mov	r2, #196608
 860 05e4 1A62     		str	r2, [r3, #32]
 410:../tasks/SDMMC/sd_diskio.c **** dmaTxHandle.Init.FIFOMode            = DMA_FIFOMODE_ENABLE;
 861              		.loc 1 410 0
 862 05e6 40F20003 		movw	r3, #:lower16:dmaTxHandle.9861
 863 05ea C0F20003 		movt	r3, #:upper16:dmaTxHandle.9861
 864 05ee 0422     		movs	r2, #4
 865 05f0 5A62     		str	r2, [r3, #36]
 411:../tasks/SDMMC/sd_diskio.c **** dmaTxHandle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 866              		.loc 1 411 0
 867 05f2 40F20003 		movw	r3, #:lower16:dmaTxHandle.9861
 868 05f6 C0F20003 		movt	r3, #:upper16:dmaTxHandle.9861
 869 05fa 0322     		movs	r2, #3
 870 05fc 9A62     		str	r2, [r3, #40]
 412:../tasks/SDMMC/sd_diskio.c **** dmaTxHandle.Init.MemBurst            = DMA_MBURST_INC4;
 871              		.loc 1 412 0
 872 05fe 40F20003 		movw	r3, #:lower16:dmaTxHandle.9861
 873 0602 C0F20003 		movt	r3, #:upper16:dmaTxHandle.9861
 874 0606 4FF40002 		mov	r2, #8388608
 875 060a DA62     		str	r2, [r3, #44]
 413:../tasks/SDMMC/sd_diskio.c **** dmaTxHandle.Init.PeriphBurst         = DMA_PBURST_INC4;
 876              		.loc 1 413 0
 877 060c 40F20003 		movw	r3, #:lower16:dmaTxHandle.9861
 878 0610 C0F20003 		movt	r3, #:upper16:dmaTxHandle.9861
 879 0614 4FF40012 		mov	r2, #2097152
 880 0618 1A63     		str	r2, [r3, #48]
 414:../tasks/SDMMC/sd_diskio.c **** 
 415:../tasks/SDMMC/sd_diskio.c **** dmaTxHandle.Instance = SD_DMAx_Tx_STREAM;
 881              		.loc 1 415 0
 882 061a 40F20003 		movw	r3, #:lower16:dmaTxHandle.9861
 883 061e C0F20003 		movt	r3, #:upper16:dmaTxHandle.9861
 884 0622 46F2A042 		movw	r2, #25760
 885 0626 C4F20202 		movt	r2, 16386
 886 062a 1A60     		str	r2, [r3]
 416:../tasks/SDMMC/sd_diskio.c **** 
 417:../tasks/SDMMC/sd_diskio.c **** /* Associate the DMA handle */
 418:../tasks/SDMMC/sd_diskio.c **** __HAL_LINKDMA(hsd, hdmatx, dmaTxHandle);
 887              		.loc 1 418 0
 888 062c 7A69     		ldr	r2, [r7, #20]
 889 062e 40F20003 		movw	r3, #:lower16:dmaTxHandle.9861
 890 0632 C0F20003 		movt	r3, #:upper16:dmaTxHandle.9861
 891 0636 D365     		str	r3, [r2, #92]
 892 0638 40F20003 		movw	r3, #:lower16:dmaTxHandle.9861
 893 063c C0F20003 		movt	r3, #:upper16:dmaTxHandle.9861
 894 0640 7A69     		ldr	r2, [r7, #20]
 895 0642 9A63     		str	r2, [r3, #56]
 419:../tasks/SDMMC/sd_diskio.c **** 
 420:../tasks/SDMMC/sd_diskio.c **** /* Deinitialize the stream for new transfer */
 421:../tasks/SDMMC/sd_diskio.c **** HAL_DMA_DeInit(&dmaTxHandle);
 896              		.loc 1 421 0
 897 0644 40F20000 		movw	r0, #:lower16:dmaTxHandle.9861
 898 0648 C0F20000 		movt	r0, #:upper16:dmaTxHandle.9861
 899 064c FFF7FEFF 		bl	HAL_DMA_DeInit
 422:../tasks/SDMMC/sd_diskio.c **** 
 423:../tasks/SDMMC/sd_diskio.c **** /* Configure the DMA stream */
 424:../tasks/SDMMC/sd_diskio.c **** HAL_DMA_Init(&dmaTxHandle);
 900              		.loc 1 424 0
 901 0650 40F20000 		movw	r0, #:lower16:dmaTxHandle.9861
 902 0654 C0F20000 		movt	r0, #:upper16:dmaTxHandle.9861
 903 0658 FFF7FEFF 		bl	HAL_DMA_Init
 425:../tasks/SDMMC/sd_diskio.c **** 
 426:../tasks/SDMMC/sd_diskio.c **** /* NVIC configuration for DMA transfer complete interrupt */
 427:../tasks/SDMMC/sd_diskio.c **** HAL_NVIC_SetPriority(SD_DMAx_Rx_IRQn, 6, 0);		// 6, 0);
 904              		.loc 1 427 0
 905 065c 3B20     		movs	r0, #59
 906 065e 0621     		movs	r1, #6
 907 0660 0022     		movs	r2, #0
 908 0662 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 428:../tasks/SDMMC/sd_diskio.c **** HAL_NVIC_EnableIRQ(SD_DMAx_Rx_IRQn);
 909              		.loc 1 428 0
 910 0666 3B20     		movs	r0, #59
 911 0668 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 429:../tasks/SDMMC/sd_diskio.c **** 
 430:../tasks/SDMMC/sd_diskio.c **** /* NVIC configuration for DMA transfer complete interrupt */
 431:../tasks/SDMMC/sd_diskio.c **** HAL_NVIC_SetPriority(SD_DMAx_Tx_IRQn, 6, 0);		// 6, 0);
 912              		.loc 1 431 0
 913 066c 4520     		movs	r0, #69
 914 066e 0621     		movs	r1, #6
 915 0670 0022     		movs	r2, #0
 916 0672 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 432:../tasks/SDMMC/sd_diskio.c **** HAL_NVIC_EnableIRQ(SD_DMAx_Tx_IRQn);
 917              		.loc 1 432 0
 918 0676 4520     		movs	r0, #69
 919 0678 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 433:../tasks/SDMMC/sd_diskio.c **** 
 434:../tasks/SDMMC/sd_diskio.c **** //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 435:../tasks/SDMMC/sd_diskio.c **** /* Enable the SDIO Clock */
 436:../tasks/SDMMC/sd_diskio.c **** __SDIO_CLK_ENABLE();
 920              		.loc 1 436 0
 921 067c 4FF46053 		mov	r3, #14336
 922 0680 C4F20203 		movt	r3, 16386
 923 0684 4FF46052 		mov	r2, #14336
 924 0688 C4F20202 		movt	r2, 16386
 925 068c 526C     		ldr	r2, [r2, #68]
 926 068e 42F40062 		orr	r2, r2, #2048
 927 0692 5A64     		str	r2, [r3, #68]
 437:../tasks/SDMMC/sd_diskio.c **** __SDIO_ENABLE();
 928              		.loc 1 437 0
 929 0694 48F2A003 		movw	r3, #32928
 930 0698 C4F22523 		movt	r3, 16933
 931 069c 0122     		movs	r2, #1
 932 069e 1A60     		str	r2, [r3]
 438:../tasks/SDMMC/sd_diskio.c **** 
 439:../tasks/SDMMC/sd_diskio.c **** }
 933              		.loc 1 439 0
 934 06a0 1837     		adds	r7, r7, #24
 935 06a2 BD46     		mov	sp, r7
 936              		@ sp needed
 937 06a4 80BD     		pop	{r7, pc}
 938              		.cfi_endproc
 939              	.LFE60:
 941 06a6 00BF     		.align	2
 942              		.global	BSP_SD_GetCardInfo
 943              		.thumb
 944              		.thumb_func
 946              	BSP_SD_GetCardInfo:
 947              	.LFB61:
 440:../tasks/SDMMC/sd_diskio.c **** 
 441:../tasks/SDMMC/sd_diskio.c **** /****************************************************************
 442:../tasks/SDMMC/sd_diskio.c **** * @brief
 443:../tasks/SDMMC/sd_diskio.c **** * @param
 444:../tasks/SDMMC/sd_diskio.c **** * @param
 445:../tasks/SDMMC/sd_diskio.c **** * @retval
 446:../tasks/SDMMC/sd_diskio.c **** *****************************************************************/
 447:../tasks/SDMMC/sd_diskio.c **** void BSP_SD_GetCardInfo(HAL_SD_CardInfoTypedef *CardInfo)
 448:../tasks/SDMMC/sd_diskio.c **** {
 948              		.loc 1 448 0
 949              		.cfi_startproc
 950              		@ args = 0, pretend = 0, frame = 8
 951              		@ frame_needed = 1, uses_anonymous_args = 0
 952 06a8 80B5     		push	{r7, lr}
 953              		.cfi_def_cfa_offset 8
 954              		.cfi_offset 7, -8
 955              		.cfi_offset 14, -4
 956 06aa 82B0     		sub	sp, sp, #8
 957              		.cfi_def_cfa_offset 16
 958 06ac 00AF     		add	r7, sp, #0
 959              		.cfi_def_cfa_register 7
 960 06ae 7860     		str	r0, [r7, #4]
 449:../tasks/SDMMC/sd_diskio.c ****   /* Get SD card Information */
 450:../tasks/SDMMC/sd_diskio.c ****   HAL_SD_Get_CardInfo(&uSdHandle, CardInfo);		// этот не читает паразит
 961              		.loc 1 450 0
 962 06b0 40F20000 		movw	r0, #:lower16:uSdHandle
 963 06b4 C0F20000 		movt	r0, #:upper16:uSdHandle
 964 06b8 7968     		ldr	r1, [r7, #4]
 965 06ba FFF7FEFF 		bl	HAL_SD_Get_CardInfo
 451:../tasks/SDMMC/sd_diskio.c **** 
 452:../tasks/SDMMC/sd_diskio.c **** /*
 453:../tasks/SDMMC/sd_diskio.c ****   printf("-------------------- BSP_SD_GetCardInfo --------------------------\n");
 454:../tasks/SDMMC/sd_diskio.c ****   printf("[SD] I:ManufacturerID: %d \n",CardInfo->SD_cid.ManufacturerID);
 455:../tasks/SDMMC/sd_diskio.c ****   printf("[SD] I:OEM/Application ID: %d \n",CardInfo->SD_cid.OEM_AppliID);
 456:../tasks/SDMMC/sd_diskio.c **** //  printf("[SD] I:Product Name part1: %d \n",CardInfo->SD_cid.ProdName1);
 457:../tasks/SDMMC/sd_diskio.c ****   printf("[SD] I:Product Name part2: %d \n",CardInfo->SD_cid.ProdName2);
 458:../tasks/SDMMC/sd_diskio.c ****   printf("[SD] I:Product Revision: %d \n",CardInfo->SD_cid.ProdRev);
 459:../tasks/SDMMC/sd_diskio.c **** //  printf("[SD] I:Product Serial Number: %d \n",CardInfo->SD_cid.ProdSN);
 460:../tasks/SDMMC/sd_diskio.c ****   printf("[SD] I:Manufacturing Date: %d \n",CardInfo->SD_cid.ManufactDate);
 461:../tasks/SDMMC/sd_diskio.c ****   printf("[SD] I:Device Size: %d.%d.%d.%d \n",(uint8_t)(CardInfo->SD_csd.DeviceSize>>24),(uint8_t)(
 462:../tasks/SDMMC/sd_diskio.c ****   printf("[SD] I:CardType: %d \n",CardInfo->CardType);
 463:../tasks/SDMMC/sd_diskio.c ****   printf("[SD] I:CardBlockSize: %d \n",(uint16_t)CardInfo->CardBlockSize);
 464:../tasks/SDMMC/sd_diskio.c ****   printf("[SD] I:CardCapacity: %d.%d.%d.%d.%d.%d \n",(uint8_t)(CardInfo->CardCapacity>>40),(uint8_t
 465:../tasks/SDMMC/sd_diskio.c ****   printf("------------------------------------------------------------------\n");
 466:../tasks/SDMMC/sd_diskio.c **** */
 467:../tasks/SDMMC/sd_diskio.c **** }
 966              		.loc 1 467 0
 967 06be 0837     		adds	r7, r7, #8
 968 06c0 BD46     		mov	sp, r7
 969              		@ sp needed
 970 06c2 80BD     		pop	{r7, pc}
 971              		.cfi_endproc
 972              	.LFE61:
 974              		.align	2
 975              		.global	SDIO_PowerON
 976              		.thumb
 977              		.thumb_func
 979              	SDIO_PowerON:
 980              	.LFB62:
 468:../tasks/SDMMC/sd_diskio.c **** 
 469:../tasks/SDMMC/sd_diskio.c **** /**
 470:../tasks/SDMMC/sd_diskio.c ****   * @brief  Enquires cards about their operating voltage and configures
 471:../tasks/SDMMC/sd_diskio.c ****   *   clock controls.
 472:../tasks/SDMMC/sd_diskio.c ****   * @param  None
 473:../tasks/SDMMC/sd_diskio.c ****   * @retval HAL_SD_ErrorTypedef: SD Card Error code.
 474:../tasks/SDMMC/sd_diskio.c ****   */
 475:../tasks/SDMMC/sd_diskio.c **** HAL_SD_ErrorTypedef SDIO_PowerON(void)
 476:../tasks/SDMMC/sd_diskio.c **** {
 981              		.loc 1 476 0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 24
 984              		@ frame_needed = 1, uses_anonymous_args = 0
 985 06c4 90B5     		push	{r4, r7, lr}
 986              		.cfi_def_cfa_offset 12
 987              		.cfi_offset 4, -12
 988              		.cfi_offset 7, -8
 989              		.cfi_offset 14, -4
 990 06c6 8BB0     		sub	sp, sp, #44
 991              		.cfi_def_cfa_offset 56
 992 06c8 04AF     		add	r7, sp, #16
 993              		.cfi_def_cfa 7, 40
 477:../tasks/SDMMC/sd_diskio.c **** 
 478:../tasks/SDMMC/sd_diskio.c ****   __IO HAL_SD_ErrorTypedef errorstatus = SD_OK;
 994              		.loc 1 478 0
 995 06ca 0023     		movs	r3, #0
 996 06cc FB71     		strb	r3, [r7, #7]
 479:../tasks/SDMMC/sd_diskio.c ****   uint32_t response = 0, count = 0, validvoltage = 0;
 997              		.loc 1 479 0
 998 06ce 0023     		movs	r3, #0
 999 06d0 7B61     		str	r3, [r7, #20]
 1000 06d2 0023     		movs	r3, #0
 1001 06d4 3B61     		str	r3, [r7, #16]
 1002 06d6 0023     		movs	r3, #0
 1003 06d8 FB60     		str	r3, [r7, #12]
 480:../tasks/SDMMC/sd_diskio.c ****   uint32_t SDType = SD_STD_CAPACITY;//SD_STD_CAPACITY;
 1004              		.loc 1 480 0
 1005 06da 0023     		movs	r3, #0
 1006 06dc BB60     		str	r3, [r7, #8]
 481:../tasks/SDMMC/sd_diskio.c **** 
 482:../tasks/SDMMC/sd_diskio.c ****   /*!< Power ON Sequence -----------------------------------------------------*/
 483:../tasks/SDMMC/sd_diskio.c ****   /*!< Configure the SDIO peripheral */
 484:../tasks/SDMMC/sd_diskio.c ****   /*!< SDIO_CK = SDIOCLK / (SDIO_INIT_CLK_DIV + 2) */
 485:../tasks/SDMMC/sd_diskio.c ****   /*!< on STM32F2xx devices, SDIOCLK is fixed to 48MHz */
 486:../tasks/SDMMC/sd_diskio.c ****   /*!< SDIO_CK for initialization should not exceed 400 KHz */
 487:../tasks/SDMMC/sd_diskio.c ****   SDIO_InitStructure.ClockDiv = SDIO_INIT_CLK_DIV;
 1007              		.loc 1 487 0
 1008 06de 40F20003 		movw	r3, #:lower16:SDIO_InitStructure
 1009 06e2 C0F20003 		movt	r3, #:upper16:SDIO_InitStructure
 1010 06e6 7622     		movs	r2, #118
 1011 06e8 5A61     		str	r2, [r3, #20]
 488:../tasks/SDMMC/sd_diskio.c ****   SDIO_InitStructure.ClockEdge = SDIO_CLOCK_EDGE_RISING;
 1012              		.loc 1 488 0
 1013 06ea 40F20003 		movw	r3, #:lower16:SDIO_InitStructure
 1014 06ee C0F20003 		movt	r3, #:upper16:SDIO_InitStructure
 1015 06f2 0022     		movs	r2, #0
 1016 06f4 1A60     		str	r2, [r3]
 489:../tasks/SDMMC/sd_diskio.c ****   SDIO_InitStructure.ClockBypass = SDIO_CLOCK_BYPASS_DISABLE;
 1017              		.loc 1 489 0
 1018 06f6 40F20003 		movw	r3, #:lower16:SDIO_InitStructure
 1019 06fa C0F20003 		movt	r3, #:upper16:SDIO_InitStructure
 1020 06fe 0022     		movs	r2, #0
 1021 0700 5A60     		str	r2, [r3, #4]
 490:../tasks/SDMMC/sd_diskio.c ****   SDIO_InitStructure.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_ENABLE;//SDIO_CLOCK_POWER_SAVE_DISABLE;
 1022              		.loc 1 490 0
 1023 0702 40F20003 		movw	r3, #:lower16:SDIO_InitStructure
 1024 0706 C0F20003 		movt	r3, #:upper16:SDIO_InitStructure
 1025 070a 4FF40072 		mov	r2, #512
 1026 070e 9A60     		str	r2, [r3, #8]
 491:../tasks/SDMMC/sd_diskio.c ****   SDIO_InitStructure.BusWide = SDIO_BUS_WIDE_1B;
 1027              		.loc 1 491 0
 1028 0710 40F20003 		movw	r3, #:lower16:SDIO_InitStructure
 1029 0714 C0F20003 		movt	r3, #:upper16:SDIO_InitStructure
 1030 0718 0022     		movs	r2, #0
 1031 071a DA60     		str	r2, [r3, #12]
 492:../tasks/SDMMC/sd_diskio.c ****   SDIO_InitStructure.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;//SDIO_HARDWARE_FLOW_
 1032              		.loc 1 492 0
 1033 071c 40F20003 		movw	r3, #:lower16:SDIO_InitStructure
 1034 0720 C0F20003 		movt	r3, #:upper16:SDIO_InitStructure
 1035 0724 0022     		movs	r2, #0
 1036 0726 1A61     		str	r2, [r3, #16]
 493:../tasks/SDMMC/sd_diskio.c ****   SDIO_Init(SDIO, SDIO_InitStructure);
 1037              		.loc 1 493 0
 1038 0728 40F20003 		movw	r3, #:lower16:SDIO_InitStructure
 1039 072c C0F20003 		movt	r3, #:upper16:SDIO_InitStructure
 1040 0730 6C46     		mov	r4, sp
 1041 0732 03F10C02 		add	r2, r3, #12
 1042 0736 07CA     		ldmia	r2, {r0, r1, r2}
 1043 0738 84E80700 		stmia	r4, {r0, r1, r2}
 1044 073c 0ECB     		ldmia	r3, {r1, r2, r3}
 1045 073e 4FF43050 		mov	r0, #11264
 1046 0742 C4F20100 		movt	r0, 16385
 1047 0746 FFF7FEFF 		bl	SDIO_Init
 494:../tasks/SDMMC/sd_diskio.c **** 
 495:../tasks/SDMMC/sd_diskio.c ****   /*!< Set Power State to ON */
 496:../tasks/SDMMC/sd_diskio.c ****   SDIO_PowerState_ON(SDIO);
 1048              		.loc 1 496 0
 1049 074a 4FF43050 		mov	r0, #11264
 1050 074e C4F20100 		movt	r0, 16385
 1051 0752 FFF7FEFF 		bl	SDIO_PowerState_ON
 497:../tasks/SDMMC/sd_diskio.c **** 
 498:../tasks/SDMMC/sd_diskio.c ****   /*!< Enable SDIO Clock */
 499:../tasks/SDMMC/sd_diskio.c ****   __SDIO_CLK_ENABLE();
 1052              		.loc 1 499 0
 1053 0756 4FF46053 		mov	r3, #14336
 1054 075a C4F20203 		movt	r3, 16386
 1055 075e 4FF46052 		mov	r2, #14336
 1056 0762 C4F20202 		movt	r2, 16386
 1057 0766 526C     		ldr	r2, [r2, #68]
 1058 0768 42F40062 		orr	r2, r2, #2048
 1059 076c 5A64     		str	r2, [r3, #68]
 500:../tasks/SDMMC/sd_diskio.c ****   __SDIO_ENABLE();
 1060              		.loc 1 500 0
 1061 076e 48F2A003 		movw	r3, #32928
 1062 0772 C4F22523 		movt	r3, 16933
 1063 0776 0122     		movs	r2, #1
 1064 0778 1A60     		str	r2, [r3]
 501:../tasks/SDMMC/sd_diskio.c **** 
 502:../tasks/SDMMC/sd_diskio.c ****   /*!< CMD0: GO_IDLE_STATE ---------------------------------------------------*/
 503:../tasks/SDMMC/sd_diskio.c ****   /*!< No CMD response required */
 504:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.Argument = 0x0;
 1065              		.loc 1 504 0
 1066 077a 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1067 077e C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1068 0782 0022     		movs	r2, #0
 1069 0784 1A60     		str	r2, [r3]
 505:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.CmdIndex = SD_CMD_GO_IDLE_STATE;
 1070              		.loc 1 505 0
 1071 0786 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1072 078a C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1073 078e 0022     		movs	r2, #0
 1074 0790 5A60     		str	r2, [r3, #4]
 506:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.Response = SDIO_RESPONSE_NO;
 1075              		.loc 1 506 0
 1076 0792 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1077 0796 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1078 079a 0022     		movs	r2, #0
 1079 079c 9A60     		str	r2, [r3, #8]
 507:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 1080              		.loc 1 507 0
 1081 079e 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1082 07a2 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1083 07a6 0022     		movs	r2, #0
 1084 07a8 DA60     		str	r2, [r3, #12]
 508:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.CPSM = SDIO_CPSM_ENABLE;
 1085              		.loc 1 508 0
 1086 07aa 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1087 07ae C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1088 07b2 4FF48062 		mov	r2, #1024
 1089 07b6 1A61     		str	r2, [r3, #16]
 509:../tasks/SDMMC/sd_diskio.c ****   SDIO_SendCommand(SDIO, &SDIO_CmdInitStructure);
 1090              		.loc 1 509 0
 1091 07b8 4FF43050 		mov	r0, #11264
 1092 07bc C4F20100 		movt	r0, 16385
 1093 07c0 40F20001 		movw	r1, #:lower16:SDIO_CmdInitStructure
 1094 07c4 C0F20001 		movt	r1, #:upper16:SDIO_CmdInitStructure
 1095 07c8 FFF7FEFF 		bl	SDIO_SendCommand
 510:../tasks/SDMMC/sd_diskio.c **** 
 511:../tasks/SDMMC/sd_diskio.c ****   errorstatus = CmdError();
 1096              		.loc 1 511 0
 1097 07cc 00F04AF9 		bl	CmdError
 1098 07d0 0346     		mov	r3, r0
 1099 07d2 FB71     		strb	r3, [r7, #7]
 512:../tasks/SDMMC/sd_diskio.c **** 
 513:../tasks/SDMMC/sd_diskio.c ****   if (errorstatus != SD_OK)
 1100              		.loc 1 513 0
 1101 07d4 FB79     		ldrb	r3, [r7, #7]
 1102 07d6 DBB2     		uxtb	r3, r3
 1103 07d8 002B     		cmp	r3, #0
 1104 07da 02D0     		beq	.L47
 514:../tasks/SDMMC/sd_diskio.c ****   {
 515:../tasks/SDMMC/sd_diskio.c ****     /*!< CMD Response TimeOut (wait for CMDSENT flag) */
 516:../tasks/SDMMC/sd_diskio.c **** 
 517:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 1105              		.loc 1 517 0
 1106 07dc FB79     		ldrb	r3, [r7, #7]
 1107 07de DBB2     		uxtb	r3, r3
 1108 07e0 3BE1     		b	.L48
 1109              	.L47:
 518:../tasks/SDMMC/sd_diskio.c ****   }
 519:../tasks/SDMMC/sd_diskio.c **** 
 520:../tasks/SDMMC/sd_diskio.c ****   /*!< CMD8: SEND_IF_COND ----------------------------------------------------*/
 521:../tasks/SDMMC/sd_diskio.c ****   /*!< Send CMD8 to verify SD card interface operating condition */
 522:../tasks/SDMMC/sd_diskio.c ****   /*!< Argument: - [31:12]: Reserved (shall be set to '0')
 523:../tasks/SDMMC/sd_diskio.c ****                - [11:8]: Supply Voltage (VHS) 0x1 (Range: 2.7-3.6 V)
 524:../tasks/SDMMC/sd_diskio.c ****                - [7:0]: Check Pattern (recommended 0xAA) */
 525:../tasks/SDMMC/sd_diskio.c ****   /*!< CMD Response: R7 */
 526:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.Argument = SD_CHECK_PATTERN;
 1110              		.loc 1 526 0
 1111 07e2 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1112 07e6 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1113 07ea 4FF4D572 		mov	r2, #426
 1114 07ee 1A60     		str	r2, [r3]
 527:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.CmdIndex = SDIO_SEND_IF_COND;
 1115              		.loc 1 527 0
 1116 07f0 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1117 07f4 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1118 07f8 0822     		movs	r2, #8
 1119 07fa 5A60     		str	r2, [r3, #4]
 528:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.Response = SDIO_RESPONSE_SHORT;
 1120              		.loc 1 528 0
 1121 07fc 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1122 0800 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1123 0804 4022     		movs	r2, #64
 1124 0806 9A60     		str	r2, [r3, #8]
 529:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 1125              		.loc 1 529 0
 1126 0808 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1127 080c C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1128 0810 0022     		movs	r2, #0
 1129 0812 DA60     		str	r2, [r3, #12]
 530:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.CPSM = SDIO_CPSM_ENABLE;
 1130              		.loc 1 530 0
 1131 0814 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1132 0818 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1133 081c 4FF48062 		mov	r2, #1024
 1134 0820 1A61     		str	r2, [r3, #16]
 531:../tasks/SDMMC/sd_diskio.c ****   SDIO_SendCommand(SDIO, &SDIO_CmdInitStructure);
 1135              		.loc 1 531 0
 1136 0822 4FF43050 		mov	r0, #11264
 1137 0826 C4F20100 		movt	r0, 16385
 1138 082a 40F20001 		movw	r1, #:lower16:SDIO_CmdInitStructure
 1139 082e C0F20001 		movt	r1, #:upper16:SDIO_CmdInitStructure
 1140 0832 FFF7FEFF 		bl	SDIO_SendCommand
 532:../tasks/SDMMC/sd_diskio.c **** 
 533:../tasks/SDMMC/sd_diskio.c ****   errorstatus = CmdResp7Error();
 1141              		.loc 1 533 0
 1142 0836 00F00BFC 		bl	CmdResp7Error
 1143 083a 0346     		mov	r3, r0
 1144 083c FB71     		strb	r3, [r7, #7]
 534:../tasks/SDMMC/sd_diskio.c **** 
 535:../tasks/SDMMC/sd_diskio.c ****   if (errorstatus == SD_OK)
 1145              		.loc 1 535 0
 1146 083e FB79     		ldrb	r3, [r7, #7]
 1147 0840 DBB2     		uxtb	r3, r3
 1148 0842 002B     		cmp	r3, #0
 1149 0844 09D1     		bne	.L49
 536:../tasks/SDMMC/sd_diskio.c ****   {
 537:../tasks/SDMMC/sd_diskio.c **** 	IsCardType = SDIO_STD_CAPACITY_SD_CARD_V2_0; /*!< SD Card 2.0 */
 1150              		.loc 1 537 0
 1151 0846 40F20003 		movw	r3, #:lower16:IsCardType
 1152 084a C0F20003 		movt	r3, #:upper16:IsCardType
 1153 084e 0122     		movs	r2, #1
 1154 0850 1A60     		str	r2, [r3]
 538:../tasks/SDMMC/sd_diskio.c ****     SDType = SD_HIGH_CAPACITY;
 1155              		.loc 1 538 0
 1156 0852 4FF08043 		mov	r3, #1073741824
 1157 0856 BB60     		str	r3, [r7, #8]
 1158 0858 2DE0     		b	.L50
 1159              	.L49:
 539:../tasks/SDMMC/sd_diskio.c ****   }
 540:../tasks/SDMMC/sd_diskio.c ****   else
 541:../tasks/SDMMC/sd_diskio.c ****   {
 542:../tasks/SDMMC/sd_diskio.c ****     /*!< CMD55 */
 543:../tasks/SDMMC/sd_diskio.c ****     SDIO_CmdInitStructure.Argument = 0x00;
 1160              		.loc 1 543 0
 1161 085a 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1162 085e C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1163 0862 0022     		movs	r2, #0
 1164 0864 1A60     		str	r2, [r3]
 544:../tasks/SDMMC/sd_diskio.c ****     SDIO_CmdInitStructure.CmdIndex = SD_CMD_APP_CMD;
 1165              		.loc 1 544 0
 1166 0866 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1167 086a C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1168 086e 3722     		movs	r2, #55
 1169 0870 5A60     		str	r2, [r3, #4]
 545:../tasks/SDMMC/sd_diskio.c ****     SDIO_CmdInitStructure.Response = SDIO_RESPONSE_SHORT;
 1170              		.loc 1 545 0
 1171 0872 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1172 0876 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1173 087a 4022     		movs	r2, #64
 1174 087c 9A60     		str	r2, [r3, #8]
 546:../tasks/SDMMC/sd_diskio.c ****     SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 1175              		.loc 1 546 0
 1176 087e 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1177 0882 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1178 0886 0022     		movs	r2, #0
 1179 0888 DA60     		str	r2, [r3, #12]
 547:../tasks/SDMMC/sd_diskio.c ****     SDIO_CmdInitStructure.CPSM = SDIO_CPSM_ENABLE;
 1180              		.loc 1 547 0
 1181 088a 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1182 088e C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1183 0892 4FF48062 		mov	r2, #1024
 1184 0896 1A61     		str	r2, [r3, #16]
 548:../tasks/SDMMC/sd_diskio.c ****     SDIO_SendCommand(SDIO, &SDIO_CmdInitStructure);
 1185              		.loc 1 548 0
 1186 0898 4FF43050 		mov	r0, #11264
 1187 089c C4F20100 		movt	r0, 16385
 1188 08a0 40F20001 		movw	r1, #:lower16:SDIO_CmdInitStructure
 1189 08a4 C0F20001 		movt	r1, #:upper16:SDIO_CmdInitStructure
 1190 08a8 FFF7FEFF 		bl	SDIO_SendCommand
 549:../tasks/SDMMC/sd_diskio.c ****     errorstatus = CmdResp1Error(SD_CMD_APP_CMD);
 1191              		.loc 1 549 0
 1192 08ac 3720     		movs	r0, #55
 1193 08ae 00F02BF9 		bl	CmdResp1Error
 1194 08b2 0346     		mov	r3, r0
 1195 08b4 FB71     		strb	r3, [r7, #7]
 1196              	.L50:
 550:../tasks/SDMMC/sd_diskio.c ****   }
 551:../tasks/SDMMC/sd_diskio.c ****   /*!< CMD55 */
 552:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.Argument = 0x00;
 1197              		.loc 1 552 0
 1198 08b6 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1199 08ba C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1200 08be 0022     		movs	r2, #0
 1201 08c0 1A60     		str	r2, [r3]
 553:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.CmdIndex = SD_CMD_APP_CMD;
 1202              		.loc 1 553 0
 1203 08c2 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1204 08c6 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1205 08ca 3722     		movs	r2, #55
 1206 08cc 5A60     		str	r2, [r3, #4]
 554:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.Response = SDIO_RESPONSE_SHORT;
 1207              		.loc 1 554 0
 1208 08ce 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1209 08d2 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1210 08d6 4022     		movs	r2, #64
 1211 08d8 9A60     		str	r2, [r3, #8]
 555:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 1212              		.loc 1 555 0
 1213 08da 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1214 08de C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1215 08e2 0022     		movs	r2, #0
 1216 08e4 DA60     		str	r2, [r3, #12]
 556:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.CPSM = SDIO_CPSM_ENABLE;
 1217              		.loc 1 556 0
 1218 08e6 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1219 08ea C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1220 08ee 4FF48062 		mov	r2, #1024
 1221 08f2 1A61     		str	r2, [r3, #16]
 557:../tasks/SDMMC/sd_diskio.c ****   SDIO_SendCommand(SDIO, &SDIO_CmdInitStructure);
 1222              		.loc 1 557 0
 1223 08f4 4FF43050 		mov	r0, #11264
 1224 08f8 C4F20100 		movt	r0, 16385
 1225 08fc 40F20001 		movw	r1, #:lower16:SDIO_CmdInitStructure
 1226 0900 C0F20001 		movt	r1, #:upper16:SDIO_CmdInitStructure
 1227 0904 FFF7FEFF 		bl	SDIO_SendCommand
 558:../tasks/SDMMC/sd_diskio.c ****   errorstatus = CmdResp1Error(SD_CMD_APP_CMD);
 1228              		.loc 1 558 0
 1229 0908 3720     		movs	r0, #55
 1230 090a 00F0FDF8 		bl	CmdResp1Error
 1231 090e 0346     		mov	r3, r0
 1232 0910 FB71     		strb	r3, [r7, #7]
 559:../tasks/SDMMC/sd_diskio.c **** 
 560:../tasks/SDMMC/sd_diskio.c ****   /*!< If errorstatus is Command TimeOut, it is a MMC card */
 561:../tasks/SDMMC/sd_diskio.c ****   /*!< If errorstatus is SD_OK it is a SD card: SD card 2.0 (voltage range mismatch)
 562:../tasks/SDMMC/sd_diskio.c ****      or SD card 1.x */
 563:../tasks/SDMMC/sd_diskio.c ****   if (errorstatus == SD_OK)
 1233              		.loc 1 563 0
 1234 0912 FB79     		ldrb	r3, [r7, #7]
 1235 0914 DBB2     		uxtb	r3, r3
 1236 0916 002B     		cmp	r3, #0
 1237 0918 40F09D80 		bne	.L51
 564:../tasks/SDMMC/sd_diskio.c ****   {
 565:../tasks/SDMMC/sd_diskio.c ****     /*!< SD CARD */
 566:../tasks/SDMMC/sd_diskio.c ****     /*!< Send ACMD41 SD_APP_OP_COND with Argument 0x80100000 */
 567:../tasks/SDMMC/sd_diskio.c ****     while ((!validvoltage) && (count < SD_MAX_VOLT_TRIAL))
 1238              		.loc 1 567 0
 1239 091c 7BE0     		b	.L52
 1240              	.L56:
 568:../tasks/SDMMC/sd_diskio.c ****     {
 569:../tasks/SDMMC/sd_diskio.c **** 
 570:../tasks/SDMMC/sd_diskio.c ****       /*!< SEND CMD55 APP_CMD with RCA as 0 */
 571:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.Argument = 0x00;
 1241              		.loc 1 571 0
 1242 091e 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1243 0922 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1244 0926 0022     		movs	r2, #0
 1245 0928 1A60     		str	r2, [r3]
 572:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.CmdIndex = SD_CMD_APP_CMD;
 1246              		.loc 1 572 0
 1247 092a 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1248 092e C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1249 0932 3722     		movs	r2, #55
 1250 0934 5A60     		str	r2, [r3, #4]
 573:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.Response = SDIO_RESPONSE_SHORT;
 1251              		.loc 1 573 0
 1252 0936 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1253 093a C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1254 093e 4022     		movs	r2, #64
 1255 0940 9A60     		str	r2, [r3, #8]
 574:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 1256              		.loc 1 574 0
 1257 0942 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1258 0946 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1259 094a 0022     		movs	r2, #0
 1260 094c DA60     		str	r2, [r3, #12]
 575:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.CPSM = SDIO_CPSM_ENABLE;
 1261              		.loc 1 575 0
 1262 094e 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1263 0952 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1264 0956 4FF48062 		mov	r2, #1024
 1265 095a 1A61     		str	r2, [r3, #16]
 576:../tasks/SDMMC/sd_diskio.c ****       SDIO_SendCommand(SDIO, &SDIO_CmdInitStructure);
 1266              		.loc 1 576 0
 1267 095c 4FF43050 		mov	r0, #11264
 1268 0960 C4F20100 		movt	r0, 16385
 1269 0964 40F20001 		movw	r1, #:lower16:SDIO_CmdInitStructure
 1270 0968 C0F20001 		movt	r1, #:upper16:SDIO_CmdInitStructure
 1271 096c FFF7FEFF 		bl	SDIO_SendCommand
 577:../tasks/SDMMC/sd_diskio.c **** 
 578:../tasks/SDMMC/sd_diskio.c ****       errorstatus = CmdResp1Error(SD_CMD_APP_CMD);
 1272              		.loc 1 578 0
 1273 0970 3720     		movs	r0, #55
 1274 0972 00F0C9F8 		bl	CmdResp1Error
 1275 0976 0346     		mov	r3, r0
 1276 0978 FB71     		strb	r3, [r7, #7]
 579:../tasks/SDMMC/sd_diskio.c **** 
 580:../tasks/SDMMC/sd_diskio.c ****       if (errorstatus != SD_OK)
 1277              		.loc 1 580 0
 1278 097a FB79     		ldrb	r3, [r7, #7]
 1279 097c DBB2     		uxtb	r3, r3
 1280 097e 002B     		cmp	r3, #0
 1281 0980 02D0     		beq	.L53
 581:../tasks/SDMMC/sd_diskio.c ****       {
 582:../tasks/SDMMC/sd_diskio.c ****         return(errorstatus);
 1282              		.loc 1 582 0
 1283 0982 FB79     		ldrb	r3, [r7, #7]
 1284 0984 DBB2     		uxtb	r3, r3
 1285 0986 68E0     		b	.L48
 1286              	.L53:
 583:../tasks/SDMMC/sd_diskio.c ****       }
 584:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.Argument = SD_VOLTAGE_WINDOW_SD | SDType;
 1287              		.loc 1 584 0
 1288 0988 BB68     		ldr	r3, [r7, #8]
 1289 098a 43F00042 		orr	r2, r3, #-2147483648
 1290 098e 42F48012 		orr	r2, r2, #1048576
 1291 0992 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1292 0996 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1293 099a 1A60     		str	r2, [r3]
 585:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.CmdIndex = SD_CMD_SD_APP_OP_COND;
 1294              		.loc 1 585 0
 1295 099c 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1296 09a0 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1297 09a4 2922     		movs	r2, #41
 1298 09a6 5A60     		str	r2, [r3, #4]
 586:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.Response = SDIO_RESPONSE_SHORT;
 1299              		.loc 1 586 0
 1300 09a8 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1301 09ac C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1302 09b0 4022     		movs	r2, #64
 1303 09b2 9A60     		str	r2, [r3, #8]
 587:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 1304              		.loc 1 587 0
 1305 09b4 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1306 09b8 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1307 09bc 0022     		movs	r2, #0
 1308 09be DA60     		str	r2, [r3, #12]
 588:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.CPSM = SDIO_CPSM_ENABLE;
 1309              		.loc 1 588 0
 1310 09c0 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1311 09c4 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1312 09c8 4FF48062 		mov	r2, #1024
 1313 09cc 1A61     		str	r2, [r3, #16]
 589:../tasks/SDMMC/sd_diskio.c ****       SDIO_SendCommand(SDIO, &SDIO_CmdInitStructure);
 1314              		.loc 1 589 0
 1315 09ce 4FF43050 		mov	r0, #11264
 1316 09d2 C4F20100 		movt	r0, 16385
 1317 09d6 40F20001 		movw	r1, #:lower16:SDIO_CmdInitStructure
 1318 09da C0F20001 		movt	r1, #:upper16:SDIO_CmdInitStructure
 1319 09de FFF7FEFF 		bl	SDIO_SendCommand
 590:../tasks/SDMMC/sd_diskio.c **** 
 591:../tasks/SDMMC/sd_diskio.c ****       errorstatus = CmdResp3Error();
 1320              		.loc 1 591 0
 1321 09e2 00F06BF9 		bl	CmdResp3Error
 1322 09e6 0346     		mov	r3, r0
 1323 09e8 FB71     		strb	r3, [r7, #7]
 592:../tasks/SDMMC/sd_diskio.c ****       if (errorstatus != SD_OK)
 1324              		.loc 1 592 0
 1325 09ea FB79     		ldrb	r3, [r7, #7]
 1326 09ec DBB2     		uxtb	r3, r3
 1327 09ee 002B     		cmp	r3, #0
 1328 09f0 02D0     		beq	.L54
 593:../tasks/SDMMC/sd_diskio.c ****       {
 594:../tasks/SDMMC/sd_diskio.c ****         return(errorstatus);
 1329              		.loc 1 594 0
 1330 09f2 FB79     		ldrb	r3, [r7, #7]
 1331 09f4 DBB2     		uxtb	r3, r3
 1332 09f6 30E0     		b	.L48
 1333              	.L54:
 595:../tasks/SDMMC/sd_diskio.c ****       }
 596:../tasks/SDMMC/sd_diskio.c **** 
 597:../tasks/SDMMC/sd_diskio.c ****       response = SDIO_GetResponse(SDIO_RESP1);
 1334              		.loc 1 597 0
 1335 09f8 0020     		movs	r0, #0
 1336 09fa FFF7FEFF 		bl	SDIO_GetResponse
 1337 09fe 7861     		str	r0, [r7, #20]
 598:../tasks/SDMMC/sd_diskio.c ****       validvoltage = (((response >> 31) == 1) ? 1 : 0);
 1338              		.loc 1 598 0
 1339 0a00 7B69     		ldr	r3, [r7, #20]
 1340 0a02 DB0F     		lsrs	r3, r3, #31
 1341 0a04 012B     		cmp	r3, #1
 1342 0a06 14BF     		ite	ne
 1343 0a08 0023     		movne	r3, #0
 1344 0a0a 0123     		moveq	r3, #1
 1345 0a0c DBB2     		uxtb	r3, r3
 1346 0a0e FB60     		str	r3, [r7, #12]
 599:../tasks/SDMMC/sd_diskio.c ****       count++;
 1347              		.loc 1 599 0
 1348 0a10 3B69     		ldr	r3, [r7, #16]
 1349 0a12 0133     		adds	r3, r3, #1
 1350 0a14 3B61     		str	r3, [r7, #16]
 1351              	.L52:
 567:../tasks/SDMMC/sd_diskio.c ****     {
 1352              		.loc 1 567 0 discriminator 1
 1353 0a16 FB68     		ldr	r3, [r7, #12]
 1354 0a18 002B     		cmp	r3, #0
 1355 0a1a 05D1     		bne	.L55
 567:../tasks/SDMMC/sd_diskio.c ****     {
 1356              		.loc 1 567 0 is_stmt 0 discriminator 2
 1357 0a1c 3A69     		ldr	r2, [r7, #16]
 1358 0a1e 4FF6FE73 		movw	r3, #65534
 1359 0a22 9A42     		cmp	r2, r3
 1360 0a24 7FF67BAF 		bls	.L56
 1361              	.L55:
 600:../tasks/SDMMC/sd_diskio.c ****     }
 601:../tasks/SDMMC/sd_diskio.c ****     if (count >= SD_MAX_VOLT_TRIAL)
 1362              		.loc 1 601 0 is_stmt 1
 1363 0a28 3A69     		ldr	r2, [r7, #16]
 1364 0a2a 4FF6FE73 		movw	r3, #65534
 1365 0a2e 9A42     		cmp	r2, r3
 1366 0a30 04D9     		bls	.L57
 602:../tasks/SDMMC/sd_diskio.c ****     {
 603:../tasks/SDMMC/sd_diskio.c ****       errorstatus = SD_INVALID_VOLTRANGE;
 1367              		.loc 1 603 0
 1368 0a32 1B23     		movs	r3, #27
 1369 0a34 FB71     		strb	r3, [r7, #7]
 604:../tasks/SDMMC/sd_diskio.c ****       return(errorstatus);
 1370              		.loc 1 604 0
 1371 0a36 FB79     		ldrb	r3, [r7, #7]
 1372 0a38 DBB2     		uxtb	r3, r3
 1373 0a3a 0EE0     		b	.L48
 1374              	.L57:
 605:../tasks/SDMMC/sd_diskio.c ****     }
 606:../tasks/SDMMC/sd_diskio.c **** 
 607:../tasks/SDMMC/sd_diskio.c ****     if (response &= SD_HIGH_CAPACITY)
 1375              		.loc 1 607 0
 1376 0a3c 7B69     		ldr	r3, [r7, #20]
 1377 0a3e 03F08043 		and	r3, r3, #1073741824
 1378 0a42 7B61     		str	r3, [r7, #20]
 1379 0a44 7B69     		ldr	r3, [r7, #20]
 1380 0a46 002B     		cmp	r3, #0
 1381 0a48 05D0     		beq	.L51
 608:../tasks/SDMMC/sd_diskio.c ****     {
 609:../tasks/SDMMC/sd_diskio.c ****     	IsCardType = SDIO_HIGH_CAPACITY_SD_CARD;
 1382              		.loc 1 609 0
 1383 0a4a 40F20003 		movw	r3, #:lower16:IsCardType
 1384 0a4e C0F20003 		movt	r3, #:upper16:IsCardType
 1385 0a52 0222     		movs	r2, #2
 1386 0a54 1A60     		str	r2, [r3]
 1387              	.L51:
 610:../tasks/SDMMC/sd_diskio.c ****     }
 611:../tasks/SDMMC/sd_diskio.c **** 
 612:../tasks/SDMMC/sd_diskio.c ****   }/*!< else MMC Card */
 613:../tasks/SDMMC/sd_diskio.c **** 
 614:../tasks/SDMMC/sd_diskio.c ****   return(errorstatus);
 1388              		.loc 1 614 0
 1389 0a56 FB79     		ldrb	r3, [r7, #7]
 1390 0a58 DBB2     		uxtb	r3, r3
 1391              	.L48:
 615:../tasks/SDMMC/sd_diskio.c **** }
 1392              		.loc 1 615 0
 1393 0a5a 1846     		mov	r0, r3
 1394 0a5c 1C37     		adds	r7, r7, #28
 1395 0a5e BD46     		mov	sp, r7
 1396              		@ sp needed
 1397 0a60 90BD     		pop	{r4, r7, pc}
 1398              		.cfi_endproc
 1399              	.LFE62:
 1401 0a62 00BF     		.align	2
 1402              		.thumb
 1403              		.thumb_func
 1405              	CmdError:
 1406              	.LFB63:
 616:../tasks/SDMMC/sd_diskio.c **** /**
 617:../tasks/SDMMC/sd_diskio.c ****   * @brief  Checks for error conditions for CMD0.
 618:../tasks/SDMMC/sd_diskio.c ****   * @param  None
 619:../tasks/SDMMC/sd_diskio.c ****   * @retval HAL_SD_ErrorTypedef: SD Card Error code.
 620:../tasks/SDMMC/sd_diskio.c ****   */
 621:../tasks/SDMMC/sd_diskio.c **** static HAL_SD_ErrorTypedef CmdError(void)
 622:../tasks/SDMMC/sd_diskio.c **** {
 1407              		.loc 1 622 0
 1408              		.cfi_startproc
 1409              		@ args = 0, pretend = 0, frame = 8
 1410              		@ frame_needed = 1, uses_anonymous_args = 0
 1411 0a64 80B5     		push	{r7, lr}
 1412              		.cfi_def_cfa_offset 8
 1413              		.cfi_offset 7, -8
 1414              		.cfi_offset 14, -4
 1415 0a66 82B0     		sub	sp, sp, #8
 1416              		.cfi_def_cfa_offset 16
 1417 0a68 00AF     		add	r7, sp, #0
 1418              		.cfi_def_cfa_register 7
 623:../tasks/SDMMC/sd_diskio.c ****   HAL_SD_ErrorTypedef errorstatus = SD_OK;
 1419              		.loc 1 623 0
 1420 0a6a 0023     		movs	r3, #0
 1421 0a6c FB70     		strb	r3, [r7, #3]
 624:../tasks/SDMMC/sd_diskio.c ****   uint32_t timeout;
 625:../tasks/SDMMC/sd_diskio.c **** 
 626:../tasks/SDMMC/sd_diskio.c ****   timeout = SDIO_CMD0TIMEOUT; /*!< 10000 */
 1422              		.loc 1 626 0
 1423 0a6e 4FF48033 		mov	r3, #65536
 1424 0a72 7B60     		str	r3, [r7, #4]
 627:../tasks/SDMMC/sd_diskio.c **** 
 628:../tasks/SDMMC/sd_diskio.c ****   while ((timeout > 0) && (SDIO_GetFlagStatus(SDIO_FLAG_CMDSENT) == RESET))
 1425              		.loc 1 628 0
 1426 0a74 02E0     		b	.L59
 1427              	.L61:
 629:../tasks/SDMMC/sd_diskio.c ****   {
 630:../tasks/SDMMC/sd_diskio.c ****     timeout--;
 1428              		.loc 1 630 0
 1429 0a76 7B68     		ldr	r3, [r7, #4]
 1430 0a78 013B     		subs	r3, r3, #1
 1431 0a7a 7B60     		str	r3, [r7, #4]
 1432              	.L59:
 628:../tasks/SDMMC/sd_diskio.c ****   {
 1433              		.loc 1 628 0 discriminator 1
 1434 0a7c 7B68     		ldr	r3, [r7, #4]
 1435 0a7e 002B     		cmp	r3, #0
 1436 0a80 05D0     		beq	.L60
 628:../tasks/SDMMC/sd_diskio.c ****   {
 1437              		.loc 1 628 0 is_stmt 0 discriminator 2
 1438 0a82 8020     		movs	r0, #128
 1439 0a84 FFF7FEFF 		bl	SDIO_GetFlagStatus
 1440 0a88 0346     		mov	r3, r0
 1441 0a8a 002B     		cmp	r3, #0
 1442 0a8c F3D0     		beq	.L61
 1443              	.L60:
 631:../tasks/SDMMC/sd_diskio.c ****   }
 632:../tasks/SDMMC/sd_diskio.c **** 
 633:../tasks/SDMMC/sd_diskio.c ****   if (timeout == 0)
 1444              		.loc 1 633 0 is_stmt 1
 1445 0a8e 7B68     		ldr	r3, [r7, #4]
 1446 0a90 002B     		cmp	r3, #0
 1447 0a92 03D1     		bne	.L62
 634:../tasks/SDMMC/sd_diskio.c ****   {
 635:../tasks/SDMMC/sd_diskio.c ****     errorstatus = SD_CMD_RSP_TIMEOUT;
 1448              		.loc 1 635 0
 1449 0a94 0323     		movs	r3, #3
 1450 0a96 FB70     		strb	r3, [r7, #3]
 636:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 1451              		.loc 1 636 0
 1452 0a98 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1453 0a9a 04E0     		b	.L63
 1454              	.L62:
 637:../tasks/SDMMC/sd_diskio.c ****   }
 638:../tasks/SDMMC/sd_diskio.c **** 
 639:../tasks/SDMMC/sd_diskio.c ****   /*!< Clear all the static flags */
 640:../tasks/SDMMC/sd_diskio.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
 1455              		.loc 1 640 0
 1456 0a9c 40F2FF50 		movw	r0, #1535
 1457 0aa0 FFF7FEFF 		bl	SDIO_ClearFlag
 641:../tasks/SDMMC/sd_diskio.c **** 
 642:../tasks/SDMMC/sd_diskio.c ****   return(errorstatus);
 1458              		.loc 1 642 0
 1459 0aa4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1460              	.L63:
 643:../tasks/SDMMC/sd_diskio.c **** }
 1461              		.loc 1 643 0
 1462 0aa6 1846     		mov	r0, r3
 1463 0aa8 0837     		adds	r7, r7, #8
 1464 0aaa BD46     		mov	sp, r7
 1465              		@ sp needed
 1466 0aac 80BD     		pop	{r7, pc}
 1467              		.cfi_endproc
 1468              	.LFE63:
 1470 0aae 00BF     		.align	2
 1471              		.global	SDIO_GetFlagStatus
 1472              		.thumb
 1473              		.thumb_func
 1475              	SDIO_GetFlagStatus:
 1476              	.LFB64:
 644:../tasks/SDMMC/sd_diskio.c **** 
 645:../tasks/SDMMC/sd_diskio.c **** /**
 646:../tasks/SDMMC/sd_diskio.c ****   * @brief  Checks whether the specified SDIO flag is set or not.
 647:../tasks/SDMMC/sd_diskio.c ****   * @param  SDIO_FLAG: specifies the flag to check.
 648:../tasks/SDMMC/sd_diskio.c ****   * @retval The new state of SDIO_FLAG (SET or RESET).
 649:../tasks/SDMMC/sd_diskio.c ****   */
 650:../tasks/SDMMC/sd_diskio.c **** FlagStatus SDIO_GetFlagStatus(uint32_t SDIO_FLAG)
 651:../tasks/SDMMC/sd_diskio.c **** {
 1477              		.loc 1 651 0
 1478              		.cfi_startproc
 1479              		@ args = 0, pretend = 0, frame = 16
 1480              		@ frame_needed = 1, uses_anonymous_args = 0
 1481              		@ link register save eliminated.
 1482 0ab0 80B4     		push	{r7}
 1483              		.cfi_def_cfa_offset 4
 1484              		.cfi_offset 7, -4
 1485 0ab2 85B0     		sub	sp, sp, #20
 1486              		.cfi_def_cfa_offset 24
 1487 0ab4 00AF     		add	r7, sp, #0
 1488              		.cfi_def_cfa_register 7
 1489 0ab6 7860     		str	r0, [r7, #4]
 652:../tasks/SDMMC/sd_diskio.c ****   FlagStatus bitstatus = RESET;
 1490              		.loc 1 652 0
 1491 0ab8 0023     		movs	r3, #0
 1492 0aba FB73     		strb	r3, [r7, #15]
 653:../tasks/SDMMC/sd_diskio.c **** 
 654:../tasks/SDMMC/sd_diskio.c ****   /* Check the parameters */
 655:../tasks/SDMMC/sd_diskio.c ****   assert_param(IS_SDIO_FLAG(SDIO_FLAG));
 656:../tasks/SDMMC/sd_diskio.c **** 
 657:../tasks/SDMMC/sd_diskio.c ****   if ((SDIO->STA & SDIO_FLAG) != (uint32_t)RESET)
 1493              		.loc 1 657 0
 1494 0abc 4FF43053 		mov	r3, #11264
 1495 0ac0 C4F20103 		movt	r3, 16385
 1496 0ac4 5A6B     		ldr	r2, [r3, #52]
 1497 0ac6 7B68     		ldr	r3, [r7, #4]
 1498 0ac8 1340     		ands	r3, r3, r2
 1499 0aca 002B     		cmp	r3, #0
 1500 0acc 02D0     		beq	.L65
 658:../tasks/SDMMC/sd_diskio.c ****   {
 659:../tasks/SDMMC/sd_diskio.c ****     bitstatus = SET;
 1501              		.loc 1 659 0
 1502 0ace 0123     		movs	r3, #1
 1503 0ad0 FB73     		strb	r3, [r7, #15]
 1504 0ad2 01E0     		b	.L66
 1505              	.L65:
 660:../tasks/SDMMC/sd_diskio.c ****   }
 661:../tasks/SDMMC/sd_diskio.c ****   else
 662:../tasks/SDMMC/sd_diskio.c ****   {
 663:../tasks/SDMMC/sd_diskio.c ****     bitstatus = RESET;
 1506              		.loc 1 663 0
 1507 0ad4 0023     		movs	r3, #0
 1508 0ad6 FB73     		strb	r3, [r7, #15]
 1509              	.L66:
 664:../tasks/SDMMC/sd_diskio.c ****   }
 665:../tasks/SDMMC/sd_diskio.c ****   return bitstatus;
 1510              		.loc 1 665 0
 1511 0ad8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 666:../tasks/SDMMC/sd_diskio.c **** }
 1512              		.loc 1 666 0
 1513 0ada 1846     		mov	r0, r3
 1514 0adc 1437     		adds	r7, r7, #20
 1515 0ade BD46     		mov	sp, r7
 1516              		@ sp needed
 1517 0ae0 5DF8047B 		ldr	r7, [sp], #4
 1518 0ae4 7047     		bx	lr
 1519              		.cfi_endproc
 1520              	.LFE64:
 1522 0ae6 00BF     		.align	2
 1523              		.global	SDIO_ClearFlag
 1524              		.thumb
 1525              		.thumb_func
 1527              	SDIO_ClearFlag:
 1528              	.LFB65:
 667:../tasks/SDMMC/sd_diskio.c **** /**
 668:../tasks/SDMMC/sd_diskio.c ****   * @brief  Clears the SDIO's pending flags.
 669:../tasks/SDMMC/sd_diskio.c ****   * @param  SDIO_FLAG: specifies the flag to clear.
 670:../tasks/SDMMC/sd_diskio.c ****   * @retval None
 671:../tasks/SDMMC/sd_diskio.c ****   */
 672:../tasks/SDMMC/sd_diskio.c **** void SDIO_ClearFlag(uint32_t SDIO_FLAG)
 673:../tasks/SDMMC/sd_diskio.c **** {
 1529              		.loc 1 673 0
 1530              		.cfi_startproc
 1531              		@ args = 0, pretend = 0, frame = 8
 1532              		@ frame_needed = 1, uses_anonymous_args = 0
 1533              		@ link register save eliminated.
 1534 0ae8 80B4     		push	{r7}
 1535              		.cfi_def_cfa_offset 4
 1536              		.cfi_offset 7, -4
 1537 0aea 83B0     		sub	sp, sp, #12
 1538              		.cfi_def_cfa_offset 16
 1539 0aec 00AF     		add	r7, sp, #0
 1540              		.cfi_def_cfa_register 7
 1541 0aee 7860     		str	r0, [r7, #4]
 674:../tasks/SDMMC/sd_diskio.c ****   /* Check the parameters */
 675:../tasks/SDMMC/sd_diskio.c ****   assert_param(IS_SDIO_CLEAR_FLAG(SDIO_FLAG));
 676:../tasks/SDMMC/sd_diskio.c **** 
 677:../tasks/SDMMC/sd_diskio.c ****   SDIO->ICR = SDIO_FLAG;
 1542              		.loc 1 677 0
 1543 0af0 4FF43053 		mov	r3, #11264
 1544 0af4 C4F20103 		movt	r3, 16385
 1545 0af8 7A68     		ldr	r2, [r7, #4]
 1546 0afa 9A63     		str	r2, [r3, #56]
 678:../tasks/SDMMC/sd_diskio.c **** }
 1547              		.loc 1 678 0
 1548 0afc 0C37     		adds	r7, r7, #12
 1549 0afe BD46     		mov	sp, r7
 1550              		@ sp needed
 1551 0b00 5DF8047B 		ldr	r7, [sp], #4
 1552 0b04 7047     		bx	lr
 1553              		.cfi_endproc
 1554              	.LFE65:
 1556 0b06 00BF     		.align	2
 1557              		.thumb
 1558              		.thumb_func
 1560              	CmdResp1Error:
 1561              	.LFB66:
 679:../tasks/SDMMC/sd_diskio.c **** 
 680:../tasks/SDMMC/sd_diskio.c **** /**
 681:../tasks/SDMMC/sd_diskio.c ****   * @brief  Checks for error conditions for R1 response.
 682:../tasks/SDMMC/sd_diskio.c ****   * @param  cmd: The sent command index.
 683:../tasks/SDMMC/sd_diskio.c ****   * @retval HAL_SD_ErrorTypedef: SD Card Error code.
 684:../tasks/SDMMC/sd_diskio.c ****   */
 685:../tasks/SDMMC/sd_diskio.c **** static HAL_SD_ErrorTypedef CmdResp1Error(uint8_t cmd)
 686:../tasks/SDMMC/sd_diskio.c **** {
 1562              		.loc 1 686 0
 1563              		.cfi_startproc
 1564              		@ args = 0, pretend = 0, frame = 24
 1565              		@ frame_needed = 1, uses_anonymous_args = 0
 1566 0b08 80B5     		push	{r7, lr}
 1567              		.cfi_def_cfa_offset 8
 1568              		.cfi_offset 7, -8
 1569              		.cfi_offset 14, -4
 1570 0b0a 86B0     		sub	sp, sp, #24
 1571              		.cfi_def_cfa_offset 32
 1572 0b0c 00AF     		add	r7, sp, #0
 1573              		.cfi_def_cfa_register 7
 1574 0b0e 0346     		mov	r3, r0
 1575 0b10 FB71     		strb	r3, [r7, #7]
 687:../tasks/SDMMC/sd_diskio.c ****   HAL_SD_ErrorTypedef errorstatus = SD_OK;
 1576              		.loc 1 687 0
 1577 0b12 0023     		movs	r3, #0
 1578 0b14 FB74     		strb	r3, [r7, #19]
 688:../tasks/SDMMC/sd_diskio.c ****   uint32_t status;
 689:../tasks/SDMMC/sd_diskio.c ****   uint32_t response_r1;
 690:../tasks/SDMMC/sd_diskio.c **** 
 691:../tasks/SDMMC/sd_diskio.c ****   status = SDIO->STA;
 1579              		.loc 1 691 0
 1580 0b16 4FF43053 		mov	r3, #11264
 1581 0b1a C4F20103 		movt	r3, 16385
 1582 0b1e 5B6B     		ldr	r3, [r3, #52]
 1583 0b20 7B61     		str	r3, [r7, #20]
 692:../tasks/SDMMC/sd_diskio.c **** 
 693:../tasks/SDMMC/sd_diskio.c ****   while (!(status & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)))
 1584              		.loc 1 693 0
 1585 0b22 05E0     		b	.L70
 1586              	.L71:
 694:../tasks/SDMMC/sd_diskio.c ****   {
 695:../tasks/SDMMC/sd_diskio.c ****     status = SDIO->STA;
 1587              		.loc 1 695 0
 1588 0b24 4FF43053 		mov	r3, #11264
 1589 0b28 C4F20103 		movt	r3, 16385
 1590 0b2c 5B6B     		ldr	r3, [r3, #52]
 1591 0b2e 7B61     		str	r3, [r7, #20]
 1592              	.L70:
 693:../tasks/SDMMC/sd_diskio.c ****   {
 1593              		.loc 1 693 0 discriminator 1
 1594 0b30 7B69     		ldr	r3, [r7, #20]
 1595 0b32 03F04503 		and	r3, r3, #69
 1596 0b36 002B     		cmp	r3, #0
 1597 0b38 F4D0     		beq	.L71
 696:../tasks/SDMMC/sd_diskio.c ****   }
 697:../tasks/SDMMC/sd_diskio.c **** 
 698:../tasks/SDMMC/sd_diskio.c ****   if (status & SDIO_FLAG_CTIMEOUT)
 1598              		.loc 1 698 0
 1599 0b3a 7B69     		ldr	r3, [r7, #20]
 1600 0b3c 03F00403 		and	r3, r3, #4
 1601 0b40 002B     		cmp	r3, #0
 1602 0b42 06D0     		beq	.L72
 699:../tasks/SDMMC/sd_diskio.c ****   {
 700:../tasks/SDMMC/sd_diskio.c ****     errorstatus = SD_CMD_RSP_TIMEOUT;
 1603              		.loc 1 700 0
 1604 0b44 0323     		movs	r3, #3
 1605 0b46 FB74     		strb	r3, [r7, #19]
 701:../tasks/SDMMC/sd_diskio.c ****     SDIO_ClearFlag(SDIO_FLAG_CTIMEOUT);
 1606              		.loc 1 701 0
 1607 0b48 0420     		movs	r0, #4
 1608 0b4a FFF7FEFF 		bl	SDIO_ClearFlag
 702:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 1609              		.loc 1 702 0
 1610 0b4e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1611 0b50 AFE0     		b	.L73
 1612              	.L72:
 703:../tasks/SDMMC/sd_diskio.c ****   }
 704:../tasks/SDMMC/sd_diskio.c ****   else if (status & SDIO_FLAG_CCRCFAIL)
 1613              		.loc 1 704 0
 1614 0b52 7B69     		ldr	r3, [r7, #20]
 1615 0b54 03F00103 		and	r3, r3, #1
 1616 0b58 002B     		cmp	r3, #0
 1617 0b5a 06D0     		beq	.L74
 705:../tasks/SDMMC/sd_diskio.c ****   {
 706:../tasks/SDMMC/sd_diskio.c ****     errorstatus = SD_CMD_CRC_FAIL;
 1618              		.loc 1 706 0
 1619 0b5c 0123     		movs	r3, #1
 1620 0b5e FB74     		strb	r3, [r7, #19]
 707:../tasks/SDMMC/sd_diskio.c ****     SDIO_ClearFlag(SDIO_FLAG_CCRCFAIL);
 1621              		.loc 1 707 0
 1622 0b60 0120     		movs	r0, #1
 1623 0b62 FFF7FEFF 		bl	SDIO_ClearFlag
 708:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 1624              		.loc 1 708 0
 1625 0b66 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1626 0b68 A3E0     		b	.L73
 1627              	.L74:
 709:../tasks/SDMMC/sd_diskio.c ****   }
 710:../tasks/SDMMC/sd_diskio.c **** 
 711:../tasks/SDMMC/sd_diskio.c ****   /*!< Check response received is of desired command */
 712:../tasks/SDMMC/sd_diskio.c ****   if (SDIO_GetCommandResponse(SDIO) != cmd)
 1628              		.loc 1 712 0
 1629 0b6a 4FF43050 		mov	r0, #11264
 1630 0b6e C4F20100 		movt	r0, 16385
 1631 0b72 FFF7FEFF 		bl	SDIO_GetCommandResponse
 1632 0b76 0346     		mov	r3, r0
 1633 0b78 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1634 0b7a 9A42     		cmp	r2, r3
 1635 0b7c 03D0     		beq	.L75
 713:../tasks/SDMMC/sd_diskio.c ****   {
 714:../tasks/SDMMC/sd_diskio.c ****     errorstatus = SD_ILLEGAL_CMD;
 1636              		.loc 1 714 0
 1637 0b7e 1023     		movs	r3, #16
 1638 0b80 FB74     		strb	r3, [r7, #19]
 715:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 1639              		.loc 1 715 0
 1640 0b82 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1641 0b84 95E0     		b	.L73
 1642              	.L75:
 716:../tasks/SDMMC/sd_diskio.c ****   }
 717:../tasks/SDMMC/sd_diskio.c **** 
 718:../tasks/SDMMC/sd_diskio.c ****   /*!< Clear all the static flags */
 719:../tasks/SDMMC/sd_diskio.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
 1643              		.loc 1 719 0
 1644 0b86 40F2FF50 		movw	r0, #1535
 1645 0b8a FFF7FEFF 		bl	SDIO_ClearFlag
 720:../tasks/SDMMC/sd_diskio.c **** 
 721:../tasks/SDMMC/sd_diskio.c ****   /*!< We have received response, retrieve it for analysis  */
 722:../tasks/SDMMC/sd_diskio.c ****   response_r1 = SDIO_GetResponse(SDIO_RESP1);
 1646              		.loc 1 722 0
 1647 0b8e 0020     		movs	r0, #0
 1648 0b90 FFF7FEFF 		bl	SDIO_GetResponse
 1649 0b94 F860     		str	r0, [r7, #12]
 723:../tasks/SDMMC/sd_diskio.c **** 
 724:../tasks/SDMMC/sd_diskio.c ****   if ((response_r1 & SD_OCR_ERRORBITS) == SD_ALLZERO)
 1650              		.loc 1 724 0
 1651 0b96 FA68     		ldr	r2, [r7, #12]
 1652 0b98 4EF20803 		movw	r3, #57352
 1653 0b9c CFF6FF53 		movt	r3, 65023
 1654 0ba0 1340     		ands	r3, r3, r2
 1655 0ba2 002B     		cmp	r3, #0
 1656 0ba4 01D1     		bne	.L76
 725:../tasks/SDMMC/sd_diskio.c ****   {
 726:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 1657              		.loc 1 726 0
 1658 0ba6 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1659 0ba8 83E0     		b	.L73
 1660              	.L76:
 727:../tasks/SDMMC/sd_diskio.c ****   }
 728:../tasks/SDMMC/sd_diskio.c **** 
 729:../tasks/SDMMC/sd_diskio.c ****   if (response_r1 & SD_OCR_ADDR_OUT_OF_RANGE)
 1661              		.loc 1 729 0
 1662 0baa FB68     		ldr	r3, [r7, #12]
 1663 0bac 002B     		cmp	r3, #0
 1664 0bae 01DA     		bge	.L77
 730:../tasks/SDMMC/sd_diskio.c ****   {
 731:../tasks/SDMMC/sd_diskio.c ****     return(SD_ADDR_OUT_OF_RANGE);
 1665              		.loc 1 731 0
 1666 0bb0 1C23     		movs	r3, #28
 1667 0bb2 7EE0     		b	.L73
 1668              	.L77:
 732:../tasks/SDMMC/sd_diskio.c ****   }
 733:../tasks/SDMMC/sd_diskio.c **** 
 734:../tasks/SDMMC/sd_diskio.c ****   if (response_r1 & SD_OCR_ADDR_MISALIGNED)
 1669              		.loc 1 734 0
 1670 0bb4 FB68     		ldr	r3, [r7, #12]
 1671 0bb6 03F08043 		and	r3, r3, #1073741824
 1672 0bba 002B     		cmp	r3, #0
 1673 0bbc 01D0     		beq	.L78
 735:../tasks/SDMMC/sd_diskio.c ****   {
 736:../tasks/SDMMC/sd_diskio.c ****     return(SD_ADDR_MISALIGNED);
 1674              		.loc 1 736 0
 1675 0bbe 0923     		movs	r3, #9
 1676 0bc0 77E0     		b	.L73
 1677              	.L78:
 737:../tasks/SDMMC/sd_diskio.c ****   }
 738:../tasks/SDMMC/sd_diskio.c **** 
 739:../tasks/SDMMC/sd_diskio.c ****   if (response_r1 & SD_OCR_BLOCK_LEN_ERR)
 1678              		.loc 1 739 0
 1679 0bc2 FB68     		ldr	r3, [r7, #12]
 1680 0bc4 03F00053 		and	r3, r3, #536870912
 1681 0bc8 002B     		cmp	r3, #0
 1682 0bca 01D0     		beq	.L79
 740:../tasks/SDMMC/sd_diskio.c ****   {
 741:../tasks/SDMMC/sd_diskio.c ****     return(SD_BLOCK_LEN_ERR);
 1683              		.loc 1 741 0
 1684 0bcc 0A23     		movs	r3, #10
 1685 0bce 70E0     		b	.L73
 1686              	.L79:
 742:../tasks/SDMMC/sd_diskio.c ****   }
 743:../tasks/SDMMC/sd_diskio.c **** 
 744:../tasks/SDMMC/sd_diskio.c ****   if (response_r1 & SD_OCR_ERASE_SEQ_ERR)
 1687              		.loc 1 744 0
 1688 0bd0 FB68     		ldr	r3, [r7, #12]
 1689 0bd2 03F08053 		and	r3, r3, #268435456
 1690 0bd6 002B     		cmp	r3, #0
 1691 0bd8 01D0     		beq	.L80
 745:../tasks/SDMMC/sd_diskio.c ****   {
 746:../tasks/SDMMC/sd_diskio.c ****     return(SD_ERASE_SEQ_ERR);
 1692              		.loc 1 746 0
 1693 0bda 0B23     		movs	r3, #11
 1694 0bdc 69E0     		b	.L73
 1695              	.L80:
 747:../tasks/SDMMC/sd_diskio.c ****   }
 748:../tasks/SDMMC/sd_diskio.c **** 
 749:../tasks/SDMMC/sd_diskio.c ****   if (response_r1 & SD_OCR_BAD_ERASE_PARAM)
 1696              		.loc 1 749 0
 1697 0bde FB68     		ldr	r3, [r7, #12]
 1698 0be0 03F00063 		and	r3, r3, #134217728
 1699 0be4 002B     		cmp	r3, #0
 1700 0be6 01D0     		beq	.L81
 750:../tasks/SDMMC/sd_diskio.c ****   {
 751:../tasks/SDMMC/sd_diskio.c ****     return(SD_BAD_ERASE_PARAM);
 1701              		.loc 1 751 0
 1702 0be8 0C23     		movs	r3, #12
 1703 0bea 62E0     		b	.L73
 1704              	.L81:
 752:../tasks/SDMMC/sd_diskio.c ****   }
 753:../tasks/SDMMC/sd_diskio.c **** 
 754:../tasks/SDMMC/sd_diskio.c ****   if (response_r1 & SD_OCR_WRITE_PROT_VIOLATION)
 1705              		.loc 1 754 0
 1706 0bec FB68     		ldr	r3, [r7, #12]
 1707 0bee 03F08063 		and	r3, r3, #67108864
 1708 0bf2 002B     		cmp	r3, #0
 1709 0bf4 01D0     		beq	.L82
 755:../tasks/SDMMC/sd_diskio.c ****   {
 756:../tasks/SDMMC/sd_diskio.c ****     return(SD_WRITE_PROT_VIOLATION);
 1710              		.loc 1 756 0
 1711 0bf6 0D23     		movs	r3, #13
 1712 0bf8 5BE0     		b	.L73
 1713              	.L82:
 757:../tasks/SDMMC/sd_diskio.c ****   }
 758:../tasks/SDMMC/sd_diskio.c **** 
 759:../tasks/SDMMC/sd_diskio.c ****   if (response_r1 & SD_OCR_LOCK_UNLOCK_FAILED)
 1714              		.loc 1 759 0
 1715 0bfa FB68     		ldr	r3, [r7, #12]
 1716 0bfc 03F08073 		and	r3, r3, #16777216
 1717 0c00 002B     		cmp	r3, #0
 1718 0c02 01D0     		beq	.L83
 760:../tasks/SDMMC/sd_diskio.c ****   {
 761:../tasks/SDMMC/sd_diskio.c ****     return(SD_LOCK_UNLOCK_FAILED);
 1719              		.loc 1 761 0
 1720 0c04 0E23     		movs	r3, #14
 1721 0c06 54E0     		b	.L73
 1722              	.L83:
 762:../tasks/SDMMC/sd_diskio.c ****   }
 763:../tasks/SDMMC/sd_diskio.c **** 
 764:../tasks/SDMMC/sd_diskio.c ****   if (response_r1 & SD_OCR_COM_CRC_FAILED)
 1723              		.loc 1 764 0
 1724 0c08 FB68     		ldr	r3, [r7, #12]
 1725 0c0a 03F40003 		and	r3, r3, #8388608
 1726 0c0e 002B     		cmp	r3, #0
 1727 0c10 01D0     		beq	.L84
 765:../tasks/SDMMC/sd_diskio.c ****   {
 766:../tasks/SDMMC/sd_diskio.c ****     return(SD_COM_CRC_FAILED);
 1728              		.loc 1 766 0
 1729 0c12 0F23     		movs	r3, #15
 1730 0c14 4DE0     		b	.L73
 1731              	.L84:
 767:../tasks/SDMMC/sd_diskio.c ****   }
 768:../tasks/SDMMC/sd_diskio.c **** 
 769:../tasks/SDMMC/sd_diskio.c ****   if (response_r1 & SD_OCR_ILLEGAL_CMD)
 1732              		.loc 1 769 0
 1733 0c16 FB68     		ldr	r3, [r7, #12]
 1734 0c18 03F48003 		and	r3, r3, #4194304
 1735 0c1c 002B     		cmp	r3, #0
 1736 0c1e 01D0     		beq	.L85
 770:../tasks/SDMMC/sd_diskio.c ****   {
 771:../tasks/SDMMC/sd_diskio.c ****     return(SD_ILLEGAL_CMD);
 1737              		.loc 1 771 0
 1738 0c20 1023     		movs	r3, #16
 1739 0c22 46E0     		b	.L73
 1740              	.L85:
 772:../tasks/SDMMC/sd_diskio.c ****   }
 773:../tasks/SDMMC/sd_diskio.c **** 
 774:../tasks/SDMMC/sd_diskio.c ****   if (response_r1 & SD_OCR_CARD_ECC_FAILED)
 1741              		.loc 1 774 0
 1742 0c24 FB68     		ldr	r3, [r7, #12]
 1743 0c26 03F40013 		and	r3, r3, #2097152
 1744 0c2a 002B     		cmp	r3, #0
 1745 0c2c 01D0     		beq	.L86
 775:../tasks/SDMMC/sd_diskio.c ****   {
 776:../tasks/SDMMC/sd_diskio.c ****     return(SD_CARD_ECC_FAILED);
 1746              		.loc 1 776 0
 1747 0c2e 1123     		movs	r3, #17
 1748 0c30 3FE0     		b	.L73
 1749              	.L86:
 777:../tasks/SDMMC/sd_diskio.c ****   }
 778:../tasks/SDMMC/sd_diskio.c **** 
 779:../tasks/SDMMC/sd_diskio.c ****   if (response_r1 & SD_OCR_CC_ERROR)
 1750              		.loc 1 779 0
 1751 0c32 FB68     		ldr	r3, [r7, #12]
 1752 0c34 03F48013 		and	r3, r3, #1048576
 1753 0c38 002B     		cmp	r3, #0
 1754 0c3a 01D0     		beq	.L87
 780:../tasks/SDMMC/sd_diskio.c ****   {
 781:../tasks/SDMMC/sd_diskio.c ****     return(SD_CC_ERROR);
 1755              		.loc 1 781 0
 1756 0c3c 1223     		movs	r3, #18
 1757 0c3e 38E0     		b	.L73
 1758              	.L87:
 782:../tasks/SDMMC/sd_diskio.c ****   }
 783:../tasks/SDMMC/sd_diskio.c **** 
 784:../tasks/SDMMC/sd_diskio.c ****   if (response_r1 & SD_OCR_GENERAL_UNKNOWN_ERROR)
 1759              		.loc 1 784 0
 1760 0c40 FB68     		ldr	r3, [r7, #12]
 1761 0c42 03F40023 		and	r3, r3, #524288
 1762 0c46 002B     		cmp	r3, #0
 1763 0c48 01D0     		beq	.L88
 785:../tasks/SDMMC/sd_diskio.c ****   {
 786:../tasks/SDMMC/sd_diskio.c ****     return(SD_GENERAL_UNKNOWN_ERROR);
 1764              		.loc 1 786 0
 1765 0c4a 1323     		movs	r3, #19
 1766 0c4c 31E0     		b	.L73
 1767              	.L88:
 787:../tasks/SDMMC/sd_diskio.c ****   }
 788:../tasks/SDMMC/sd_diskio.c **** 
 789:../tasks/SDMMC/sd_diskio.c ****   if (response_r1 & SD_OCR_STREAM_READ_UNDERRUN)
 1768              		.loc 1 789 0
 1769 0c4e FB68     		ldr	r3, [r7, #12]
 1770 0c50 03F48023 		and	r3, r3, #262144
 1771 0c54 002B     		cmp	r3, #0
 1772 0c56 01D0     		beq	.L89
 790:../tasks/SDMMC/sd_diskio.c ****   {
 791:../tasks/SDMMC/sd_diskio.c ****     return(SD_STREAM_READ_UNDERRUN);
 1773              		.loc 1 791 0
 1774 0c58 1423     		movs	r3, #20
 1775 0c5a 2AE0     		b	.L73
 1776              	.L89:
 792:../tasks/SDMMC/sd_diskio.c ****   }
 793:../tasks/SDMMC/sd_diskio.c **** 
 794:../tasks/SDMMC/sd_diskio.c ****   if (response_r1 & SD_OCR_STREAM_WRITE_OVERRUN)
 1777              		.loc 1 794 0
 1778 0c5c FB68     		ldr	r3, [r7, #12]
 1779 0c5e 03F40033 		and	r3, r3, #131072
 1780 0c62 002B     		cmp	r3, #0
 1781 0c64 01D0     		beq	.L90
 795:../tasks/SDMMC/sd_diskio.c ****   {
 796:../tasks/SDMMC/sd_diskio.c ****     return(SD_STREAM_WRITE_OVERRUN);
 1782              		.loc 1 796 0
 1783 0c66 1523     		movs	r3, #21
 1784 0c68 23E0     		b	.L73
 1785              	.L90:
 797:../tasks/SDMMC/sd_diskio.c ****   }
 798:../tasks/SDMMC/sd_diskio.c **** 
 799:../tasks/SDMMC/sd_diskio.c ****   if (response_r1 & SD_OCR_CID_CSD_OVERWRIETE)
 1786              		.loc 1 799 0
 1787 0c6a FB68     		ldr	r3, [r7, #12]
 1788 0c6c 03F48033 		and	r3, r3, #65536
 1789 0c70 002B     		cmp	r3, #0
 1790 0c72 01D0     		beq	.L91
 800:../tasks/SDMMC/sd_diskio.c ****   {
 801:../tasks/SDMMC/sd_diskio.c ****     return(SD_CID_CSD_OVERWRITE);
 1791              		.loc 1 801 0
 1792 0c74 1623     		movs	r3, #22
 1793 0c76 1CE0     		b	.L73
 1794              	.L91:
 802:../tasks/SDMMC/sd_diskio.c ****   }
 803:../tasks/SDMMC/sd_diskio.c **** 
 804:../tasks/SDMMC/sd_diskio.c ****   if (response_r1 & SD_OCR_WP_ERASE_SKIP)
 1795              		.loc 1 804 0
 1796 0c78 FB68     		ldr	r3, [r7, #12]
 1797 0c7a 03F40043 		and	r3, r3, #32768
 1798 0c7e 002B     		cmp	r3, #0
 1799 0c80 01D0     		beq	.L92
 805:../tasks/SDMMC/sd_diskio.c ****   {
 806:../tasks/SDMMC/sd_diskio.c ****     return(SD_WP_ERASE_SKIP);
 1800              		.loc 1 806 0
 1801 0c82 1723     		movs	r3, #23
 1802 0c84 15E0     		b	.L73
 1803              	.L92:
 807:../tasks/SDMMC/sd_diskio.c ****   }
 808:../tasks/SDMMC/sd_diskio.c **** 
 809:../tasks/SDMMC/sd_diskio.c ****   if (response_r1 & SD_OCR_CARD_ECC_DISABLED)
 1804              		.loc 1 809 0
 1805 0c86 FB68     		ldr	r3, [r7, #12]
 1806 0c88 03F48043 		and	r3, r3, #16384
 1807 0c8c 002B     		cmp	r3, #0
 1808 0c8e 01D0     		beq	.L93
 810:../tasks/SDMMC/sd_diskio.c ****   {
 811:../tasks/SDMMC/sd_diskio.c ****     return(SD_CARD_ECC_DISABLED);
 1809              		.loc 1 811 0
 1810 0c90 1823     		movs	r3, #24
 1811 0c92 0EE0     		b	.L73
 1812              	.L93:
 812:../tasks/SDMMC/sd_diskio.c ****   }
 813:../tasks/SDMMC/sd_diskio.c **** 
 814:../tasks/SDMMC/sd_diskio.c ****   if (response_r1 & SD_OCR_ERASE_RESET)
 1813              		.loc 1 814 0
 1814 0c94 FB68     		ldr	r3, [r7, #12]
 1815 0c96 03F40053 		and	r3, r3, #8192
 1816 0c9a 002B     		cmp	r3, #0
 1817 0c9c 01D0     		beq	.L94
 815:../tasks/SDMMC/sd_diskio.c ****   {
 816:../tasks/SDMMC/sd_diskio.c ****     return(SD_ERASE_RESET);
 1818              		.loc 1 816 0
 1819 0c9e 1923     		movs	r3, #25
 1820 0ca0 07E0     		b	.L73
 1821              	.L94:
 817:../tasks/SDMMC/sd_diskio.c ****   }
 818:../tasks/SDMMC/sd_diskio.c **** 
 819:../tasks/SDMMC/sd_diskio.c ****   if (response_r1 & SD_OCR_AKE_SEQ_ERROR)
 1822              		.loc 1 819 0
 1823 0ca2 FB68     		ldr	r3, [r7, #12]
 1824 0ca4 03F00803 		and	r3, r3, #8
 1825 0ca8 002B     		cmp	r3, #0
 1826 0caa 01D0     		beq	.L95
 820:../tasks/SDMMC/sd_diskio.c ****   {
 821:../tasks/SDMMC/sd_diskio.c ****     return(SD_AKE_SEQ_ERROR);
 1827              		.loc 1 821 0
 1828 0cac 1A23     		movs	r3, #26
 1829 0cae 00E0     		b	.L73
 1830              	.L95:
 822:../tasks/SDMMC/sd_diskio.c ****   }
 823:../tasks/SDMMC/sd_diskio.c ****   return(errorstatus);
 1831              		.loc 1 823 0
 1832 0cb0 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1833              	.L73:
 824:../tasks/SDMMC/sd_diskio.c **** }
 1834              		.loc 1 824 0
 1835 0cb2 1846     		mov	r0, r3
 1836 0cb4 1837     		adds	r7, r7, #24
 1837 0cb6 BD46     		mov	sp, r7
 1838              		@ sp needed
 1839 0cb8 80BD     		pop	{r7, pc}
 1840              		.cfi_endproc
 1841              	.LFE66:
 1843 0cba 00BF     		.align	2
 1844              		.thumb
 1845              		.thumb_func
 1847              	CmdResp3Error:
 1848              	.LFB67:
 825:../tasks/SDMMC/sd_diskio.c **** /**
 826:../tasks/SDMMC/sd_diskio.c ****   * @brief  Checks for error conditions for R3 (OCR) response.
 827:../tasks/SDMMC/sd_diskio.c ****   * @param  None
 828:../tasks/SDMMC/sd_diskio.c ****   * @retval HAL_SD_ErrorTypedef: SD Card Error code.
 829:../tasks/SDMMC/sd_diskio.c ****   */
 830:../tasks/SDMMC/sd_diskio.c **** static HAL_SD_ErrorTypedef CmdResp3Error(void)
 831:../tasks/SDMMC/sd_diskio.c **** {
 1849              		.loc 1 831 0
 1850              		.cfi_startproc
 1851              		@ args = 0, pretend = 0, frame = 8
 1852              		@ frame_needed = 1, uses_anonymous_args = 0
 1853 0cbc 80B5     		push	{r7, lr}
 1854              		.cfi_def_cfa_offset 8
 1855              		.cfi_offset 7, -8
 1856              		.cfi_offset 14, -4
 1857 0cbe 82B0     		sub	sp, sp, #8
 1858              		.cfi_def_cfa_offset 16
 1859 0cc0 00AF     		add	r7, sp, #0
 1860              		.cfi_def_cfa_register 7
 832:../tasks/SDMMC/sd_diskio.c ****   HAL_SD_ErrorTypedef errorstatus = SD_OK;
 1861              		.loc 1 832 0
 1862 0cc2 0023     		movs	r3, #0
 1863 0cc4 FB70     		strb	r3, [r7, #3]
 833:../tasks/SDMMC/sd_diskio.c ****   uint32_t status;
 834:../tasks/SDMMC/sd_diskio.c **** 
 835:../tasks/SDMMC/sd_diskio.c ****   status = SDIO->STA;
 1864              		.loc 1 835 0
 1865 0cc6 4FF43053 		mov	r3, #11264
 1866 0cca C4F20103 		movt	r3, 16385
 1867 0cce 5B6B     		ldr	r3, [r3, #52]
 1868 0cd0 7B60     		str	r3, [r7, #4]
 836:../tasks/SDMMC/sd_diskio.c **** 
 837:../tasks/SDMMC/sd_diskio.c ****   while (!(status & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)))
 1869              		.loc 1 837 0
 1870 0cd2 05E0     		b	.L97
 1871              	.L98:
 838:../tasks/SDMMC/sd_diskio.c ****   {
 839:../tasks/SDMMC/sd_diskio.c ****     status = SDIO->STA;
 1872              		.loc 1 839 0
 1873 0cd4 4FF43053 		mov	r3, #11264
 1874 0cd8 C4F20103 		movt	r3, 16385
 1875 0cdc 5B6B     		ldr	r3, [r3, #52]
 1876 0cde 7B60     		str	r3, [r7, #4]
 1877              	.L97:
 837:../tasks/SDMMC/sd_diskio.c ****   {
 1878              		.loc 1 837 0 discriminator 1
 1879 0ce0 7B68     		ldr	r3, [r7, #4]
 1880 0ce2 03F04503 		and	r3, r3, #69
 1881 0ce6 002B     		cmp	r3, #0
 1882 0ce8 F4D0     		beq	.L98
 840:../tasks/SDMMC/sd_diskio.c ****   }
 841:../tasks/SDMMC/sd_diskio.c **** 
 842:../tasks/SDMMC/sd_diskio.c ****   if (status & SDIO_FLAG_CTIMEOUT)
 1883              		.loc 1 842 0
 1884 0cea 7B68     		ldr	r3, [r7, #4]
 1885 0cec 03F00403 		and	r3, r3, #4
 1886 0cf0 002B     		cmp	r3, #0
 1887 0cf2 06D0     		beq	.L99
 843:../tasks/SDMMC/sd_diskio.c ****   {
 844:../tasks/SDMMC/sd_diskio.c ****     errorstatus = SD_CMD_RSP_TIMEOUT;
 1888              		.loc 1 844 0
 1889 0cf4 0323     		movs	r3, #3
 1890 0cf6 FB70     		strb	r3, [r7, #3]
 845:../tasks/SDMMC/sd_diskio.c ****     SDIO_ClearFlag(SDIO_FLAG_CTIMEOUT);
 1891              		.loc 1 845 0
 1892 0cf8 0420     		movs	r0, #4
 1893 0cfa FFF7FEFF 		bl	SDIO_ClearFlag
 846:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 1894              		.loc 1 846 0
 1895 0cfe FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1896 0d00 04E0     		b	.L100
 1897              	.L99:
 847:../tasks/SDMMC/sd_diskio.c ****   }
 848:../tasks/SDMMC/sd_diskio.c ****   /*!< Clear all the static flags */
 849:../tasks/SDMMC/sd_diskio.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
 1898              		.loc 1 849 0
 1899 0d02 40F2FF50 		movw	r0, #1535
 1900 0d06 FFF7FEFF 		bl	SDIO_ClearFlag
 850:../tasks/SDMMC/sd_diskio.c ****   return(errorstatus);
 1901              		.loc 1 850 0
 1902 0d0a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1903              	.L100:
 851:../tasks/SDMMC/sd_diskio.c **** }
 1904              		.loc 1 851 0
 1905 0d0c 1846     		mov	r0, r3
 1906 0d0e 0837     		adds	r7, r7, #8
 1907 0d10 BD46     		mov	sp, r7
 1908              		@ sp needed
 1909 0d12 80BD     		pop	{r7, pc}
 1910              		.cfi_endproc
 1911              	.LFE67:
 1913              		.align	2
 1914              		.global	SD_InitializeCards
 1915              		.thumb
 1916              		.thumb_func
 1918              	SD_InitializeCards:
 1919              	.LFB68:
 852:../tasks/SDMMC/sd_diskio.c **** /**
 853:../tasks/SDMMC/sd_diskio.c ****   * @brief  Intialises all cards or single card as the case may be Card(s) come
 854:../tasks/SDMMC/sd_diskio.c ****   *         into standby state.
 855:../tasks/SDMMC/sd_diskio.c ****   * @param  None
 856:../tasks/SDMMC/sd_diskio.c ****   * @retval HAL_SD_ErrorTypedef: SD Card Error code.
 857:../tasks/SDMMC/sd_diskio.c ****   */
 858:../tasks/SDMMC/sd_diskio.c **** HAL_SD_ErrorTypedef SD_InitializeCards(void)
 859:../tasks/SDMMC/sd_diskio.c **** {
 1920              		.loc 1 859 0
 1921              		.cfi_startproc
 1922              		@ args = 0, pretend = 0, frame = 8
 1923              		@ frame_needed = 1, uses_anonymous_args = 0
 1924 0d14 80B5     		push	{r7, lr}
 1925              		.cfi_def_cfa_offset 8
 1926              		.cfi_offset 7, -8
 1927              		.cfi_offset 14, -4
 1928 0d16 82B0     		sub	sp, sp, #8
 1929              		.cfi_def_cfa_offset 16
 1930 0d18 00AF     		add	r7, sp, #0
 1931              		.cfi_def_cfa_register 7
 860:../tasks/SDMMC/sd_diskio.c **** 	HAL_SD_ErrorTypedef errorstatus = SD_OK;
 1932              		.loc 1 860 0
 1933 0d1a 0023     		movs	r3, #0
 1934 0d1c FB71     		strb	r3, [r7, #7]
 861:../tasks/SDMMC/sd_diskio.c ****   uint16_t rca = 0x01;
 1935              		.loc 1 861 0
 1936 0d1e 0123     		movs	r3, #1
 1937 0d20 BB80     		strh	r3, [r7, #4]	@ movhi
 862:../tasks/SDMMC/sd_diskio.c **** 
 863:../tasks/SDMMC/sd_diskio.c ****   if (!SDIO_GetPowerState(SDIO) )
 1938              		.loc 1 863 0
 1939 0d22 4FF43050 		mov	r0, #11264
 1940 0d26 C4F20100 		movt	r0, 16385
 1941 0d2a FFF7FEFF 		bl	SDIO_GetPowerState
 1942 0d2e 0346     		mov	r3, r0
 1943 0d30 002B     		cmp	r3, #0
 1944 0d32 03D1     		bne	.L102
 864:../tasks/SDMMC/sd_diskio.c ****   {
 865:../tasks/SDMMC/sd_diskio.c ****     errorstatus = SD_REQUEST_NOT_APPLICABLE;
 1945              		.loc 1 865 0
 1946 0d34 2523     		movs	r3, #37
 1947 0d36 FB71     		strb	r3, [r7, #7]
 866:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 1948              		.loc 1 866 0
 1949 0d38 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1950 0d3a 16E1     		b	.L110
 1951              	.L102:
 867:../tasks/SDMMC/sd_diskio.c ****   }
 868:../tasks/SDMMC/sd_diskio.c **** 
 869:../tasks/SDMMC/sd_diskio.c ****   if (SDIO_SECURE_DIGITAL_IO_CARD != IsCardType)
 1952              		.loc 1 869 0
 1953 0d3c 40F20003 		movw	r3, #:lower16:IsCardType
 1954 0d40 C0F20003 		movt	r3, #:upper16:IsCardType
 1955 0d44 1B68     		ldr	r3, [r3]
 1956 0d46 042B     		cmp	r3, #4
 1957 0d48 55D0     		beq	.L104
 870:../tasks/SDMMC/sd_diskio.c ****   {
 871:../tasks/SDMMC/sd_diskio.c ****     /*!< Send CMD2 ALL_SEND_CID */
 872:../tasks/SDMMC/sd_diskio.c ****     SDIO_CmdInitStructure.Argument = 0x0;
 1958              		.loc 1 872 0
 1959 0d4a 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1960 0d4e C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1961 0d52 0022     		movs	r2, #0
 1962 0d54 1A60     		str	r2, [r3]
 873:../tasks/SDMMC/sd_diskio.c ****     SDIO_CmdInitStructure.CmdIndex = SD_CMD_ALL_SEND_CID;
 1963              		.loc 1 873 0
 1964 0d56 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1965 0d5a C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1966 0d5e 0222     		movs	r2, #2
 1967 0d60 5A60     		str	r2, [r3, #4]
 874:../tasks/SDMMC/sd_diskio.c ****     SDIO_CmdInitStructure.Response = SDIO_RESPONSE_LONG;
 1968              		.loc 1 874 0
 1969 0d62 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1970 0d66 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1971 0d6a C022     		movs	r2, #192
 1972 0d6c 9A60     		str	r2, [r3, #8]
 875:../tasks/SDMMC/sd_diskio.c ****     SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 1973              		.loc 1 875 0
 1974 0d6e 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1975 0d72 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1976 0d76 0022     		movs	r2, #0
 1977 0d78 DA60     		str	r2, [r3, #12]
 876:../tasks/SDMMC/sd_diskio.c ****     SDIO_CmdInitStructure.CPSM = SDIO_CPSM_ENABLE;
 1978              		.loc 1 876 0
 1979 0d7a 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 1980 0d7e C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 1981 0d82 4FF48062 		mov	r2, #1024
 1982 0d86 1A61     		str	r2, [r3, #16]
 877:../tasks/SDMMC/sd_diskio.c ****     SDIO_SendCommand(SDIO, &SDIO_CmdInitStructure);
 1983              		.loc 1 877 0
 1984 0d88 4FF43050 		mov	r0, #11264
 1985 0d8c C4F20100 		movt	r0, 16385
 1986 0d90 40F20001 		movw	r1, #:lower16:SDIO_CmdInitStructure
 1987 0d94 C0F20001 		movt	r1, #:upper16:SDIO_CmdInitStructure
 1988 0d98 FFF7FEFF 		bl	SDIO_SendCommand
 878:../tasks/SDMMC/sd_diskio.c **** 
 879:../tasks/SDMMC/sd_diskio.c ****     errorstatus = CmdResp2Error();
 1989              		.loc 1 879 0
 1990 0d9c 00F0C8FD 		bl	CmdResp2Error
 1991 0da0 0346     		mov	r3, r0
 1992 0da2 FB71     		strb	r3, [r7, #7]
 880:../tasks/SDMMC/sd_diskio.c **** 
 881:../tasks/SDMMC/sd_diskio.c ****     if (SD_OK != errorstatus)
 1993              		.loc 1 881 0
 1994 0da4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1995 0da6 002B     		cmp	r3, #0
 1996 0da8 01D0     		beq	.L105
 882:../tasks/SDMMC/sd_diskio.c ****     {
 883:../tasks/SDMMC/sd_diskio.c ****       return(errorstatus);
 1997              		.loc 1 883 0
 1998 0daa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1999 0dac DDE0     		b	.L110
 2000              	.L105:
 884:../tasks/SDMMC/sd_diskio.c ****     }
 885:../tasks/SDMMC/sd_diskio.c **** 
 886:../tasks/SDMMC/sd_diskio.c ****     CID_Tab[0] = SDIO_GetResponse(SDIO_RESP1);
 2001              		.loc 1 886 0
 2002 0dae 0020     		movs	r0, #0
 2003 0db0 FFF7FEFF 		bl	SDIO_GetResponse
 2004 0db4 0246     		mov	r2, r0
 2005 0db6 40F20003 		movw	r3, #:lower16:CID_Tab
 2006 0dba C0F20003 		movt	r3, #:upper16:CID_Tab
 2007 0dbe 1A60     		str	r2, [r3]
 887:../tasks/SDMMC/sd_diskio.c ****     CID_Tab[1] = SDIO_GetResponse(SDIO_RESP2);
 2008              		.loc 1 887 0
 2009 0dc0 0420     		movs	r0, #4
 2010 0dc2 FFF7FEFF 		bl	SDIO_GetResponse
 2011 0dc6 0246     		mov	r2, r0
 2012 0dc8 40F20003 		movw	r3, #:lower16:CID_Tab
 2013 0dcc C0F20003 		movt	r3, #:upper16:CID_Tab
 2014 0dd0 5A60     		str	r2, [r3, #4]
 888:../tasks/SDMMC/sd_diskio.c ****     CID_Tab[2] = SDIO_GetResponse(SDIO_RESP3);
 2015              		.loc 1 888 0
 2016 0dd2 0820     		movs	r0, #8
 2017 0dd4 FFF7FEFF 		bl	SDIO_GetResponse
 2018 0dd8 0246     		mov	r2, r0
 2019 0dda 40F20003 		movw	r3, #:lower16:CID_Tab
 2020 0dde C0F20003 		movt	r3, #:upper16:CID_Tab
 2021 0de2 9A60     		str	r2, [r3, #8]
 889:../tasks/SDMMC/sd_diskio.c ****     CID_Tab[3] = SDIO_GetResponse(SDIO_RESP4);
 2022              		.loc 1 889 0
 2023 0de4 0C20     		movs	r0, #12
 2024 0de6 FFF7FEFF 		bl	SDIO_GetResponse
 2025 0dea 0246     		mov	r2, r0
 2026 0dec 40F20003 		movw	r3, #:lower16:CID_Tab
 2027 0df0 C0F20003 		movt	r3, #:upper16:CID_Tab
 2028 0df4 DA60     		str	r2, [r3, #12]
 2029              	.L104:
 890:../tasks/SDMMC/sd_diskio.c ****   }
 891:../tasks/SDMMC/sd_diskio.c ****   if ((SDIO_STD_CAPACITY_SD_CARD_V1_1 == IsCardType) ||  (SDIO_STD_CAPACITY_SD_CARD_V2_0 == IsCardT
 2030              		.loc 1 891 0
 2031 0df6 40F20003 		movw	r3, #:lower16:IsCardType
 2032 0dfa C0F20003 		movt	r3, #:upper16:IsCardType
 2033 0dfe 1B68     		ldr	r3, [r3]
 2034 0e00 002B     		cmp	r3, #0
 2035 0e02 14D0     		beq	.L106
 2036              		.loc 1 891 0 is_stmt 0 discriminator 1
 2037 0e04 40F20003 		movw	r3, #:lower16:IsCardType
 2038 0e08 C0F20003 		movt	r3, #:upper16:IsCardType
 2039 0e0c 1B68     		ldr	r3, [r3]
 2040 0e0e 012B     		cmp	r3, #1
 2041 0e10 0DD0     		beq	.L106
 2042 0e12 40F20003 		movw	r3, #:lower16:IsCardType
 2043 0e16 C0F20003 		movt	r3, #:upper16:IsCardType
 2044 0e1a 1B68     		ldr	r3, [r3]
 2045 0e1c 062B     		cmp	r3, #6
 2046 0e1e 06D0     		beq	.L106
 892:../tasks/SDMMC/sd_diskio.c ****       ||  (SDIO_HIGH_CAPACITY_SD_CARD == IsCardType))
 2047              		.loc 1 892 0 is_stmt 1
 2048 0e20 40F20003 		movw	r3, #:lower16:IsCardType
 2049 0e24 C0F20003 		movt	r3, #:upper16:IsCardType
 2050 0e28 1B68     		ldr	r3, [r3]
 2051 0e2a 022B     		cmp	r3, #2
 2052 0e2c 34D1     		bne	.L107
 2053              	.L106:
 893:../tasks/SDMMC/sd_diskio.c ****   {
 894:../tasks/SDMMC/sd_diskio.c ****     /*!< Send CMD3 SET_REL_ADDR with argument 0 */
 895:../tasks/SDMMC/sd_diskio.c ****     /*!< SD Card publishes its RCA. */
 896:../tasks/SDMMC/sd_diskio.c ****     SDIO_CmdInitStructure.Argument = 0x00;
 2054              		.loc 1 896 0
 2055 0e2e 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 2056 0e32 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 2057 0e36 0022     		movs	r2, #0
 2058 0e38 1A60     		str	r2, [r3]
 897:../tasks/SDMMC/sd_diskio.c ****     SDIO_CmdInitStructure.CmdIndex = SD_CMD_SET_REL_ADDR;
 2059              		.loc 1 897 0
 2060 0e3a 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 2061 0e3e C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 2062 0e42 0322     		movs	r2, #3
 2063 0e44 5A60     		str	r2, [r3, #4]
 898:../tasks/SDMMC/sd_diskio.c ****     SDIO_CmdInitStructure.Response = SDIO_RESPONSE_SHORT;
 2064              		.loc 1 898 0
 2065 0e46 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 2066 0e4a C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 2067 0e4e 4022     		movs	r2, #64
 2068 0e50 9A60     		str	r2, [r3, #8]
 899:../tasks/SDMMC/sd_diskio.c ****     SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 2069              		.loc 1 899 0
 2070 0e52 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 2071 0e56 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 2072 0e5a 0022     		movs	r2, #0
 2073 0e5c DA60     		str	r2, [r3, #12]
 900:../tasks/SDMMC/sd_diskio.c ****     SDIO_CmdInitStructure.CPSM = SDIO_CPSM_ENABLE;
 2074              		.loc 1 900 0
 2075 0e5e 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 2076 0e62 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 2077 0e66 4FF48062 		mov	r2, #1024
 2078 0e6a 1A61     		str	r2, [r3, #16]
 901:../tasks/SDMMC/sd_diskio.c ****     SDIO_SendCommand(SDIO, &SDIO_CmdInitStructure);
 2079              		.loc 1 901 0
 2080 0e6c 4FF43050 		mov	r0, #11264
 2081 0e70 C4F20100 		movt	r0, 16385
 2082 0e74 40F20001 		movw	r1, #:lower16:SDIO_CmdInitStructure
 2083 0e78 C0F20001 		movt	r1, #:upper16:SDIO_CmdInitStructure
 2084 0e7c FFF7FEFF 		bl	SDIO_SendCommand
 902:../tasks/SDMMC/sd_diskio.c **** 
 903:../tasks/SDMMC/sd_diskio.c ****     errorstatus = CmdResp6Error(SD_CMD_SET_REL_ADDR, &rca);
 2085              		.loc 1 903 0
 2086 0e80 3B1D     		adds	r3, r7, #4
 2087 0e82 0320     		movs	r0, #3
 2088 0e84 1946     		mov	r1, r3
 2089 0e86 00F075F8 		bl	CmdResp6Error
 2090 0e8a 0346     		mov	r3, r0
 2091 0e8c FB71     		strb	r3, [r7, #7]
 904:../tasks/SDMMC/sd_diskio.c **** 
 905:../tasks/SDMMC/sd_diskio.c ****     if (SD_OK != errorstatus)
 2092              		.loc 1 905 0
 2093 0e8e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2094 0e90 002B     		cmp	r3, #0
 2095 0e92 01D0     		beq	.L107
 906:../tasks/SDMMC/sd_diskio.c ****     {
 907:../tasks/SDMMC/sd_diskio.c ****       return(errorstatus);
 2096              		.loc 1 907 0
 2097 0e94 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2098 0e96 68E0     		b	.L110
 2099              	.L107:
 908:../tasks/SDMMC/sd_diskio.c ****     }
 909:../tasks/SDMMC/sd_diskio.c ****   }
 910:../tasks/SDMMC/sd_diskio.c **** 
 911:../tasks/SDMMC/sd_diskio.c ****   if (SDIO_SECURE_DIGITAL_IO_CARD != IsCardType)
 2100              		.loc 1 911 0
 2101 0e98 40F20003 		movw	r3, #:lower16:IsCardType
 2102 0e9c C0F20003 		movt	r3, #:upper16:IsCardType
 2103 0ea0 1B68     		ldr	r3, [r3]
 2104 0ea2 042B     		cmp	r3, #4
 2105 0ea4 5ED0     		beq	.L108
 912:../tasks/SDMMC/sd_diskio.c ****   {
 913:../tasks/SDMMC/sd_diskio.c ****     RCA = rca;
 2106              		.loc 1 913 0
 2107 0ea6 BB88     		ldrh	r3, [r7, #4]
 2108 0ea8 1A46     		mov	r2, r3
 2109 0eaa 40F20003 		movw	r3, #:lower16:RCA
 2110 0eae C0F20003 		movt	r3, #:upper16:RCA
 2111 0eb2 1A60     		str	r2, [r3]
 914:../tasks/SDMMC/sd_diskio.c **** 
 915:../tasks/SDMMC/sd_diskio.c ****     /*!< Send CMD9 SEND_CSD with argument as card's RCA */
 916:../tasks/SDMMC/sd_diskio.c ****     SDIO_CmdInitStructure.Argument = (uint32_t)(rca << 16);
 2112              		.loc 1 916 0
 2113 0eb4 BB88     		ldrh	r3, [r7, #4]
 2114 0eb6 1B04     		lsls	r3, r3, #16
 2115 0eb8 1A46     		mov	r2, r3
 2116 0eba 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 2117 0ebe C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 2118 0ec2 1A60     		str	r2, [r3]
 917:../tasks/SDMMC/sd_diskio.c ****     SDIO_CmdInitStructure.CmdIndex = SD_CMD_SEND_CSD;
 2119              		.loc 1 917 0
 2120 0ec4 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 2121 0ec8 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 2122 0ecc 0922     		movs	r2, #9
 2123 0ece 5A60     		str	r2, [r3, #4]
 918:../tasks/SDMMC/sd_diskio.c ****     SDIO_CmdInitStructure.Response = SDIO_RESPONSE_LONG;
 2124              		.loc 1 918 0
 2125 0ed0 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 2126 0ed4 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 2127 0ed8 C022     		movs	r2, #192
 2128 0eda 9A60     		str	r2, [r3, #8]
 919:../tasks/SDMMC/sd_diskio.c ****     SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 2129              		.loc 1 919 0
 2130 0edc 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 2131 0ee0 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 2132 0ee4 0022     		movs	r2, #0
 2133 0ee6 DA60     		str	r2, [r3, #12]
 920:../tasks/SDMMC/sd_diskio.c ****     SDIO_CmdInitStructure.CPSM = SDIO_CPSM_ENABLE;
 2134              		.loc 1 920 0
 2135 0ee8 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 2136 0eec C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 2137 0ef0 4FF48062 		mov	r2, #1024
 2138 0ef4 1A61     		str	r2, [r3, #16]
 921:../tasks/SDMMC/sd_diskio.c ****     SDIO_SendCommand(SDIO, &SDIO_CmdInitStructure);
 2139              		.loc 1 921 0
 2140 0ef6 4FF43050 		mov	r0, #11264
 2141 0efa C4F20100 		movt	r0, 16385
 2142 0efe 40F20001 		movw	r1, #:lower16:SDIO_CmdInitStructure
 2143 0f02 C0F20001 		movt	r1, #:upper16:SDIO_CmdInitStructure
 2144 0f06 FFF7FEFF 		bl	SDIO_SendCommand
 922:../tasks/SDMMC/sd_diskio.c **** 
 923:../tasks/SDMMC/sd_diskio.c ****     errorstatus = CmdResp2Error();
 2145              		.loc 1 923 0
 2146 0f0a 00F011FD 		bl	CmdResp2Error
 2147 0f0e 0346     		mov	r3, r0
 2148 0f10 FB71     		strb	r3, [r7, #7]
 924:../tasks/SDMMC/sd_diskio.c **** 
 925:../tasks/SDMMC/sd_diskio.c ****     if (SD_OK != errorstatus)
 2149              		.loc 1 925 0
 2150 0f12 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2151 0f14 002B     		cmp	r3, #0
 2152 0f16 01D0     		beq	.L109
 926:../tasks/SDMMC/sd_diskio.c ****     {
 927:../tasks/SDMMC/sd_diskio.c ****       return(errorstatus);
 2153              		.loc 1 927 0
 2154 0f18 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2155 0f1a 26E0     		b	.L110
 2156              	.L109:
 928:../tasks/SDMMC/sd_diskio.c ****     }
 929:../tasks/SDMMC/sd_diskio.c **** 
 930:../tasks/SDMMC/sd_diskio.c ****     CSD_Tab[0] = SDIO_GetResponse(SDIO_RESP1);
 2157              		.loc 1 930 0
 2158 0f1c 0020     		movs	r0, #0
 2159 0f1e FFF7FEFF 		bl	SDIO_GetResponse
 2160 0f22 0246     		mov	r2, r0
 2161 0f24 40F20003 		movw	r3, #:lower16:CSD_Tab
 2162 0f28 C0F20003 		movt	r3, #:upper16:CSD_Tab
 2163 0f2c 1A60     		str	r2, [r3]
 931:../tasks/SDMMC/sd_diskio.c ****     CSD_Tab[1] = SDIO_GetResponse(SDIO_RESP2);
 2164              		.loc 1 931 0
 2165 0f2e 0420     		movs	r0, #4
 2166 0f30 FFF7FEFF 		bl	SDIO_GetResponse
 2167 0f34 0246     		mov	r2, r0
 2168 0f36 40F20003 		movw	r3, #:lower16:CSD_Tab
 2169 0f3a C0F20003 		movt	r3, #:upper16:CSD_Tab
 2170 0f3e 5A60     		str	r2, [r3, #4]
 932:../tasks/SDMMC/sd_diskio.c ****     CSD_Tab[2] = SDIO_GetResponse(SDIO_RESP3);
 2171              		.loc 1 932 0
 2172 0f40 0820     		movs	r0, #8
 2173 0f42 FFF7FEFF 		bl	SDIO_GetResponse
 2174 0f46 0246     		mov	r2, r0
 2175 0f48 40F20003 		movw	r3, #:lower16:CSD_Tab
 2176 0f4c C0F20003 		movt	r3, #:upper16:CSD_Tab
 2177 0f50 9A60     		str	r2, [r3, #8]
 933:../tasks/SDMMC/sd_diskio.c ****     CSD_Tab[3] = SDIO_GetResponse(SDIO_RESP4);
 2178              		.loc 1 933 0
 2179 0f52 0C20     		movs	r0, #12
 2180 0f54 FFF7FEFF 		bl	SDIO_GetResponse
 2181 0f58 0246     		mov	r2, r0
 2182 0f5a 40F20003 		movw	r3, #:lower16:CSD_Tab
 2183 0f5e C0F20003 		movt	r3, #:upper16:CSD_Tab
 2184 0f62 DA60     		str	r2, [r3, #12]
 2185              	.L108:
 934:../tasks/SDMMC/sd_diskio.c ****   }
 935:../tasks/SDMMC/sd_diskio.c **** 
 936:../tasks/SDMMC/sd_diskio.c ****   errorstatus = SD_OK; /*!< All cards get intialized */
 2186              		.loc 1 936 0
 2187 0f64 0023     		movs	r3, #0
 2188 0f66 FB71     		strb	r3, [r7, #7]
 937:../tasks/SDMMC/sd_diskio.c **** 
 938:../tasks/SDMMC/sd_diskio.c ****   return(errorstatus);
 2189              		.loc 1 938 0
 2190 0f68 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2191              	.L110:
 939:../tasks/SDMMC/sd_diskio.c **** }
 2192              		.loc 1 939 0
 2193 0f6a 1846     		mov	r0, r3
 2194 0f6c 0837     		adds	r7, r7, #8
 2195 0f6e BD46     		mov	sp, r7
 2196              		@ sp needed
 2197 0f70 80BD     		pop	{r7, pc}
 2198              		.cfi_endproc
 2199              	.LFE68:
 2201 0f72 00BF     		.align	2
 2202              		.thumb
 2203              		.thumb_func
 2205              	CmdResp6Error:
 2206              	.LFB69:
 940:../tasks/SDMMC/sd_diskio.c **** /**
 941:../tasks/SDMMC/sd_diskio.c ****   * @brief  Checks for error conditions for R6 (RCA) response.
 942:../tasks/SDMMC/sd_diskio.c ****   * @param  cmd: The sent command index.
 943:../tasks/SDMMC/sd_diskio.c ****   * @param  prca: pointer to the variable that will contain the SD card relative
 944:../tasks/SDMMC/sd_diskio.c ****   *         address RCA.
 945:../tasks/SDMMC/sd_diskio.c ****   * @retval HAL_SD_ErrorTypedef: SD Card Error code.
 946:../tasks/SDMMC/sd_diskio.c ****   */
 947:../tasks/SDMMC/sd_diskio.c **** static HAL_SD_ErrorTypedef CmdResp6Error(uint8_t cmd, uint16_t *prca)
 948:../tasks/SDMMC/sd_diskio.c **** {
 2207              		.loc 1 948 0
 2208              		.cfi_startproc
 2209              		@ args = 0, pretend = 0, frame = 24
 2210              		@ frame_needed = 1, uses_anonymous_args = 0
 2211 0f74 80B5     		push	{r7, lr}
 2212              		.cfi_def_cfa_offset 8
 2213              		.cfi_offset 7, -8
 2214              		.cfi_offset 14, -4
 2215 0f76 86B0     		sub	sp, sp, #24
 2216              		.cfi_def_cfa_offset 32
 2217 0f78 00AF     		add	r7, sp, #0
 2218              		.cfi_def_cfa_register 7
 2219 0f7a 0346     		mov	r3, r0
 2220 0f7c 3960     		str	r1, [r7]
 2221 0f7e FB71     		strb	r3, [r7, #7]
 949:../tasks/SDMMC/sd_diskio.c ****   HAL_SD_ErrorTypedef errorstatus = SD_OK;
 2222              		.loc 1 949 0
 2223 0f80 0023     		movs	r3, #0
 2224 0f82 FB74     		strb	r3, [r7, #19]
 950:../tasks/SDMMC/sd_diskio.c ****   uint32_t status;
 951:../tasks/SDMMC/sd_diskio.c ****   uint32_t response_r1;
 952:../tasks/SDMMC/sd_diskio.c **** 
 953:../tasks/SDMMC/sd_diskio.c ****   status = SDIO->STA;
 2225              		.loc 1 953 0
 2226 0f84 4FF43053 		mov	r3, #11264
 2227 0f88 C4F20103 		movt	r3, 16385
 2228 0f8c 5B6B     		ldr	r3, [r3, #52]
 2229 0f8e 7B61     		str	r3, [r7, #20]
 954:../tasks/SDMMC/sd_diskio.c **** 
 955:../tasks/SDMMC/sd_diskio.c ****   while (!(status & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CTIMEOUT | SDIO_FLAG_CMDREND)))
 2230              		.loc 1 955 0
 2231 0f90 05E0     		b	.L112
 2232              	.L113:
 956:../tasks/SDMMC/sd_diskio.c ****   {
 957:../tasks/SDMMC/sd_diskio.c ****     status = SDIO->STA;
 2233              		.loc 1 957 0
 2234 0f92 4FF43053 		mov	r3, #11264
 2235 0f96 C4F20103 		movt	r3, 16385
 2236 0f9a 5B6B     		ldr	r3, [r3, #52]
 2237 0f9c 7B61     		str	r3, [r7, #20]
 2238              	.L112:
 955:../tasks/SDMMC/sd_diskio.c ****   {
 2239              		.loc 1 955 0 discriminator 1
 2240 0f9e 7B69     		ldr	r3, [r7, #20]
 2241 0fa0 03F04503 		and	r3, r3, #69
 2242 0fa4 002B     		cmp	r3, #0
 2243 0fa6 F4D0     		beq	.L113
 958:../tasks/SDMMC/sd_diskio.c ****   }
 959:../tasks/SDMMC/sd_diskio.c **** 
 960:../tasks/SDMMC/sd_diskio.c ****   if (status & SDIO_FLAG_CTIMEOUT)
 2244              		.loc 1 960 0
 2245 0fa8 7B69     		ldr	r3, [r7, #20]
 2246 0faa 03F00403 		and	r3, r3, #4
 2247 0fae 002B     		cmp	r3, #0
 2248 0fb0 06D0     		beq	.L114
 961:../tasks/SDMMC/sd_diskio.c ****   {
 962:../tasks/SDMMC/sd_diskio.c ****     errorstatus = SD_CMD_RSP_TIMEOUT;
 2249              		.loc 1 962 0
 2250 0fb2 0323     		movs	r3, #3
 2251 0fb4 FB74     		strb	r3, [r7, #19]
 963:../tasks/SDMMC/sd_diskio.c ****     SDIO_ClearFlag(SDIO_FLAG_CTIMEOUT);
 2252              		.loc 1 963 0
 2253 0fb6 0420     		movs	r0, #4
 2254 0fb8 FFF7FEFF 		bl	SDIO_ClearFlag
 964:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 2255              		.loc 1 964 0
 2256 0fbc FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 2257 0fbe 43E0     		b	.L115
 2258              	.L114:
 965:../tasks/SDMMC/sd_diskio.c ****   }
 966:../tasks/SDMMC/sd_diskio.c ****   else if (status & SDIO_FLAG_CCRCFAIL)
 2259              		.loc 1 966 0
 2260 0fc0 7B69     		ldr	r3, [r7, #20]
 2261 0fc2 03F00103 		and	r3, r3, #1
 2262 0fc6 002B     		cmp	r3, #0
 2263 0fc8 06D0     		beq	.L116
 967:../tasks/SDMMC/sd_diskio.c ****   {
 968:../tasks/SDMMC/sd_diskio.c ****     errorstatus = SD_CMD_CRC_FAIL;
 2264              		.loc 1 968 0
 2265 0fca 0123     		movs	r3, #1
 2266 0fcc FB74     		strb	r3, [r7, #19]
 969:../tasks/SDMMC/sd_diskio.c ****     SDIO_ClearFlag(SDIO_FLAG_CCRCFAIL);
 2267              		.loc 1 969 0
 2268 0fce 0120     		movs	r0, #1
 2269 0fd0 FFF7FEFF 		bl	SDIO_ClearFlag
 970:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 2270              		.loc 1 970 0
 2271 0fd4 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 2272 0fd6 37E0     		b	.L115
 2273              	.L116:
 971:../tasks/SDMMC/sd_diskio.c ****   }
 972:../tasks/SDMMC/sd_diskio.c **** 
 973:../tasks/SDMMC/sd_diskio.c ****   /*!< Check response received is of desired command */
 974:../tasks/SDMMC/sd_diskio.c ****   if (SDIO_GetCommandResponse(SDIO) != cmd)
 2274              		.loc 1 974 0
 2275 0fd8 4FF43050 		mov	r0, #11264
 2276 0fdc C4F20100 		movt	r0, 16385
 2277 0fe0 FFF7FEFF 		bl	SDIO_GetCommandResponse
 2278 0fe4 0346     		mov	r3, r0
 2279 0fe6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2280 0fe8 9A42     		cmp	r2, r3
 2281 0fea 03D0     		beq	.L117
 975:../tasks/SDMMC/sd_diskio.c ****   {
 976:../tasks/SDMMC/sd_diskio.c ****     errorstatus = SD_ILLEGAL_CMD;
 2282              		.loc 1 976 0
 2283 0fec 1023     		movs	r3, #16
 2284 0fee FB74     		strb	r3, [r7, #19]
 977:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 2285              		.loc 1 977 0
 2286 0ff0 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 2287 0ff2 29E0     		b	.L115
 2288              	.L117:
 978:../tasks/SDMMC/sd_diskio.c ****   }
 979:../tasks/SDMMC/sd_diskio.c **** 
 980:../tasks/SDMMC/sd_diskio.c ****   /*!< Clear all the static flags */
 981:../tasks/SDMMC/sd_diskio.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
 2289              		.loc 1 981 0
 2290 0ff4 40F2FF50 		movw	r0, #1535
 2291 0ff8 FFF7FEFF 		bl	SDIO_ClearFlag
 982:../tasks/SDMMC/sd_diskio.c **** 
 983:../tasks/SDMMC/sd_diskio.c ****   /*!< We have received response, retrieve it.  */
 984:../tasks/SDMMC/sd_diskio.c ****   response_r1 = SDIO_GetResponse(SDIO_RESP1);
 2292              		.loc 1 984 0
 2293 0ffc 0020     		movs	r0, #0
 2294 0ffe FFF7FEFF 		bl	SDIO_GetResponse
 2295 1002 F860     		str	r0, [r7, #12]
 985:../tasks/SDMMC/sd_diskio.c **** 
 986:../tasks/SDMMC/sd_diskio.c ****   if (SD_ALLZERO == (response_r1 & (SD_R6_GENERAL_UNKNOWN_ERROR | SD_R6_ILLEGAL_CMD | SD_R6_COM_CRC
 2296              		.loc 1 986 0
 2297 1004 FB68     		ldr	r3, [r7, #12]
 2298 1006 03F46043 		and	r3, r3, #57344
 2299 100a 002B     		cmp	r3, #0
 2300 100c 06D1     		bne	.L118
 987:../tasks/SDMMC/sd_diskio.c ****   {
 988:../tasks/SDMMC/sd_diskio.c ****     *prca = (uint16_t) (response_r1 >> 16);
 2301              		.loc 1 988 0
 2302 100e FB68     		ldr	r3, [r7, #12]
 2303 1010 1B0C     		lsrs	r3, r3, #16
 2304 1012 9AB2     		uxth	r2, r3
 2305 1014 3B68     		ldr	r3, [r7]
 2306 1016 1A80     		strh	r2, [r3]	@ movhi
 989:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 2307              		.loc 1 989 0
 2308 1018 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 2309 101a 15E0     		b	.L115
 2310              	.L118:
 990:../tasks/SDMMC/sd_diskio.c ****   }
 991:../tasks/SDMMC/sd_diskio.c **** 
 992:../tasks/SDMMC/sd_diskio.c ****   if (response_r1 & SD_R6_GENERAL_UNKNOWN_ERROR)
 2311              		.loc 1 992 0
 2312 101c FB68     		ldr	r3, [r7, #12]
 2313 101e 03F40053 		and	r3, r3, #8192
 2314 1022 002B     		cmp	r3, #0
 2315 1024 01D0     		beq	.L119
 993:../tasks/SDMMC/sd_diskio.c ****   {
 994:../tasks/SDMMC/sd_diskio.c ****     return(SD_GENERAL_UNKNOWN_ERROR);
 2316              		.loc 1 994 0
 2317 1026 1323     		movs	r3, #19
 2318 1028 0EE0     		b	.L115
 2319              	.L119:
 995:../tasks/SDMMC/sd_diskio.c ****   }
 996:../tasks/SDMMC/sd_diskio.c **** 
 997:../tasks/SDMMC/sd_diskio.c ****   if (response_r1 & SD_R6_ILLEGAL_CMD)
 2320              		.loc 1 997 0
 2321 102a FB68     		ldr	r3, [r7, #12]
 2322 102c 03F48043 		and	r3, r3, #16384
 2323 1030 002B     		cmp	r3, #0
 2324 1032 01D0     		beq	.L120
 998:../tasks/SDMMC/sd_diskio.c ****   {
 999:../tasks/SDMMC/sd_diskio.c ****     return(SD_ILLEGAL_CMD);
 2325              		.loc 1 999 0
 2326 1034 1023     		movs	r3, #16
 2327 1036 07E0     		b	.L115
 2328              	.L120:
1000:../tasks/SDMMC/sd_diskio.c ****   }
1001:../tasks/SDMMC/sd_diskio.c **** 
1002:../tasks/SDMMC/sd_diskio.c ****   if (response_r1 & SD_R6_COM_CRC_FAILED)
 2329              		.loc 1 1002 0
 2330 1038 FB68     		ldr	r3, [r7, #12]
 2331 103a 03F40043 		and	r3, r3, #32768
 2332 103e 002B     		cmp	r3, #0
 2333 1040 01D0     		beq	.L121
1003:../tasks/SDMMC/sd_diskio.c ****   {
1004:../tasks/SDMMC/sd_diskio.c ****     return(SD_COM_CRC_FAILED);
 2334              		.loc 1 1004 0
 2335 1042 0F23     		movs	r3, #15
 2336 1044 00E0     		b	.L115
 2337              	.L121:
1005:../tasks/SDMMC/sd_diskio.c ****   }
1006:../tasks/SDMMC/sd_diskio.c **** 
1007:../tasks/SDMMC/sd_diskio.c ****   return(errorstatus);
 2338              		.loc 1 1007 0
 2339 1046 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 2340              	.L115:
1008:../tasks/SDMMC/sd_diskio.c **** }
 2341              		.loc 1 1008 0
 2342 1048 1846     		mov	r0, r3
 2343 104a 1837     		adds	r7, r7, #24
 2344 104c BD46     		mov	sp, r7
 2345              		@ sp needed
 2346 104e 80BD     		pop	{r7, pc}
 2347              		.cfi_endproc
 2348              	.LFE69:
 2350              		.align	2
 2351              		.thumb
 2352              		.thumb_func
 2354              	CmdResp7Error:
 2355              	.LFB70:
1009:../tasks/SDMMC/sd_diskio.c **** /**
1010:../tasks/SDMMC/sd_diskio.c ****   * @brief  Checks for error conditions for R7 response.
1011:../tasks/SDMMC/sd_diskio.c ****   * @param  None
1012:../tasks/SDMMC/sd_diskio.c ****   * @retval HAL_SD_ErrorTypedef: SD Card Error code.
1013:../tasks/SDMMC/sd_diskio.c ****   */
1014:../tasks/SDMMC/sd_diskio.c **** static HAL_SD_ErrorTypedef CmdResp7Error(void)
1015:../tasks/SDMMC/sd_diskio.c **** {
 2356              		.loc 1 1015 0
 2357              		.cfi_startproc
 2358              		@ args = 0, pretend = 0, frame = 16
 2359              		@ frame_needed = 1, uses_anonymous_args = 0
 2360 1050 80B5     		push	{r7, lr}
 2361              		.cfi_def_cfa_offset 8
 2362              		.cfi_offset 7, -8
 2363              		.cfi_offset 14, -4
 2364 1052 84B0     		sub	sp, sp, #16
 2365              		.cfi_def_cfa_offset 24
 2366 1054 00AF     		add	r7, sp, #0
 2367              		.cfi_def_cfa_register 7
1016:../tasks/SDMMC/sd_diskio.c ****   HAL_SD_ErrorTypedef errorstatus = SD_OK;
 2368              		.loc 1 1016 0
 2369 1056 0023     		movs	r3, #0
 2370 1058 FB71     		strb	r3, [r7, #7]
1017:../tasks/SDMMC/sd_diskio.c ****   uint32_t status;
1018:../tasks/SDMMC/sd_diskio.c ****   uint32_t timeout = SDIO_CMD0TIMEOUT;
 2371              		.loc 1 1018 0
 2372 105a 4FF48033 		mov	r3, #65536
 2373 105e BB60     		str	r3, [r7, #8]
1019:../tasks/SDMMC/sd_diskio.c **** 
1020:../tasks/SDMMC/sd_diskio.c ****   status = SDIO->STA;
 2374              		.loc 1 1020 0
 2375 1060 4FF43053 		mov	r3, #11264
 2376 1064 C4F20103 		movt	r3, 16385
 2377 1068 5B6B     		ldr	r3, [r3, #52]
 2378 106a FB60     		str	r3, [r7, #12]
1021:../tasks/SDMMC/sd_diskio.c **** 
1022:../tasks/SDMMC/sd_diskio.c ****   while (!(status & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)) && (timeout > 0)
 2379              		.loc 1 1022 0
 2380 106c 08E0     		b	.L123
 2381              	.L125:
1023:../tasks/SDMMC/sd_diskio.c ****   {
1024:../tasks/SDMMC/sd_diskio.c ****     timeout--;
 2382              		.loc 1 1024 0
 2383 106e BB68     		ldr	r3, [r7, #8]
 2384 1070 013B     		subs	r3, r3, #1
 2385 1072 BB60     		str	r3, [r7, #8]
1025:../tasks/SDMMC/sd_diskio.c ****     status = SDIO->STA;
 2386              		.loc 1 1025 0
 2387 1074 4FF43053 		mov	r3, #11264
 2388 1078 C4F20103 		movt	r3, 16385
 2389 107c 5B6B     		ldr	r3, [r3, #52]
 2390 107e FB60     		str	r3, [r7, #12]
 2391              	.L123:
1022:../tasks/SDMMC/sd_diskio.c ****   {
 2392              		.loc 1 1022 0 discriminator 1
 2393 1080 FB68     		ldr	r3, [r7, #12]
 2394 1082 03F04503 		and	r3, r3, #69
 2395 1086 002B     		cmp	r3, #0
 2396 1088 02D1     		bne	.L124
1022:../tasks/SDMMC/sd_diskio.c ****   {
 2397              		.loc 1 1022 0 is_stmt 0 discriminator 2
 2398 108a BB68     		ldr	r3, [r7, #8]
 2399 108c 002B     		cmp	r3, #0
 2400 108e EED1     		bne	.L125
 2401              	.L124:
1026:../tasks/SDMMC/sd_diskio.c ****   }
1027:../tasks/SDMMC/sd_diskio.c **** 
1028:../tasks/SDMMC/sd_diskio.c ****   if ((timeout == 0) || (status & SDIO_FLAG_CTIMEOUT))
 2402              		.loc 1 1028 0 is_stmt 1
 2403 1090 BB68     		ldr	r3, [r7, #8]
 2404 1092 002B     		cmp	r3, #0
 2405 1094 04D0     		beq	.L126
 2406              		.loc 1 1028 0 is_stmt 0 discriminator 1
 2407 1096 FB68     		ldr	r3, [r7, #12]
 2408 1098 03F00403 		and	r3, r3, #4
 2409 109c 002B     		cmp	r3, #0
 2410 109e 06D0     		beq	.L127
 2411              	.L126:
1029:../tasks/SDMMC/sd_diskio.c ****   {
1030:../tasks/SDMMC/sd_diskio.c ****     /*!< Card is not V2.0 complient or card does not support the set voltage range */
1031:../tasks/SDMMC/sd_diskio.c ****     errorstatus = SD_CMD_RSP_TIMEOUT;
 2412              		.loc 1 1031 0 is_stmt 1
 2413 10a0 0323     		movs	r3, #3
 2414 10a2 FB71     		strb	r3, [r7, #7]
1032:../tasks/SDMMC/sd_diskio.c ****     SDIO_ClearFlag(SDIO_FLAG_CTIMEOUT);
 2415              		.loc 1 1032 0
 2416 10a4 0420     		movs	r0, #4
 2417 10a6 FFF7FEFF 		bl	SDIO_ClearFlag
1033:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 2418              		.loc 1 1033 0
 2419 10aa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2420 10ac 0CE0     		b	.L128
 2421              	.L127:
1034:../tasks/SDMMC/sd_diskio.c ****   }
1035:../tasks/SDMMC/sd_diskio.c **** 
1036:../tasks/SDMMC/sd_diskio.c ****   if (status & SDIO_FLAG_CMDREND)
 2422              		.loc 1 1036 0
 2423 10ae FB68     		ldr	r3, [r7, #12]
 2424 10b0 03F04003 		and	r3, r3, #64
 2425 10b4 002B     		cmp	r3, #0
 2426 10b6 06D0     		beq	.L129
1037:../tasks/SDMMC/sd_diskio.c ****   {
1038:../tasks/SDMMC/sd_diskio.c ****     /*!< Card is SD V2.0 compliant */
1039:../tasks/SDMMC/sd_diskio.c ****     errorstatus = SD_OK;
 2427              		.loc 1 1039 0
 2428 10b8 0023     		movs	r3, #0
 2429 10ba FB71     		strb	r3, [r7, #7]
1040:../tasks/SDMMC/sd_diskio.c ****     SDIO_ClearFlag(SDIO_FLAG_CMDREND);
 2430              		.loc 1 1040 0
 2431 10bc 4020     		movs	r0, #64
 2432 10be FFF7FEFF 		bl	SDIO_ClearFlag
1041:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 2433              		.loc 1 1041 0
 2434 10c2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2435 10c4 00E0     		b	.L128
 2436              	.L129:
1042:../tasks/SDMMC/sd_diskio.c ****   }
1043:../tasks/SDMMC/sd_diskio.c ****   return(errorstatus);
 2437              		.loc 1 1043 0
 2438 10c6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2439              	.L128:
1044:../tasks/SDMMC/sd_diskio.c **** }
 2440              		.loc 1 1044 0
 2441 10c8 1846     		mov	r0, r3
 2442 10ca 1037     		adds	r7, r7, #16
 2443 10cc BD46     		mov	sp, r7
 2444              		@ sp needed
 2445 10ce 80BD     		pop	{r7, pc}
 2446              		.cfi_endproc
 2447              	.LFE70:
 2449              		.align	2
 2450              		.global	SD_GetCardInfo
 2451              		.thumb
 2452              		.thumb_func
 2454              	SD_GetCardInfo:
 2455              	.LFB71:
1045:../tasks/SDMMC/sd_diskio.c **** /**
1046:../tasks/SDMMC/sd_diskio.c ****   * @brief  Returns information about specific card.
1047:../tasks/SDMMC/sd_diskio.c ****   * @param  cardinfo: pointer to a SD_CardInfo structure that contains all SD card
1048:../tasks/SDMMC/sd_diskio.c ****   *         information.
1049:../tasks/SDMMC/sd_diskio.c ****   * @retval HAL_SD_ErrorTypedef: SD Card Error code.
1050:../tasks/SDMMC/sd_diskio.c ****   */
1051:../tasks/SDMMC/sd_diskio.c **** HAL_SD_ErrorTypedef SD_GetCardInfo(HAL_SD_CardInfoTypedef *cardinfo)
1052:../tasks/SDMMC/sd_diskio.c **** {
 2456              		.loc 1 1052 0
 2457              		.cfi_startproc
 2458              		@ args = 0, pretend = 0, frame = 16
 2459              		@ frame_needed = 1, uses_anonymous_args = 0
 2460              		@ link register save eliminated.
 2461 10d0 B0B4     		push	{r4, r5, r7}
 2462              		.cfi_def_cfa_offset 12
 2463              		.cfi_offset 4, -12
 2464              		.cfi_offset 5, -8
 2465              		.cfi_offset 7, -4
 2466 10d2 85B0     		sub	sp, sp, #20
 2467              		.cfi_def_cfa_offset 32
 2468 10d4 00AF     		add	r7, sp, #0
 2469              		.cfi_def_cfa_register 7
 2470 10d6 7860     		str	r0, [r7, #4]
1053:../tasks/SDMMC/sd_diskio.c ****   HAL_SD_ErrorTypedef errorstatus = SD_OK;
 2471              		.loc 1 1053 0
 2472 10d8 0023     		movs	r3, #0
 2473 10da BB73     		strb	r3, [r7, #14]
1054:../tasks/SDMMC/sd_diskio.c ****   uint8_t tmp = 0;
 2474              		.loc 1 1054 0
 2475 10dc 0023     		movs	r3, #0
 2476 10de FB73     		strb	r3, [r7, #15]
1055:../tasks/SDMMC/sd_diskio.c **** 
1056:../tasks/SDMMC/sd_diskio.c ****   cardinfo->CardType = (uint8_t)IsCardType;
 2477              		.loc 1 1056 0
 2478 10e0 40F20003 		movw	r3, #:lower16:IsCardType
 2479 10e4 C0F20003 		movt	r3, #:upper16:IsCardType
 2480 10e8 1B68     		ldr	r3, [r3]
 2481 10ea DAB2     		uxtb	r2, r3
 2482 10ec 7B68     		ldr	r3, [r7, #4]
 2483 10ee 83F85620 		strb	r2, [r3, #86]
1057:../tasks/SDMMC/sd_diskio.c ****   cardinfo->RCA = (uint16_t)RCA;
 2484              		.loc 1 1057 0
 2485 10f2 40F20003 		movw	r3, #:lower16:RCA
 2486 10f6 C0F20003 		movt	r3, #:upper16:RCA
 2487 10fa 1B68     		ldr	r3, [r3]
 2488 10fc 9AB2     		uxth	r2, r3
 2489 10fe 7B68     		ldr	r3, [r7, #4]
 2490 1100 A3F85420 		strh	r2, [r3, #84]	@ movhi
1058:../tasks/SDMMC/sd_diskio.c **** 
1059:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 0 */
1060:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)((CSD_Tab[0] & 0xFF000000) >> 24);
 2491              		.loc 1 1060 0
 2492 1104 40F20003 		movw	r3, #:lower16:CSD_Tab
 2493 1108 C0F20003 		movt	r3, #:upper16:CSD_Tab
 2494 110c 1B68     		ldr	r3, [r3]
 2495 110e 1B0E     		lsrs	r3, r3, #24
 2496 1110 FB73     		strb	r3, [r7, #15]
1061:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.CSDStruct = (tmp & 0xC0) >> 6;
 2497              		.loc 1 1061 0
 2498 1112 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2499 1114 9B09     		lsrs	r3, r3, #6
 2500 1116 DAB2     		uxtb	r2, r3
 2501 1118 7B68     		ldr	r3, [r7, #4]
 2502 111a 1A70     		strb	r2, [r3]
1062:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.SysSpecVersion = (tmp & 0x3C) >> 2;
 2503              		.loc 1 1062 0
 2504 111c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2505 111e 03F03C03 		and	r3, r3, #60
 2506 1122 9B10     		asrs	r3, r3, #2
 2507 1124 DAB2     		uxtb	r2, r3
 2508 1126 7B68     		ldr	r3, [r7, #4]
 2509 1128 5A70     		strb	r2, [r3, #1]
1063:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.Reserved1 = tmp & 0x03;
 2510              		.loc 1 1063 0
 2511 112a FB7B     		ldrb	r3, [r7, #15]
 2512 112c 03F00303 		and	r3, r3, #3
 2513 1130 DAB2     		uxtb	r2, r3
 2514 1132 7B68     		ldr	r3, [r7, #4]
 2515 1134 9A70     		strb	r2, [r3, #2]
1064:../tasks/SDMMC/sd_diskio.c **** 
1065:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 1 */
1066:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)((CSD_Tab[0] & 0x00FF0000) >> 16);
 2516              		.loc 1 1066 0
 2517 1136 40F20003 		movw	r3, #:lower16:CSD_Tab
 2518 113a C0F20003 		movt	r3, #:upper16:CSD_Tab
 2519 113e 1B68     		ldr	r3, [r3]
 2520 1140 03F47F03 		and	r3, r3, #16711680
 2521 1144 1B0C     		lsrs	r3, r3, #16
 2522 1146 FB73     		strb	r3, [r7, #15]
1067:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.TAAC = tmp;
 2523              		.loc 1 1067 0
 2524 1148 7B68     		ldr	r3, [r7, #4]
 2525 114a FA7B     		ldrb	r2, [r7, #15]
 2526 114c DA70     		strb	r2, [r3, #3]
1068:../tasks/SDMMC/sd_diskio.c **** 
1069:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 2 */
1070:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)((CSD_Tab[0] & 0x0000FF00) >> 8);
 2527              		.loc 1 1070 0
 2528 114e 40F20003 		movw	r3, #:lower16:CSD_Tab
 2529 1152 C0F20003 		movt	r3, #:upper16:CSD_Tab
 2530 1156 1B68     		ldr	r3, [r3]
 2531 1158 03F47F43 		and	r3, r3, #65280
 2532 115c 1B0A     		lsrs	r3, r3, #8
 2533 115e FB73     		strb	r3, [r7, #15]
1071:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.NSAC = tmp;
 2534              		.loc 1 1071 0
 2535 1160 7B68     		ldr	r3, [r7, #4]
 2536 1162 FA7B     		ldrb	r2, [r7, #15]
 2537 1164 1A71     		strb	r2, [r3, #4]
1072:../tasks/SDMMC/sd_diskio.c **** 
1073:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 3 */
1074:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)(CSD_Tab[0] & 0x000000FF);
 2538              		.loc 1 1074 0
 2539 1166 40F20003 		movw	r3, #:lower16:CSD_Tab
 2540 116a C0F20003 		movt	r3, #:upper16:CSD_Tab
 2541 116e 1B68     		ldr	r3, [r3]
 2542 1170 FB73     		strb	r3, [r7, #15]
1075:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.MaxBusClkFrec = tmp;
 2543              		.loc 1 1075 0
 2544 1172 7B68     		ldr	r3, [r7, #4]
 2545 1174 FA7B     		ldrb	r2, [r7, #15]
 2546 1176 5A71     		strb	r2, [r3, #5]
1076:../tasks/SDMMC/sd_diskio.c **** 
1077:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 4 */
1078:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)((CSD_Tab[1] & 0xFF000000) >> 24);
 2547              		.loc 1 1078 0
 2548 1178 40F20003 		movw	r3, #:lower16:CSD_Tab
 2549 117c C0F20003 		movt	r3, #:upper16:CSD_Tab
 2550 1180 5B68     		ldr	r3, [r3, #4]
 2551 1182 1B0E     		lsrs	r3, r3, #24
 2552 1184 FB73     		strb	r3, [r7, #15]
1079:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.CardComdClasses = tmp << 4;
 2553              		.loc 1 1079 0
 2554 1186 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2555 1188 9BB2     		uxth	r3, r3
 2556 118a 1B01     		lsls	r3, r3, #4
 2557 118c 9AB2     		uxth	r2, r3
 2558 118e 7B68     		ldr	r3, [r7, #4]
 2559 1190 DA80     		strh	r2, [r3, #6]	@ movhi
1080:../tasks/SDMMC/sd_diskio.c **** 
1081:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 5 */
1082:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)((CSD_Tab[1] & 0x00FF0000) >> 16);
 2560              		.loc 1 1082 0
 2561 1192 40F20003 		movw	r3, #:lower16:CSD_Tab
 2562 1196 C0F20003 		movt	r3, #:upper16:CSD_Tab
 2563 119a 5B68     		ldr	r3, [r3, #4]
 2564 119c 03F47F03 		and	r3, r3, #16711680
 2565 11a0 1B0C     		lsrs	r3, r3, #16
 2566 11a2 FB73     		strb	r3, [r7, #15]
1083:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.CardComdClasses |= (tmp & 0xF0) >> 4;
 2567              		.loc 1 1083 0
 2568 11a4 7B68     		ldr	r3, [r7, #4]
 2569 11a6 DB88     		ldrh	r3, [r3, #6]	@ movhi
 2570 11a8 9AB2     		uxth	r2, r3
 2571 11aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2572 11ac 1B09     		lsrs	r3, r3, #4
 2573 11ae DBB2     		uxtb	r3, r3
 2574 11b0 1343     		orrs	r3, r3, r2
 2575 11b2 9AB2     		uxth	r2, r3
 2576 11b4 7B68     		ldr	r3, [r7, #4]
 2577 11b6 DA80     		strh	r2, [r3, #6]	@ movhi
1084:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.RdBlockLen = tmp & 0x0F;
 2578              		.loc 1 1084 0
 2579 11b8 FB7B     		ldrb	r3, [r7, #15]
 2580 11ba 03F00F03 		and	r3, r3, #15
 2581 11be DAB2     		uxtb	r2, r3
 2582 11c0 7B68     		ldr	r3, [r7, #4]
 2583 11c2 1A72     		strb	r2, [r3, #8]
1085:../tasks/SDMMC/sd_diskio.c **** 
1086:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 6 */
1087:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)((CSD_Tab[1] & 0x0000FF00) >> 8);
 2584              		.loc 1 1087 0
 2585 11c4 40F20003 		movw	r3, #:lower16:CSD_Tab
 2586 11c8 C0F20003 		movt	r3, #:upper16:CSD_Tab
 2587 11cc 5B68     		ldr	r3, [r3, #4]
 2588 11ce 03F47F43 		and	r3, r3, #65280
 2589 11d2 1B0A     		lsrs	r3, r3, #8
 2590 11d4 FB73     		strb	r3, [r7, #15]
1088:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.PartBlockRead = (tmp & 0x80) >> 7;
 2591              		.loc 1 1088 0
 2592 11d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2593 11d8 DB09     		lsrs	r3, r3, #7
 2594 11da DAB2     		uxtb	r2, r3
 2595 11dc 7B68     		ldr	r3, [r7, #4]
 2596 11de 5A72     		strb	r2, [r3, #9]
1089:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.WrBlockMisalign = (tmp & 0x40) >> 6;
 2597              		.loc 1 1089 0
 2598 11e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2599 11e2 03F04003 		and	r3, r3, #64
 2600 11e6 9B11     		asrs	r3, r3, #6
 2601 11e8 DAB2     		uxtb	r2, r3
 2602 11ea 7B68     		ldr	r3, [r7, #4]
 2603 11ec 9A72     		strb	r2, [r3, #10]
1090:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.RdBlockMisalign = (tmp & 0x20) >> 5;
 2604              		.loc 1 1090 0
 2605 11ee FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2606 11f0 03F02003 		and	r3, r3, #32
 2607 11f4 5B11     		asrs	r3, r3, #5
 2608 11f6 DAB2     		uxtb	r2, r3
 2609 11f8 7B68     		ldr	r3, [r7, #4]
 2610 11fa DA72     		strb	r2, [r3, #11]
1091:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.DSRImpl = (tmp & 0x10) >> 4;
 2611              		.loc 1 1091 0
 2612 11fc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2613 11fe 03F01003 		and	r3, r3, #16
 2614 1202 1B11     		asrs	r3, r3, #4
 2615 1204 DAB2     		uxtb	r2, r3
 2616 1206 7B68     		ldr	r3, [r7, #4]
 2617 1208 1A73     		strb	r2, [r3, #12]
1092:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.Reserved2 = 0; /*!< Reserved */
 2618              		.loc 1 1092 0
 2619 120a 7B68     		ldr	r3, [r7, #4]
 2620 120c 0022     		movs	r2, #0
 2621 120e 5A73     		strb	r2, [r3, #13]
1093:../tasks/SDMMC/sd_diskio.c **** 
1094:../tasks/SDMMC/sd_diskio.c ****   if ((IsCardType == SDIO_STD_CAPACITY_SD_CARD_V1_1) || (IsCardType == SDIO_STD_CAPACITY_SD_CARD_V2
 2622              		.loc 1 1094 0
 2623 1210 40F20003 		movw	r3, #:lower16:IsCardType
 2624 1214 C0F20003 		movt	r3, #:upper16:IsCardType
 2625 1218 1B68     		ldr	r3, [r3]
 2626 121a 002B     		cmp	r3, #0
 2627 121c 07D0     		beq	.L131
 2628              		.loc 1 1094 0 is_stmt 0 discriminator 1
 2629 121e 40F20003 		movw	r3, #:lower16:IsCardType
 2630 1222 C0F20003 		movt	r3, #:upper16:IsCardType
 2631 1226 1B68     		ldr	r3, [r3]
 2632 1228 012B     		cmp	r3, #1
 2633 122a 40F0A080 		bne	.L132
 2634              	.L131:
1095:../tasks/SDMMC/sd_diskio.c ****   {
1096:../tasks/SDMMC/sd_diskio.c ****     cardinfo->SD_csd.DeviceSize = (tmp & 0x03) << 10;
 2635              		.loc 1 1096 0 is_stmt 1
 2636 122e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2637 1230 03F00303 		and	r3, r3, #3
 2638 1234 9B02     		lsls	r3, r3, #10
 2639 1236 1A46     		mov	r2, r3
 2640 1238 7B68     		ldr	r3, [r7, #4]
 2641 123a 1A61     		str	r2, [r3, #16]
1097:../tasks/SDMMC/sd_diskio.c **** 
1098:../tasks/SDMMC/sd_diskio.c ****     /*!< Byte 7 */
1099:../tasks/SDMMC/sd_diskio.c ****     tmp = (uint8_t)(CSD_Tab[1] & 0x000000FF);
 2642              		.loc 1 1099 0
 2643 123c 40F20003 		movw	r3, #:lower16:CSD_Tab
 2644 1240 C0F20003 		movt	r3, #:upper16:CSD_Tab
 2645 1244 5B68     		ldr	r3, [r3, #4]
 2646 1246 FB73     		strb	r3, [r7, #15]
1100:../tasks/SDMMC/sd_diskio.c ****     cardinfo->SD_csd.DeviceSize |= (tmp) << 2;
 2647              		.loc 1 1100 0
 2648 1248 7B68     		ldr	r3, [r7, #4]
 2649 124a 1A69     		ldr	r2, [r3, #16]
 2650 124c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2651 124e 9B00     		lsls	r3, r3, #2
 2652 1250 1A43     		orrs	r2, r2, r3
 2653 1252 7B68     		ldr	r3, [r7, #4]
 2654 1254 1A61     		str	r2, [r3, #16]
1101:../tasks/SDMMC/sd_diskio.c **** 
1102:../tasks/SDMMC/sd_diskio.c ****     /*!< Byte 8 */
1103:../tasks/SDMMC/sd_diskio.c ****     tmp = (uint8_t)((CSD_Tab[2] & 0xFF000000) >> 24);
 2655              		.loc 1 1103 0
 2656 1256 40F20003 		movw	r3, #:lower16:CSD_Tab
 2657 125a C0F20003 		movt	r3, #:upper16:CSD_Tab
 2658 125e 9B68     		ldr	r3, [r3, #8]
 2659 1260 1B0E     		lsrs	r3, r3, #24
 2660 1262 FB73     		strb	r3, [r7, #15]
1104:../tasks/SDMMC/sd_diskio.c ****     cardinfo->SD_csd.DeviceSize |= (tmp & 0xC0) >> 6;
 2661              		.loc 1 1104 0
 2662 1264 7B68     		ldr	r3, [r7, #4]
 2663 1266 1A69     		ldr	r2, [r3, #16]
 2664 1268 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2665 126a 9B09     		lsrs	r3, r3, #6
 2666 126c DBB2     		uxtb	r3, r3
 2667 126e 1A43     		orrs	r2, r2, r3
 2668 1270 7B68     		ldr	r3, [r7, #4]
 2669 1272 1A61     		str	r2, [r3, #16]
1105:../tasks/SDMMC/sd_diskio.c **** 
1106:../tasks/SDMMC/sd_diskio.c ****     cardinfo->SD_csd.MaxRdCurrentVDDMin = (tmp & 0x38) >> 3;
 2670              		.loc 1 1106 0
 2671 1274 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2672 1276 03F03803 		and	r3, r3, #56
 2673 127a DB10     		asrs	r3, r3, #3
 2674 127c DAB2     		uxtb	r2, r3
 2675 127e 7B68     		ldr	r3, [r7, #4]
 2676 1280 1A75     		strb	r2, [r3, #20]
1107:../tasks/SDMMC/sd_diskio.c ****     cardinfo->SD_csd.MaxRdCurrentVDDMax = (tmp & 0x07);
 2677              		.loc 1 1107 0
 2678 1282 FB7B     		ldrb	r3, [r7, #15]
 2679 1284 03F00703 		and	r3, r3, #7
 2680 1288 DAB2     		uxtb	r2, r3
 2681 128a 7B68     		ldr	r3, [r7, #4]
 2682 128c 5A75     		strb	r2, [r3, #21]
1108:../tasks/SDMMC/sd_diskio.c **** 
1109:../tasks/SDMMC/sd_diskio.c ****     /*!< Byte 9 */
1110:../tasks/SDMMC/sd_diskio.c ****     tmp = (uint8_t)((CSD_Tab[2] & 0x00FF0000) >> 16);
 2683              		.loc 1 1110 0
 2684 128e 40F20003 		movw	r3, #:lower16:CSD_Tab
 2685 1292 C0F20003 		movt	r3, #:upper16:CSD_Tab
 2686 1296 9B68     		ldr	r3, [r3, #8]
 2687 1298 03F47F03 		and	r3, r3, #16711680
 2688 129c 1B0C     		lsrs	r3, r3, #16
 2689 129e FB73     		strb	r3, [r7, #15]
1111:../tasks/SDMMC/sd_diskio.c ****     cardinfo->SD_csd.MaxWrCurrentVDDMin = (tmp & 0xE0) >> 5;
 2690              		.loc 1 1111 0
 2691 12a0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2692 12a2 5B09     		lsrs	r3, r3, #5
 2693 12a4 DAB2     		uxtb	r2, r3
 2694 12a6 7B68     		ldr	r3, [r7, #4]
 2695 12a8 9A75     		strb	r2, [r3, #22]
1112:../tasks/SDMMC/sd_diskio.c ****     cardinfo->SD_csd.MaxWrCurrentVDDMax = (tmp & 0x1C) >> 2;
 2696              		.loc 1 1112 0
 2697 12aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2698 12ac 03F01C03 		and	r3, r3, #28
 2699 12b0 9B10     		asrs	r3, r3, #2
 2700 12b2 DAB2     		uxtb	r2, r3
 2701 12b4 7B68     		ldr	r3, [r7, #4]
 2702 12b6 DA75     		strb	r2, [r3, #23]
1113:../tasks/SDMMC/sd_diskio.c ****     cardinfo->SD_csd.DeviceSizeMul = (tmp & 0x03) << 1;
 2703              		.loc 1 1113 0
 2704 12b8 FB7B     		ldrb	r3, [r7, #15]
 2705 12ba 03F00303 		and	r3, r3, #3
 2706 12be DBB2     		uxtb	r3, r3
 2707 12c0 5B00     		lsls	r3, r3, #1
 2708 12c2 DAB2     		uxtb	r2, r3
 2709 12c4 7B68     		ldr	r3, [r7, #4]
 2710 12c6 1A76     		strb	r2, [r3, #24]
1114:../tasks/SDMMC/sd_diskio.c ****     /*!< Byte 10 */
1115:../tasks/SDMMC/sd_diskio.c ****     tmp = (uint8_t)((CSD_Tab[2] & 0x0000FF00) >> 8);
 2711              		.loc 1 1115 0
 2712 12c8 40F20003 		movw	r3, #:lower16:CSD_Tab
 2713 12cc C0F20003 		movt	r3, #:upper16:CSD_Tab
 2714 12d0 9B68     		ldr	r3, [r3, #8]
 2715 12d2 03F47F43 		and	r3, r3, #65280
 2716 12d6 1B0A     		lsrs	r3, r3, #8
 2717 12d8 FB73     		strb	r3, [r7, #15]
1116:../tasks/SDMMC/sd_diskio.c ****     cardinfo->SD_csd.DeviceSizeMul |= (tmp & 0x80) >> 7;
 2718              		.loc 1 1116 0
 2719 12da 7B68     		ldr	r3, [r7, #4]
 2720 12dc 1B7E     		ldrb	r3, [r3, #24]
 2721 12de DAB2     		uxtb	r2, r3
 2722 12e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2723 12e2 DB09     		lsrs	r3, r3, #7
 2724 12e4 DBB2     		uxtb	r3, r3
 2725 12e6 1343     		orrs	r3, r3, r2
 2726 12e8 DAB2     		uxtb	r2, r3
 2727 12ea 7B68     		ldr	r3, [r7, #4]
 2728 12ec 1A76     		strb	r2, [r3, #24]
1117:../tasks/SDMMC/sd_diskio.c **** 
1118:../tasks/SDMMC/sd_diskio.c ****     cardinfo->CardCapacity = (cardinfo->SD_csd.DeviceSize + 1) ;
 2729              		.loc 1 1118 0
 2730 12ee 7B68     		ldr	r3, [r7, #4]
 2731 12f0 1B69     		ldr	r3, [r3, #16]
 2732 12f2 0133     		adds	r3, r3, #1
 2733 12f4 1A46     		mov	r2, r3
 2734 12f6 4FF00003 		mov	r3, #0
 2735 12fa 7968     		ldr	r1, [r7, #4]
 2736 12fc C1E91223 		strd	r2, [r1, #72]
1119:../tasks/SDMMC/sd_diskio.c ****     cardinfo->CardCapacity *= (1 << (cardinfo->SD_csd.DeviceSizeMul + 2));
 2737              		.loc 1 1119 0
 2738 1300 7B68     		ldr	r3, [r7, #4]
 2739 1302 D3E91201 		ldrd	r0, [r3, #72]
 2740 1306 7B68     		ldr	r3, [r7, #4]
 2741 1308 1B7E     		ldrb	r3, [r3, #24]
 2742 130a DBB2     		uxtb	r3, r3
 2743 130c 0233     		adds	r3, r3, #2
 2744 130e 0122     		movs	r2, #1
 2745 1310 02FA03F3 		lsl	r3, r2, r3
 2746 1314 1A46     		mov	r2, r3
 2747 1316 4FEAE273 		asr	r3, r2, #31
 2748 131a 02FB01F5 		mul	r5, r2, r1
 2749 131e 00FB03F4 		mul	r4, r0, r3
 2750 1322 2C44     		add	r4, r4, r5
 2751 1324 A0FB0223 		umull	r2, r3, r0, r2
 2752 1328 E118     		adds	r1, r4, r3
 2753 132a 0B46     		mov	r3, r1
 2754 132c 7968     		ldr	r1, [r7, #4]
 2755 132e C1E91223 		strd	r2, [r1, #72]
1120:../tasks/SDMMC/sd_diskio.c ****     cardinfo->CardBlockSize = 1 << (cardinfo->SD_csd.RdBlockLen);
 2756              		.loc 1 1120 0
 2757 1332 7B68     		ldr	r3, [r7, #4]
 2758 1334 1B7A     		ldrb	r3, [r3, #8]
 2759 1336 DBB2     		uxtb	r3, r3
 2760 1338 0122     		movs	r2, #1
 2761 133a 02FA03F3 		lsl	r3, r2, r3
 2762 133e 1A46     		mov	r2, r3
 2763 1340 7B68     		ldr	r3, [r7, #4]
 2764 1342 1A65     		str	r2, [r3, #80]
1121:../tasks/SDMMC/sd_diskio.c ****     cardinfo->CardCapacity *= cardinfo->CardBlockSize;
 2765              		.loc 1 1121 0
 2766 1344 7B68     		ldr	r3, [r7, #4]
 2767 1346 D3E91201 		ldrd	r0, [r3, #72]
 2768 134a 7B68     		ldr	r3, [r7, #4]
 2769 134c 1B6D     		ldr	r3, [r3, #80]
 2770 134e 1A46     		mov	r2, r3
 2771 1350 4FF00003 		mov	r3, #0
 2772 1354 02FB01F5 		mul	r5, r2, r1
 2773 1358 00FB03F4 		mul	r4, r0, r3
 2774 135c 2C44     		add	r4, r4, r5
 2775 135e A0FB0223 		umull	r2, r3, r0, r2
 2776 1362 E118     		adds	r1, r4, r3
 2777 1364 0B46     		mov	r3, r1
 2778 1366 7968     		ldr	r1, [r7, #4]
 2779 1368 C1E91223 		strd	r2, [r1, #72]
 2780 136c 47E0     		b	.L133
 2781              	.L132:
1122:../tasks/SDMMC/sd_diskio.c ****   }
1123:../tasks/SDMMC/sd_diskio.c ****   else if (IsCardType == SDIO_HIGH_CAPACITY_SD_CARD)
 2782              		.loc 1 1123 0
 2783 136e 40F20003 		movw	r3, #:lower16:IsCardType
 2784 1372 C0F20003 		movt	r3, #:upper16:IsCardType
 2785 1376 1B68     		ldr	r3, [r3]
 2786 1378 022B     		cmp	r3, #2
 2787 137a 40D1     		bne	.L133
1124:../tasks/SDMMC/sd_diskio.c ****   {
1125:../tasks/SDMMC/sd_diskio.c ****     /*!< Byte 7 */
1126:../tasks/SDMMC/sd_diskio.c ****     tmp = (uint8_t)(CSD_Tab[1] & 0x000000FF);
 2788              		.loc 1 1126 0
 2789 137c 40F20003 		movw	r3, #:lower16:CSD_Tab
 2790 1380 C0F20003 		movt	r3, #:upper16:CSD_Tab
 2791 1384 5B68     		ldr	r3, [r3, #4]
 2792 1386 FB73     		strb	r3, [r7, #15]
1127:../tasks/SDMMC/sd_diskio.c ****     cardinfo->SD_csd.DeviceSize = (tmp & 0x3F) << 16;
 2793              		.loc 1 1127 0
 2794 1388 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2795 138a 03F03F03 		and	r3, r3, #63
 2796 138e 1B04     		lsls	r3, r3, #16
 2797 1390 1A46     		mov	r2, r3
 2798 1392 7B68     		ldr	r3, [r7, #4]
 2799 1394 1A61     		str	r2, [r3, #16]
1128:../tasks/SDMMC/sd_diskio.c **** 
1129:../tasks/SDMMC/sd_diskio.c ****     /*!< Byte 8 */
1130:../tasks/SDMMC/sd_diskio.c ****     tmp = (uint8_t)((CSD_Tab[2] & 0xFF000000) >> 24);
 2800              		.loc 1 1130 0
 2801 1396 40F20003 		movw	r3, #:lower16:CSD_Tab
 2802 139a C0F20003 		movt	r3, #:upper16:CSD_Tab
 2803 139e 9B68     		ldr	r3, [r3, #8]
 2804 13a0 1B0E     		lsrs	r3, r3, #24
 2805 13a2 FB73     		strb	r3, [r7, #15]
1131:../tasks/SDMMC/sd_diskio.c **** 
1132:../tasks/SDMMC/sd_diskio.c ****     cardinfo->SD_csd.DeviceSize |= (tmp << 8);
 2806              		.loc 1 1132 0
 2807 13a4 7B68     		ldr	r3, [r7, #4]
 2808 13a6 1A69     		ldr	r2, [r3, #16]
 2809 13a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2810 13aa 1B02     		lsls	r3, r3, #8
 2811 13ac 1A43     		orrs	r2, r2, r3
 2812 13ae 7B68     		ldr	r3, [r7, #4]
 2813 13b0 1A61     		str	r2, [r3, #16]
1133:../tasks/SDMMC/sd_diskio.c **** 
1134:../tasks/SDMMC/sd_diskio.c ****     /*!< Byte 9 */
1135:../tasks/SDMMC/sd_diskio.c ****     tmp = (uint8_t)((CSD_Tab[2] & 0x00FF0000) >> 16);
 2814              		.loc 1 1135 0
 2815 13b2 40F20003 		movw	r3, #:lower16:CSD_Tab
 2816 13b6 C0F20003 		movt	r3, #:upper16:CSD_Tab
 2817 13ba 9B68     		ldr	r3, [r3, #8]
 2818 13bc 03F47F03 		and	r3, r3, #16711680
 2819 13c0 1B0C     		lsrs	r3, r3, #16
 2820 13c2 FB73     		strb	r3, [r7, #15]
1136:../tasks/SDMMC/sd_diskio.c **** 
1137:../tasks/SDMMC/sd_diskio.c ****     cardinfo->SD_csd.DeviceSize |= (tmp);
 2821              		.loc 1 1137 0
 2822 13c4 7B68     		ldr	r3, [r7, #4]
 2823 13c6 1A69     		ldr	r2, [r3, #16]
 2824 13c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2825 13ca 1A43     		orrs	r2, r2, r3
 2826 13cc 7B68     		ldr	r3, [r7, #4]
 2827 13ce 1A61     		str	r2, [r3, #16]
1138:../tasks/SDMMC/sd_diskio.c **** 
1139:../tasks/SDMMC/sd_diskio.c ****     /*!< Byte 10 */
1140:../tasks/SDMMC/sd_diskio.c ****     tmp = (uint8_t)((CSD_Tab[2] & 0x0000FF00) >> 8);
 2828              		.loc 1 1140 0
 2829 13d0 40F20003 		movw	r3, #:lower16:CSD_Tab
 2830 13d4 C0F20003 		movt	r3, #:upper16:CSD_Tab
 2831 13d8 9B68     		ldr	r3, [r3, #8]
 2832 13da 03F47F43 		and	r3, r3, #65280
 2833 13de 1B0A     		lsrs	r3, r3, #8
 2834 13e0 FB73     		strb	r3, [r7, #15]
1141:../tasks/SDMMC/sd_diskio.c **** 
1142:../tasks/SDMMC/sd_diskio.c ****     cardinfo->CardCapacity = (cardinfo->SD_csd.DeviceSize + 1) * 512 * 1024;
 2835              		.loc 1 1142 0
 2836 13e2 7B68     		ldr	r3, [r7, #4]
 2837 13e4 1B69     		ldr	r3, [r3, #16]
 2838 13e6 0133     		adds	r3, r3, #1
 2839 13e8 DB04     		lsls	r3, r3, #19
 2840 13ea 1A46     		mov	r2, r3
 2841 13ec 4FF00003 		mov	r3, #0
 2842 13f0 7968     		ldr	r1, [r7, #4]
 2843 13f2 C1E91223 		strd	r2, [r1, #72]
1143:../tasks/SDMMC/sd_diskio.c ****     cardinfo->CardBlockSize = 512;
 2844              		.loc 1 1143 0
 2845 13f6 7B68     		ldr	r3, [r7, #4]
 2846 13f8 4FF40072 		mov	r2, #512
 2847 13fc 1A65     		str	r2, [r3, #80]
 2848              	.L133:
1144:../tasks/SDMMC/sd_diskio.c ****   }
1145:../tasks/SDMMC/sd_diskio.c **** 
1146:../tasks/SDMMC/sd_diskio.c **** 
1147:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.EraseGrSize = (tmp & 0x40) >> 6;
 2849              		.loc 1 1147 0
 2850 13fe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2851 1400 03F04003 		and	r3, r3, #64
 2852 1404 9B11     		asrs	r3, r3, #6
 2853 1406 DAB2     		uxtb	r2, r3
 2854 1408 7B68     		ldr	r3, [r7, #4]
 2855 140a 5A76     		strb	r2, [r3, #25]
1148:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.EraseGrMul = (tmp & 0x3F) << 1;
 2856              		.loc 1 1148 0
 2857 140c FB7B     		ldrb	r3, [r7, #15]
 2858 140e 03F03F03 		and	r3, r3, #63
 2859 1412 DBB2     		uxtb	r3, r3
 2860 1414 5B00     		lsls	r3, r3, #1
 2861 1416 DAB2     		uxtb	r2, r3
 2862 1418 7B68     		ldr	r3, [r7, #4]
 2863 141a 9A76     		strb	r2, [r3, #26]
1149:../tasks/SDMMC/sd_diskio.c **** 
1150:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 11 */
1151:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)(CSD_Tab[2] & 0x000000FF);
 2864              		.loc 1 1151 0
 2865 141c 40F20003 		movw	r3, #:lower16:CSD_Tab
 2866 1420 C0F20003 		movt	r3, #:upper16:CSD_Tab
 2867 1424 9B68     		ldr	r3, [r3, #8]
 2868 1426 FB73     		strb	r3, [r7, #15]
1152:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.EraseGrMul |= (tmp & 0x80) >> 7;
 2869              		.loc 1 1152 0
 2870 1428 7B68     		ldr	r3, [r7, #4]
 2871 142a 9B7E     		ldrb	r3, [r3, #26]
 2872 142c DAB2     		uxtb	r2, r3
 2873 142e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2874 1430 DB09     		lsrs	r3, r3, #7
 2875 1432 DBB2     		uxtb	r3, r3
 2876 1434 1343     		orrs	r3, r3, r2
 2877 1436 DAB2     		uxtb	r2, r3
 2878 1438 7B68     		ldr	r3, [r7, #4]
 2879 143a 9A76     		strb	r2, [r3, #26]
1153:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.WrProtectGrSize = (tmp & 0x7F);
 2880              		.loc 1 1153 0
 2881 143c FB7B     		ldrb	r3, [r7, #15]
 2882 143e 03F07F03 		and	r3, r3, #127
 2883 1442 DAB2     		uxtb	r2, r3
 2884 1444 7B68     		ldr	r3, [r7, #4]
 2885 1446 DA76     		strb	r2, [r3, #27]
1154:../tasks/SDMMC/sd_diskio.c **** 
1155:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 12 */
1156:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)((CSD_Tab[3] & 0xFF000000) >> 24);
 2886              		.loc 1 1156 0
 2887 1448 40F20003 		movw	r3, #:lower16:CSD_Tab
 2888 144c C0F20003 		movt	r3, #:upper16:CSD_Tab
 2889 1450 DB68     		ldr	r3, [r3, #12]
 2890 1452 1B0E     		lsrs	r3, r3, #24
 2891 1454 FB73     		strb	r3, [r7, #15]
1157:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.WrProtectGrEnable = (tmp & 0x80) >> 7;
 2892              		.loc 1 1157 0
 2893 1456 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2894 1458 DB09     		lsrs	r3, r3, #7
 2895 145a DAB2     		uxtb	r2, r3
 2896 145c 7B68     		ldr	r3, [r7, #4]
 2897 145e 1A77     		strb	r2, [r3, #28]
1158:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.ManDeflECC = (tmp & 0x60) >> 5;
 2898              		.loc 1 1158 0
 2899 1460 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2900 1462 03F06003 		and	r3, r3, #96
 2901 1466 5B11     		asrs	r3, r3, #5
 2902 1468 DAB2     		uxtb	r2, r3
 2903 146a 7B68     		ldr	r3, [r7, #4]
 2904 146c 5A77     		strb	r2, [r3, #29]
1159:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.WrSpeedFact = (tmp & 0x1C) >> 2;
 2905              		.loc 1 1159 0
 2906 146e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2907 1470 03F01C03 		and	r3, r3, #28
 2908 1474 9B10     		asrs	r3, r3, #2
 2909 1476 DAB2     		uxtb	r2, r3
 2910 1478 7B68     		ldr	r3, [r7, #4]
 2911 147a 9A77     		strb	r2, [r3, #30]
1160:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.MaxWrBlockLen = (tmp & 0x03) << 2;
 2912              		.loc 1 1160 0
 2913 147c FB7B     		ldrb	r3, [r7, #15]
 2914 147e 03F00303 		and	r3, r3, #3
 2915 1482 DBB2     		uxtb	r3, r3
 2916 1484 9B00     		lsls	r3, r3, #2
 2917 1486 DAB2     		uxtb	r2, r3
 2918 1488 7B68     		ldr	r3, [r7, #4]
 2919 148a DA77     		strb	r2, [r3, #31]
1161:../tasks/SDMMC/sd_diskio.c **** 
1162:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 13 */
1163:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)((CSD_Tab[3] & 0x00FF0000) >> 16);
 2920              		.loc 1 1163 0
 2921 148c 40F20003 		movw	r3, #:lower16:CSD_Tab
 2922 1490 C0F20003 		movt	r3, #:upper16:CSD_Tab
 2923 1494 DB68     		ldr	r3, [r3, #12]
 2924 1496 03F47F03 		and	r3, r3, #16711680
 2925 149a 1B0C     		lsrs	r3, r3, #16
 2926 149c FB73     		strb	r3, [r7, #15]
1164:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.MaxWrBlockLen |= (tmp & 0xC0) >> 6;
 2927              		.loc 1 1164 0
 2928 149e 7B68     		ldr	r3, [r7, #4]
 2929 14a0 DB7F     		ldrb	r3, [r3, #31]
 2930 14a2 DAB2     		uxtb	r2, r3
 2931 14a4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2932 14a6 9B09     		lsrs	r3, r3, #6
 2933 14a8 DBB2     		uxtb	r3, r3
 2934 14aa 1343     		orrs	r3, r3, r2
 2935 14ac DAB2     		uxtb	r2, r3
 2936 14ae 7B68     		ldr	r3, [r7, #4]
 2937 14b0 DA77     		strb	r2, [r3, #31]
1165:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.WriteBlockPaPartial = (tmp & 0x20) >> 5;
 2938              		.loc 1 1165 0
 2939 14b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2940 14b4 03F02003 		and	r3, r3, #32
 2941 14b8 5B11     		asrs	r3, r3, #5
 2942 14ba DAB2     		uxtb	r2, r3
 2943 14bc 7B68     		ldr	r3, [r7, #4]
 2944 14be 83F82020 		strb	r2, [r3, #32]
1166:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.Reserved3 = 0;
 2945              		.loc 1 1166 0
 2946 14c2 7B68     		ldr	r3, [r7, #4]
 2947 14c4 0022     		movs	r2, #0
 2948 14c6 83F82120 		strb	r2, [r3, #33]
1167:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.ContentProtectAppli = (tmp & 0x01);
 2949              		.loc 1 1167 0
 2950 14ca FB7B     		ldrb	r3, [r7, #15]
 2951 14cc 03F00103 		and	r3, r3, #1
 2952 14d0 DAB2     		uxtb	r2, r3
 2953 14d2 7B68     		ldr	r3, [r7, #4]
 2954 14d4 83F82220 		strb	r2, [r3, #34]
1168:../tasks/SDMMC/sd_diskio.c **** 
1169:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 14 */
1170:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)((CSD_Tab[3] & 0x0000FF00) >> 8);
 2955              		.loc 1 1170 0
 2956 14d8 40F20003 		movw	r3, #:lower16:CSD_Tab
 2957 14dc C0F20003 		movt	r3, #:upper16:CSD_Tab
 2958 14e0 DB68     		ldr	r3, [r3, #12]
 2959 14e2 03F47F43 		and	r3, r3, #65280
 2960 14e6 1B0A     		lsrs	r3, r3, #8
 2961 14e8 FB73     		strb	r3, [r7, #15]
1171:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.FileFormatGrouop = (tmp & 0x80) >> 7;
 2962              		.loc 1 1171 0
 2963 14ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2964 14ec DB09     		lsrs	r3, r3, #7
 2965 14ee DAB2     		uxtb	r2, r3
 2966 14f0 7B68     		ldr	r3, [r7, #4]
 2967 14f2 83F82320 		strb	r2, [r3, #35]
1172:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.CopyFlag = (tmp & 0x40) >> 6;
 2968              		.loc 1 1172 0
 2969 14f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2970 14f8 03F04003 		and	r3, r3, #64
 2971 14fc 9B11     		asrs	r3, r3, #6
 2972 14fe DAB2     		uxtb	r2, r3
 2973 1500 7B68     		ldr	r3, [r7, #4]
 2974 1502 83F82420 		strb	r2, [r3, #36]
1173:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.PermWrProtect = (tmp & 0x20) >> 5;
 2975              		.loc 1 1173 0
 2976 1506 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2977 1508 03F02003 		and	r3, r3, #32
 2978 150c 5B11     		asrs	r3, r3, #5
 2979 150e DAB2     		uxtb	r2, r3
 2980 1510 7B68     		ldr	r3, [r7, #4]
 2981 1512 83F82520 		strb	r2, [r3, #37]
1174:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.TempWrProtect = (tmp & 0x10) >> 4;
 2982              		.loc 1 1174 0
 2983 1516 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2984 1518 03F01003 		and	r3, r3, #16
 2985 151c 1B11     		asrs	r3, r3, #4
 2986 151e DAB2     		uxtb	r2, r3
 2987 1520 7B68     		ldr	r3, [r7, #4]
 2988 1522 83F82620 		strb	r2, [r3, #38]
1175:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.FileFormat = (tmp & 0x0C) >> 2;
 2989              		.loc 1 1175 0
 2990 1526 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2991 1528 03F00C03 		and	r3, r3, #12
 2992 152c 9B10     		asrs	r3, r3, #2
 2993 152e DAB2     		uxtb	r2, r3
 2994 1530 7B68     		ldr	r3, [r7, #4]
 2995 1532 83F82720 		strb	r2, [r3, #39]
1176:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.ECC = (tmp & 0x03);
 2996              		.loc 1 1176 0
 2997 1536 FB7B     		ldrb	r3, [r7, #15]
 2998 1538 03F00303 		and	r3, r3, #3
 2999 153c DAB2     		uxtb	r2, r3
 3000 153e 7B68     		ldr	r3, [r7, #4]
 3001 1540 83F82820 		strb	r2, [r3, #40]
1177:../tasks/SDMMC/sd_diskio.c **** 
1178:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 15 */
1179:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)(CSD_Tab[3] & 0x000000FF);
 3002              		.loc 1 1179 0
 3003 1544 40F20003 		movw	r3, #:lower16:CSD_Tab
 3004 1548 C0F20003 		movt	r3, #:upper16:CSD_Tab
 3005 154c DB68     		ldr	r3, [r3, #12]
 3006 154e FB73     		strb	r3, [r7, #15]
1180:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.CSD_CRC = (tmp & 0xFE) >> 1;
 3007              		.loc 1 1180 0
 3008 1550 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3009 1552 5B08     		lsrs	r3, r3, #1
 3010 1554 DAB2     		uxtb	r2, r3
 3011 1556 7B68     		ldr	r3, [r7, #4]
 3012 1558 83F82920 		strb	r2, [r3, #41]
1181:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_csd.Reserved4 = 1;
 3013              		.loc 1 1181 0
 3014 155c 7B68     		ldr	r3, [r7, #4]
 3015 155e 0122     		movs	r2, #1
 3016 1560 83F82A20 		strb	r2, [r3, #42]
1182:../tasks/SDMMC/sd_diskio.c **** 
1183:../tasks/SDMMC/sd_diskio.c **** 
1184:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 0 */
1185:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)((CID_Tab[0] & 0xFF000000) >> 24);
 3017              		.loc 1 1185 0
 3018 1564 40F20003 		movw	r3, #:lower16:CID_Tab
 3019 1568 C0F20003 		movt	r3, #:upper16:CID_Tab
 3020 156c 1B68     		ldr	r3, [r3]
 3021 156e 1B0E     		lsrs	r3, r3, #24
 3022 1570 FB73     		strb	r3, [r7, #15]
1186:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_cid.ManufacturerID = tmp;
 3023              		.loc 1 1186 0
 3024 1572 7B68     		ldr	r3, [r7, #4]
 3025 1574 FA7B     		ldrb	r2, [r7, #15]
 3026 1576 83F82C20 		strb	r2, [r3, #44]
1187:../tasks/SDMMC/sd_diskio.c **** 
1188:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 1 */
1189:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)((CID_Tab[0] & 0x00FF0000) >> 16);
 3027              		.loc 1 1189 0
 3028 157a 40F20003 		movw	r3, #:lower16:CID_Tab
 3029 157e C0F20003 		movt	r3, #:upper16:CID_Tab
 3030 1582 1B68     		ldr	r3, [r3]
 3031 1584 03F47F03 		and	r3, r3, #16711680
 3032 1588 1B0C     		lsrs	r3, r3, #16
 3033 158a FB73     		strb	r3, [r7, #15]
1190:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_cid.OEM_AppliID = tmp << 8;
 3034              		.loc 1 1190 0
 3035 158c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3036 158e 9BB2     		uxth	r3, r3
 3037 1590 1B02     		lsls	r3, r3, #8
 3038 1592 9AB2     		uxth	r2, r3
 3039 1594 7B68     		ldr	r3, [r7, #4]
 3040 1596 DA85     		strh	r2, [r3, #46]	@ movhi
1191:../tasks/SDMMC/sd_diskio.c **** 
1192:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 2 */
1193:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)((CID_Tab[0] & 0x000000FF00) >> 8);
 3041              		.loc 1 1193 0
 3042 1598 40F20003 		movw	r3, #:lower16:CID_Tab
 3043 159c C0F20003 		movt	r3, #:upper16:CID_Tab
 3044 15a0 1B68     		ldr	r3, [r3]
 3045 15a2 03F47F43 		and	r3, r3, #65280
 3046 15a6 1B0A     		lsrs	r3, r3, #8
 3047 15a8 FB73     		strb	r3, [r7, #15]
1194:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_cid.OEM_AppliID |= tmp;
 3048              		.loc 1 1194 0
 3049 15aa 7B68     		ldr	r3, [r7, #4]
 3050 15ac DB8D     		ldrh	r3, [r3, #46]	@ movhi
 3051 15ae 9AB2     		uxth	r2, r3
 3052 15b0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3053 15b2 9BB2     		uxth	r3, r3
 3054 15b4 1343     		orrs	r3, r3, r2
 3055 15b6 9AB2     		uxth	r2, r3
 3056 15b8 7B68     		ldr	r3, [r7, #4]
 3057 15ba DA85     		strh	r2, [r3, #46]	@ movhi
1195:../tasks/SDMMC/sd_diskio.c **** 
1196:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 3 */
1197:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)(CID_Tab[0] & 0x000000FF);
 3058              		.loc 1 1197 0
 3059 15bc 40F20003 		movw	r3, #:lower16:CID_Tab
 3060 15c0 C0F20003 		movt	r3, #:upper16:CID_Tab
 3061 15c4 1B68     		ldr	r3, [r3]
 3062 15c6 FB73     		strb	r3, [r7, #15]
1198:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_cid.ProdName1 = tmp << 24;
 3063              		.loc 1 1198 0
 3064 15c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3065 15ca 1B06     		lsls	r3, r3, #24
 3066 15cc 1A46     		mov	r2, r3
 3067 15ce 7B68     		ldr	r3, [r7, #4]
 3068 15d0 1A63     		str	r2, [r3, #48]
1199:../tasks/SDMMC/sd_diskio.c **** 
1200:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 4 */
1201:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)((CID_Tab[1] & 0xFF000000) >> 24);
 3069              		.loc 1 1201 0
 3070 15d2 40F20003 		movw	r3, #:lower16:CID_Tab
 3071 15d6 C0F20003 		movt	r3, #:upper16:CID_Tab
 3072 15da 5B68     		ldr	r3, [r3, #4]
 3073 15dc 1B0E     		lsrs	r3, r3, #24
 3074 15de FB73     		strb	r3, [r7, #15]
1202:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_cid.ProdName1 |= tmp << 16;
 3075              		.loc 1 1202 0
 3076 15e0 7B68     		ldr	r3, [r7, #4]
 3077 15e2 1A6B     		ldr	r2, [r3, #48]
 3078 15e4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3079 15e6 1B04     		lsls	r3, r3, #16
 3080 15e8 1A43     		orrs	r2, r2, r3
 3081 15ea 7B68     		ldr	r3, [r7, #4]
 3082 15ec 1A63     		str	r2, [r3, #48]
1203:../tasks/SDMMC/sd_diskio.c **** 
1204:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 5 */
1205:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)((CID_Tab[1] & 0x00FF0000) >> 16);
 3083              		.loc 1 1205 0
 3084 15ee 40F20003 		movw	r3, #:lower16:CID_Tab
 3085 15f2 C0F20003 		movt	r3, #:upper16:CID_Tab
 3086 15f6 5B68     		ldr	r3, [r3, #4]
 3087 15f8 03F47F03 		and	r3, r3, #16711680
 3088 15fc 1B0C     		lsrs	r3, r3, #16
 3089 15fe FB73     		strb	r3, [r7, #15]
1206:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_cid.ProdName1 |= tmp << 8;
 3090              		.loc 1 1206 0
 3091 1600 7B68     		ldr	r3, [r7, #4]
 3092 1602 1A6B     		ldr	r2, [r3, #48]
 3093 1604 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3094 1606 1B02     		lsls	r3, r3, #8
 3095 1608 1A43     		orrs	r2, r2, r3
 3096 160a 7B68     		ldr	r3, [r7, #4]
 3097 160c 1A63     		str	r2, [r3, #48]
1207:../tasks/SDMMC/sd_diskio.c **** 
1208:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 6 */
1209:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)((CID_Tab[1] & 0x0000FF00) >> 8);
 3098              		.loc 1 1209 0
 3099 160e 40F20003 		movw	r3, #:lower16:CID_Tab
 3100 1612 C0F20003 		movt	r3, #:upper16:CID_Tab
 3101 1616 5B68     		ldr	r3, [r3, #4]
 3102 1618 03F47F43 		and	r3, r3, #65280
 3103 161c 1B0A     		lsrs	r3, r3, #8
 3104 161e FB73     		strb	r3, [r7, #15]
1210:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_cid.ProdName1 |= tmp;
 3105              		.loc 1 1210 0
 3106 1620 7B68     		ldr	r3, [r7, #4]
 3107 1622 1A6B     		ldr	r2, [r3, #48]
 3108 1624 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3109 1626 1A43     		orrs	r2, r2, r3
 3110 1628 7B68     		ldr	r3, [r7, #4]
 3111 162a 1A63     		str	r2, [r3, #48]
1211:../tasks/SDMMC/sd_diskio.c **** 
1212:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 7 */
1213:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)(CID_Tab[1] & 0x000000FF);
 3112              		.loc 1 1213 0
 3113 162c 40F20003 		movw	r3, #:lower16:CID_Tab
 3114 1630 C0F20003 		movt	r3, #:upper16:CID_Tab
 3115 1634 5B68     		ldr	r3, [r3, #4]
 3116 1636 FB73     		strb	r3, [r7, #15]
1214:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_cid.ProdName2 = tmp;
 3117              		.loc 1 1214 0
 3118 1638 7B68     		ldr	r3, [r7, #4]
 3119 163a FA7B     		ldrb	r2, [r7, #15]
 3120 163c 83F83420 		strb	r2, [r3, #52]
1215:../tasks/SDMMC/sd_diskio.c **** 
1216:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 8 */
1217:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)((CID_Tab[2] & 0xFF000000) >> 24);
 3121              		.loc 1 1217 0
 3122 1640 40F20003 		movw	r3, #:lower16:CID_Tab
 3123 1644 C0F20003 		movt	r3, #:upper16:CID_Tab
 3124 1648 9B68     		ldr	r3, [r3, #8]
 3125 164a 1B0E     		lsrs	r3, r3, #24
 3126 164c FB73     		strb	r3, [r7, #15]
1218:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_cid.ProdRev = tmp;
 3127              		.loc 1 1218 0
 3128 164e 7B68     		ldr	r3, [r7, #4]
 3129 1650 FA7B     		ldrb	r2, [r7, #15]
 3130 1652 83F83520 		strb	r2, [r3, #53]
1219:../tasks/SDMMC/sd_diskio.c **** 
1220:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 9 */
1221:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)((CID_Tab[2] & 0x00FF0000) >> 16);
 3131              		.loc 1 1221 0
 3132 1656 40F20003 		movw	r3, #:lower16:CID_Tab
 3133 165a C0F20003 		movt	r3, #:upper16:CID_Tab
 3134 165e 9B68     		ldr	r3, [r3, #8]
 3135 1660 03F47F03 		and	r3, r3, #16711680
 3136 1664 1B0C     		lsrs	r3, r3, #16
 3137 1666 FB73     		strb	r3, [r7, #15]
1222:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_cid.ProdSN = tmp << 24;
 3138              		.loc 1 1222 0
 3139 1668 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3140 166a 1B06     		lsls	r3, r3, #24
 3141 166c 1A46     		mov	r2, r3
 3142 166e 7B68     		ldr	r3, [r7, #4]
 3143 1670 9A63     		str	r2, [r3, #56]
1223:../tasks/SDMMC/sd_diskio.c **** 
1224:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 10 */
1225:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)((CID_Tab[2] & 0x0000FF00) >> 8);
 3144              		.loc 1 1225 0
 3145 1672 40F20003 		movw	r3, #:lower16:CID_Tab
 3146 1676 C0F20003 		movt	r3, #:upper16:CID_Tab
 3147 167a 9B68     		ldr	r3, [r3, #8]
 3148 167c 03F47F43 		and	r3, r3, #65280
 3149 1680 1B0A     		lsrs	r3, r3, #8
 3150 1682 FB73     		strb	r3, [r7, #15]
1226:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_cid.ProdSN |= tmp << 16;
 3151              		.loc 1 1226 0
 3152 1684 7B68     		ldr	r3, [r7, #4]
 3153 1686 9A6B     		ldr	r2, [r3, #56]
 3154 1688 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3155 168a 1B04     		lsls	r3, r3, #16
 3156 168c 1A43     		orrs	r2, r2, r3
 3157 168e 7B68     		ldr	r3, [r7, #4]
 3158 1690 9A63     		str	r2, [r3, #56]
1227:../tasks/SDMMC/sd_diskio.c **** 
1228:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 11 */
1229:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)(CID_Tab[2] & 0x000000FF);
 3159              		.loc 1 1229 0
 3160 1692 40F20003 		movw	r3, #:lower16:CID_Tab
 3161 1696 C0F20003 		movt	r3, #:upper16:CID_Tab
 3162 169a 9B68     		ldr	r3, [r3, #8]
 3163 169c FB73     		strb	r3, [r7, #15]
1230:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_cid.ProdSN |= tmp << 8;
 3164              		.loc 1 1230 0
 3165 169e 7B68     		ldr	r3, [r7, #4]
 3166 16a0 9A6B     		ldr	r2, [r3, #56]
 3167 16a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3168 16a4 1B02     		lsls	r3, r3, #8
 3169 16a6 1A43     		orrs	r2, r2, r3
 3170 16a8 7B68     		ldr	r3, [r7, #4]
 3171 16aa 9A63     		str	r2, [r3, #56]
1231:../tasks/SDMMC/sd_diskio.c **** 
1232:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 12 */
1233:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)((CID_Tab[3] & 0xFF000000) >> 24);
 3172              		.loc 1 1233 0
 3173 16ac 40F20003 		movw	r3, #:lower16:CID_Tab
 3174 16b0 C0F20003 		movt	r3, #:upper16:CID_Tab
 3175 16b4 DB68     		ldr	r3, [r3, #12]
 3176 16b6 1B0E     		lsrs	r3, r3, #24
 3177 16b8 FB73     		strb	r3, [r7, #15]
1234:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_cid.ProdSN |= tmp;
 3178              		.loc 1 1234 0
 3179 16ba 7B68     		ldr	r3, [r7, #4]
 3180 16bc 9A6B     		ldr	r2, [r3, #56]
 3181 16be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3182 16c0 1A43     		orrs	r2, r2, r3
 3183 16c2 7B68     		ldr	r3, [r7, #4]
 3184 16c4 9A63     		str	r2, [r3, #56]
1235:../tasks/SDMMC/sd_diskio.c **** 
1236:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 13 */
1237:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)((CID_Tab[3] & 0x00FF0000) >> 16);
 3185              		.loc 1 1237 0
 3186 16c6 40F20003 		movw	r3, #:lower16:CID_Tab
 3187 16ca C0F20003 		movt	r3, #:upper16:CID_Tab
 3188 16ce DB68     		ldr	r3, [r3, #12]
 3189 16d0 03F47F03 		and	r3, r3, #16711680
 3190 16d4 1B0C     		lsrs	r3, r3, #16
 3191 16d6 FB73     		strb	r3, [r7, #15]
1238:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_cid.Reserved1 |= (tmp & 0xF0) >> 4;
 3192              		.loc 1 1238 0
 3193 16d8 7B68     		ldr	r3, [r7, #4]
 3194 16da 93F83C30 		ldrb	r3, [r3, #60]
 3195 16de DAB2     		uxtb	r2, r3
 3196 16e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3197 16e2 1B09     		lsrs	r3, r3, #4
 3198 16e4 DBB2     		uxtb	r3, r3
 3199 16e6 1343     		orrs	r3, r3, r2
 3200 16e8 DAB2     		uxtb	r2, r3
 3201 16ea 7B68     		ldr	r3, [r7, #4]
 3202 16ec 83F83C20 		strb	r2, [r3, #60]
1239:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_cid.ManufactDate = (tmp & 0x0F) << 8;
 3203              		.loc 1 1239 0
 3204 16f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3205 16f2 9BB2     		uxth	r3, r3
 3206 16f4 03F00F03 		and	r3, r3, #15
 3207 16f8 9BB2     		uxth	r3, r3
 3208 16fa 1B02     		lsls	r3, r3, #8
 3209 16fc 9AB2     		uxth	r2, r3
 3210 16fe 7B68     		ldr	r3, [r7, #4]
 3211 1700 DA87     		strh	r2, [r3, #62]	@ movhi
1240:../tasks/SDMMC/sd_diskio.c **** 
1241:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 14 */
1242:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)((CID_Tab[3] & 0x0000FF00) >> 8);
 3212              		.loc 1 1242 0
 3213 1702 40F20003 		movw	r3, #:lower16:CID_Tab
 3214 1706 C0F20003 		movt	r3, #:upper16:CID_Tab
 3215 170a DB68     		ldr	r3, [r3, #12]
 3216 170c 03F47F43 		and	r3, r3, #65280
 3217 1710 1B0A     		lsrs	r3, r3, #8
 3218 1712 FB73     		strb	r3, [r7, #15]
1243:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_cid.ManufactDate |= tmp;
 3219              		.loc 1 1243 0
 3220 1714 7B68     		ldr	r3, [r7, #4]
 3221 1716 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 3222 1718 9AB2     		uxth	r2, r3
 3223 171a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3224 171c 9BB2     		uxth	r3, r3
 3225 171e 1343     		orrs	r3, r3, r2
 3226 1720 9AB2     		uxth	r2, r3
 3227 1722 7B68     		ldr	r3, [r7, #4]
 3228 1724 DA87     		strh	r2, [r3, #62]	@ movhi
1244:../tasks/SDMMC/sd_diskio.c **** 
1245:../tasks/SDMMC/sd_diskio.c ****   /*!< Byte 15 */
1246:../tasks/SDMMC/sd_diskio.c ****   tmp = (uint8_t)(CID_Tab[3] & 0x000000FF);
 3229              		.loc 1 1246 0
 3230 1726 40F20003 		movw	r3, #:lower16:CID_Tab
 3231 172a C0F20003 		movt	r3, #:upper16:CID_Tab
 3232 172e DB68     		ldr	r3, [r3, #12]
 3233 1730 FB73     		strb	r3, [r7, #15]
1247:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_cid.CID_CRC = (tmp & 0xFE) >> 1;
 3234              		.loc 1 1247 0
 3235 1732 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3236 1734 5B08     		lsrs	r3, r3, #1
 3237 1736 DAB2     		uxtb	r2, r3
 3238 1738 7B68     		ldr	r3, [r7, #4]
 3239 173a 83F84020 		strb	r2, [r3, #64]
1248:../tasks/SDMMC/sd_diskio.c ****   cardinfo->SD_cid.Reserved2 = 1;
 3240              		.loc 1 1248 0
 3241 173e 7B68     		ldr	r3, [r7, #4]
 3242 1740 0122     		movs	r2, #1
 3243 1742 83F84120 		strb	r2, [r3, #65]
1249:../tasks/SDMMC/sd_diskio.c **** 
1250:../tasks/SDMMC/sd_diskio.c ****   return(errorstatus);
 3244              		.loc 1 1250 0
 3245 1746 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
1251:../tasks/SDMMC/sd_diskio.c **** }
 3246              		.loc 1 1251 0
 3247 1748 1846     		mov	r0, r3
 3248 174a 1437     		adds	r7, r7, #20
 3249 174c BD46     		mov	sp, r7
 3250              		@ sp needed
 3251 174e B0BC     		pop	{r4, r5, r7}
 3252 1750 7047     		bx	lr
 3253              		.cfi_endproc
 3254              	.LFE71:
 3256 1752 00BF     		.align	2
 3257              		.global	SD_SelectDeselect
 3258              		.thumb
 3259              		.thumb_func
 3261              	SD_SelectDeselect:
 3262              	.LFB72:
1252:../tasks/SDMMC/sd_diskio.c **** 
1253:../tasks/SDMMC/sd_diskio.c **** /**
1254:../tasks/SDMMC/sd_diskio.c ****   * @brief  Selects od Deselects the corresponding card.
1255:../tasks/SDMMC/sd_diskio.c ****   * @param  addr: Address of the Card to be selected.
1256:../tasks/SDMMC/sd_diskio.c ****   * @retval HAL_SD_ErrorTypedef: SD Card Error code.
1257:../tasks/SDMMC/sd_diskio.c ****   */
1258:../tasks/SDMMC/sd_diskio.c **** HAL_SD_ErrorTypedef SD_SelectDeselect(uint32_t addr)
1259:../tasks/SDMMC/sd_diskio.c **** {
 3263              		.loc 1 1259 0
 3264              		.cfi_startproc
 3265              		@ args = 0, pretend = 0, frame = 16
 3266              		@ frame_needed = 1, uses_anonymous_args = 0
 3267 1754 80B5     		push	{r7, lr}
 3268              		.cfi_def_cfa_offset 8
 3269              		.cfi_offset 7, -8
 3270              		.cfi_offset 14, -4
 3271 1756 84B0     		sub	sp, sp, #16
 3272              		.cfi_def_cfa_offset 24
 3273 1758 00AF     		add	r7, sp, #0
 3274              		.cfi_def_cfa_register 7
 3275 175a 7860     		str	r0, [r7, #4]
1260:../tasks/SDMMC/sd_diskio.c **** 	HAL_SD_ErrorTypedef errorstatus = SD_OK;
 3276              		.loc 1 1260 0
 3277 175c 0023     		movs	r3, #0
 3278 175e FB73     		strb	r3, [r7, #15]
1261:../tasks/SDMMC/sd_diskio.c **** 
1262:../tasks/SDMMC/sd_diskio.c ****   /*!< Send CMD7 SDIO_SEL_DESEL_CARD */
1263:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.Argument =  addr;
 3279              		.loc 1 1263 0
 3280 1760 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3281 1764 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3282 1768 7A68     		ldr	r2, [r7, #4]
 3283 176a 1A60     		str	r2, [r3]
1264:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.CmdIndex = SD_CMD_SEL_DESEL_CARD;
 3284              		.loc 1 1264 0
 3285 176c 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3286 1770 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3287 1774 0722     		movs	r2, #7
 3288 1776 5A60     		str	r2, [r3, #4]
1265:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.Response = SDIO_RESPONSE_SHORT;
 3289              		.loc 1 1265 0
 3290 1778 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3291 177c C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3292 1780 4022     		movs	r2, #64
 3293 1782 9A60     		str	r2, [r3, #8]
1266:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 3294              		.loc 1 1266 0
 3295 1784 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3296 1788 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3297 178c 0022     		movs	r2, #0
 3298 178e DA60     		str	r2, [r3, #12]
1267:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.CPSM = SDIO_CPSM_ENABLE;
 3299              		.loc 1 1267 0
 3300 1790 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3301 1794 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3302 1798 4FF48062 		mov	r2, #1024
 3303 179c 1A61     		str	r2, [r3, #16]
1268:../tasks/SDMMC/sd_diskio.c ****   SDIO_SendCommand(SDIO, &SDIO_CmdInitStructure);
 3304              		.loc 1 1268 0
 3305 179e 4FF43050 		mov	r0, #11264
 3306 17a2 C4F20100 		movt	r0, 16385
 3307 17a6 40F20001 		movw	r1, #:lower16:SDIO_CmdInitStructure
 3308 17aa C0F20001 		movt	r1, #:upper16:SDIO_CmdInitStructure
 3309 17ae FFF7FEFF 		bl	SDIO_SendCommand
1269:../tasks/SDMMC/sd_diskio.c **** 
1270:../tasks/SDMMC/sd_diskio.c ****   errorstatus = CmdResp1Error(SD_CMD_SEL_DESEL_CARD);
 3310              		.loc 1 1270 0
 3311 17b2 0720     		movs	r0, #7
 3312 17b4 FFF7A8F9 		bl	CmdResp1Error
 3313 17b8 0346     		mov	r3, r0
 3314 17ba FB73     		strb	r3, [r7, #15]
1271:../tasks/SDMMC/sd_diskio.c **** 
1272:../tasks/SDMMC/sd_diskio.c ****   return(errorstatus);
 3315              		.loc 1 1272 0
 3316 17bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1273:../tasks/SDMMC/sd_diskio.c **** }
 3317              		.loc 1 1273 0
 3318 17be 1846     		mov	r0, r3
 3319 17c0 1037     		adds	r7, r7, #16
 3320 17c2 BD46     		mov	sp, r7
 3321              		@ sp needed
 3322 17c4 80BD     		pop	{r7, pc}
 3323              		.cfi_endproc
 3324              	.LFE72:
 3326 17c6 00BF     		.align	2
 3327              		.global	SD_EnableWideBusOperation
 3328              		.thumb
 3329              		.thumb_func
 3331              	SD_EnableWideBusOperation:
 3332              	.LFB73:
1274:../tasks/SDMMC/sd_diskio.c **** /**
1275:../tasks/SDMMC/sd_diskio.c ****   * @brief  Enables wide bus opeartion for the requeseted card if supported by
1276:../tasks/SDMMC/sd_diskio.c ****   *         card.
1277:../tasks/SDMMC/sd_diskio.c ****   * @param  WideMode: Specifies the SD card wide bus mode.
1278:../tasks/SDMMC/sd_diskio.c ****   *   This parameter can be one of the following values:
1279:../tasks/SDMMC/sd_diskio.c ****   *     @arg SDIO_BusWide_8b: 8-bit data transfer (Only for MMC)
1280:../tasks/SDMMC/sd_diskio.c ****   *     @arg SDIO_BusWide_4b: 4-bit data transfer
1281:../tasks/SDMMC/sd_diskio.c ****   *     @arg SDIO_BusWide_1b: 1-bit data transfer
1282:../tasks/SDMMC/sd_diskio.c ****   * @retval HAL_SD_ErrorTypedef: SD Card Error code.
1283:../tasks/SDMMC/sd_diskio.c ****   */
1284:../tasks/SDMMC/sd_diskio.c **** HAL_SD_ErrorTypedef SD_EnableWideBusOperation(uint32_t WideMode)
1285:../tasks/SDMMC/sd_diskio.c **** {
 3333              		.loc 1 1285 0
 3334              		.cfi_startproc
 3335              		@ args = 0, pretend = 0, frame = 16
 3336              		@ frame_needed = 1, uses_anonymous_args = 0
 3337 17c8 90B5     		push	{r4, r7, lr}
 3338              		.cfi_def_cfa_offset 12
 3339              		.cfi_offset 4, -12
 3340              		.cfi_offset 7, -8
 3341              		.cfi_offset 14, -4
 3342 17ca 89B0     		sub	sp, sp, #36
 3343              		.cfi_def_cfa_offset 48
 3344 17cc 04AF     		add	r7, sp, #16
 3345              		.cfi_def_cfa 7, 32
 3346 17ce 7860     		str	r0, [r7, #4]
1286:../tasks/SDMMC/sd_diskio.c **** 	HAL_SD_ErrorTypedef errorstatus = SD_OK;
 3347              		.loc 1 1286 0
 3348 17d0 0023     		movs	r3, #0
 3349 17d2 FB73     		strb	r3, [r7, #15]
1287:../tasks/SDMMC/sd_diskio.c **** 
1288:../tasks/SDMMC/sd_diskio.c ****   /*!< MMC Card doesn't support this feature */
1289:../tasks/SDMMC/sd_diskio.c ****   if (SDIO_MULTIMEDIA_CARD == IsCardType)
 3350              		.loc 1 1289 0
 3351 17d4 40F20003 		movw	r3, #:lower16:IsCardType
 3352 17d8 C0F20003 		movt	r3, #:upper16:IsCardType
 3353 17dc 1B68     		ldr	r3, [r3]
 3354 17de 032B     		cmp	r3, #3
 3355 17e0 03D1     		bne	.L138
1290:../tasks/SDMMC/sd_diskio.c ****   {
1291:../tasks/SDMMC/sd_diskio.c ****     errorstatus = SD_UNSUPPORTED_FEATURE;
 3356              		.loc 1 1291 0
 3357 17e2 2723     		movs	r3, #39
 3358 17e4 FB73     		strb	r3, [r7, #15]
1292:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 3359              		.loc 1 1292 0
 3360 17e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3361 17e8 9EE0     		b	.L139
 3362              	.L138:
1293:../tasks/SDMMC/sd_diskio.c ****   }
1294:../tasks/SDMMC/sd_diskio.c ****   else if ((SDIO_STD_CAPACITY_SD_CARD_V1_1 == IsCardType) || (SDIO_STD_CAPACITY_SD_CARD_V2_0 == IsC
 3363              		.loc 1 1294 0
 3364 17ea 40F20003 		movw	r3, #:lower16:IsCardType
 3365 17ee C0F20003 		movt	r3, #:upper16:IsCardType
 3366 17f2 1B68     		ldr	r3, [r3]
 3367 17f4 002B     		cmp	r3, #0
 3368 17f6 0ED0     		beq	.L140
 3369              		.loc 1 1294 0 is_stmt 0 discriminator 1
 3370 17f8 40F20003 		movw	r3, #:lower16:IsCardType
 3371 17fc C0F20003 		movt	r3, #:upper16:IsCardType
 3372 1800 1B68     		ldr	r3, [r3]
 3373 1802 012B     		cmp	r3, #1
 3374 1804 07D0     		beq	.L140
 3375 1806 40F20003 		movw	r3, #:lower16:IsCardType
 3376 180a C0F20003 		movt	r3, #:upper16:IsCardType
 3377 180e 1B68     		ldr	r3, [r3]
 3378 1810 022B     		cmp	r3, #2
 3379 1812 40F08880 		bne	.L141
 3380              	.L140:
1295:../tasks/SDMMC/sd_diskio.c ****   {
1296:../tasks/SDMMC/sd_diskio.c ****     if (SDIO_BUS_WIDE_8B == WideMode)
 3381              		.loc 1 1296 0 is_stmt 1
 3382 1816 7B68     		ldr	r3, [r7, #4]
 3383 1818 B3F5805F 		cmp	r3, #4096
 3384 181c 03D1     		bne	.L142
1297:../tasks/SDMMC/sd_diskio.c ****     {
1298:../tasks/SDMMC/sd_diskio.c ****       errorstatus = SD_UNSUPPORTED_FEATURE;
 3385              		.loc 1 1298 0
 3386 181e 2723     		movs	r3, #39
 3387 1820 FB73     		strb	r3, [r7, #15]
1299:../tasks/SDMMC/sd_diskio.c ****       return(errorstatus);
 3388              		.loc 1 1299 0
 3389 1822 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3390 1824 80E0     		b	.L139
 3391              	.L142:
1300:../tasks/SDMMC/sd_diskio.c ****     }
1301:../tasks/SDMMC/sd_diskio.c ****     else if (SDIO_BUS_WIDE_4B == WideMode)
 3392              		.loc 1 1301 0
 3393 1826 7B68     		ldr	r3, [r7, #4]
 3394 1828 B3F5006F 		cmp	r3, #2048
 3395 182c 3ED1     		bne	.L143
1302:../tasks/SDMMC/sd_diskio.c ****     {
1303:../tasks/SDMMC/sd_diskio.c ****       errorstatus = SDEnWideBus(ENABLE);
 3396              		.loc 1 1303 0
 3397 182e 0120     		movs	r0, #1
 3398 1830 00F0B6F8 		bl	SDEnWideBus
 3399 1834 0346     		mov	r3, r0
 3400 1836 FB73     		strb	r3, [r7, #15]
1304:../tasks/SDMMC/sd_diskio.c **** 
1305:../tasks/SDMMC/sd_diskio.c ****       if (SD_OK == errorstatus)
 3401              		.loc 1 1305 0
 3402 1838 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3403 183a 002B     		cmp	r3, #0
 3404 183c 73D1     		bne	.L141
1306:../tasks/SDMMC/sd_diskio.c ****       {
1307:../tasks/SDMMC/sd_diskio.c ****         /*!< Configure the SDIO peripheral */
1308:../tasks/SDMMC/sd_diskio.c ****         SDIO_InitStructure.ClockDiv = SDIO_TRANSFER_CLK_DIV;
 3405              		.loc 1 1308 0
 3406 183e 40F20003 		movw	r3, #:lower16:SDIO_InitStructure
 3407 1842 C0F20003 		movt	r3, #:upper16:SDIO_InitStructure
 3408 1846 0022     		movs	r2, #0
 3409 1848 5A61     		str	r2, [r3, #20]
1309:../tasks/SDMMC/sd_diskio.c ****         SDIO_InitStructure.ClockEdge = SDIO_CLOCK_EDGE_RISING;
 3410              		.loc 1 1309 0
 3411 184a 40F20003 		movw	r3, #:lower16:SDIO_InitStructure
 3412 184e C0F20003 		movt	r3, #:upper16:SDIO_InitStructure
 3413 1852 0022     		movs	r2, #0
 3414 1854 1A60     		str	r2, [r3]
1310:../tasks/SDMMC/sd_diskio.c ****         SDIO_InitStructure.ClockBypass = SDIO_CLOCK_BYPASS_DISABLE;
 3415              		.loc 1 1310 0
 3416 1856 40F20003 		movw	r3, #:lower16:SDIO_InitStructure
 3417 185a C0F20003 		movt	r3, #:upper16:SDIO_InitStructure
 3418 185e 0022     		movs	r2, #0
 3419 1860 5A60     		str	r2, [r3, #4]
1311:../tasks/SDMMC/sd_diskio.c ****         SDIO_InitStructure.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_DISABLE;
 3420              		.loc 1 1311 0
 3421 1862 40F20003 		movw	r3, #:lower16:SDIO_InitStructure
 3422 1866 C0F20003 		movt	r3, #:upper16:SDIO_InitStructure
 3423 186a 0022     		movs	r2, #0
 3424 186c 9A60     		str	r2, [r3, #8]
1312:../tasks/SDMMC/sd_diskio.c ****         SDIO_InitStructure.BusWide = SDIO_BUS_WIDE_4B;
 3425              		.loc 1 1312 0
 3426 186e 40F20003 		movw	r3, #:lower16:SDIO_InitStructure
 3427 1872 C0F20003 		movt	r3, #:upper16:SDIO_InitStructure
 3428 1876 4FF40062 		mov	r2, #2048
 3429 187a DA60     		str	r2, [r3, #12]
1313:../tasks/SDMMC/sd_diskio.c ****         SDIO_InitStructure.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
 3430              		.loc 1 1313 0
 3431 187c 40F20003 		movw	r3, #:lower16:SDIO_InitStructure
 3432 1880 C0F20003 		movt	r3, #:upper16:SDIO_InitStructure
 3433 1884 0022     		movs	r2, #0
 3434 1886 1A61     		str	r2, [r3, #16]
1314:../tasks/SDMMC/sd_diskio.c ****         SDIO_Init(SDIO, SDIO_InitStructure);
 3435              		.loc 1 1314 0
 3436 1888 40F20003 		movw	r3, #:lower16:SDIO_InitStructure
 3437 188c C0F20003 		movt	r3, #:upper16:SDIO_InitStructure
 3438 1890 6C46     		mov	r4, sp
 3439 1892 03F10C02 		add	r2, r3, #12
 3440 1896 07CA     		ldmia	r2, {r0, r1, r2}
 3441 1898 84E80700 		stmia	r4, {r0, r1, r2}
 3442 189c 0ECB     		ldmia	r3, {r1, r2, r3}
 3443 189e 4FF43050 		mov	r0, #11264
 3444 18a2 C4F20100 		movt	r0, 16385
 3445 18a6 FFF7FEFF 		bl	SDIO_Init
 3446 18aa 3CE0     		b	.L141
 3447              	.L143:
1315:../tasks/SDMMC/sd_diskio.c ****       }
1316:../tasks/SDMMC/sd_diskio.c ****     }
1317:../tasks/SDMMC/sd_diskio.c ****     else
1318:../tasks/SDMMC/sd_diskio.c ****     {
1319:../tasks/SDMMC/sd_diskio.c ****       errorstatus = SDEnWideBus(DISABLE);
 3448              		.loc 1 1319 0
 3449 18ac 0020     		movs	r0, #0
 3450 18ae 00F077F8 		bl	SDEnWideBus
 3451 18b2 0346     		mov	r3, r0
 3452 18b4 FB73     		strb	r3, [r7, #15]
1320:../tasks/SDMMC/sd_diskio.c **** 
1321:../tasks/SDMMC/sd_diskio.c ****       if (SD_OK == errorstatus)
 3453              		.loc 1 1321 0
 3454 18b6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3455 18b8 002B     		cmp	r3, #0
 3456 18ba 34D1     		bne	.L141
1322:../tasks/SDMMC/sd_diskio.c ****       {
1323:../tasks/SDMMC/sd_diskio.c ****           /*!< Configure the SDIO peripheral */
1324:../tasks/SDMMC/sd_diskio.c ****           SDIO_InitStructure.ClockDiv = SDIO_TRANSFER_CLK_DIV;
 3457              		.loc 1 1324 0
 3458 18bc 40F20003 		movw	r3, #:lower16:SDIO_InitStructure
 3459 18c0 C0F20003 		movt	r3, #:upper16:SDIO_InitStructure
 3460 18c4 0022     		movs	r2, #0
 3461 18c6 5A61     		str	r2, [r3, #20]
1325:../tasks/SDMMC/sd_diskio.c ****           SDIO_InitStructure.ClockEdge = SDIO_CLOCK_EDGE_RISING;
 3462              		.loc 1 1325 0
 3463 18c8 40F20003 		movw	r3, #:lower16:SDIO_InitStructure
 3464 18cc C0F20003 		movt	r3, #:upper16:SDIO_InitStructure
 3465 18d0 0022     		movs	r2, #0
 3466 18d2 1A60     		str	r2, [r3]
1326:../tasks/SDMMC/sd_diskio.c ****           SDIO_InitStructure.ClockBypass = SDIO_CLOCK_BYPASS_DISABLE;
 3467              		.loc 1 1326 0
 3468 18d4 40F20003 		movw	r3, #:lower16:SDIO_InitStructure
 3469 18d8 C0F20003 		movt	r3, #:upper16:SDIO_InitStructure
 3470 18dc 0022     		movs	r2, #0
 3471 18de 5A60     		str	r2, [r3, #4]
1327:../tasks/SDMMC/sd_diskio.c ****           SDIO_InitStructure.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_DISABLE;
 3472              		.loc 1 1327 0
 3473 18e0 40F20003 		movw	r3, #:lower16:SDIO_InitStructure
 3474 18e4 C0F20003 		movt	r3, #:upper16:SDIO_InitStructure
 3475 18e8 0022     		movs	r2, #0
 3476 18ea 9A60     		str	r2, [r3, #8]
1328:../tasks/SDMMC/sd_diskio.c ****           SDIO_InitStructure.BusWide = SDIO_BUS_WIDE_1B;
 3477              		.loc 1 1328 0
 3478 18ec 40F20003 		movw	r3, #:lower16:SDIO_InitStructure
 3479 18f0 C0F20003 		movt	r3, #:upper16:SDIO_InitStructure
 3480 18f4 0022     		movs	r2, #0
 3481 18f6 DA60     		str	r2, [r3, #12]
1329:../tasks/SDMMC/sd_diskio.c ****           SDIO_InitStructure.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
 3482              		.loc 1 1329 0
 3483 18f8 40F20003 		movw	r3, #:lower16:SDIO_InitStructure
 3484 18fc C0F20003 		movt	r3, #:upper16:SDIO_InitStructure
 3485 1900 0022     		movs	r2, #0
 3486 1902 1A61     		str	r2, [r3, #16]
1330:../tasks/SDMMC/sd_diskio.c ****           SDIO_Init(SDIO, SDIO_InitStructure);
 3487              		.loc 1 1330 0
 3488 1904 40F20003 		movw	r3, #:lower16:SDIO_InitStructure
 3489 1908 C0F20003 		movt	r3, #:upper16:SDIO_InitStructure
 3490 190c 6C46     		mov	r4, sp
 3491 190e 03F10C02 		add	r2, r3, #12
 3492 1912 07CA     		ldmia	r2, {r0, r1, r2}
 3493 1914 84E80700 		stmia	r4, {r0, r1, r2}
 3494 1918 0ECB     		ldmia	r3, {r1, r2, r3}
 3495 191a 4FF43050 		mov	r0, #11264
 3496 191e C4F20100 		movt	r0, 16385
 3497 1922 FFF7FEFF 		bl	SDIO_Init
 3498              	.L141:
1331:../tasks/SDMMC/sd_diskio.c ****       }
1332:../tasks/SDMMC/sd_diskio.c ****     }
1333:../tasks/SDMMC/sd_diskio.c ****   }
1334:../tasks/SDMMC/sd_diskio.c **** 
1335:../tasks/SDMMC/sd_diskio.c ****   return(errorstatus);
 3499              		.loc 1 1335 0
 3500 1926 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3501              	.L139:
1336:../tasks/SDMMC/sd_diskio.c **** }
 3502              		.loc 1 1336 0
 3503 1928 1846     		mov	r0, r3
 3504 192a 1437     		adds	r7, r7, #20
 3505 192c BD46     		mov	sp, r7
 3506              		@ sp needed
 3507 192e 90BD     		pop	{r4, r7, pc}
 3508              		.cfi_endproc
 3509              	.LFE73:
 3511              		.align	2
 3512              		.thumb
 3513              		.thumb_func
 3515              	CmdResp2Error:
 3516              	.LFB74:
1337:../tasks/SDMMC/sd_diskio.c **** /**
1338:../tasks/SDMMC/sd_diskio.c ****   * @brief  Checks for error conditions for R2 (CID or CSD) response.
1339:../tasks/SDMMC/sd_diskio.c ****   * @param  None
1340:../tasks/SDMMC/sd_diskio.c ****   * @retval HAL_SD_ErrorTypedef: SD Card Error code.
1341:../tasks/SDMMC/sd_diskio.c ****   */
1342:../tasks/SDMMC/sd_diskio.c **** static HAL_SD_ErrorTypedef CmdResp2Error(void)
1343:../tasks/SDMMC/sd_diskio.c **** {
 3517              		.loc 1 1343 0
 3518              		.cfi_startproc
 3519              		@ args = 0, pretend = 0, frame = 8
 3520              		@ frame_needed = 1, uses_anonymous_args = 0
 3521 1930 80B5     		push	{r7, lr}
 3522              		.cfi_def_cfa_offset 8
 3523              		.cfi_offset 7, -8
 3524              		.cfi_offset 14, -4
 3525 1932 82B0     		sub	sp, sp, #8
 3526              		.cfi_def_cfa_offset 16
 3527 1934 00AF     		add	r7, sp, #0
 3528              		.cfi_def_cfa_register 7
1344:../tasks/SDMMC/sd_diskio.c ****   HAL_SD_ErrorTypedef errorstatus = SD_OK;
 3529              		.loc 1 1344 0
 3530 1936 0023     		movs	r3, #0
 3531 1938 FB70     		strb	r3, [r7, #3]
1345:../tasks/SDMMC/sd_diskio.c ****   uint32_t status;
1346:../tasks/SDMMC/sd_diskio.c **** 
1347:../tasks/SDMMC/sd_diskio.c ****   status = SDIO->STA;
 3532              		.loc 1 1347 0
 3533 193a 4FF43053 		mov	r3, #11264
 3534 193e C4F20103 		movt	r3, 16385
 3535 1942 5B6B     		ldr	r3, [r3, #52]
 3536 1944 7B60     		str	r3, [r7, #4]
1348:../tasks/SDMMC/sd_diskio.c **** 
1349:../tasks/SDMMC/sd_diskio.c ****   while (!(status & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CTIMEOUT | SDIO_FLAG_CMDREND)))
 3537              		.loc 1 1349 0
 3538 1946 05E0     		b	.L146
 3539              	.L147:
1350:../tasks/SDMMC/sd_diskio.c ****   {
1351:../tasks/SDMMC/sd_diskio.c ****     status = SDIO->STA;
 3540              		.loc 1 1351 0
 3541 1948 4FF43053 		mov	r3, #11264
 3542 194c C4F20103 		movt	r3, 16385
 3543 1950 5B6B     		ldr	r3, [r3, #52]
 3544 1952 7B60     		str	r3, [r7, #4]
 3545              	.L146:
1349:../tasks/SDMMC/sd_diskio.c ****   {
 3546              		.loc 1 1349 0 discriminator 1
 3547 1954 7B68     		ldr	r3, [r7, #4]
 3548 1956 03F04503 		and	r3, r3, #69
 3549 195a 002B     		cmp	r3, #0
 3550 195c F4D0     		beq	.L147
1352:../tasks/SDMMC/sd_diskio.c ****   }
1353:../tasks/SDMMC/sd_diskio.c **** 
1354:../tasks/SDMMC/sd_diskio.c ****   if (status & SDIO_FLAG_CTIMEOUT)
 3551              		.loc 1 1354 0
 3552 195e 7B68     		ldr	r3, [r7, #4]
 3553 1960 03F00403 		and	r3, r3, #4
 3554 1964 002B     		cmp	r3, #0
 3555 1966 06D0     		beq	.L148
1355:../tasks/SDMMC/sd_diskio.c ****   {
1356:../tasks/SDMMC/sd_diskio.c ****     errorstatus = SD_CMD_RSP_TIMEOUT;
 3556              		.loc 1 1356 0
 3557 1968 0323     		movs	r3, #3
 3558 196a FB70     		strb	r3, [r7, #3]
1357:../tasks/SDMMC/sd_diskio.c ****     SDIO_ClearFlag(SDIO_FLAG_CTIMEOUT);
 3559              		.loc 1 1357 0
 3560 196c 0420     		movs	r0, #4
 3561 196e FFF7FEFF 		bl	SDIO_ClearFlag
1358:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 3562              		.loc 1 1358 0
 3563 1972 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3564 1974 10E0     		b	.L149
 3565              	.L148:
1359:../tasks/SDMMC/sd_diskio.c ****   }
1360:../tasks/SDMMC/sd_diskio.c ****   else if (status & SDIO_FLAG_CCRCFAIL)
 3566              		.loc 1 1360 0
 3567 1976 7B68     		ldr	r3, [r7, #4]
 3568 1978 03F00103 		and	r3, r3, #1
 3569 197c 002B     		cmp	r3, #0
 3570 197e 06D0     		beq	.L150
1361:../tasks/SDMMC/sd_diskio.c ****   {
1362:../tasks/SDMMC/sd_diskio.c ****     errorstatus = SD_CMD_CRC_FAIL;
 3571              		.loc 1 1362 0
 3572 1980 0123     		movs	r3, #1
 3573 1982 FB70     		strb	r3, [r7, #3]
1363:../tasks/SDMMC/sd_diskio.c ****     SDIO_ClearFlag(SDIO_FLAG_CCRCFAIL);
 3574              		.loc 1 1363 0
 3575 1984 0120     		movs	r0, #1
 3576 1986 FFF7FEFF 		bl	SDIO_ClearFlag
1364:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 3577              		.loc 1 1364 0
 3578 198a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3579 198c 04E0     		b	.L149
 3580              	.L150:
1365:../tasks/SDMMC/sd_diskio.c ****   }
1366:../tasks/SDMMC/sd_diskio.c **** 
1367:../tasks/SDMMC/sd_diskio.c ****   /*!< Clear all the static flags */
1368:../tasks/SDMMC/sd_diskio.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
 3581              		.loc 1 1368 0
 3582 198e 40F2FF50 		movw	r0, #1535
 3583 1992 FFF7FEFF 		bl	SDIO_ClearFlag
1369:../tasks/SDMMC/sd_diskio.c **** 
1370:../tasks/SDMMC/sd_diskio.c ****   return(errorstatus);
 3584              		.loc 1 1370 0
 3585 1996 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3586              	.L149:
1371:../tasks/SDMMC/sd_diskio.c **** }
 3587              		.loc 1 1371 0
 3588 1998 1846     		mov	r0, r3
 3589 199a 0837     		adds	r7, r7, #8
 3590 199c BD46     		mov	sp, r7
 3591              		@ sp needed
 3592 199e 80BD     		pop	{r7, pc}
 3593              		.cfi_endproc
 3594              	.LFE74:
 3596              		.align	2
 3597              		.thumb
 3598              		.thumb_func
 3600              	SDEnWideBus:
 3601              	.LFB75:
1372:../tasks/SDMMC/sd_diskio.c **** /**
1373:../tasks/SDMMC/sd_diskio.c ****   * @brief  Enables or disables the SDIO wide bus mode.
1374:../tasks/SDMMC/sd_diskio.c ****   * @param  NewState: new state of the SDIO wide bus mode.
1375:../tasks/SDMMC/sd_diskio.c ****   *   This parameter can be: ENABLE or DISABLE.
1376:../tasks/SDMMC/sd_diskio.c ****   * @retval HAL_SD_ErrorTypedef: SD Card Error code.
1377:../tasks/SDMMC/sd_diskio.c ****   */
1378:../tasks/SDMMC/sd_diskio.c **** static HAL_SD_ErrorTypedef SDEnWideBus(FunctionalState NewState)
1379:../tasks/SDMMC/sd_diskio.c **** {
 3602              		.loc 1 1379 0
 3603              		.cfi_startproc
 3604              		@ args = 0, pretend = 0, frame = 24
 3605              		@ frame_needed = 1, uses_anonymous_args = 0
 3606 19a0 80B5     		push	{r7, lr}
 3607              		.cfi_def_cfa_offset 8
 3608              		.cfi_offset 7, -8
 3609              		.cfi_offset 14, -4
 3610 19a2 86B0     		sub	sp, sp, #24
 3611              		.cfi_def_cfa_offset 32
 3612 19a4 00AF     		add	r7, sp, #0
 3613              		.cfi_def_cfa_register 7
 3614 19a6 0346     		mov	r3, r0
 3615 19a8 FB71     		strb	r3, [r7, #7]
1380:../tasks/SDMMC/sd_diskio.c ****   HAL_SD_ErrorTypedef errorstatus = SD_OK;
 3616              		.loc 1 1380 0
 3617 19aa 0023     		movs	r3, #0
 3618 19ac FB75     		strb	r3, [r7, #23]
1381:../tasks/SDMMC/sd_diskio.c **** 
1382:../tasks/SDMMC/sd_diskio.c ****   uint32_t scr[2] = {0, 0};
 3619              		.loc 1 1382 0
 3620 19ae 0023     		movs	r3, #0
 3621 19b0 FB60     		str	r3, [r7, #12]
 3622 19b2 0023     		movs	r3, #0
 3623 19b4 3B61     		str	r3, [r7, #16]
1383:../tasks/SDMMC/sd_diskio.c **** 
1384:../tasks/SDMMC/sd_diskio.c ****   if (SDIO_GetResponse(SDIO_RESP1) & SD_CARD_LOCKED)
 3624              		.loc 1 1384 0
 3625 19b6 0020     		movs	r0, #0
 3626 19b8 FFF7FEFF 		bl	SDIO_GetResponse
 3627 19bc 0346     		mov	r3, r0
 3628 19be 03F00073 		and	r3, r3, #33554432
 3629 19c2 002B     		cmp	r3, #0
 3630 19c4 03D0     		beq	.L152
1385:../tasks/SDMMC/sd_diskio.c ****   {
1386:../tasks/SDMMC/sd_diskio.c ****     errorstatus = SD_LOCK_UNLOCK_FAILED;
 3631              		.loc 1 1386 0
 3632 19c6 0E23     		movs	r3, #14
 3633 19c8 FB75     		strb	r3, [r7, #23]
1387:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 3634              		.loc 1 1387 0
 3635 19ca FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3636 19cc 00E1     		b	.L162
 3637              	.L152:
1388:../tasks/SDMMC/sd_diskio.c ****   }
1389:../tasks/SDMMC/sd_diskio.c **** 
1390:../tasks/SDMMC/sd_diskio.c ****   /*!< Get SCR Register */
1391:../tasks/SDMMC/sd_diskio.c ****   errorstatus = FindSCR(RCA, scr);
 3638              		.loc 1 1391 0
 3639 19ce 40F20003 		movw	r3, #:lower16:RCA
 3640 19d2 C0F20003 		movt	r3, #:upper16:RCA
 3641 19d6 1B68     		ldr	r3, [r3]
 3642 19d8 9AB2     		uxth	r2, r3
 3643 19da 07F10C03 		add	r3, r7, #12
 3644 19de 1046     		mov	r0, r2
 3645 19e0 1946     		mov	r1, r3
 3646 19e2 00F0F9F8 		bl	FindSCR
 3647 19e6 0346     		mov	r3, r0
 3648 19e8 FB75     		strb	r3, [r7, #23]
1392:../tasks/SDMMC/sd_diskio.c **** 
1393:../tasks/SDMMC/sd_diskio.c ****   if (errorstatus != SD_OK)
 3649              		.loc 1 1393 0
 3650 19ea FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3651 19ec 002B     		cmp	r3, #0
 3652 19ee 01D0     		beq	.L154
1394:../tasks/SDMMC/sd_diskio.c ****   {
1395:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 3653              		.loc 1 1395 0
 3654 19f0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3655 19f2 EDE0     		b	.L162
 3656              	.L154:
1396:../tasks/SDMMC/sd_diskio.c ****   }
1397:../tasks/SDMMC/sd_diskio.c **** 
1398:../tasks/SDMMC/sd_diskio.c ****   /*!< If wide bus operation to be enabled */
1399:../tasks/SDMMC/sd_diskio.c ****   if (NewState == ENABLE)
 3657              		.loc 1 1399 0
 3658 19f4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3659 19f6 012B     		cmp	r3, #1
 3660 19f8 75D1     		bne	.L155
1400:../tasks/SDMMC/sd_diskio.c ****   {
1401:../tasks/SDMMC/sd_diskio.c ****     /*!< If requested card supports wide bus operation */
1402:../tasks/SDMMC/sd_diskio.c ****     if ((scr[1] & SD_WIDE_BUS_SUPPORT) != SD_ALLZERO)
 3661              		.loc 1 1402 0
 3662 19fa 3B69     		ldr	r3, [r7, #16]
 3663 19fc 03F48023 		and	r3, r3, #262144
 3664 1a00 002B     		cmp	r3, #0
 3665 1a02 6CD0     		beq	.L156
1403:../tasks/SDMMC/sd_diskio.c ****     {
1404:../tasks/SDMMC/sd_diskio.c ****       /*!< Send CMD55 APP_CMD with argument as card's RCA.*/
1405:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.Argument = (uint32_t) RCA << 16;
 3666              		.loc 1 1405 0
 3667 1a04 40F20003 		movw	r3, #:lower16:RCA
 3668 1a08 C0F20003 		movt	r3, #:upper16:RCA
 3669 1a0c 1B68     		ldr	r3, [r3]
 3670 1a0e 1A04     		lsls	r2, r3, #16
 3671 1a10 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3672 1a14 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3673 1a18 1A60     		str	r2, [r3]
1406:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.CmdIndex = SD_CMD_APP_CMD;
 3674              		.loc 1 1406 0
 3675 1a1a 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3676 1a1e C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3677 1a22 3722     		movs	r2, #55
 3678 1a24 5A60     		str	r2, [r3, #4]
1407:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.Response = SDIO_RESPONSE_SHORT;
 3679              		.loc 1 1407 0
 3680 1a26 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3681 1a2a C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3682 1a2e 4022     		movs	r2, #64
 3683 1a30 9A60     		str	r2, [r3, #8]
1408:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 3684              		.loc 1 1408 0
 3685 1a32 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3686 1a36 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3687 1a3a 0022     		movs	r2, #0
 3688 1a3c DA60     		str	r2, [r3, #12]
1409:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.CPSM = SDIO_CPSM_ENABLE;
 3689              		.loc 1 1409 0
 3690 1a3e 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3691 1a42 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3692 1a46 4FF48062 		mov	r2, #1024
 3693 1a4a 1A61     		str	r2, [r3, #16]
1410:../tasks/SDMMC/sd_diskio.c ****       SDIO_SendCommand(SDIO, &SDIO_CmdInitStructure);
 3694              		.loc 1 1410 0
 3695 1a4c 4FF43050 		mov	r0, #11264
 3696 1a50 C4F20100 		movt	r0, 16385
 3697 1a54 40F20001 		movw	r1, #:lower16:SDIO_CmdInitStructure
 3698 1a58 C0F20001 		movt	r1, #:upper16:SDIO_CmdInitStructure
 3699 1a5c FFF7FEFF 		bl	SDIO_SendCommand
1411:../tasks/SDMMC/sd_diskio.c **** 
1412:../tasks/SDMMC/sd_diskio.c ****       errorstatus = CmdResp1Error(SD_CMD_APP_CMD);
 3700              		.loc 1 1412 0
 3701 1a60 3720     		movs	r0, #55
 3702 1a62 FFF751F8 		bl	CmdResp1Error
 3703 1a66 0346     		mov	r3, r0
 3704 1a68 FB75     		strb	r3, [r7, #23]
1413:../tasks/SDMMC/sd_diskio.c **** 
1414:../tasks/SDMMC/sd_diskio.c ****       if (errorstatus != SD_OK)
 3705              		.loc 1 1414 0
 3706 1a6a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3707 1a6c 002B     		cmp	r3, #0
 3708 1a6e 01D0     		beq	.L157
1415:../tasks/SDMMC/sd_diskio.c ****       {
1416:../tasks/SDMMC/sd_diskio.c ****         return(errorstatus);
 3709              		.loc 1 1416 0
 3710 1a70 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3711 1a72 ADE0     		b	.L162
 3712              	.L157:
1417:../tasks/SDMMC/sd_diskio.c ****       }
1418:../tasks/SDMMC/sd_diskio.c **** 
1419:../tasks/SDMMC/sd_diskio.c ****       /*!< Send ACMD6 APP_CMD with argument as 2 for wide bus mode */
1420:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.Argument = 0x2;
 3713              		.loc 1 1420 0
 3714 1a74 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3715 1a78 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3716 1a7c 0222     		movs	r2, #2
 3717 1a7e 1A60     		str	r2, [r3]
1421:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.CmdIndex = SD_CMD_APP_SD_SET_BUSWIDTH;
 3718              		.loc 1 1421 0
 3719 1a80 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3720 1a84 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3721 1a88 0622     		movs	r2, #6
 3722 1a8a 5A60     		str	r2, [r3, #4]
1422:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.Response = SDIO_RESPONSE_SHORT;
 3723              		.loc 1 1422 0
 3724 1a8c 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3725 1a90 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3726 1a94 4022     		movs	r2, #64
 3727 1a96 9A60     		str	r2, [r3, #8]
1423:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 3728              		.loc 1 1423 0
 3729 1a98 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3730 1a9c C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3731 1aa0 0022     		movs	r2, #0
 3732 1aa2 DA60     		str	r2, [r3, #12]
1424:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.CPSM = SDIO_CPSM_ENABLE;
 3733              		.loc 1 1424 0
 3734 1aa4 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3735 1aa8 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3736 1aac 4FF48062 		mov	r2, #1024
 3737 1ab0 1A61     		str	r2, [r3, #16]
1425:../tasks/SDMMC/sd_diskio.c ****       SDIO_SendCommand(SDIO, &SDIO_CmdInitStructure);
 3738              		.loc 1 1425 0
 3739 1ab2 4FF43050 		mov	r0, #11264
 3740 1ab6 C4F20100 		movt	r0, 16385
 3741 1aba 40F20001 		movw	r1, #:lower16:SDIO_CmdInitStructure
 3742 1abe C0F20001 		movt	r1, #:upper16:SDIO_CmdInitStructure
 3743 1ac2 FFF7FEFF 		bl	SDIO_SendCommand
1426:../tasks/SDMMC/sd_diskio.c **** 
1427:../tasks/SDMMC/sd_diskio.c ****       errorstatus = CmdResp1Error(SD_CMD_APP_SD_SET_BUSWIDTH);
 3744              		.loc 1 1427 0
 3745 1ac6 0620     		movs	r0, #6
 3746 1ac8 FFF71EF8 		bl	CmdResp1Error
 3747 1acc 0346     		mov	r3, r0
 3748 1ace FB75     		strb	r3, [r7, #23]
1428:../tasks/SDMMC/sd_diskio.c **** 
1429:../tasks/SDMMC/sd_diskio.c ****       if (errorstatus != SD_OK)
 3749              		.loc 1 1429 0
 3750 1ad0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3751 1ad2 002B     		cmp	r3, #0
 3752 1ad4 01D0     		beq	.L158
1430:../tasks/SDMMC/sd_diskio.c ****       {
1431:../tasks/SDMMC/sd_diskio.c ****         return(errorstatus);
 3753              		.loc 1 1431 0
 3754 1ad6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3755 1ad8 7AE0     		b	.L162
 3756              	.L158:
1432:../tasks/SDMMC/sd_diskio.c ****       }
1433:../tasks/SDMMC/sd_diskio.c ****       return(errorstatus);
 3757              		.loc 1 1433 0
 3758 1ada FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3759 1adc 78E0     		b	.L162
 3760              	.L156:
1434:../tasks/SDMMC/sd_diskio.c ****     }
1435:../tasks/SDMMC/sd_diskio.c ****     else
1436:../tasks/SDMMC/sd_diskio.c ****     {
1437:../tasks/SDMMC/sd_diskio.c ****       errorstatus = SD_REQUEST_NOT_APPLICABLE;
 3761              		.loc 1 1437 0
 3762 1ade 2523     		movs	r3, #37
 3763 1ae0 FB75     		strb	r3, [r7, #23]
1438:../tasks/SDMMC/sd_diskio.c ****       return(errorstatus);
 3764              		.loc 1 1438 0
 3765 1ae2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3766 1ae4 74E0     		b	.L162
 3767              	.L155:
1439:../tasks/SDMMC/sd_diskio.c ****     }
1440:../tasks/SDMMC/sd_diskio.c ****   }   /*!< If wide bus operation to be disabled */
1441:../tasks/SDMMC/sd_diskio.c ****   else
1442:../tasks/SDMMC/sd_diskio.c ****   {
1443:../tasks/SDMMC/sd_diskio.c ****     /*!< If requested card supports 1 bit mode operation */
1444:../tasks/SDMMC/sd_diskio.c ****     if ((scr[1] & SD_SINGLE_BUS_SUPPORT) != SD_ALLZERO)
 3768              		.loc 1 1444 0
 3769 1ae6 3B69     		ldr	r3, [r7, #16]
 3770 1ae8 03F48033 		and	r3, r3, #65536
 3771 1aec 002B     		cmp	r3, #0
 3772 1aee 6CD0     		beq	.L159
1445:../tasks/SDMMC/sd_diskio.c ****     {
1446:../tasks/SDMMC/sd_diskio.c ****       /*!< Send CMD55 APP_CMD with argument as card's RCA.*/
1447:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.Argument = (uint32_t) RCA << 16;
 3773              		.loc 1 1447 0
 3774 1af0 40F20003 		movw	r3, #:lower16:RCA
 3775 1af4 C0F20003 		movt	r3, #:upper16:RCA
 3776 1af8 1B68     		ldr	r3, [r3]
 3777 1afa 1A04     		lsls	r2, r3, #16
 3778 1afc 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3779 1b00 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3780 1b04 1A60     		str	r2, [r3]
1448:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.CmdIndex = SD_CMD_APP_CMD;
 3781              		.loc 1 1448 0
 3782 1b06 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3783 1b0a C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3784 1b0e 3722     		movs	r2, #55
 3785 1b10 5A60     		str	r2, [r3, #4]
1449:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.Response = SDIO_RESPONSE_SHORT;
 3786              		.loc 1 1449 0
 3787 1b12 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3788 1b16 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3789 1b1a 4022     		movs	r2, #64
 3790 1b1c 9A60     		str	r2, [r3, #8]
1450:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 3791              		.loc 1 1450 0
 3792 1b1e 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3793 1b22 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3794 1b26 0022     		movs	r2, #0
 3795 1b28 DA60     		str	r2, [r3, #12]
1451:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.CPSM = SDIO_CPSM_ENABLE;
 3796              		.loc 1 1451 0
 3797 1b2a 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3798 1b2e C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3799 1b32 4FF48062 		mov	r2, #1024
 3800 1b36 1A61     		str	r2, [r3, #16]
1452:../tasks/SDMMC/sd_diskio.c ****       SDIO_SendCommand(SDIO, &SDIO_CmdInitStructure);
 3801              		.loc 1 1452 0
 3802 1b38 4FF43050 		mov	r0, #11264
 3803 1b3c C4F20100 		movt	r0, 16385
 3804 1b40 40F20001 		movw	r1, #:lower16:SDIO_CmdInitStructure
 3805 1b44 C0F20001 		movt	r1, #:upper16:SDIO_CmdInitStructure
 3806 1b48 FFF7FEFF 		bl	SDIO_SendCommand
1453:../tasks/SDMMC/sd_diskio.c **** 
1454:../tasks/SDMMC/sd_diskio.c **** 
1455:../tasks/SDMMC/sd_diskio.c ****       errorstatus = CmdResp1Error(SD_CMD_APP_CMD);
 3807              		.loc 1 1455 0
 3808 1b4c 3720     		movs	r0, #55
 3809 1b4e FEF7DBFF 		bl	CmdResp1Error
 3810 1b52 0346     		mov	r3, r0
 3811 1b54 FB75     		strb	r3, [r7, #23]
1456:../tasks/SDMMC/sd_diskio.c **** 
1457:../tasks/SDMMC/sd_diskio.c ****       if (errorstatus != SD_OK)
 3812              		.loc 1 1457 0
 3813 1b56 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3814 1b58 002B     		cmp	r3, #0
 3815 1b5a 01D0     		beq	.L160
1458:../tasks/SDMMC/sd_diskio.c ****       {
1459:../tasks/SDMMC/sd_diskio.c ****         return(errorstatus);
 3816              		.loc 1 1459 0
 3817 1b5c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3818 1b5e 37E0     		b	.L162
 3819              	.L160:
1460:../tasks/SDMMC/sd_diskio.c ****       }
1461:../tasks/SDMMC/sd_diskio.c **** 
1462:../tasks/SDMMC/sd_diskio.c ****       /*!< Send ACMD6 APP_CMD with argument as 2 for wide bus mode */
1463:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.Argument = 0x00;
 3820              		.loc 1 1463 0
 3821 1b60 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3822 1b64 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3823 1b68 0022     		movs	r2, #0
 3824 1b6a 1A60     		str	r2, [r3]
1464:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.CmdIndex = SD_CMD_APP_SD_SET_BUSWIDTH;
 3825              		.loc 1 1464 0
 3826 1b6c 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3827 1b70 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3828 1b74 0622     		movs	r2, #6
 3829 1b76 5A60     		str	r2, [r3, #4]
1465:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.Response = SDIO_RESPONSE_SHORT;
 3830              		.loc 1 1465 0
 3831 1b78 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3832 1b7c C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3833 1b80 4022     		movs	r2, #64
 3834 1b82 9A60     		str	r2, [r3, #8]
1466:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 3835              		.loc 1 1466 0
 3836 1b84 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3837 1b88 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3838 1b8c 0022     		movs	r2, #0
 3839 1b8e DA60     		str	r2, [r3, #12]
1467:../tasks/SDMMC/sd_diskio.c ****       SDIO_CmdInitStructure.CPSM = SDIO_CPSM_ENABLE;
 3840              		.loc 1 1467 0
 3841 1b90 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3842 1b94 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3843 1b98 4FF48062 		mov	r2, #1024
 3844 1b9c 1A61     		str	r2, [r3, #16]
1468:../tasks/SDMMC/sd_diskio.c ****       SDIO_SendCommand(SDIO, &SDIO_CmdInitStructure);
 3845              		.loc 1 1468 0
 3846 1b9e 4FF43050 		mov	r0, #11264
 3847 1ba2 C4F20100 		movt	r0, 16385
 3848 1ba6 40F20001 		movw	r1, #:lower16:SDIO_CmdInitStructure
 3849 1baa C0F20001 		movt	r1, #:upper16:SDIO_CmdInitStructure
 3850 1bae FFF7FEFF 		bl	SDIO_SendCommand
1469:../tasks/SDMMC/sd_diskio.c **** 
1470:../tasks/SDMMC/sd_diskio.c ****       errorstatus = CmdResp1Error(SD_CMD_APP_SD_SET_BUSWIDTH);
 3851              		.loc 1 1470 0
 3852 1bb2 0620     		movs	r0, #6
 3853 1bb4 FEF7A8FF 		bl	CmdResp1Error
 3854 1bb8 0346     		mov	r3, r0
 3855 1bba FB75     		strb	r3, [r7, #23]
1471:../tasks/SDMMC/sd_diskio.c **** 
1472:../tasks/SDMMC/sd_diskio.c ****       if (errorstatus != SD_OK)
 3856              		.loc 1 1472 0
 3857 1bbc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3858 1bbe 002B     		cmp	r3, #0
 3859 1bc0 01D0     		beq	.L161
1473:../tasks/SDMMC/sd_diskio.c ****       {
1474:../tasks/SDMMC/sd_diskio.c ****         return(errorstatus);
 3860              		.loc 1 1474 0
 3861 1bc2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3862 1bc4 04E0     		b	.L162
 3863              	.L161:
1475:../tasks/SDMMC/sd_diskio.c ****       }
1476:../tasks/SDMMC/sd_diskio.c **** 
1477:../tasks/SDMMC/sd_diskio.c ****       return(errorstatus);
 3864              		.loc 1 1477 0
 3865 1bc6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3866 1bc8 02E0     		b	.L162
 3867              	.L159:
1478:../tasks/SDMMC/sd_diskio.c ****     }
1479:../tasks/SDMMC/sd_diskio.c ****     else
1480:../tasks/SDMMC/sd_diskio.c ****     {
1481:../tasks/SDMMC/sd_diskio.c ****       errorstatus = SD_REQUEST_NOT_APPLICABLE;
 3868              		.loc 1 1481 0
 3869 1bca 2523     		movs	r3, #37
 3870 1bcc FB75     		strb	r3, [r7, #23]
1482:../tasks/SDMMC/sd_diskio.c ****       return(errorstatus);
 3871              		.loc 1 1482 0
 3872 1bce FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3873              	.L162:
1483:../tasks/SDMMC/sd_diskio.c ****     }
1484:../tasks/SDMMC/sd_diskio.c ****   }
1485:../tasks/SDMMC/sd_diskio.c **** }
 3874              		.loc 1 1485 0
 3875 1bd0 1846     		mov	r0, r3
 3876 1bd2 1837     		adds	r7, r7, #24
 3877 1bd4 BD46     		mov	sp, r7
 3878              		@ sp needed
 3879 1bd6 80BD     		pop	{r7, pc}
 3880              		.cfi_endproc
 3881              	.LFE75:
 3883              		.align	2
 3884              		.thumb
 3885              		.thumb_func
 3887              	FindSCR:
 3888              	.LFB76:
1486:../tasks/SDMMC/sd_diskio.c **** /**
1487:../tasks/SDMMC/sd_diskio.c ****   * @brief  Find the SD card SCR register value.
1488:../tasks/SDMMC/sd_diskio.c ****   * @param  rca: selected card address.
1489:../tasks/SDMMC/sd_diskio.c ****   * @param  pscr: pointer to the buffer that will contain the SCR value.
1490:../tasks/SDMMC/sd_diskio.c ****   * @retval HAL_SD_ErrorTypedef: SD Card Error code.
1491:../tasks/SDMMC/sd_diskio.c ****   */
1492:../tasks/SDMMC/sd_diskio.c **** static HAL_SD_ErrorTypedef FindSCR(uint16_t rca, uint32_t *pscr)
1493:../tasks/SDMMC/sd_diskio.c **** {
 3889              		.loc 1 1493 0
 3890              		.cfi_startproc
 3891              		@ args = 0, pretend = 0, frame = 24
 3892              		@ frame_needed = 1, uses_anonymous_args = 0
 3893 1bd8 90B5     		push	{r4, r7, lr}
 3894              		.cfi_def_cfa_offset 12
 3895              		.cfi_offset 4, -12
 3896              		.cfi_offset 7, -8
 3897              		.cfi_offset 14, -4
 3898 1bda 87B0     		sub	sp, sp, #28
 3899              		.cfi_def_cfa_offset 40
 3900 1bdc 00AF     		add	r7, sp, #0
 3901              		.cfi_def_cfa_register 7
 3902 1bde 0346     		mov	r3, r0
 3903 1be0 3960     		str	r1, [r7]
 3904 1be2 FB80     		strh	r3, [r7, #6]	@ movhi
1494:../tasks/SDMMC/sd_diskio.c ****   uint32_t index = 0;
 3905              		.loc 1 1494 0
 3906 1be4 0023     		movs	r3, #0
 3907 1be6 7B61     		str	r3, [r7, #20]
1495:../tasks/SDMMC/sd_diskio.c ****   HAL_SD_ErrorTypedef errorstatus = SD_OK;
 3908              		.loc 1 1495 0
 3909 1be8 0023     		movs	r3, #0
 3910 1bea FB74     		strb	r3, [r7, #19]
1496:../tasks/SDMMC/sd_diskio.c ****   uint32_t tempscr[2] = {0, 0};
 3911              		.loc 1 1496 0
 3912 1bec 0023     		movs	r3, #0
 3913 1bee BB60     		str	r3, [r7, #8]
 3914 1bf0 0023     		movs	r3, #0
 3915 1bf2 FB60     		str	r3, [r7, #12]
1497:../tasks/SDMMC/sd_diskio.c **** 
1498:../tasks/SDMMC/sd_diskio.c ****   /*!< Set Block Size To 8 Bytes */
1499:../tasks/SDMMC/sd_diskio.c ****   /*!< Send CMD55 APP_CMD with argument as card's RCA */
1500:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.Argument = (uint32_t)8;
 3916              		.loc 1 1500 0
 3917 1bf4 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3918 1bf8 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3919 1bfc 0822     		movs	r2, #8
 3920 1bfe 1A60     		str	r2, [r3]
1501:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.CmdIndex = SD_CMD_SET_BLOCKLEN;
 3921              		.loc 1 1501 0
 3922 1c00 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3923 1c04 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3924 1c08 1022     		movs	r2, #16
 3925 1c0a 5A60     		str	r2, [r3, #4]
1502:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.Response = SDIO_RESPONSE_SHORT;
 3926              		.loc 1 1502 0
 3927 1c0c 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3928 1c10 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3929 1c14 4022     		movs	r2, #64
 3930 1c16 9A60     		str	r2, [r3, #8]
1503:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 3931              		.loc 1 1503 0
 3932 1c18 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3933 1c1c C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3934 1c20 0022     		movs	r2, #0
 3935 1c22 DA60     		str	r2, [r3, #12]
1504:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.CPSM = SDIO_CPSM_ENABLE;
 3936              		.loc 1 1504 0
 3937 1c24 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3938 1c28 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3939 1c2c 4FF48062 		mov	r2, #1024
 3940 1c30 1A61     		str	r2, [r3, #16]
1505:../tasks/SDMMC/sd_diskio.c ****   SDIO_SendCommand(SDIO, &SDIO_CmdInitStructure);
 3941              		.loc 1 1505 0
 3942 1c32 4FF43050 		mov	r0, #11264
 3943 1c36 C4F20100 		movt	r0, 16385
 3944 1c3a 40F20001 		movw	r1, #:lower16:SDIO_CmdInitStructure
 3945 1c3e C0F20001 		movt	r1, #:upper16:SDIO_CmdInitStructure
 3946 1c42 FFF7FEFF 		bl	SDIO_SendCommand
1506:../tasks/SDMMC/sd_diskio.c **** 
1507:../tasks/SDMMC/sd_diskio.c ****   errorstatus = CmdResp1Error(SD_CMD_SET_BLOCKLEN);
 3947              		.loc 1 1507 0
 3948 1c46 1020     		movs	r0, #16
 3949 1c48 FEF75EFF 		bl	CmdResp1Error
 3950 1c4c 0346     		mov	r3, r0
 3951 1c4e FB74     		strb	r3, [r7, #19]
1508:../tasks/SDMMC/sd_diskio.c **** 
1509:../tasks/SDMMC/sd_diskio.c ****   if (errorstatus != SD_OK)
 3952              		.loc 1 1509 0
 3953 1c50 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 3954 1c52 002B     		cmp	r3, #0
 3955 1c54 01D0     		beq	.L164
1510:../tasks/SDMMC/sd_diskio.c ****   {
1511:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 3956              		.loc 1 1511 0
 3957 1c56 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 3958 1c58 19E1     		b	.L174
 3959              	.L164:
1512:../tasks/SDMMC/sd_diskio.c ****   }
1513:../tasks/SDMMC/sd_diskio.c **** 
1514:../tasks/SDMMC/sd_diskio.c ****   /*!< Send CMD55 APP_CMD with argument as card's RCA */
1515:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.Argument = (uint32_t) RCA << 16;
 3960              		.loc 1 1515 0
 3961 1c5a 40F20003 		movw	r3, #:lower16:RCA
 3962 1c5e C0F20003 		movt	r3, #:upper16:RCA
 3963 1c62 1B68     		ldr	r3, [r3]
 3964 1c64 1A04     		lsls	r2, r3, #16
 3965 1c66 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3966 1c6a C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3967 1c6e 1A60     		str	r2, [r3]
1516:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.CmdIndex = SD_CMD_APP_CMD;
 3968              		.loc 1 1516 0
 3969 1c70 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3970 1c74 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3971 1c78 3722     		movs	r2, #55
 3972 1c7a 5A60     		str	r2, [r3, #4]
1517:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.Response = SDIO_RESPONSE_SHORT;
 3973              		.loc 1 1517 0
 3974 1c7c 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3975 1c80 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3976 1c84 4022     		movs	r2, #64
 3977 1c86 9A60     		str	r2, [r3, #8]
1518:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 3978              		.loc 1 1518 0
 3979 1c88 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3980 1c8c C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3981 1c90 0022     		movs	r2, #0
 3982 1c92 DA60     		str	r2, [r3, #12]
1519:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.CPSM = SDIO_CPSM_ENABLE;
 3983              		.loc 1 1519 0
 3984 1c94 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 3985 1c98 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 3986 1c9c 4FF48062 		mov	r2, #1024
 3987 1ca0 1A61     		str	r2, [r3, #16]
1520:../tasks/SDMMC/sd_diskio.c ****   SDIO_SendCommand(SDIO, &SDIO_CmdInitStructure);
 3988              		.loc 1 1520 0
 3989 1ca2 4FF43050 		mov	r0, #11264
 3990 1ca6 C4F20100 		movt	r0, 16385
 3991 1caa 40F20001 		movw	r1, #:lower16:SDIO_CmdInitStructure
 3992 1cae C0F20001 		movt	r1, #:upper16:SDIO_CmdInitStructure
 3993 1cb2 FFF7FEFF 		bl	SDIO_SendCommand
1521:../tasks/SDMMC/sd_diskio.c **** 
1522:../tasks/SDMMC/sd_diskio.c ****   errorstatus = CmdResp1Error(SD_CMD_APP_CMD);
 3994              		.loc 1 1522 0
 3995 1cb6 3720     		movs	r0, #55
 3996 1cb8 FEF726FF 		bl	CmdResp1Error
 3997 1cbc 0346     		mov	r3, r0
 3998 1cbe FB74     		strb	r3, [r7, #19]
1523:../tasks/SDMMC/sd_diskio.c **** 
1524:../tasks/SDMMC/sd_diskio.c ****   if (errorstatus != SD_OK)
 3999              		.loc 1 1524 0
 4000 1cc0 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 4001 1cc2 002B     		cmp	r3, #0
 4002 1cc4 01D0     		beq	.L166
1525:../tasks/SDMMC/sd_diskio.c ****   {
1526:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 4003              		.loc 1 1526 0
 4004 1cc6 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 4005 1cc8 E1E0     		b	.L174
 4006              	.L166:
1527:../tasks/SDMMC/sd_diskio.c ****   }
1528:../tasks/SDMMC/sd_diskio.c ****   SDIO_DataInitStructure.DataTimeOut = SD_DATATIMEOUT;
 4007              		.loc 1 1528 0
 4008 1cca 40F20003 		movw	r3, #:lower16:SDIO_DataInitStructure
 4009 1cce C0F20003 		movt	r3, #:upper16:SDIO_DataInitStructure
 4010 1cd2 4FF0FF32 		mov	r2, #-1
 4011 1cd6 1A60     		str	r2, [r3]
1529:../tasks/SDMMC/sd_diskio.c ****   SDIO_DataInitStructure.DataLength = 8;
 4012              		.loc 1 1529 0
 4013 1cd8 40F20003 		movw	r3, #:lower16:SDIO_DataInitStructure
 4014 1cdc C0F20003 		movt	r3, #:upper16:SDIO_DataInitStructure
 4015 1ce0 0822     		movs	r2, #8
 4016 1ce2 5A60     		str	r2, [r3, #4]
1530:../tasks/SDMMC/sd_diskio.c ****   SDIO_DataInitStructure.DataBlockSize = SDIO_DATABLOCK_SIZE_8B;
 4017              		.loc 1 1530 0
 4018 1ce4 40F20003 		movw	r3, #:lower16:SDIO_DataInitStructure
 4019 1ce8 C0F20003 		movt	r3, #:upper16:SDIO_DataInitStructure
 4020 1cec 3022     		movs	r2, #48
 4021 1cee 9A60     		str	r2, [r3, #8]
1531:../tasks/SDMMC/sd_diskio.c ****   SDIO_DataInitStructure.TransferDir = SDIO_TRANSFER_DIR_TO_SDIO;
 4022              		.loc 1 1531 0
 4023 1cf0 40F20003 		movw	r3, #:lower16:SDIO_DataInitStructure
 4024 1cf4 C0F20003 		movt	r3, #:upper16:SDIO_DataInitStructure
 4025 1cf8 0222     		movs	r2, #2
 4026 1cfa DA60     		str	r2, [r3, #12]
1532:../tasks/SDMMC/sd_diskio.c ****   SDIO_DataInitStructure.TransferMode = SDIO_TRANSFER_MODE_BLOCK;
 4027              		.loc 1 1532 0
 4028 1cfc 40F20003 		movw	r3, #:lower16:SDIO_DataInitStructure
 4029 1d00 C0F20003 		movt	r3, #:upper16:SDIO_DataInitStructure
 4030 1d04 0022     		movs	r2, #0
 4031 1d06 1A61     		str	r2, [r3, #16]
1533:../tasks/SDMMC/sd_diskio.c ****   SDIO_DataInitStructure.DPSM = SDIO_DPSM_ENABLE;
 4032              		.loc 1 1533 0
 4033 1d08 40F20003 		movw	r3, #:lower16:SDIO_DataInitStructure
 4034 1d0c C0F20003 		movt	r3, #:upper16:SDIO_DataInitStructure
 4035 1d10 0122     		movs	r2, #1
 4036 1d12 5A61     		str	r2, [r3, #20]
1534:../tasks/SDMMC/sd_diskio.c ****   SDIO_DataConfig(SDIO, &SDIO_DataInitStructure);
 4037              		.loc 1 1534 0
 4038 1d14 4FF43050 		mov	r0, #11264
 4039 1d18 C4F20100 		movt	r0, 16385
 4040 1d1c 40F20001 		movw	r1, #:lower16:SDIO_DataInitStructure
 4041 1d20 C0F20001 		movt	r1, #:upper16:SDIO_DataInitStructure
 4042 1d24 FFF7FEFF 		bl	SDIO_DataConfig
1535:../tasks/SDMMC/sd_diskio.c **** 
1536:../tasks/SDMMC/sd_diskio.c **** 
1537:../tasks/SDMMC/sd_diskio.c ****   /*!< Send ACMD51 SD_APP_SEND_SCR with argument as 0 */
1538:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.Argument = 0x0;
 4043              		.loc 1 1538 0
 4044 1d28 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 4045 1d2c C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 4046 1d30 0022     		movs	r2, #0
 4047 1d32 1A60     		str	r2, [r3]
1539:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.CmdIndex = SD_CMD_SD_APP_SEND_SCR;
 4048              		.loc 1 1539 0
 4049 1d34 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 4050 1d38 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 4051 1d3c 3322     		movs	r2, #51
 4052 1d3e 5A60     		str	r2, [r3, #4]
1540:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.Response = SDIO_RESPONSE_SHORT;
 4053              		.loc 1 1540 0
 4054 1d40 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 4055 1d44 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 4056 1d48 4022     		movs	r2, #64
 4057 1d4a 9A60     		str	r2, [r3, #8]
1541:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 4058              		.loc 1 1541 0
 4059 1d4c 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 4060 1d50 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 4061 1d54 0022     		movs	r2, #0
 4062 1d56 DA60     		str	r2, [r3, #12]
1542:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.CPSM = SDIO_CPSM_ENABLE;
 4063              		.loc 1 1542 0
 4064 1d58 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 4065 1d5c C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 4066 1d60 4FF48062 		mov	r2, #1024
 4067 1d64 1A61     		str	r2, [r3, #16]
1543:../tasks/SDMMC/sd_diskio.c ****   SDIO_SendCommand(SDIO, &SDIO_CmdInitStructure);
 4068              		.loc 1 1543 0
 4069 1d66 4FF43050 		mov	r0, #11264
 4070 1d6a C4F20100 		movt	r0, 16385
 4071 1d6e 40F20001 		movw	r1, #:lower16:SDIO_CmdInitStructure
 4072 1d72 C0F20001 		movt	r1, #:upper16:SDIO_CmdInitStructure
 4073 1d76 FFF7FEFF 		bl	SDIO_SendCommand
1544:../tasks/SDMMC/sd_diskio.c **** 
1545:../tasks/SDMMC/sd_diskio.c ****   errorstatus = CmdResp1Error(SD_CMD_SD_APP_SEND_SCR);
 4074              		.loc 1 1545 0
 4075 1d7a 3320     		movs	r0, #51
 4076 1d7c FEF7C4FE 		bl	CmdResp1Error
 4077 1d80 0346     		mov	r3, r0
 4078 1d82 FB74     		strb	r3, [r7, #19]
1546:../tasks/SDMMC/sd_diskio.c **** 
1547:../tasks/SDMMC/sd_diskio.c ****   if (errorstatus != SD_OK)
 4079              		.loc 1 1547 0
 4080 1d84 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 4081 1d86 002B     		cmp	r3, #0
 4082 1d88 01D0     		beq	.L167
1548:../tasks/SDMMC/sd_diskio.c ****   {
1549:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 4083              		.loc 1 1549 0
 4084 1d8a FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 4085 1d8c 7FE0     		b	.L174
 4086              	.L167:
1550:../tasks/SDMMC/sd_diskio.c ****   }
1551:../tasks/SDMMC/sd_diskio.c **** 
1552:../tasks/SDMMC/sd_diskio.c ****   while (!(SDIO->STA & (SDIO_FLAG_RXOVERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_DTIMEOUT | SDIO_FLAG_DBC
 4087              		.loc 1 1552 0
 4088 1d8e 16E0     		b	.L168
 4089              	.L169:
1553:../tasks/SDMMC/sd_diskio.c ****   {
1554:../tasks/SDMMC/sd_diskio.c ****     if (SDIO_GetFlagStatus(SDIO_FLAG_RXDAVL) != RESET)
 4090              		.loc 1 1554 0
 4091 1d90 4FF40010 		mov	r0, #2097152
 4092 1d94 FFF7FEFF 		bl	SDIO_GetFlagStatus
 4093 1d98 0346     		mov	r3, r0
 4094 1d9a 002B     		cmp	r3, #0
 4095 1d9c 0FD0     		beq	.L168
1555:../tasks/SDMMC/sd_diskio.c ****     {
1556:../tasks/SDMMC/sd_diskio.c ****       *(tempscr + index) = SDIO_ReadFIFO(SDIO);
 4096              		.loc 1 1556 0
 4097 1d9e 7B69     		ldr	r3, [r7, #20]
 4098 1da0 9B00     		lsls	r3, r3, #2
 4099 1da2 07F10802 		add	r2, r7, #8
 4100 1da6 D418     		adds	r4, r2, r3
 4101 1da8 4FF43050 		mov	r0, #11264
 4102 1dac C4F20100 		movt	r0, 16385
 4103 1db0 FFF7FEFF 		bl	SDIO_ReadFIFO
 4104 1db4 0346     		mov	r3, r0
 4105 1db6 2360     		str	r3, [r4]
1557:../tasks/SDMMC/sd_diskio.c ****       index++;
 4106              		.loc 1 1557 0
 4107 1db8 7B69     		ldr	r3, [r7, #20]
 4108 1dba 0133     		adds	r3, r3, #1
 4109 1dbc 7B61     		str	r3, [r7, #20]
 4110              	.L168:
1552:../tasks/SDMMC/sd_diskio.c ****   {
 4111              		.loc 1 1552 0 discriminator 1
 4112 1dbe 4FF43053 		mov	r3, #11264
 4113 1dc2 C4F20103 		movt	r3, 16385
 4114 1dc6 5A6B     		ldr	r2, [r3, #52]
 4115 1dc8 40F22A63 		movw	r3, #1578
 4116 1dcc 1340     		ands	r3, r3, r2
 4117 1dce 002B     		cmp	r3, #0
 4118 1dd0 DED0     		beq	.L169
1558:../tasks/SDMMC/sd_diskio.c ****     }
1559:../tasks/SDMMC/sd_diskio.c ****   }
1560:../tasks/SDMMC/sd_diskio.c **** 
1561:../tasks/SDMMC/sd_diskio.c ****   if (SDIO_GetFlagStatus(SDIO_FLAG_DTIMEOUT) != RESET)
 4119              		.loc 1 1561 0
 4120 1dd2 0820     		movs	r0, #8
 4121 1dd4 FFF7FEFF 		bl	SDIO_GetFlagStatus
 4122 1dd8 0346     		mov	r3, r0
 4123 1dda 002B     		cmp	r3, #0
 4124 1ddc 06D0     		beq	.L170
1562:../tasks/SDMMC/sd_diskio.c ****   {
1563:../tasks/SDMMC/sd_diskio.c ****     SDIO_ClearFlag(SDIO_FLAG_DTIMEOUT);
 4125              		.loc 1 1563 0
 4126 1dde 0820     		movs	r0, #8
 4127 1de0 FFF7FEFF 		bl	SDIO_ClearFlag
1564:../tasks/SDMMC/sd_diskio.c ****     errorstatus = SD_DATA_TIMEOUT;
 4128              		.loc 1 1564 0
 4129 1de4 0423     		movs	r3, #4
 4130 1de6 FB74     		strb	r3, [r7, #19]
1565:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 4131              		.loc 1 1565 0
 4132 1de8 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 4133 1dea 50E0     		b	.L174
 4134              	.L170:
1566:../tasks/SDMMC/sd_diskio.c ****   }
1567:../tasks/SDMMC/sd_diskio.c ****   else if (SDIO_GetFlagStatus(SDIO_FLAG_DCRCFAIL) != RESET)
 4135              		.loc 1 1567 0
 4136 1dec 0220     		movs	r0, #2
 4137 1dee FFF7FEFF 		bl	SDIO_GetFlagStatus
 4138 1df2 0346     		mov	r3, r0
 4139 1df4 002B     		cmp	r3, #0
 4140 1df6 06D0     		beq	.L171
1568:../tasks/SDMMC/sd_diskio.c ****   {
1569:../tasks/SDMMC/sd_diskio.c ****     SDIO_ClearFlag(SDIO_FLAG_DCRCFAIL);
 4141              		.loc 1 1569 0
 4142 1df8 0220     		movs	r0, #2
 4143 1dfa FFF7FEFF 		bl	SDIO_ClearFlag
1570:../tasks/SDMMC/sd_diskio.c ****     errorstatus = SD_DATA_CRC_FAIL;
 4144              		.loc 1 1570 0
 4145 1dfe 0223     		movs	r3, #2
 4146 1e00 FB74     		strb	r3, [r7, #19]
1571:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 4147              		.loc 1 1571 0
 4148 1e02 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 4149 1e04 43E0     		b	.L174
 4150              	.L171:
1572:../tasks/SDMMC/sd_diskio.c ****   }
1573:../tasks/SDMMC/sd_diskio.c ****   else if (SDIO_GetFlagStatus(SDIO_FLAG_RXOVERR) != RESET)
 4151              		.loc 1 1573 0
 4152 1e06 2020     		movs	r0, #32
 4153 1e08 FFF7FEFF 		bl	SDIO_GetFlagStatus
 4154 1e0c 0346     		mov	r3, r0
 4155 1e0e 002B     		cmp	r3, #0
 4156 1e10 06D0     		beq	.L172
1574:../tasks/SDMMC/sd_diskio.c ****   {
1575:../tasks/SDMMC/sd_diskio.c ****     SDIO_ClearFlag(SDIO_FLAG_RXOVERR);
 4157              		.loc 1 1575 0
 4158 1e12 2020     		movs	r0, #32
 4159 1e14 FFF7FEFF 		bl	SDIO_ClearFlag
1576:../tasks/SDMMC/sd_diskio.c ****     errorstatus = SD_RX_OVERRUN;
 4160              		.loc 1 1576 0
 4161 1e18 0623     		movs	r3, #6
 4162 1e1a FB74     		strb	r3, [r7, #19]
1577:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 4163              		.loc 1 1577 0
 4164 1e1c FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 4165 1e1e 36E0     		b	.L174
 4166              	.L172:
1578:../tasks/SDMMC/sd_diskio.c ****   }
1579:../tasks/SDMMC/sd_diskio.c ****   else if (SDIO_GetFlagStatus(SDIO_FLAG_STBITERR) != RESET)
 4167              		.loc 1 1579 0
 4168 1e20 4FF40070 		mov	r0, #512
 4169 1e24 FFF7FEFF 		bl	SDIO_GetFlagStatus
 4170 1e28 0346     		mov	r3, r0
 4171 1e2a 002B     		cmp	r3, #0
 4172 1e2c 07D0     		beq	.L173
1580:../tasks/SDMMC/sd_diskio.c ****   {
1581:../tasks/SDMMC/sd_diskio.c ****     SDIO_ClearFlag(SDIO_FLAG_STBITERR);
 4173              		.loc 1 1581 0
 4174 1e2e 4FF40070 		mov	r0, #512
 4175 1e32 FFF7FEFF 		bl	SDIO_ClearFlag
1582:../tasks/SDMMC/sd_diskio.c ****     errorstatus = SD_START_BIT_ERR;
 4176              		.loc 1 1582 0
 4177 1e36 0723     		movs	r3, #7
 4178 1e38 FB74     		strb	r3, [r7, #19]
1583:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 4179              		.loc 1 1583 0
 4180 1e3a FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 4181 1e3c 27E0     		b	.L174
 4182              	.L173:
1584:../tasks/SDMMC/sd_diskio.c ****   }
1585:../tasks/SDMMC/sd_diskio.c **** 
1586:../tasks/SDMMC/sd_diskio.c ****   /*!< Clear all the static flags */
1587:../tasks/SDMMC/sd_diskio.c ****   SDIO_ClearFlag(SDIO_STATIC_FLAGS);
 4183              		.loc 1 1587 0
 4184 1e3e 40F2FF50 		movw	r0, #1535
 4185 1e42 FFF7FEFF 		bl	SDIO_ClearFlag
1588:../tasks/SDMMC/sd_diskio.c **** 
1589:../tasks/SDMMC/sd_diskio.c ****   *(pscr + 1) = ((tempscr[0] & SD_0TO7BITS) << 24) | ((tempscr[0] & SD_8TO15BITS) << 8) | ((tempscr
 4186              		.loc 1 1589 0
 4187 1e46 3B68     		ldr	r3, [r7]
 4188 1e48 0433     		adds	r3, r3, #4
 4189 1e4a BA68     		ldr	r2, [r7, #8]
 4190 1e4c 1106     		lsls	r1, r2, #24
 4191 1e4e BA68     		ldr	r2, [r7, #8]
 4192 1e50 02F47F42 		and	r2, r2, #65280
 4193 1e54 1202     		lsls	r2, r2, #8
 4194 1e56 1143     		orrs	r1, r1, r2
 4195 1e58 BA68     		ldr	r2, [r7, #8]
 4196 1e5a 02F47F02 		and	r2, r2, #16711680
 4197 1e5e 120A     		lsrs	r2, r2, #8
 4198 1e60 1143     		orrs	r1, r1, r2
 4199 1e62 BA68     		ldr	r2, [r7, #8]
 4200 1e64 120E     		lsrs	r2, r2, #24
 4201 1e66 0A43     		orrs	r2, r2, r1
 4202 1e68 1A60     		str	r2, [r3]
1590:../tasks/SDMMC/sd_diskio.c **** 
1591:../tasks/SDMMC/sd_diskio.c ****   *(pscr) = ((tempscr[1] & SD_0TO7BITS) << 24) | ((tempscr[1] & SD_8TO15BITS) << 8) | ((tempscr[1] 
 4203              		.loc 1 1591 0
 4204 1e6a FB68     		ldr	r3, [r7, #12]
 4205 1e6c 1A06     		lsls	r2, r3, #24
 4206 1e6e FB68     		ldr	r3, [r7, #12]
 4207 1e70 03F47F43 		and	r3, r3, #65280
 4208 1e74 1B02     		lsls	r3, r3, #8
 4209 1e76 1A43     		orrs	r2, r2, r3
 4210 1e78 FB68     		ldr	r3, [r7, #12]
 4211 1e7a 03F47F03 		and	r3, r3, #16711680
 4212 1e7e 1B0A     		lsrs	r3, r3, #8
 4213 1e80 1A43     		orrs	r2, r2, r3
 4214 1e82 FB68     		ldr	r3, [r7, #12]
 4215 1e84 1B0E     		lsrs	r3, r3, #24
 4216 1e86 1A43     		orrs	r2, r2, r3
 4217 1e88 3B68     		ldr	r3, [r7]
 4218 1e8a 1A60     		str	r2, [r3]
1592:../tasks/SDMMC/sd_diskio.c **** 
1593:../tasks/SDMMC/sd_diskio.c ****   return(errorstatus);
 4219              		.loc 1 1593 0
 4220 1e8c FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 4221              	.L174:
1594:../tasks/SDMMC/sd_diskio.c **** }
 4222              		.loc 1 1594 0
 4223 1e8e 1846     		mov	r0, r3
 4224 1e90 1C37     		adds	r7, r7, #28
 4225 1e92 BD46     		mov	sp, r7
 4226              		@ sp needed
 4227 1e94 90BD     		pop	{r4, r7, pc}
 4228              		.cfi_endproc
 4229              	.LFE76:
 4231 1e96 00BF     		.align	2
 4232              		.global	SD_Detect
 4233              		.thumb
 4234              		.thumb_func
 4236              	SD_Detect:
 4237              	.LFB77:
1595:../tasks/SDMMC/sd_diskio.c **** 
1596:../tasks/SDMMC/sd_diskio.c **** 
1597:../tasks/SDMMC/sd_diskio.c **** /**
1598:../tasks/SDMMC/sd_diskio.c ****  * @brief  Detect if SD card is correctly plugged in the memory slot.
1599:../tasks/SDMMC/sd_diskio.c ****  * @param  None
1600:../tasks/SDMMC/sd_diskio.c ****  * @retval Return if SD is detected or not
1601:../tasks/SDMMC/sd_diskio.c ****  */
1602:../tasks/SDMMC/sd_diskio.c **** uint8_t SD_Detect(void)
1603:../tasks/SDMMC/sd_diskio.c **** {
 4238              		.loc 1 1603 0
 4239              		.cfi_startproc
 4240              		@ args = 0, pretend = 0, frame = 8
 4241              		@ frame_needed = 1, uses_anonymous_args = 0
 4242 1e98 80B5     		push	{r7, lr}
 4243              		.cfi_def_cfa_offset 8
 4244              		.cfi_offset 7, -8
 4245              		.cfi_offset 14, -4
 4246 1e9a 82B0     		sub	sp, sp, #8
 4247              		.cfi_def_cfa_offset 16
 4248 1e9c 00AF     		add	r7, sp, #0
 4249              		.cfi_def_cfa_register 7
1604:../tasks/SDMMC/sd_diskio.c ****   __IO uint8_t status = SD_PRESENT;
 4250              		.loc 1 1604 0
 4251 1e9e 0123     		movs	r3, #1
 4252 1ea0 FB71     		strb	r3, [r7, #7]
1605:../tasks/SDMMC/sd_diskio.c **** 
1606:../tasks/SDMMC/sd_diskio.c ****   /*!< Check GPIO to detect SD */
1607:../tasks/SDMMC/sd_diskio.c ****   if (HAL_GPIO_ReadPin(SD_DETECT_GPIO_PORT, SD_DETECT_PIN) != GPIO_PIN_RESET)
 4253              		.loc 1 1607 0
 4254 1ea2 4FF48060 		mov	r0, #1024
 4255 1ea6 C4F20200 		movt	r0, 16386
 4256 1eaa 2021     		movs	r1, #32
 4257 1eac FFF7FEFF 		bl	HAL_GPIO_ReadPin
 4258 1eb0 0346     		mov	r3, r0
 4259 1eb2 002B     		cmp	r3, #0
 4260 1eb4 01D0     		beq	.L176
1608:../tasks/SDMMC/sd_diskio.c ****   {
1609:../tasks/SDMMC/sd_diskio.c **** //	LED_High(LED11);
1610:../tasks/SDMMC/sd_diskio.c ****     status = SD_NOT_PRESENT;
 4261              		.loc 1 1610 0
 4262 1eb6 0023     		movs	r3, #0
 4263 1eb8 FB71     		strb	r3, [r7, #7]
 4264              	.L176:
1611:../tasks/SDMMC/sd_diskio.c ****   }
1612:../tasks/SDMMC/sd_diskio.c ****   return status;
 4265              		.loc 1 1612 0
 4266 1eba FB79     		ldrb	r3, [r7, #7]
 4267 1ebc DBB2     		uxtb	r3, r3
1613:../tasks/SDMMC/sd_diskio.c **** }
 4268              		.loc 1 1613 0
 4269 1ebe 1846     		mov	r0, r3
 4270 1ec0 0837     		adds	r7, r7, #8
 4271 1ec2 BD46     		mov	sp, r7
 4272              		@ sp needed
 4273 1ec4 80BD     		pop	{r7, pc}
 4274              		.cfi_endproc
 4275              	.LFE77:
 4277 1ec6 00BF     		.align	2
 4278              		.global	SD_SendStatus
 4279              		.thumb
 4280              		.thumb_func
 4282              	SD_SendStatus:
 4283              	.LFB78:
1614:../tasks/SDMMC/sd_diskio.c **** /**
1615:../tasks/SDMMC/sd_diskio.c ****   * @brief  Returns the current card's status.
1616:../tasks/SDMMC/sd_diskio.c ****   * @param  pcardstatus: pointer to the buffer that will contain the SD card
1617:../tasks/SDMMC/sd_diskio.c ****   *         status (Card Status register).
1618:../tasks/SDMMC/sd_diskio.c ****   * @retval HAL_SD_ErrorTypedef: SD Card Error code.
1619:../tasks/SDMMC/sd_diskio.c ****   */
1620:../tasks/SDMMC/sd_diskio.c **** HAL_SD_ErrorTypedef SD_SendStatus(uint32_t *pcardstatus)
1621:../tasks/SDMMC/sd_diskio.c **** {
 4284              		.loc 1 1621 0
 4285              		.cfi_startproc
 4286              		@ args = 0, pretend = 0, frame = 16
 4287              		@ frame_needed = 1, uses_anonymous_args = 0
 4288 1ec8 80B5     		push	{r7, lr}
 4289              		.cfi_def_cfa_offset 8
 4290              		.cfi_offset 7, -8
 4291              		.cfi_offset 14, -4
 4292 1eca 84B0     		sub	sp, sp, #16
 4293              		.cfi_def_cfa_offset 24
 4294 1ecc 00AF     		add	r7, sp, #0
 4295              		.cfi_def_cfa_register 7
 4296 1ece 7860     		str	r0, [r7, #4]
1622:../tasks/SDMMC/sd_diskio.c ****   HAL_SD_ErrorTypedef errorstatus = SD_OK;
 4297              		.loc 1 1622 0
 4298 1ed0 0023     		movs	r3, #0
 4299 1ed2 FB73     		strb	r3, [r7, #15]
1623:../tasks/SDMMC/sd_diskio.c **** 
1624:../tasks/SDMMC/sd_diskio.c ****   if (pcardstatus == NULL)
 4300              		.loc 1 1624 0
 4301 1ed4 7B68     		ldr	r3, [r7, #4]
 4302 1ed6 002B     		cmp	r3, #0
 4303 1ed8 03D1     		bne	.L179
1625:../tasks/SDMMC/sd_diskio.c ****   {
1626:../tasks/SDMMC/sd_diskio.c ****     errorstatus = SD_INVALID_PARAMETER;
 4304              		.loc 1 1626 0
 4305 1eda 2623     		movs	r3, #38
 4306 1edc FB73     		strb	r3, [r7, #15]
1627:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 4307              		.loc 1 1627 0
 4308 1ede FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4309 1ee0 3EE0     		b	.L180
 4310              	.L179:
1628:../tasks/SDMMC/sd_diskio.c ****   }
1629:../tasks/SDMMC/sd_diskio.c **** 
1630:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.Argument = (uint32_t) RCA << 16;
 4311              		.loc 1 1630 0
 4312 1ee2 40F20003 		movw	r3, #:lower16:RCA
 4313 1ee6 C0F20003 		movt	r3, #:upper16:RCA
 4314 1eea 1B68     		ldr	r3, [r3]
 4315 1eec 1A04     		lsls	r2, r3, #16
 4316 1eee 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 4317 1ef2 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 4318 1ef6 1A60     		str	r2, [r3]
1631:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.CmdIndex = SD_CMD_SEND_STATUS;
 4319              		.loc 1 1631 0
 4320 1ef8 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 4321 1efc C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 4322 1f00 0D22     		movs	r2, #13
 4323 1f02 5A60     		str	r2, [r3, #4]
1632:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.Response = SDIO_RESPONSE_SHORT;
 4324              		.loc 1 1632 0
 4325 1f04 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 4326 1f08 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 4327 1f0c 4022     		movs	r2, #64
 4328 1f0e 9A60     		str	r2, [r3, #8]
1633:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 4329              		.loc 1 1633 0
 4330 1f10 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 4331 1f14 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 4332 1f18 0022     		movs	r2, #0
 4333 1f1a DA60     		str	r2, [r3, #12]
1634:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.CPSM = SDIO_CPSM_ENABLE;
 4334              		.loc 1 1634 0
 4335 1f1c 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 4336 1f20 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 4337 1f24 4FF48062 		mov	r2, #1024
 4338 1f28 1A61     		str	r2, [r3, #16]
1635:../tasks/SDMMC/sd_diskio.c ****   SDIO_SendCommand(SDIO, &SDIO_CmdInitStructure);
 4339              		.loc 1 1635 0
 4340 1f2a 4FF43050 		mov	r0, #11264
 4341 1f2e C4F20100 		movt	r0, 16385
 4342 1f32 40F20001 		movw	r1, #:lower16:SDIO_CmdInitStructure
 4343 1f36 C0F20001 		movt	r1, #:upper16:SDIO_CmdInitStructure
 4344 1f3a FFF7FEFF 		bl	SDIO_SendCommand
1636:../tasks/SDMMC/sd_diskio.c **** 
1637:../tasks/SDMMC/sd_diskio.c ****   errorstatus = CmdResp1Error(SD_CMD_SEND_STATUS);
 4345              		.loc 1 1637 0
 4346 1f3e 0D20     		movs	r0, #13
 4347 1f40 FEF7E2FD 		bl	CmdResp1Error
 4348 1f44 0346     		mov	r3, r0
 4349 1f46 FB73     		strb	r3, [r7, #15]
1638:../tasks/SDMMC/sd_diskio.c **** 
1639:../tasks/SDMMC/sd_diskio.c ****   if (errorstatus != SD_OK)
 4350              		.loc 1 1639 0
 4351 1f48 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4352 1f4a 002B     		cmp	r3, #0
 4353 1f4c 01D0     		beq	.L181
1640:../tasks/SDMMC/sd_diskio.c ****   {
1641:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 4354              		.loc 1 1641 0
 4355 1f4e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4356 1f50 06E0     		b	.L180
 4357              	.L181:
1642:../tasks/SDMMC/sd_diskio.c ****   }
1643:../tasks/SDMMC/sd_diskio.c **** 
1644:../tasks/SDMMC/sd_diskio.c ****   *pcardstatus = SDIO_GetResponse(SDIO_RESP1);
 4358              		.loc 1 1644 0
 4359 1f52 0020     		movs	r0, #0
 4360 1f54 FFF7FEFF 		bl	SDIO_GetResponse
 4361 1f58 0246     		mov	r2, r0
 4362 1f5a 7B68     		ldr	r3, [r7, #4]
 4363 1f5c 1A60     		str	r2, [r3]
1645:../tasks/SDMMC/sd_diskio.c **** 
1646:../tasks/SDMMC/sd_diskio.c ****   return(errorstatus);
 4364              		.loc 1 1646 0
 4365 1f5e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4366              	.L180:
1647:../tasks/SDMMC/sd_diskio.c **** }
 4367              		.loc 1 1647 0
 4368 1f60 1846     		mov	r0, r3
 4369 1f62 1037     		adds	r7, r7, #16
 4370 1f64 BD46     		mov	sp, r7
 4371              		@ sp needed
 4372 1f66 80BD     		pop	{r7, pc}
 4373              		.cfi_endproc
 4374              	.LFE78:
 4376              		.align	2
 4377              		.global	BSP_SD_ReadBlocks_DMA
 4378              		.thumb
 4379              		.thumb_func
 4381              	BSP_SD_ReadBlocks_DMA:
 4382              	.LFB79:
1648:../tasks/SDMMC/sd_diskio.c **** 
1649:../tasks/SDMMC/sd_diskio.c **** /**
1650:../tasks/SDMMC/sd_diskio.c ****   * @brief  Reads block(s) from a specified address in an SD card, in DMA mode.
1651:../tasks/SDMMC/sd_diskio.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
1652:../tasks/SDMMC/sd_diskio.c ****   * @param  ReadAddr: Address from where data is to be read
1653:../tasks/SDMMC/sd_diskio.c ****   * @param  BlockSize: SD card data block size, that should be 512
1654:../tasks/SDMMC/sd_diskio.c ****   * @param  NumOfBlocks: Number of SD blocks to read
1655:../tasks/SDMMC/sd_diskio.c ****   * @retval SD status
1656:../tasks/SDMMC/sd_diskio.c ****   */
1657:../tasks/SDMMC/sd_diskio.c **** uint8_t BSP_SD_ReadBlocks_DMA(uint32_t *pData, uint64_t ReadAddr, uint32_t BlockSize, uint32_t NumO
1658:../tasks/SDMMC/sd_diskio.c **** {
 4383              		.loc 1 1658 0
 4384              		.cfi_startproc
 4385              		@ args = 8, pretend = 0, frame = 24
 4386              		@ frame_needed = 1, uses_anonymous_args = 0
 4387 1f68 80B5     		push	{r7, lr}
 4388              		.cfi_def_cfa_offset 8
 4389              		.cfi_offset 7, -8
 4390              		.cfi_offset 14, -4
 4391 1f6a 88B0     		sub	sp, sp, #32
 4392              		.cfi_def_cfa_offset 40
 4393 1f6c 02AF     		add	r7, sp, #8
 4394              		.cfi_def_cfa 7, 32
 4395 1f6e F860     		str	r0, [r7, #12]
 4396 1f70 C7E90023 		strd	r2, [r7]
1659:../tasks/SDMMC/sd_diskio.c ****   uint8_t SD_state = MSD_OK;
 4397              		.loc 1 1659 0
 4398 1f74 0023     		movs	r3, #0
 4399 1f76 FB75     		strb	r3, [r7, #23]
1660:../tasks/SDMMC/sd_diskio.c **** 
1661:../tasks/SDMMC/sd_diskio.c **** //	printf("[SD] I:BSP_SD_ReadBlocks_DMA....\n");
1662:../tasks/SDMMC/sd_diskio.c **** 
1663:../tasks/SDMMC/sd_diskio.c **** 
1664:../tasks/SDMMC/sd_diskio.c ****   /* Read block(s) in DMA transfer mode */
1665:../tasks/SDMMC/sd_diskio.c ****   if(HAL_SD_ReadBlocks_DMA(&uSdHandle, pData, ReadAddr, BlockSize, NumOfBlocks) != SD_OK)
 4400              		.loc 1 1665 0
 4401 1f78 3B6A     		ldr	r3, [r7, #32]
 4402 1f7a 0093     		str	r3, [sp]
 4403 1f7c 7B6A     		ldr	r3, [r7, #36]
 4404 1f7e 0193     		str	r3, [sp, #4]
 4405 1f80 40F20000 		movw	r0, #:lower16:uSdHandle
 4406 1f84 C0F20000 		movt	r0, #:upper16:uSdHandle
 4407 1f88 F968     		ldr	r1, [r7, #12]
 4408 1f8a D7E90023 		ldrd	r2, [r7]
 4409 1f8e FFF7FEFF 		bl	HAL_SD_ReadBlocks_DMA
 4410 1f92 0346     		mov	r3, r0
 4411 1f94 002B     		cmp	r3, #0
 4412 1f96 01D0     		beq	.L183
1666:../tasks/SDMMC/sd_diskio.c ****   {
1667:../tasks/SDMMC/sd_diskio.c ****     SD_state = MSD_ERROR;
 4413              		.loc 1 1667 0
 4414 1f98 0123     		movs	r3, #1
 4415 1f9a FB75     		strb	r3, [r7, #23]
 4416              	.L183:
1668:../tasks/SDMMC/sd_diskio.c ****   }
1669:../tasks/SDMMC/sd_diskio.c **** 
1670:../tasks/SDMMC/sd_diskio.c ****   /* Wait until transfer is complete */
1671:../tasks/SDMMC/sd_diskio.c ****   if(SD_state == MSD_OK)
 4417              		.loc 1 1671 0
 4418 1f9c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4419 1f9e 002B     		cmp	r3, #0
 4420 1fa0 0FD1     		bne	.L184
1672:../tasks/SDMMC/sd_diskio.c ****   {
1673:../tasks/SDMMC/sd_diskio.c ****     if(HAL_SD_CheckReadOperation(&uSdHandle, (uint32_t)SD_DATATIMEOUT) != SD_OK)
 4421              		.loc 1 1673 0
 4422 1fa2 40F20000 		movw	r0, #:lower16:uSdHandle
 4423 1fa6 C0F20000 		movt	r0, #:upper16:uSdHandle
 4424 1faa 4FF0FF31 		mov	r1, #-1
 4425 1fae FFF7FEFF 		bl	HAL_SD_CheckReadOperation
 4426 1fb2 0346     		mov	r3, r0
 4427 1fb4 002B     		cmp	r3, #0
 4428 1fb6 02D0     		beq	.L185
1674:../tasks/SDMMC/sd_diskio.c ****     {
1675:../tasks/SDMMC/sd_diskio.c ****       SD_state = MSD_ERROR;
 4429              		.loc 1 1675 0
 4430 1fb8 0123     		movs	r3, #1
 4431 1fba FB75     		strb	r3, [r7, #23]
 4432 1fbc 01E0     		b	.L184
 4433              	.L185:
1676:../tasks/SDMMC/sd_diskio.c ****     }
1677:../tasks/SDMMC/sd_diskio.c ****     else
1678:../tasks/SDMMC/sd_diskio.c ****     {
1679:../tasks/SDMMC/sd_diskio.c ****       SD_state = MSD_OK;
 4434              		.loc 1 1679 0
 4435 1fbe 0023     		movs	r3, #0
 4436 1fc0 FB75     		strb	r3, [r7, #23]
 4437              	.L184:
1680:../tasks/SDMMC/sd_diskio.c ****     }
1681:../tasks/SDMMC/sd_diskio.c ****   }
1682:../tasks/SDMMC/sd_diskio.c **** 
1683:../tasks/SDMMC/sd_diskio.c **** //	printf("[SD] I:BSP_SD_ReadBlocks_DMA: %d\n",SD_state);
1684:../tasks/SDMMC/sd_diskio.c **** 
1685:../tasks/SDMMC/sd_diskio.c ****   return SD_state;
 4438              		.loc 1 1685 0
 4439 1fc2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1686:../tasks/SDMMC/sd_diskio.c **** }
 4440              		.loc 1 1686 0
 4441 1fc4 1846     		mov	r0, r3
 4442 1fc6 1837     		adds	r7, r7, #24
 4443 1fc8 BD46     		mov	sp, r7
 4444              		@ sp needed
 4445 1fca 80BD     		pop	{r7, pc}
 4446              		.cfi_endproc
 4447              	.LFE79:
 4449              		.align	2
 4450              		.global	BSP_SD_GetStatus
 4451              		.thumb
 4452              		.thumb_func
 4454              	BSP_SD_GetStatus:
 4455              	.LFB80:
1687:../tasks/SDMMC/sd_diskio.c **** /**
1688:../tasks/SDMMC/sd_diskio.c ****   * @brief  Gets the current SD card data status.
1689:../tasks/SDMMC/sd_diskio.c ****   * @param  None
1690:../tasks/SDMMC/sd_diskio.c ****   * @retval Data transfer state.
1691:../tasks/SDMMC/sd_diskio.c ****   *          This value can be one of the following values:
1692:../tasks/SDMMC/sd_diskio.c ****   *            @arg  SD_TRANSFER_OK: No data transfer is acting
1693:../tasks/SDMMC/sd_diskio.c ****   *            @arg  SD_TRANSFER_BUSY: Data transfer is acting
1694:../tasks/SDMMC/sd_diskio.c ****   *            @arg  SD_TRANSFER_ERROR: Data transfer error
1695:../tasks/SDMMC/sd_diskio.c ****   */
1696:../tasks/SDMMC/sd_diskio.c **** HAL_SD_TransferStateTypedef BSP_SD_GetStatus(void)
1697:../tasks/SDMMC/sd_diskio.c **** {
 4456              		.loc 1 1697 0
 4457              		.cfi_startproc
 4458              		@ args = 0, pretend = 0, frame = 0
 4459              		@ frame_needed = 1, uses_anonymous_args = 0
 4460 1fcc 80B5     		push	{r7, lr}
 4461              		.cfi_def_cfa_offset 8
 4462              		.cfi_offset 7, -8
 4463              		.cfi_offset 14, -4
 4464 1fce 00AF     		add	r7, sp, #0
 4465              		.cfi_def_cfa_register 7
1698:../tasks/SDMMC/sd_diskio.c ****   return(HAL_SD_GetStatus(&uSdHandle));
 4466              		.loc 1 1698 0
 4467 1fd0 40F20000 		movw	r0, #:lower16:uSdHandle
 4468 1fd4 C0F20000 		movt	r0, #:upper16:uSdHandle
 4469 1fd8 FFF7FEFF 		bl	HAL_SD_GetStatus
 4470 1fdc 0346     		mov	r3, r0
1699:../tasks/SDMMC/sd_diskio.c **** }
 4471              		.loc 1 1699 0
 4472 1fde 1846     		mov	r0, r3
 4473 1fe0 80BD     		pop	{r7, pc}
 4474              		.cfi_endproc
 4475              	.LFE80:
 4477              		.section	.rodata
 4478 0029 000000   		.align	2
 4479              	.LC1:
 4480 002c 5B53445D 		.ascii	"[SD] E:Write block(s) in DMA transfer mode ... erro"
 4480      20453A57 
 4480      72697465 
 4480      20626C6F 
 4480      636B2873 
 4481 005f 722000   		.ascii	"r \000"
 4482 0062 0000     		.align	2
 4483              	.LC2:
 4484 0064 5B53445D 		.ascii	"[SD] E:Wait until transfer is complete ... error \000"
 4484      20453A57 
 4484      61697420 
 4484      756E7469 
 4484      6C207472 
 4485              		.text
 4486 1fe2 00BF     		.align	2
 4487              		.global	BSP_SD_WriteBlocks_DMA
 4488              		.thumb
 4489              		.thumb_func
 4491              	BSP_SD_WriteBlocks_DMA:
 4492              	.LFB81:
1700:../tasks/SDMMC/sd_diskio.c **** /**
1701:../tasks/SDMMC/sd_diskio.c ****   * @brief  Writes block(s) to a specified address in an SD card, in DMA mode.
1702:../tasks/SDMMC/sd_diskio.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
1703:../tasks/SDMMC/sd_diskio.c ****   * @param  WriteAddr: Address from where data is to be written
1704:../tasks/SDMMC/sd_diskio.c ****   * @param  BlockSize: SD card data block size, that should be 512
1705:../tasks/SDMMC/sd_diskio.c ****   * @param  NumOfBlocks: Number of SD blocks to write
1706:../tasks/SDMMC/sd_diskio.c ****   * @retval SD status
1707:../tasks/SDMMC/sd_diskio.c ****   */
1708:../tasks/SDMMC/sd_diskio.c **** uint8_t BSP_SD_WriteBlocks_DMA(uint32_t *pData, uint64_t WriteAddr, uint32_t BlockSize, uint32_t Nu
1709:../tasks/SDMMC/sd_diskio.c **** {
 4493              		.loc 1 1709 0
 4494              		.cfi_startproc
 4495              		@ args = 8, pretend = 0, frame = 24
 4496              		@ frame_needed = 1, uses_anonymous_args = 0
 4497 1fe4 80B5     		push	{r7, lr}
 4498              		.cfi_def_cfa_offset 8
 4499              		.cfi_offset 7, -8
 4500              		.cfi_offset 14, -4
 4501 1fe6 88B0     		sub	sp, sp, #32
 4502              		.cfi_def_cfa_offset 40
 4503 1fe8 02AF     		add	r7, sp, #8
 4504              		.cfi_def_cfa 7, 32
 4505 1fea F860     		str	r0, [r7, #12]
 4506 1fec C7E90023 		strd	r2, [r7]
1710:../tasks/SDMMC/sd_diskio.c ****   uint8_t SD_state = MSD_OK;
 4507              		.loc 1 1710 0
 4508 1ff0 0023     		movs	r3, #0
 4509 1ff2 FB75     		strb	r3, [r7, #23]
1711:../tasks/SDMMC/sd_diskio.c **** 
1712:../tasks/SDMMC/sd_diskio.c **** //  printf("[SD] I:BSP_SD_WriteBlocks_DMA -  go BSP_SD_WriteBlocks_DMA..CardType %d  \n", uSdHandle
1713:../tasks/SDMMC/sd_diskio.c **** 
1714:../tasks/SDMMC/sd_diskio.c ****   /* Write block(s) in DMA transfer mode */
1715:../tasks/SDMMC/sd_diskio.c ****   if(HAL_SD_WriteBlocks_DMA(&uSdHandle, pData, WriteAddr, BlockSize, NumOfBlocks) != SD_OK)
 4510              		.loc 1 1715 0
 4511 1ff4 3B6A     		ldr	r3, [r7, #32]
 4512 1ff6 0093     		str	r3, [sp]
 4513 1ff8 7B6A     		ldr	r3, [r7, #36]
 4514 1ffa 0193     		str	r3, [sp, #4]
 4515 1ffc 40F20000 		movw	r0, #:lower16:uSdHandle
 4516 2000 C0F20000 		movt	r0, #:upper16:uSdHandle
 4517 2004 F968     		ldr	r1, [r7, #12]
 4518 2006 D7E90023 		ldrd	r2, [r7]
 4519 200a FFF7FEFF 		bl	HAL_SD_WriteBlocks_DMA
 4520 200e 0346     		mov	r3, r0
 4521 2010 002B     		cmp	r3, #0
 4522 2012 07D0     		beq	.L190
1716:../tasks/SDMMC/sd_diskio.c ****   {
1717:../tasks/SDMMC/sd_diskio.c **** 		printf("[SD] E:Write block(s) in DMA transfer mode ... error \n");
 4523              		.loc 1 1717 0
 4524 2014 40F20000 		movw	r0, #:lower16:.LC1
 4525 2018 C0F20000 		movt	r0, #:upper16:.LC1
 4526 201c FFF7FEFF 		bl	puts
1718:../tasks/SDMMC/sd_diskio.c **** 
1719:../tasks/SDMMC/sd_diskio.c ****     SD_state = MSD_ERROR;
 4527              		.loc 1 1719 0
 4528 2020 0123     		movs	r3, #1
 4529 2022 FB75     		strb	r3, [r7, #23]
 4530              	.L190:
1720:../tasks/SDMMC/sd_diskio.c ****   } else{
1721:../tasks/SDMMC/sd_diskio.c **** //		printf("[SD] I:Write block(s) in DMA transfer mode ... ok \n");
1722:../tasks/SDMMC/sd_diskio.c ****   }
1723:../tasks/SDMMC/sd_diskio.c **** 
1724:../tasks/SDMMC/sd_diskio.c ****   /* Wait until transfer is complete */
1725:../tasks/SDMMC/sd_diskio.c ****   if(SD_state == MSD_OK)
 4531              		.loc 1 1725 0
 4532 2024 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4533 2026 002B     		cmp	r3, #0
 4534 2028 15D1     		bne	.L191
1726:../tasks/SDMMC/sd_diskio.c ****   {
1727:../tasks/SDMMC/sd_diskio.c ****     if(HAL_SD_CheckWriteOperation(&uSdHandle, (uint32_t)SD_DATATIMEOUT) != SD_OK)
 4535              		.loc 1 1727 0
 4536 202a 40F20000 		movw	r0, #:lower16:uSdHandle
 4537 202e C0F20000 		movt	r0, #:upper16:uSdHandle
 4538 2032 4FF0FF31 		mov	r1, #-1
 4539 2036 FFF7FEFF 		bl	HAL_SD_CheckWriteOperation
 4540 203a 0346     		mov	r3, r0
 4541 203c 002B     		cmp	r3, #0
 4542 203e 08D0     		beq	.L192
1728:../tasks/SDMMC/sd_diskio.c ****     {
1729:../tasks/SDMMC/sd_diskio.c **** 		printf("[SD] E:Wait until transfer is complete ... error \n");
 4543              		.loc 1 1729 0
 4544 2040 40F20000 		movw	r0, #:lower16:.LC2
 4545 2044 C0F20000 		movt	r0, #:upper16:.LC2
 4546 2048 FFF7FEFF 		bl	puts
1730:../tasks/SDMMC/sd_diskio.c ****       SD_state = MSD_ERROR;
 4547              		.loc 1 1730 0
 4548 204c 0123     		movs	r3, #1
 4549 204e FB75     		strb	r3, [r7, #23]
 4550 2050 01E0     		b	.L191
 4551              	.L192:
1731:../tasks/SDMMC/sd_diskio.c ****     }
1732:../tasks/SDMMC/sd_diskio.c ****     else
1733:../tasks/SDMMC/sd_diskio.c ****     {
1734:../tasks/SDMMC/sd_diskio.c **** //	 printf("[SD] I:Wait until transfer is complete ... ok \n");
1735:../tasks/SDMMC/sd_diskio.c **** 
1736:../tasks/SDMMC/sd_diskio.c ****       SD_state = MSD_OK;
 4552              		.loc 1 1736 0
 4553 2052 0023     		movs	r3, #0
 4554 2054 FB75     		strb	r3, [r7, #23]
 4555              	.L191:
1737:../tasks/SDMMC/sd_diskio.c ****     }
1738:../tasks/SDMMC/sd_diskio.c ****   }
1739:../tasks/SDMMC/sd_diskio.c **** 
1740:../tasks/SDMMC/sd_diskio.c ****   return SD_state;
 4556              		.loc 1 1740 0
 4557 2056 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1741:../tasks/SDMMC/sd_diskio.c **** }
 4558              		.loc 1 1741 0
 4559 2058 1846     		mov	r0, r3
 4560 205a 1837     		adds	r7, r7, #24
 4561 205c BD46     		mov	sp, r7
 4562              		@ sp needed
 4563 205e 80BD     		pop	{r7, pc}
 4564              		.cfi_endproc
 4565              	.LFE81:
 4567              		.align	2
 4568              		.global	SD_SetDeviceMode
 4569              		.thumb
 4570              		.thumb_func
 4572              	SD_SetDeviceMode:
 4573              	.LFB82:
1742:../tasks/SDMMC/sd_diskio.c **** 
1743:../tasks/SDMMC/sd_diskio.c **** /**
1744:../tasks/SDMMC/sd_diskio.c ****   * @brief  Sets device mode whether to operate in Polling, Interrupt or DMA mode.
1745:../tasks/SDMMC/sd_diskio.c ****   * @param  Mode: Specifies the Data Transfer mode.
1746:../tasks/SDMMC/sd_diskio.c ****   *   This parameter can be one of the following values:
1747:../tasks/SDMMC/sd_diskio.c ****   *     @arg SD_DMA_MODE: Data transfer using DMA.
1748:../tasks/SDMMC/sd_diskio.c ****   *     @arg SD_INTERRUPT_MODE: Data transfer using interrupts.
1749:../tasks/SDMMC/sd_diskio.c ****   *     @arg SD_POLLING_MODE: Data transfer using flags.
1750:../tasks/SDMMC/sd_diskio.c ****   * @retval SD_Error: SD Card Error code.
1751:../tasks/SDMMC/sd_diskio.c ****   */
1752:../tasks/SDMMC/sd_diskio.c **** HAL_SD_ErrorTypedef SD_SetDeviceMode(uint32_t Mode)
1753:../tasks/SDMMC/sd_diskio.c **** {
 4574              		.loc 1 1753 0
 4575              		.cfi_startproc
 4576              		@ args = 0, pretend = 0, frame = 16
 4577              		@ frame_needed = 1, uses_anonymous_args = 0
 4578              		@ link register save eliminated.
 4579 2060 80B4     		push	{r7}
 4580              		.cfi_def_cfa_offset 4
 4581              		.cfi_offset 7, -4
 4582 2062 85B0     		sub	sp, sp, #20
 4583              		.cfi_def_cfa_offset 24
 4584 2064 00AF     		add	r7, sp, #0
 4585              		.cfi_def_cfa_register 7
 4586 2066 7860     		str	r0, [r7, #4]
1754:../tasks/SDMMC/sd_diskio.c **** 	HAL_SD_ErrorTypedef errorstatus = SD_OK;
 4587              		.loc 1 1754 0
 4588 2068 0023     		movs	r3, #0
 4589 206a FB73     		strb	r3, [r7, #15]
1755:../tasks/SDMMC/sd_diskio.c **** 
1756:../tasks/SDMMC/sd_diskio.c ****   if ((Mode == SD_DMA_MODE) || (Mode == SD_INTERRUPT_MODE) || (Mode == SD_POLLING_MODE))
 4590              		.loc 1 1756 0
 4591 206c 7B68     		ldr	r3, [r7, #4]
 4592 206e 002B     		cmp	r3, #0
 4593 2070 05D0     		beq	.L195
 4594              		.loc 1 1756 0 is_stmt 0 discriminator 1
 4595 2072 7B68     		ldr	r3, [r7, #4]
 4596 2074 012B     		cmp	r3, #1
 4597 2076 02D0     		beq	.L195
 4598 2078 7B68     		ldr	r3, [r7, #4]
 4599 207a 022B     		cmp	r3, #2
 4600 207c 06D1     		bne	.L196
 4601              	.L195:
1757:../tasks/SDMMC/sd_diskio.c ****   {
1758:../tasks/SDMMC/sd_diskio.c ****     DeviceMode = Mode;
 4602              		.loc 1 1758 0 is_stmt 1
 4603 207e 40F20003 		movw	r3, #:lower16:DeviceMode
 4604 2082 C0F20003 		movt	r3, #:upper16:DeviceMode
 4605 2086 7A68     		ldr	r2, [r7, #4]
 4606 2088 1A60     		str	r2, [r3]
 4607 208a 01E0     		b	.L197
 4608              	.L196:
1759:../tasks/SDMMC/sd_diskio.c ****   }
1760:../tasks/SDMMC/sd_diskio.c ****   else
1761:../tasks/SDMMC/sd_diskio.c ****   {
1762:../tasks/SDMMC/sd_diskio.c ****     errorstatus = SD_INVALID_PARAMETER;
 4609              		.loc 1 1762 0
 4610 208c 2623     		movs	r3, #38
 4611 208e FB73     		strb	r3, [r7, #15]
 4612              	.L197:
1763:../tasks/SDMMC/sd_diskio.c ****   }
1764:../tasks/SDMMC/sd_diskio.c ****   return(errorstatus);
 4613              		.loc 1 1764 0
 4614 2090 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1765:../tasks/SDMMC/sd_diskio.c **** 
1766:../tasks/SDMMC/sd_diskio.c **** }
 4615              		.loc 1 1766 0
 4616 2092 1846     		mov	r0, r3
 4617 2094 1437     		adds	r7, r7, #20
 4618 2096 BD46     		mov	sp, r7
 4619              		@ sp needed
 4620 2098 5DF8047B 		ldr	r7, [sp], #4
 4621 209c 7047     		bx	lr
 4622              		.cfi_endproc
 4623              	.LFE82:
 4625 209e 00BF     		.align	2
 4626              		.global	BSP_SD_IRQHandler
 4627              		.thumb
 4628              		.thumb_func
 4630              	BSP_SD_IRQHandler:
 4631              	.LFB83:
1767:../tasks/SDMMC/sd_diskio.c **** /**
1768:../tasks/SDMMC/sd_diskio.c ****   * @brief  Handles SD card interrupt request.
1769:../tasks/SDMMC/sd_diskio.c ****   * @param  None
1770:../tasks/SDMMC/sd_diskio.c ****   * @retval None
1771:../tasks/SDMMC/sd_diskio.c ****   */
1772:../tasks/SDMMC/sd_diskio.c **** void BSP_SD_IRQHandler(void)
1773:../tasks/SDMMC/sd_diskio.c **** {
 4632              		.loc 1 1773 0
 4633              		.cfi_startproc
 4634              		@ args = 0, pretend = 0, frame = 0
 4635              		@ frame_needed = 1, uses_anonymous_args = 0
 4636 20a0 80B5     		push	{r7, lr}
 4637              		.cfi_def_cfa_offset 8
 4638              		.cfi_offset 7, -8
 4639              		.cfi_offset 14, -4
 4640 20a2 00AF     		add	r7, sp, #0
 4641              		.cfi_def_cfa_register 7
1774:../tasks/SDMMC/sd_diskio.c **** // LED_Toggle(LED0);
1775:../tasks/SDMMC/sd_diskio.c ****   HAL_SD_IRQHandler(&uSdHandle);
 4642              		.loc 1 1775 0
 4643 20a4 40F20000 		movw	r0, #:lower16:uSdHandle
 4644 20a8 C0F20000 		movt	r0, #:upper16:uSdHandle
 4645 20ac FFF7FEFF 		bl	HAL_SD_IRQHandler
1776:../tasks/SDMMC/sd_diskio.c **** }
 4646              		.loc 1 1776 0
 4647 20b0 80BD     		pop	{r7, pc}
 4648              		.cfi_endproc
 4649              	.LFE83:
 4651 20b2 00BF     		.align	2
 4652              		.global	BSP_SD_DMA_Tx_IRQHandler
 4653              		.thumb
 4654              		.thumb_func
 4656              	BSP_SD_DMA_Tx_IRQHandler:
 4657              	.LFB84:
1777:../tasks/SDMMC/sd_diskio.c **** 
1778:../tasks/SDMMC/sd_diskio.c **** /**
1779:../tasks/SDMMC/sd_diskio.c ****   * @brief  Handles SD DMA Tx transfer interrupt request.
1780:../tasks/SDMMC/sd_diskio.c ****   * @param  None
1781:../tasks/SDMMC/sd_diskio.c ****   * @retval None
1782:../tasks/SDMMC/sd_diskio.c ****   */
1783:../tasks/SDMMC/sd_diskio.c **** void BSP_SD_DMA_Tx_IRQHandler(void)
1784:../tasks/SDMMC/sd_diskio.c **** {
 4658              		.loc 1 1784 0
 4659              		.cfi_startproc
 4660              		@ args = 0, pretend = 0, frame = 0
 4661              		@ frame_needed = 1, uses_anonymous_args = 0
 4662 20b4 80B5     		push	{r7, lr}
 4663              		.cfi_def_cfa_offset 8
 4664              		.cfi_offset 7, -8
 4665              		.cfi_offset 14, -4
 4666 20b6 00AF     		add	r7, sp, #0
 4667              		.cfi_def_cfa_register 7
1785:../tasks/SDMMC/sd_diskio.c **** // LED_Toggle(LED1);
1786:../tasks/SDMMC/sd_diskio.c ****   HAL_DMA_IRQHandler(uSdHandle.hdmatx);
 4668              		.loc 1 1786 0
 4669 20b8 40F20003 		movw	r3, #:lower16:uSdHandle
 4670 20bc C0F20003 		movt	r3, #:upper16:uSdHandle
 4671 20c0 DB6D     		ldr	r3, [r3, #92]
 4672 20c2 1846     		mov	r0, r3
 4673 20c4 FFF7FEFF 		bl	HAL_DMA_IRQHandler
1787:../tasks/SDMMC/sd_diskio.c **** }
 4674              		.loc 1 1787 0
 4675 20c8 80BD     		pop	{r7, pc}
 4676              		.cfi_endproc
 4677              	.LFE84:
 4679 20ca 00BF     		.align	2
 4680              		.global	BSP_SD_DMA_Rx_IRQHandler
 4681              		.thumb
 4682              		.thumb_func
 4684              	BSP_SD_DMA_Rx_IRQHandler:
 4685              	.LFB85:
1788:../tasks/SDMMC/sd_diskio.c **** 
1789:../tasks/SDMMC/sd_diskio.c **** /**
1790:../tasks/SDMMC/sd_diskio.c ****   * @brief  Handles SD DMA Rx transfer interrupt request.
1791:../tasks/SDMMC/sd_diskio.c ****   * @param  None
1792:../tasks/SDMMC/sd_diskio.c ****   * @retval None
1793:../tasks/SDMMC/sd_diskio.c ****   */
1794:../tasks/SDMMC/sd_diskio.c **** void BSP_SD_DMA_Rx_IRQHandler(void)
1795:../tasks/SDMMC/sd_diskio.c **** {
 4686              		.loc 1 1795 0
 4687              		.cfi_startproc
 4688              		@ args = 0, pretend = 0, frame = 0
 4689              		@ frame_needed = 1, uses_anonymous_args = 0
 4690 20cc 80B5     		push	{r7, lr}
 4691              		.cfi_def_cfa_offset 8
 4692              		.cfi_offset 7, -8
 4693              		.cfi_offset 14, -4
 4694 20ce 00AF     		add	r7, sp, #0
 4695              		.cfi_def_cfa_register 7
1796:../tasks/SDMMC/sd_diskio.c **** //  LED_Toggle(LED2);
1797:../tasks/SDMMC/sd_diskio.c ****   HAL_DMA_IRQHandler(uSdHandle.hdmarx);
 4696              		.loc 1 1797 0
 4697 20d0 40F20003 		movw	r3, #:lower16:uSdHandle
 4698 20d4 C0F20003 		movt	r3, #:upper16:uSdHandle
 4699 20d8 9B6D     		ldr	r3, [r3, #88]
 4700 20da 1846     		mov	r0, r3
 4701 20dc FFF7FEFF 		bl	HAL_DMA_IRQHandler
1798:../tasks/SDMMC/sd_diskio.c **** }
 4702              		.loc 1 1798 0
 4703 20e0 80BD     		pop	{r7, pc}
 4704              		.cfi_endproc
 4705              	.LFE85:
 4707 20e2 00BF     		.align	2
 4708              		.global	BSP_SD_Init
 4709              		.thumb
 4710              		.thumb_func
 4712              	BSP_SD_Init:
 4713              	.LFB86:
1799:../tasks/SDMMC/sd_diskio.c **** 
1800:../tasks/SDMMC/sd_diskio.c **** 
1801:../tasks/SDMMC/sd_diskio.c **** /**
1802:../tasks/SDMMC/sd_diskio.c ****   * @brief  Initializes the SD card device.
1803:../tasks/SDMMC/sd_diskio.c ****   * @param  None
1804:../tasks/SDMMC/sd_diskio.c ****   * @retval SD status.
1805:../tasks/SDMMC/sd_diskio.c ****   */
1806:../tasks/SDMMC/sd_diskio.c **** uint8_t BSP_SD_Init(void)
1807:../tasks/SDMMC/sd_diskio.c **** {
 4714              		.loc 1 1807 0
 4715              		.cfi_startproc
 4716              		@ args = 0, pretend = 0, frame = 8
 4717              		@ frame_needed = 1, uses_anonymous_args = 0
 4718 20e4 80B5     		push	{r7, lr}
 4719              		.cfi_def_cfa_offset 8
 4720              		.cfi_offset 7, -8
 4721              		.cfi_offset 14, -4
 4722 20e6 82B0     		sub	sp, sp, #8
 4723              		.cfi_def_cfa_offset 16
 4724 20e8 00AF     		add	r7, sp, #0
 4725              		.cfi_def_cfa_register 7
1808:../tasks/SDMMC/sd_diskio.c ****   uint8_t SD_state = MSD_OK;
 4726              		.loc 1 1808 0
 4727 20ea 0023     		movs	r3, #0
 4728 20ec FB71     		strb	r3, [r7, #7]
1809:../tasks/SDMMC/sd_diskio.c **** 
1810:../tasks/SDMMC/sd_diskio.c ****   /* uSD device interface configuration */
1811:../tasks/SDMMC/sd_diskio.c ****   uSdHandle.Instance = SDIO;
 4729              		.loc 1 1811 0
 4730 20ee 40F20003 		movw	r3, #:lower16:uSdHandle
 4731 20f2 C0F20003 		movt	r3, #:upper16:uSdHandle
 4732 20f6 4FF43052 		mov	r2, #11264
 4733 20fa C4F20102 		movt	r2, 16385
 4734 20fe 1A60     		str	r2, [r3]
1812:../tasks/SDMMC/sd_diskio.c **** 
1813:../tasks/SDMMC/sd_diskio.c ****   uSdHandle.Init.ClockEdge           = SDIO_CLOCK_EDGE_RISING;
 4735              		.loc 1 1813 0
 4736 2100 40F20003 		movw	r3, #:lower16:uSdHandle
 4737 2104 C0F20003 		movt	r3, #:upper16:uSdHandle
 4738 2108 0022     		movs	r2, #0
 4739 210a 5A60     		str	r2, [r3, #4]
1814:../tasks/SDMMC/sd_diskio.c ****   uSdHandle.Init.ClockBypass         = SDIO_CLOCK_BYPASS_DISABLE;
 4740              		.loc 1 1814 0
 4741 210c 40F20003 		movw	r3, #:lower16:uSdHandle
 4742 2110 C0F20003 		movt	r3, #:upper16:uSdHandle
 4743 2114 0022     		movs	r2, #0
 4744 2116 9A60     		str	r2, [r3, #8]
1815:../tasks/SDMMC/sd_diskio.c ****   uSdHandle.Init.ClockPowerSave      = SDIO_CLOCK_POWER_SAVE_DISABLE;
 4745              		.loc 1 1815 0
 4746 2118 40F20003 		movw	r3, #:lower16:uSdHandle
 4747 211c C0F20003 		movt	r3, #:upper16:uSdHandle
 4748 2120 0022     		movs	r2, #0
 4749 2122 DA60     		str	r2, [r3, #12]
1816:../tasks/SDMMC/sd_diskio.c ****   uSdHandle.Init.BusWide             = SDIO_BUS_WIDE_1B;
 4750              		.loc 1 1816 0
 4751 2124 40F20003 		movw	r3, #:lower16:uSdHandle
 4752 2128 C0F20003 		movt	r3, #:upper16:uSdHandle
 4753 212c 0022     		movs	r2, #0
 4754 212e 1A61     		str	r2, [r3, #16]
1817:../tasks/SDMMC/sd_diskio.c ****   uSdHandle.Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
 4755              		.loc 1 1817 0
 4756 2130 40F20003 		movw	r3, #:lower16:uSdHandle
 4757 2134 C0F20003 		movt	r3, #:upper16:uSdHandle
 4758 2138 0022     		movs	r2, #0
 4759 213a 5A61     		str	r2, [r3, #20]
1818:../tasks/SDMMC/sd_diskio.c ****   uSdHandle.Init.ClockDiv            = SDIO_TRANSFER_CLK_DIV;
 4760              		.loc 1 1818 0
 4761 213c 40F20003 		movw	r3, #:lower16:uSdHandle
 4762 2140 C0F20003 		movt	r3, #:upper16:uSdHandle
 4763 2144 0022     		movs	r2, #0
 4764 2146 9A61     		str	r2, [r3, #24]
1819:../tasks/SDMMC/sd_diskio.c **** 
1820:../tasks/SDMMC/sd_diskio.c ****   /* Check if the SD card is plugged in the slot */
1821:../tasks/SDMMC/sd_diskio.c ****   if(SD_Detect() != SD_PRESENT)
 4765              		.loc 1 1821 0
 4766 2148 FFF7FEFF 		bl	SD_Detect
 4767 214c 0346     		mov	r3, r0
 4768 214e 012B     		cmp	r3, #1
 4769 2150 01D0     		beq	.L203
1822:../tasks/SDMMC/sd_diskio.c ****   {
1823:../tasks/SDMMC/sd_diskio.c ****     return MSD_ERROR;
 4770              		.loc 1 1823 0
 4771 2152 0123     		movs	r3, #1
 4772 2154 24E0     		b	.L204
 4773              	.L203:
1824:../tasks/SDMMC/sd_diskio.c ****   }
1825:../tasks/SDMMC/sd_diskio.c **** 
1826:../tasks/SDMMC/sd_diskio.c ****   /* HAL SD initialization */
1827:../tasks/SDMMC/sd_diskio.c ****   SD_LowLevel_Init();	//SD_MspInit();
 4774              		.loc 1 1827 0
 4775 2156 FFF7FEFF 		bl	SD_LowLevel_Init
1828:../tasks/SDMMC/sd_diskio.c **** 
1829:../tasks/SDMMC/sd_diskio.c ****   if(HAL_SD_Init(&uSdHandle, &SD_CardInfo) != SD_OK)
 4776              		.loc 1 1829 0
 4777 215a 40F20000 		movw	r0, #:lower16:uSdHandle
 4778 215e C0F20000 		movt	r0, #:upper16:uSdHandle
 4779 2162 40F20001 		movw	r1, #:lower16:SD_CardInfo
 4780 2166 C0F20001 		movt	r1, #:upper16:SD_CardInfo
 4781 216a FFF7FEFF 		bl	HAL_SD_Init
 4782 216e 0346     		mov	r3, r0
 4783 2170 002B     		cmp	r3, #0
 4784 2172 01D0     		beq	.L205
1830:../tasks/SDMMC/sd_diskio.c ****   {
1831:../tasks/SDMMC/sd_diskio.c ****     SD_state = MSD_ERROR;
 4785              		.loc 1 1831 0
 4786 2174 0123     		movs	r3, #1
 4787 2176 FB71     		strb	r3, [r7, #7]
 4788              	.L205:
1832:../tasks/SDMMC/sd_diskio.c ****   }
1833:../tasks/SDMMC/sd_diskio.c **** 
1834:../tasks/SDMMC/sd_diskio.c ****   /* Configure SD Bus width */
1835:../tasks/SDMMC/sd_diskio.c ****   if(SD_state == MSD_OK)
 4789              		.loc 1 1835 0
 4790 2178 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4791 217a 002B     		cmp	r3, #0
 4792 217c 0FD1     		bne	.L206
1836:../tasks/SDMMC/sd_diskio.c ****   {
1837:../tasks/SDMMC/sd_diskio.c ****     /* Enable wide operation */
1838:../tasks/SDMMC/sd_diskio.c ****     if(HAL_SD_WideBusOperation_Config(&uSdHandle, SDIO_BUS_WIDE_4B) != SD_OK)
 4793              		.loc 1 1838 0
 4794 217e 40F20000 		movw	r0, #:lower16:uSdHandle
 4795 2182 C0F20000 		movt	r0, #:upper16:uSdHandle
 4796 2186 4FF40061 		mov	r1, #2048
 4797 218a FFF7FEFF 		bl	HAL_SD_WideBusOperation_Config
 4798 218e 0346     		mov	r3, r0
 4799 2190 002B     		cmp	r3, #0
 4800 2192 02D0     		beq	.L207
1839:../tasks/SDMMC/sd_diskio.c ****     {
1840:../tasks/SDMMC/sd_diskio.c ****       SD_state = MSD_ERROR;
 4801              		.loc 1 1840 0
 4802 2194 0123     		movs	r3, #1
 4803 2196 FB71     		strb	r3, [r7, #7]
 4804 2198 01E0     		b	.L206
 4805              	.L207:
1841:../tasks/SDMMC/sd_diskio.c ****     }
1842:../tasks/SDMMC/sd_diskio.c ****     else
1843:../tasks/SDMMC/sd_diskio.c ****     {
1844:../tasks/SDMMC/sd_diskio.c ****       SD_state = MSD_OK;
 4806              		.loc 1 1844 0
 4807 219a 0023     		movs	r3, #0
 4808 219c FB71     		strb	r3, [r7, #7]
 4809              	.L206:
1845:../tasks/SDMMC/sd_diskio.c ****     }
1846:../tasks/SDMMC/sd_diskio.c ****   }
1847:../tasks/SDMMC/sd_diskio.c **** 
1848:../tasks/SDMMC/sd_diskio.c ****   return  SD_state;
 4810              		.loc 1 1848 0
 4811 219e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4812              	.L204:
1849:../tasks/SDMMC/sd_diskio.c **** }
 4813              		.loc 1 1849 0
 4814 21a0 1846     		mov	r0, r3
 4815 21a2 0837     		adds	r7, r7, #8
 4816 21a4 BD46     		mov	sp, r7
 4817              		@ sp needed
 4818 21a6 80BD     		pop	{r7, pc}
 4819              		.cfi_endproc
 4820              	.LFE86:
 4822              		.section	.rodata
 4823 0096 0000     		.align	2
 4824              	.LC3:
 4825 0098 5B53445D 		.ascii	"[SD] E:SD_ReadMultiBlocks 1. %d \012\000"
 4825      20453A53 
 4825      445F5265 
 4825      61644D75 
 4825      6C746942 
 4826 00ba 0000     		.align	2
 4827              	.LC4:
 4828 00bc 5B53445D 		.ascii	"[SD] E:SD_ReadMultiBlocks 2. %d \012\000"
 4828      20453A53 
 4828      445F5265 
 4828      61644D75 
 4828      6C746942 
 4829 00de 0000     		.align	2
 4830              	.LC5:
 4831 00e0 5B53445D 		.ascii	"[SD] I:SD_ReadMultiBlocks ok. %d \012\000"
 4831      20493A53 
 4831      445F5265 
 4831      61644D75 
 4831      6C746942 
 4832 0103 00       		.text
 4833              		.align	2
 4834              		.global	SD_ReadMultiBlocks
 4835              		.thumb
 4836              		.thumb_func
 4838              	SD_ReadMultiBlocks:
 4839              	.LFB87:
1850:../tasks/SDMMC/sd_diskio.c **** 
1851:../tasks/SDMMC/sd_diskio.c **** 
1852:../tasks/SDMMC/sd_diskio.c **** /**
1853:../tasks/SDMMC/sd_diskio.c ****   * @brief  Allows to read blocks from a specified address  in a card.  The Data
1854:../tasks/SDMMC/sd_diskio.c ****   *         transfer can be managed by DMA mode or Polling mode.
1855:../tasks/SDMMC/sd_diskio.c ****   * @note   This operation should be followed by two functions to check if the
1856:../tasks/SDMMC/sd_diskio.c ****   *         DMA Controller and SD Card status.
1857:../tasks/SDMMC/sd_diskio.c ****   *          - SD_ReadWaitOperation(): this function insure that the DMA
1858:../tasks/SDMMC/sd_diskio.c ****   *            controller has finished all data transfer.
1859:../tasks/SDMMC/sd_diskio.c ****   *          - SD_GetStatus(): to check that the SD Card has finished the
1860:../tasks/SDMMC/sd_diskio.c ****   *            data transfer and it is ready for data.
1861:../tasks/SDMMC/sd_diskio.c ****   * @param  readbuff: pointer to the buffer that will contain the received data.
1862:../tasks/SDMMC/sd_diskio.c ****   * @param  ReadAddr: Address from where data are to be read.
1863:../tasks/SDMMC/sd_diskio.c ****   * @param  BlockSize: the SD card Data block size. The Block size should be 512.
1864:../tasks/SDMMC/sd_diskio.c ****   * @param  NumberOfBlocks: number of blocks to be read.
1865:../tasks/SDMMC/sd_diskio.c ****   * @retval SD_Error: SD Card Error code.
1866:../tasks/SDMMC/sd_diskio.c ****   */
1867:../tasks/SDMMC/sd_diskio.c **** HAL_SD_ErrorTypedef SD_ReadMultiBlocks(uint8_t *readbuff, uint64_t ReadAddr, uint16_t BlockSize, ui
1868:../tasks/SDMMC/sd_diskio.c **** {
 4840              		.loc 1 1868 0
 4841              		.cfi_startproc
 4842              		@ args = 8, pretend = 0, frame = 24
 4843              		@ frame_needed = 1, uses_anonymous_args = 0
 4844 21a8 B0B5     		push	{r4, r5, r7, lr}
 4845              		.cfi_def_cfa_offset 16
 4846              		.cfi_offset 4, -16
 4847              		.cfi_offset 5, -12
 4848              		.cfi_offset 7, -8
 4849              		.cfi_offset 14, -4
 4850 21aa 86B0     		sub	sp, sp, #24
 4851              		.cfi_def_cfa_offset 40
 4852 21ac 00AF     		add	r7, sp, #0
 4853              		.cfi_def_cfa_register 7
 4854 21ae F860     		str	r0, [r7, #12]
 4855 21b0 C7E90023 		strd	r2, [r7]
1869:../tasks/SDMMC/sd_diskio.c ****   HAL_SD_ErrorTypedef errorstatus = SD_OK;
 4856              		.loc 1 1869 0
 4857 21b4 0023     		movs	r3, #0
 4858 21b6 FB75     		strb	r3, [r7, #23]
1870:../tasks/SDMMC/sd_diskio.c **** 
1871:../tasks/SDMMC/sd_diskio.c **** 
1872:../tasks/SDMMC/sd_diskio.c ****   SDIO->DCTRL = 0x0;
 4859              		.loc 1 1872 0
 4860 21b8 4FF43053 		mov	r3, #11264
 4861 21bc C4F20103 		movt	r3, 16385
 4862 21c0 0022     		movs	r2, #0
 4863 21c2 DA62     		str	r2, [r3, #44]
1873:../tasks/SDMMC/sd_diskio.c **** 
1874:../tasks/SDMMC/sd_diskio.c ****   SDIO_ITConfig(SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND | SDIO_IT_RXOVERR | SDIO_IT_S
 4864              		.loc 1 1874 0
 4865 21c4 40F22A30 		movw	r0, #810
 4866 21c8 0121     		movs	r1, #1
 4867 21ca FFF7FEFF 		bl	SDIO_ITConfig
1875:../tasks/SDMMC/sd_diskio.c ****   SD_LowLevel_DMA_RxConfig((uint32_t *)readbuff, (NumberOfBlocks * BlockSize));				// нужна настрой
 4868              		.loc 1 1875 0
 4869 21ce 3B8D     		ldrh	r3, [r7, #40]
 4870 21d0 FA6A     		ldr	r2, [r7, #44]
 4871 21d2 02FB03F3 		mul	r3, r2, r3
 4872 21d6 F868     		ldr	r0, [r7, #12]
 4873 21d8 1946     		mov	r1, r3
 4874 21da FFF7FEFF 		bl	SD_LowLevel_DMA_RxConfig
1876:../tasks/SDMMC/sd_diskio.c ****   SDIO_DMACmd(ENABLE);
 4875              		.loc 1 1876 0
 4876 21de 0120     		movs	r0, #1
 4877 21e0 FFF7FEFF 		bl	SDIO_DMACmd
1877:../tasks/SDMMC/sd_diskio.c **** 
1878:../tasks/SDMMC/sd_diskio.c ****   if (IsCardType == SDIO_HIGH_CAPACITY_SD_CARD)
 4878              		.loc 1 1878 0
 4879 21e4 40F20003 		movw	r3, #:lower16:IsCardType
 4880 21e8 C0F20003 		movt	r3, #:upper16:IsCardType
 4881 21ec 1B68     		ldr	r3, [r3]
 4882 21ee 022B     		cmp	r3, #2
 4883 21f0 0AD1     		bne	.L209
1879:../tasks/SDMMC/sd_diskio.c ****   {
1880:../tasks/SDMMC/sd_diskio.c ****     BlockSize = 512;
 4884              		.loc 1 1880 0
 4885 21f2 4FF40073 		mov	r3, #512
 4886 21f6 3B85     		strh	r3, [r7, #40]	@ movhi
1881:../tasks/SDMMC/sd_diskio.c ****     ReadAddr /= 512;
 4887              		.loc 1 1881 0
 4888 21f8 D7E90023 		ldrd	r2, [r7]
 4889 21fc 540A     		lsrs	r4, r2, #9
 4890 21fe 44EAC354 		orr	r4, r4, r3, lsl #23
 4891 2202 5D0A     		lsrs	r5, r3, #9
 4892 2204 C7E90045 		strd	r4, [r7]
 4893              	.L209:
1882:../tasks/SDMMC/sd_diskio.c ****   }
1883:../tasks/SDMMC/sd_diskio.c **** 
1884:../tasks/SDMMC/sd_diskio.c ****   /*!< Set Block Size for Card */
1885:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.Argument = (uint32_t) BlockSize;
 4894              		.loc 1 1885 0
 4895 2208 3A8D     		ldrh	r2, [r7, #40]
 4896 220a 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 4897 220e C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 4898 2212 1A60     		str	r2, [r3]
1886:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.CmdIndex = SD_CMD_SET_BLOCKLEN;
 4899              		.loc 1 1886 0
 4900 2214 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 4901 2218 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 4902 221c 1022     		movs	r2, #16
 4903 221e 5A60     		str	r2, [r3, #4]
1887:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.Response = SDIO_RESPONSE_SHORT;
 4904              		.loc 1 1887 0
 4905 2220 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 4906 2224 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 4907 2228 4022     		movs	r2, #64
 4908 222a 9A60     		str	r2, [r3, #8]
1888:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 4909              		.loc 1 1888 0
 4910 222c 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 4911 2230 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 4912 2234 0022     		movs	r2, #0
 4913 2236 DA60     		str	r2, [r3, #12]
1889:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.CPSM = SDIO_CPSM_ENABLE;
 4914              		.loc 1 1889 0
 4915 2238 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 4916 223c C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 4917 2240 4FF48062 		mov	r2, #1024
 4918 2244 1A61     		str	r2, [r3, #16]
1890:../tasks/SDMMC/sd_diskio.c ****   SDIO_SendCommand(SDIO, &SDIO_CmdInitStructure);
 4919              		.loc 1 1890 0
 4920 2246 4FF43050 		mov	r0, #11264
 4921 224a C4F20100 		movt	r0, 16385
 4922 224e 40F20001 		movw	r1, #:lower16:SDIO_CmdInitStructure
 4923 2252 C0F20001 		movt	r1, #:upper16:SDIO_CmdInitStructure
 4924 2256 FFF7FEFF 		bl	SDIO_SendCommand
1891:../tasks/SDMMC/sd_diskio.c **** 
1892:../tasks/SDMMC/sd_diskio.c ****   errorstatus = CmdResp1Error(SD_CMD_SET_BLOCKLEN);
 4925              		.loc 1 1892 0
 4926 225a 1020     		movs	r0, #16
 4927 225c FEF754FC 		bl	CmdResp1Error
 4928 2260 0346     		mov	r3, r0
 4929 2262 FB75     		strb	r3, [r7, #23]
1893:../tasks/SDMMC/sd_diskio.c **** 
1894:../tasks/SDMMC/sd_diskio.c ****   if (SD_OK != errorstatus)
 4930              		.loc 1 1894 0
 4931 2264 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4932 2266 002B     		cmp	r3, #0
 4933 2268 09D0     		beq	.L210
1895:../tasks/SDMMC/sd_diskio.c ****   {
1896:../tasks/SDMMC/sd_diskio.c **** 	printf("[SD] E:SD_ReadMultiBlocks 1. %d \n",errorstatus);
 4934              		.loc 1 1896 0
 4935 226a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4936 226c 40F20000 		movw	r0, #:lower16:.LC3
 4937 2270 C0F20000 		movt	r0, #:upper16:.LC3
 4938 2274 1946     		mov	r1, r3
 4939 2276 FFF7FEFF 		bl	printf
1897:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 4940              		.loc 1 1897 0
 4941 227a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4942 227c 75E0     		b	.L211
 4943              	.L210:
1898:../tasks/SDMMC/sd_diskio.c ****   }
1899:../tasks/SDMMC/sd_diskio.c **** 
1900:../tasks/SDMMC/sd_diskio.c ****   SDIO_DataInitStructure.DataTimeOut = SD_DATATIMEOUT;
 4944              		.loc 1 1900 0
 4945 227e 40F20003 		movw	r3, #:lower16:SDIO_DataInitStructure
 4946 2282 C0F20003 		movt	r3, #:upper16:SDIO_DataInitStructure
 4947 2286 4FF0FF32 		mov	r2, #-1
 4948 228a 1A60     		str	r2, [r3]
1901:../tasks/SDMMC/sd_diskio.c ****   SDIO_DataInitStructure.DataLength = NumberOfBlocks * BlockSize;
 4949              		.loc 1 1901 0
 4950 228c 3B8D     		ldrh	r3, [r7, #40]
 4951 228e FA6A     		ldr	r2, [r7, #44]
 4952 2290 02FB03F2 		mul	r2, r2, r3
 4953 2294 40F20003 		movw	r3, #:lower16:SDIO_DataInitStructure
 4954 2298 C0F20003 		movt	r3, #:upper16:SDIO_DataInitStructure
 4955 229c 5A60     		str	r2, [r3, #4]
1902:../tasks/SDMMC/sd_diskio.c ****   SDIO_DataInitStructure.DataBlockSize = (uint32_t) 9 << 4;
 4956              		.loc 1 1902 0
 4957 229e 40F20003 		movw	r3, #:lower16:SDIO_DataInitStructure
 4958 22a2 C0F20003 		movt	r3, #:upper16:SDIO_DataInitStructure
 4959 22a6 9022     		movs	r2, #144
 4960 22a8 9A60     		str	r2, [r3, #8]
1903:../tasks/SDMMC/sd_diskio.c ****   SDIO_DataInitStructure.TransferDir = SDIO_TRANSFER_DIR_TO_SDIO;
 4961              		.loc 1 1903 0
 4962 22aa 40F20003 		movw	r3, #:lower16:SDIO_DataInitStructure
 4963 22ae C0F20003 		movt	r3, #:upper16:SDIO_DataInitStructure
 4964 22b2 0222     		movs	r2, #2
 4965 22b4 DA60     		str	r2, [r3, #12]
1904:../tasks/SDMMC/sd_diskio.c ****   SDIO_DataInitStructure.TransferMode = SDIO_TRANSFER_MODE_BLOCK;
 4966              		.loc 1 1904 0
 4967 22b6 40F20003 		movw	r3, #:lower16:SDIO_DataInitStructure
 4968 22ba C0F20003 		movt	r3, #:upper16:SDIO_DataInitStructure
 4969 22be 0022     		movs	r2, #0
 4970 22c0 1A61     		str	r2, [r3, #16]
1905:../tasks/SDMMC/sd_diskio.c ****   SDIO_DataInitStructure.DPSM = SDIO_DPSM_ENABLE;
 4971              		.loc 1 1905 0
 4972 22c2 40F20003 		movw	r3, #:lower16:SDIO_DataInitStructure
 4973 22c6 C0F20003 		movt	r3, #:upper16:SDIO_DataInitStructure
 4974 22ca 0122     		movs	r2, #1
 4975 22cc 5A61     		str	r2, [r3, #20]
1906:../tasks/SDMMC/sd_diskio.c ****   SDIO_DataConfig(SDIO, &SDIO_DataInitStructure);
 4976              		.loc 1 1906 0
 4977 22ce 4FF43050 		mov	r0, #11264
 4978 22d2 C4F20100 		movt	r0, 16385
 4979 22d6 40F20001 		movw	r1, #:lower16:SDIO_DataInitStructure
 4980 22da C0F20001 		movt	r1, #:upper16:SDIO_DataInitStructure
 4981 22de FFF7FEFF 		bl	SDIO_DataConfig
1907:../tasks/SDMMC/sd_diskio.c **** 
1908:../tasks/SDMMC/sd_diskio.c ****   /*!< Send CMD18 READ_MULT_BLOCK with argument data address */
1909:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.Argument = (uint32_t)ReadAddr;
 4982              		.loc 1 1909 0
 4983 22e2 3A68     		ldr	r2, [r7]
 4984 22e4 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 4985 22e8 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 4986 22ec 1A60     		str	r2, [r3]
1910:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.CmdIndex = SD_CMD_READ_MULT_BLOCK;
 4987              		.loc 1 1910 0
 4988 22ee 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 4989 22f2 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 4990 22f6 1222     		movs	r2, #18
 4991 22f8 5A60     		str	r2, [r3, #4]
1911:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.Response = SDIO_RESPONSE_SHORT;
 4992              		.loc 1 1911 0
 4993 22fa 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 4994 22fe C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 4995 2302 4022     		movs	r2, #64
 4996 2304 9A60     		str	r2, [r3, #8]
1912:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 4997              		.loc 1 1912 0
 4998 2306 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 4999 230a C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 5000 230e 0022     		movs	r2, #0
 5001 2310 DA60     		str	r2, [r3, #12]
1913:../tasks/SDMMC/sd_diskio.c ****   SDIO_CmdInitStructure.CPSM = SDIO_CPSM_ENABLE;
 5002              		.loc 1 1913 0
 5003 2312 40F20003 		movw	r3, #:lower16:SDIO_CmdInitStructure
 5004 2316 C0F20003 		movt	r3, #:upper16:SDIO_CmdInitStructure
 5005 231a 4FF48062 		mov	r2, #1024
 5006 231e 1A61     		str	r2, [r3, #16]
1914:../tasks/SDMMC/sd_diskio.c ****   SDIO_SendCommand(SDIO, &SDIO_CmdInitStructure);
 5007              		.loc 1 1914 0
 5008 2320 4FF43050 		mov	r0, #11264
 5009 2324 C4F20100 		movt	r0, 16385
 5010 2328 40F20001 		movw	r1, #:lower16:SDIO_CmdInitStructure
 5011 232c C0F20001 		movt	r1, #:upper16:SDIO_CmdInitStructure
 5012 2330 FFF7FEFF 		bl	SDIO_SendCommand
1915:../tasks/SDMMC/sd_diskio.c **** 
1916:../tasks/SDMMC/sd_diskio.c ****   errorstatus = CmdResp1Error(SD_CMD_READ_MULT_BLOCK);
 5013              		.loc 1 1916 0
 5014 2334 1220     		movs	r0, #18
 5015 2336 FEF7E7FB 		bl	CmdResp1Error
 5016 233a 0346     		mov	r3, r0
 5017 233c FB75     		strb	r3, [r7, #23]
1917:../tasks/SDMMC/sd_diskio.c **** 
1918:../tasks/SDMMC/sd_diskio.c ****   if (errorstatus != SD_OK)
 5018              		.loc 1 1918 0
 5019 233e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5020 2340 002B     		cmp	r3, #0
 5021 2342 09D0     		beq	.L212
1919:../tasks/SDMMC/sd_diskio.c ****   {
1920:../tasks/SDMMC/sd_diskio.c **** 	printf("[SD] E:SD_ReadMultiBlocks 2. %d \n",errorstatus);
 5022              		.loc 1 1920 0
 5023 2344 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5024 2346 40F20000 		movw	r0, #:lower16:.LC4
 5025 234a C0F20000 		movt	r0, #:upper16:.LC4
 5026 234e 1946     		mov	r1, r3
 5027 2350 FFF7FEFF 		bl	printf
1921:../tasks/SDMMC/sd_diskio.c ****     return(errorstatus);
 5028              		.loc 1 1921 0
 5029 2354 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5030 2356 08E0     		b	.L211
 5031              	.L212:
1922:../tasks/SDMMC/sd_diskio.c ****   }
1923:../tasks/SDMMC/sd_diskio.c ****   printf("[SD] I:SD_ReadMultiBlocks ok. %d \n",errorstatus);
 5032              		.loc 1 1923 0
 5033 2358 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5034 235a 40F20000 		movw	r0, #:lower16:.LC5
 5035 235e C0F20000 		movt	r0, #:upper16:.LC5
 5036 2362 1946     		mov	r1, r3
 5037 2364 FFF7FEFF 		bl	printf
1924:../tasks/SDMMC/sd_diskio.c ****   return(errorstatus);
 5038              		.loc 1 1924 0
 5039 2368 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5040              	.L211:
1925:../tasks/SDMMC/sd_diskio.c **** }
 5041              		.loc 1 1925 0
 5042 236a 1846     		mov	r0, r3
 5043 236c 1837     		adds	r7, r7, #24
 5044 236e BD46     		mov	sp, r7
 5045              		@ sp needed
 5046 2370 B0BD     		pop	{r4, r5, r7, pc}
 5047              		.cfi_endproc
 5048              	.LFE87:
 5050 2372 00BF     		.align	2
 5051              		.global	SDIO_ITConfig
 5052              		.thumb
 5053              		.thumb_func
 5055              	SDIO_ITConfig:
 5056              	.LFB88:
1926:../tasks/SDMMC/sd_diskio.c **** /*************************************************************
1927:../tasks/SDMMC/sd_diskio.c **** **************************************************************/
1928:../tasks/SDMMC/sd_diskio.c **** void SDIO_ITConfig(uint32_t SDIO_IT, FunctionalState NewState)
1929:../tasks/SDMMC/sd_diskio.c **** {
 5057              		.loc 1 1929 0
 5058              		.cfi_startproc
 5059              		@ args = 0, pretend = 0, frame = 8
 5060              		@ frame_needed = 1, uses_anonymous_args = 0
 5061              		@ link register save eliminated.
 5062 2374 80B4     		push	{r7}
 5063              		.cfi_def_cfa_offset 4
 5064              		.cfi_offset 7, -4
 5065 2376 83B0     		sub	sp, sp, #12
 5066              		.cfi_def_cfa_offset 16
 5067 2378 00AF     		add	r7, sp, #0
 5068              		.cfi_def_cfa_register 7
 5069 237a 7860     		str	r0, [r7, #4]
 5070 237c 0B46     		mov	r3, r1
 5071 237e FB70     		strb	r3, [r7, #3]
1930:../tasks/SDMMC/sd_diskio.c ****   /* Check the parameters */
1931:../tasks/SDMMC/sd_diskio.c ****   assert_param(IS_SDIO_IT(SDIO_IT));
1932:../tasks/SDMMC/sd_diskio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1933:../tasks/SDMMC/sd_diskio.c **** 
1934:../tasks/SDMMC/sd_diskio.c ****   if (NewState != DISABLE)
 5072              		.loc 1 1934 0
 5073 2380 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5074 2382 002B     		cmp	r3, #0
 5075 2384 0CD0     		beq	.L214
1935:../tasks/SDMMC/sd_diskio.c ****   {
1936:../tasks/SDMMC/sd_diskio.c ****     /* Enable the SDIO interrupts */
1937:../tasks/SDMMC/sd_diskio.c ****     SDIO->MASK |= SDIO_IT;
 5076              		.loc 1 1937 0
 5077 2386 4FF43053 		mov	r3, #11264
 5078 238a C4F20103 		movt	r3, 16385
 5079 238e 4FF43052 		mov	r2, #11264
 5080 2392 C4F20102 		movt	r2, 16385
 5081 2396 D16B     		ldr	r1, [r2, #60]
 5082 2398 7A68     		ldr	r2, [r7, #4]
 5083 239a 0A43     		orrs	r2, r2, r1
 5084 239c DA63     		str	r2, [r3, #60]
 5085 239e 0CE0     		b	.L213
 5086              	.L214:
1938:../tasks/SDMMC/sd_diskio.c ****   }
1939:../tasks/SDMMC/sd_diskio.c ****   else
1940:../tasks/SDMMC/sd_diskio.c ****   {
1941:../tasks/SDMMC/sd_diskio.c ****     /* Disable the SDIO interrupts */
1942:../tasks/SDMMC/sd_diskio.c ****     SDIO->MASK &= ~SDIO_IT;
 5087              		.loc 1 1942 0
 5088 23a0 4FF43053 		mov	r3, #11264
 5089 23a4 C4F20103 		movt	r3, 16385
 5090 23a8 4FF43052 		mov	r2, #11264
 5091 23ac C4F20102 		movt	r2, 16385
 5092 23b0 D16B     		ldr	r1, [r2, #60]
 5093 23b2 7A68     		ldr	r2, [r7, #4]
 5094 23b4 D243     		mvns	r2, r2
 5095 23b6 0A40     		ands	r2, r2, r1
 5096 23b8 DA63     		str	r2, [r3, #60]
 5097              	.L213:
1943:../tasks/SDMMC/sd_diskio.c ****   }
1944:../tasks/SDMMC/sd_diskio.c **** }
 5098              		.loc 1 1944 0
 5099 23ba 0C37     		adds	r7, r7, #12
 5100 23bc BD46     		mov	sp, r7
 5101              		@ sp needed
 5102 23be 5DF8047B 		ldr	r7, [sp], #4
 5103 23c2 7047     		bx	lr
 5104              		.cfi_endproc
 5105              	.LFE88:
 5107              		.align	2
 5108              		.global	SDIO_DMACmd
 5109              		.thumb
 5110              		.thumb_func
 5112              	SDIO_DMACmd:
 5113              	.LFB89:
1945:../tasks/SDMMC/sd_diskio.c **** /*************************************************************
1946:../tasks/SDMMC/sd_diskio.c **** **************************************************************/
1947:../tasks/SDMMC/sd_diskio.c **** void SDIO_DMACmd(FunctionalState NewState)
1948:../tasks/SDMMC/sd_diskio.c **** {
 5114              		.loc 1 1948 0
 5115              		.cfi_startproc
 5116              		@ args = 0, pretend = 0, frame = 8
 5117              		@ frame_needed = 1, uses_anonymous_args = 0
 5118              		@ link register save eliminated.
 5119 23c4 80B4     		push	{r7}
 5120              		.cfi_def_cfa_offset 4
 5121              		.cfi_offset 7, -4
 5122 23c6 83B0     		sub	sp, sp, #12
 5123              		.cfi_def_cfa_offset 16
 5124 23c8 00AF     		add	r7, sp, #0
 5125              		.cfi_def_cfa_register 7
 5126 23ca 0346     		mov	r3, r0
 5127 23cc FB71     		strb	r3, [r7, #7]
1949:../tasks/SDMMC/sd_diskio.c ****   /* Check the parameters */
1950:../tasks/SDMMC/sd_diskio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1951:../tasks/SDMMC/sd_diskio.c **** 
1952:../tasks/SDMMC/sd_diskio.c ****   *(__IO uint32_t *) DCTRL_DMAEN_BB = (uint32_t)NewState;
 5128              		.loc 1 1952 0
 5129 23ce 48F28C53 		movw	r3, #34188
 5130 23d2 C4F22523 		movt	r3, 16933
 5131 23d6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5132 23d8 1A60     		str	r2, [r3]
1953:../tasks/SDMMC/sd_diskio.c **** }
 5133              		.loc 1 1953 0
 5134 23da 0C37     		adds	r7, r7, #12
 5135 23dc BD46     		mov	sp, r7
 5136              		@ sp needed
 5137 23de 5DF8047B 		ldr	r7, [sp], #4
 5138 23e2 7047     		bx	lr
 5139              		.cfi_endproc
 5140              	.LFE89:
 5142              		.align	2
 5143              		.global	SD_LowLevel_DMA_RxConfig
 5144              		.thumb
 5145              		.thumb_func
 5147              	SD_LowLevel_DMA_RxConfig:
 5148              	.LFB90:
1954:../tasks/SDMMC/sd_diskio.c **** /*************************************************************
1955:../tasks/SDMMC/sd_diskio.c **** **************************************************************/
1956:../tasks/SDMMC/sd_diskio.c **** /**
1957:../tasks/SDMMC/sd_diskio.c ****   * @brief  Configures the DMA2 Channel4 for SDIO Rx request.
1958:../tasks/SDMMC/sd_diskio.c ****   * @param  BufferDST: pointer to the destination buffer
1959:../tasks/SDMMC/sd_diskio.c ****   * @param  BufferSize: buffer size
1960:../tasks/SDMMC/sd_diskio.c ****   * @retval None
1961:../tasks/SDMMC/sd_diskio.c ****   */
1962:../tasks/SDMMC/sd_diskio.c **** void SD_LowLevel_DMA_RxConfig(uint32_t *BufferDST, uint32_t BufferSize)
1963:../tasks/SDMMC/sd_diskio.c **** {
 5149              		.loc 1 1963 0
 5150              		.cfi_startproc
 5151              		@ args = 0, pretend = 0, frame = 16
 5152              		@ frame_needed = 1, uses_anonymous_args = 0
 5153 23e4 80B5     		push	{r7, lr}
 5154              		.cfi_def_cfa_offset 8
 5155              		.cfi_offset 7, -8
 5156              		.cfi_offset 14, -4
 5157 23e6 84B0     		sub	sp, sp, #16
 5158              		.cfi_def_cfa_offset 24
 5159 23e8 00AF     		add	r7, sp, #0
 5160              		.cfi_def_cfa_register 7
 5161 23ea 7860     		str	r0, [r7, #4]
 5162 23ec 3960     		str	r1, [r7]
1964:../tasks/SDMMC/sd_diskio.c ****   static DMA_HandleTypeDef dmaRxHandle;
1965:../tasks/SDMMC/sd_diskio.c ****   SD_HandleTypeDef *hsd = &uSdHandle;
 5163              		.loc 1 1965 0
 5164 23ee 40F20003 		movw	r3, #:lower16:uSdHandle
 5165 23f2 C0F20003 		movt	r3, #:upper16:uSdHandle
 5166 23f6 FB60     		str	r3, [r7, #12]
1966:../tasks/SDMMC/sd_diskio.c **** 
1967:../tasks/SDMMC/sd_diskio.c ****   /* Deinitialize the stream for new transfer */
1968:../tasks/SDMMC/sd_diskio.c ****   HAL_DMA_DeInit(&dmaRxHandle);
 5167              		.loc 1 1968 0
 5168 23f8 40F20000 		movw	r0, #:lower16:dmaRxHandle.10030
 5169 23fc C0F20000 		movt	r0, #:upper16:dmaRxHandle.10030
 5170 2400 FFF7FEFF 		bl	HAL_DMA_DeInit
1969:../tasks/SDMMC/sd_diskio.c **** 
1970:../tasks/SDMMC/sd_diskio.c ****   /* Configure DMA Rx parameters */
1971:../tasks/SDMMC/sd_diskio.c ****   dmaRxHandle.Init.Channel             = SD_DMAx_Rx_CHANNEL;
 5171              		.loc 1 1971 0
 5172 2404 40F20003 		movw	r3, #:lower16:dmaRxHandle.10030
 5173 2408 C0F20003 		movt	r3, #:upper16:dmaRxHandle.10030
 5174 240c 4FF00062 		mov	r2, #134217728
 5175 2410 5A60     		str	r2, [r3, #4]
1972:../tasks/SDMMC/sd_diskio.c ****   dmaRxHandle.Init.Direction           = DMA_PERIPH_TO_MEMORY;
 5176              		.loc 1 1972 0
 5177 2412 40F20003 		movw	r3, #:lower16:dmaRxHandle.10030
 5178 2416 C0F20003 		movt	r3, #:upper16:dmaRxHandle.10030
 5179 241a 0022     		movs	r2, #0
 5180 241c 9A60     		str	r2, [r3, #8]
1973:../tasks/SDMMC/sd_diskio.c ****   dmaRxHandle.Init.PeriphInc           = DMA_PINC_DISABLE;
 5181              		.loc 1 1973 0
 5182 241e 40F20003 		movw	r3, #:lower16:dmaRxHandle.10030
 5183 2422 C0F20003 		movt	r3, #:upper16:dmaRxHandle.10030
 5184 2426 0022     		movs	r2, #0
 5185 2428 DA60     		str	r2, [r3, #12]
1974:../tasks/SDMMC/sd_diskio.c ****   dmaRxHandle.Init.MemInc              = DMA_MINC_ENABLE;
 5186              		.loc 1 1974 0
 5187 242a 40F20003 		movw	r3, #:lower16:dmaRxHandle.10030
 5188 242e C0F20003 		movt	r3, #:upper16:dmaRxHandle.10030
 5189 2432 4FF48062 		mov	r2, #1024
 5190 2436 1A61     		str	r2, [r3, #16]
1975:../tasks/SDMMC/sd_diskio.c ****   dmaRxHandle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 5191              		.loc 1 1975 0
 5192 2438 40F20003 		movw	r3, #:lower16:dmaRxHandle.10030
 5193 243c C0F20003 		movt	r3, #:upper16:dmaRxHandle.10030
 5194 2440 4FF48052 		mov	r2, #4096
 5195 2444 5A61     		str	r2, [r3, #20]
1976:../tasks/SDMMC/sd_diskio.c ****   dmaRxHandle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 5196              		.loc 1 1976 0
 5197 2446 40F20003 		movw	r3, #:lower16:dmaRxHandle.10030
 5198 244a C0F20003 		movt	r3, #:upper16:dmaRxHandle.10030
 5199 244e 4FF48042 		mov	r2, #16384
 5200 2452 9A61     		str	r2, [r3, #24]
1977:../tasks/SDMMC/sd_diskio.c ****   dmaRxHandle.Init.Mode                = DMA_NORMAL;
 5201              		.loc 1 1977 0
 5202 2454 40F20003 		movw	r3, #:lower16:dmaRxHandle.10030
 5203 2458 C0F20003 		movt	r3, #:upper16:dmaRxHandle.10030
 5204 245c 0022     		movs	r2, #0
 5205 245e DA61     		str	r2, [r3, #28]
1978:../tasks/SDMMC/sd_diskio.c ****   dmaRxHandle.Init.Priority            = DMA_PRIORITY_VERY_HIGH;
 5206              		.loc 1 1978 0
 5207 2460 40F20003 		movw	r3, #:lower16:dmaRxHandle.10030
 5208 2464 C0F20003 		movt	r3, #:upper16:dmaRxHandle.10030
 5209 2468 4FF44032 		mov	r2, #196608
 5210 246c 1A62     		str	r2, [r3, #32]
1979:../tasks/SDMMC/sd_diskio.c ****   dmaRxHandle.Init.FIFOMode            = DMA_FIFOMODE_ENABLE;
 5211              		.loc 1 1979 0
 5212 246e 40F20003 		movw	r3, #:lower16:dmaRxHandle.10030
 5213 2472 C0F20003 		movt	r3, #:upper16:dmaRxHandle.10030
 5214 2476 0422     		movs	r2, #4
 5215 2478 5A62     		str	r2, [r3, #36]
1980:../tasks/SDMMC/sd_diskio.c ****   dmaRxHandle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 5216              		.loc 1 1980 0
 5217 247a 40F20003 		movw	r3, #:lower16:dmaRxHandle.10030
 5218 247e C0F20003 		movt	r3, #:upper16:dmaRxHandle.10030
 5219 2482 0322     		movs	r2, #3
 5220 2484 9A62     		str	r2, [r3, #40]
1981:../tasks/SDMMC/sd_diskio.c ****   dmaRxHandle.Init.MemBurst            = DMA_MBURST_INC4;
 5221              		.loc 1 1981 0
 5222 2486 40F20003 		movw	r3, #:lower16:dmaRxHandle.10030
 5223 248a C0F20003 		movt	r3, #:upper16:dmaRxHandle.10030
 5224 248e 4FF40002 		mov	r2, #8388608
 5225 2492 DA62     		str	r2, [r3, #44]
1982:../tasks/SDMMC/sd_diskio.c ****   dmaRxHandle.Init.PeriphBurst         = DMA_PBURST_INC4;
 5226              		.loc 1 1982 0
 5227 2494 40F20003 		movw	r3, #:lower16:dmaRxHandle.10030
 5228 2498 C0F20003 		movt	r3, #:upper16:dmaRxHandle.10030
 5229 249c 4FF40012 		mov	r2, #2097152
 5230 24a0 1A63     		str	r2, [r3, #48]
1983:../tasks/SDMMC/sd_diskio.c **** 
1984:../tasks/SDMMC/sd_diskio.c ****   dmaRxHandle.Instance = SD_DMAx_Rx_STREAM;
 5231              		.loc 1 1984 0
 5232 24a2 40F20003 		movw	r3, #:lower16:dmaRxHandle.10030
 5233 24a6 C0F20003 		movt	r3, #:upper16:dmaRxHandle.10030
 5234 24aa 46F25842 		movw	r2, #25688
 5235 24ae C4F20202 		movt	r2, 16386
 5236 24b2 1A60     		str	r2, [r3]
1985:../tasks/SDMMC/sd_diskio.c **** 
1986:../tasks/SDMMC/sd_diskio.c ****   /* Associate the DMA handle */
1987:../tasks/SDMMC/sd_diskio.c ****   __HAL_LINKDMA(hsd, hdmarx, dmaRxHandle);
 5237              		.loc 1 1987 0
 5238 24b4 FA68     		ldr	r2, [r7, #12]
 5239 24b6 40F20003 		movw	r3, #:lower16:dmaRxHandle.10030
 5240 24ba C0F20003 		movt	r3, #:upper16:dmaRxHandle.10030
 5241 24be 9365     		str	r3, [r2, #88]
 5242 24c0 40F20003 		movw	r3, #:lower16:dmaRxHandle.10030
 5243 24c4 C0F20003 		movt	r3, #:upper16:dmaRxHandle.10030
 5244 24c8 FA68     		ldr	r2, [r7, #12]
 5245 24ca 9A63     		str	r2, [r3, #56]
1988:../tasks/SDMMC/sd_diskio.c **** 
1989:../tasks/SDMMC/sd_diskio.c ****   /* не нашел в CUBE
1990:../tasks/SDMMC/sd_diskio.c ****   SDDMA_InitStructure.PeripheralBaseAddr = (uint32_t)SDIO_FIFO_ADDRESS;
1991:../tasks/SDMMC/sd_diskio.c ****   SDDMA_InitStructure.Memory0BaseAddr = (uint32_t)BufferDST;
1992:../tasks/SDMMC/sd_diskio.c ****   SDDMA_InitStructure.BufferSize = BufferSize;
1993:../tasks/SDMMC/sd_diskio.c ****   DMA_ITConfig(SD_SDIO_DMA_STREAM, DMA_IT_TC, ENABLE);
1994:../tasks/SDMMC/sd_diskio.c ****   DMA_FlowControllerConfig(SD_SDIO_DMA_STREAM, DMA_FlowCtrl_Peripheral);
1995:../tasks/SDMMC/sd_diskio.c **** */
1996:../tasks/SDMMC/sd_diskio.c ****   /* Configure the DMA stream */
1997:../tasks/SDMMC/sd_diskio.c ****   HAL_DMA_Init(&dmaRxHandle);
 5246              		.loc 1 1997 0
 5247 24cc 40F20000 		movw	r0, #:lower16:dmaRxHandle.10030
 5248 24d0 C0F20000 		movt	r0, #:upper16:dmaRxHandle.10030
 5249 24d4 FFF7FEFF 		bl	HAL_DMA_Init
1998:../tasks/SDMMC/sd_diskio.c **** }
 5250              		.loc 1 1998 0
 5251 24d8 1037     		adds	r7, r7, #16
 5252 24da BD46     		mov	sp, r7
 5253              		@ sp needed
 5254 24dc 80BD     		pop	{r7, pc}
 5255              		.cfi_endproc
 5256              	.LFE90:
 5258              		.bss
 5259              		.align	2
 5260              	dmaRxHandle.9860:
 5261 002c 00000000 		.space	80
 5261      00000000 
 5261      00000000 
 5261      00000000 
 5261      00000000 
 5262              		.align	2
 5263              	dmaTxHandle.9861:
 5264 007c 00000000 		.space	80
 5264      00000000 
 5264      00000000 
 5264      00000000 
 5264      00000000 
 5265              		.align	2
 5266              	dmaRxHandle.10030:
 5267 00cc 00000000 		.space	80
 5267      00000000 
 5267      00000000 
 5267      00000000 
 5267      00000000 
 5268              		.text
 5269              	.Letext0:
 5270              		.file 2 "c:\\program files (x86)\\codesourcery\\arm-none-eabi\\include\\stdint.h"
 5271              		.file 3 "D:\\workspace\\console800480\\tasks\\SDMMC/integer.h"
 5272              		.file 4 "../tasks/SDMMC/diskio.h"
 5273              		.file 5 "D:\\workspace\\console800480\\system/stm32f217xx.h"
 5274              		.file 6 "D:\\workspace\\console800480\\system/stm32f2xx.h"
 5275              		.file 7 "D:\\workspace\\console800480\\STM32F2xx_HAL_Driver\\Inc/stm32f2xx_hal_def.h"
 5276              		.file 8 "D:\\workspace\\console800480\\STM32F2xx_HAL_Driver\\Inc/stm32f2xx_hal_gpio.h"
 5277              		.file 9 "D:\\workspace\\console800480\\STM32F2xx_HAL_Driver\\Inc/stm32f2xx_hal_dma.h"
 5278              		.file 10 "D:\\workspace\\console800480\\STM32F2xx_HAL_Driver\\Inc/stm32f2xx_ll_sdmmc.h"
 5279              		.file 11 "D:\\workspace\\console800480\\STM32F2xx_HAL_Driver\\Inc/stm32f2xx_hal_sd.h"
 5280              		.file 12 "../tasks/SDMMC/ff_gen_drv.h"
 5281              		.file 13 "D:\\workspace\\console800480\\system/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 sd_diskio.c
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:21     .data:00000000 Stat
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:24     .bss:00000000 $d
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:25     .bss:00000000 IsCardType
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:28     .bss:00000004 CSD_Tab
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:31     .bss:00000014 CID_Tab
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:34     .bss:00000024 RCA
                            *COM*:00000018 SDIO_InitStructure
                            *COM*:00000014 SDIO_CmdInitStructure
                            *COM*:00000018 SDIO_DataInitStructure
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:40     .bss:00000028 DeviceMode
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:47     .data:00000004 SD_Driver
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:44     .data:00000001 $d
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:59     .text:00000000 SD_initialize
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:114    .text:00000048 SD_status
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:169    .text:0000009c SD_read
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:325    .text:000001b0 SD_write
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:481    .text:000002c4 SD_ioctl
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:54     .text:00000000 $t
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:4712   .text:000020e4 BSP_SD_Init
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:105    .rodata:00000000 $d
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:106    .rodata:00000000 .LC0
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:4454   .text:00001fcc BSP_SD_GetStatus
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:4381   .text:00001f68 BSP_SD_ReadBlocks_DMA
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:4491   .text:00001fe4 BSP_SD_WriteBlocks_DMA
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:523    .text:000002fc $d
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:530    .text:00000310 $t
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:946    .text:000006a8 BSP_SD_GetCardInfo
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:601    .text:0000037c SD_LowLevel_Init
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:5260   .bss:0000002c dmaRxHandle.9860
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:5263   .bss:0000007c dmaTxHandle.9861
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:979    .text:000006c4 SDIO_PowerON
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:1405   .text:00000a64 CmdError
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:2354   .text:00001050 CmdResp7Error
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:1560   .text:00000b08 CmdResp1Error
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:1847   .text:00000cbc CmdResp3Error
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:1475   .text:00000ab0 SDIO_GetFlagStatus
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:1527   .text:00000ae8 SDIO_ClearFlag
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:1918   .text:00000d14 SD_InitializeCards
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:3515   .text:00001930 CmdResp2Error
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:2205   .text:00000f74 CmdResp6Error
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:2454   .text:000010d0 SD_GetCardInfo
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:3261   .text:00001754 SD_SelectDeselect
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:3331   .text:000017c8 SD_EnableWideBusOperation
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:3600   .text:000019a0 SDEnWideBus
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:3887   .text:00001bd8 FindSCR
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:4236   .text:00001e98 SD_Detect
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:4282   .text:00001ec8 SD_SendStatus
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:4479   .rodata:0000002c .LC1
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:4483   .rodata:00000064 .LC2
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:4572   .text:00002060 SD_SetDeviceMode
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:4630   .text:000020a0 BSP_SD_IRQHandler
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:4656   .text:000020b4 BSP_SD_DMA_Tx_IRQHandler
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:4684   .text:000020cc BSP_SD_DMA_Rx_IRQHandler
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:4824   .rodata:00000098 .LC3
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:4827   .rodata:000000bc .LC4
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:4830   .rodata:000000e0 .LC5
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:4838   .text:000021a8 SD_ReadMultiBlocks
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:5055   .text:00002374 SDIO_ITConfig
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:5147   .text:000023e4 SD_LowLevel_DMA_RxConfig
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:5112   .text:000023c4 SDIO_DMACmd
C:\Users\sagok\AppData\Local\Temp\ccyeqUoB.s:5266   .bss:000000cc dmaRxHandle.10030
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.7f551ac7fcad8b79b9df4bfdaa536673
                           .group:00000000 wm4.newlib.h.8.384a112feabb3bef7b573ae48cde2e3b
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4.config.h.183.aa62afef667fb61d15fa64c48beb2f14
                           .group:00000000 wm4._ansi.h.23.5644b60c990a4800b02a6e654e88f93a
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.59.db8450f33c1f6150c0372fa1091a887a
                           .group:00000000 wm4.stddef.h.348.9a99de77b6ba3b4278b57e9cc6d6e349
                           .group:00000000 wm4.reent.h.16.567d760e6ae9ad7f917851a308bd7a57
                           .group:00000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.cdefs.h.56.efab90f4d89fbc41d6b3a5c5fb0d3d0f
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.string.h.126.6ff3aa59129e7f66b2c273baf353e066
                           .group:00000000 wm4.diskio.h.6.8da7330f9b93c43e88f440080fbc00d0
                           .group:00000000 wm4.diskio.h.43.17c6f92f3f6ff58b941e8553c0aeafe2
                           .group:00000000 wm4.stm32f2xx_hal_conf.h.40.007126baefb9f966c36646edbf8040d2
                           .group:00000000 wm4.stm32f2xx.h.57.5ec1581efc43612c411d33a8686e9ec7
                           .group:00000000 wm4.stm32f217xx.h.52.9c940d76d00294b78837dc334c172fdd
                           .group:00000000 wm4.core_cm3.h.32.49180ccb4d36cabd2d7016d2a51d91ae
                           .group:00000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:00000000 wm4.core_cm3.h.130.63ab2348a6eed0fdb318040d970b676c
                           .group:00000000 wm4.stm32f217xx.h.978.a5c681952b2f704a0e7f2ba21d08adf5
                           .group:00000000 wm4.stm32f2xx.h.142.bc2155a1f7498bab16371e38413a9e41
                           .group:00000000 wm4.stm32f2xx_hal_def.h.77.85e18fadb694368b08f53dcd86f4d15e
                           .group:00000000 wm4.stm32f2xx_hal_rcc.h.142.ec0f91cc6576a6acebd17e6dd85829ae
                           .group:00000000 wm4.stm32f2xx_hal_rcc_ex.h.40.0829033e864455c6bdd0db01f8ba5a50
                           .group:00000000 wm4.stm32f2xx_hal_gpio.h.40.ba64e0bb94d9a68835f80159f39a86f1
                           .group:00000000 wm4.stm32f2xx_hal_gpio_ex.h.40.24e547fd402281923f446b510381083f
                           .group:00000000 wm4.stm32f2xx_hal_dma.h.40.5d9732ace2a21a4526ce8f0c52428fff
                           .group:00000000 wm4.stm32f2xx_hal_cortex.h.40.e10263d2ec5d4fa79b4180ce1a38aff1
                           .group:00000000 wm4.stm32f2xx_hal_adc.h.40.89ac8b78113cac4cf63847587daabac9
                           .group:00000000 wm4.stm32f2xx_hal_adc_ex.h.40.7de68ed256ef25526ee31cc017f2c291
                           .group:00000000 wm4.stm32f2xx_hal_flash.h.40.c3171719ce015e9cff20c795e44e886d
                           .group:00000000 wm4.stm32f2xx_hal_flash_ex.h.40.7389508bd24a0aeb077bde0c9fb651eb
                           .group:00000000 wm4.stm32f2xx_ll_fsmc.h.40.c1c32f2e1862f4dd342bd9b80fb895bb
                           .group:00000000 wm4.stm32f2xx_hal_pwr.h.40.812df32e5c31b609a128e9db0eb4cbd0
                           .group:00000000 wm4.stm32f2xx_hal_rtc.h.40.850fda5fe2cce8797446913dee18382f
                           .group:00000000 wm4.stm32f2xx_hal_rtc_ex.h.40.f3e0c408e3bf4e8a0352d7ec9a18a822
                           .group:00000000 wm4.stm32f2xx_ll_sdmmc.h.40.3719ab487c4b77401c572f459adf6eb7
                           .group:00000000 wm4.stm32f2xx_hal_sd.h.58.760215394dcc316161a6482c0af9b866
                           .group:00000000 wm4.stm32f2xx_hal_spi.h.40.7984243dbaba8b21c6392998a47e6987
                           .group:00000000 wm4.stm32f2xx_hal_tim.h.40.d79172f25d0e9a15dc346aba8515bdd6
                           .group:00000000 wm4.stm32f2xx_hal_tim_ex.h.40.361f280a7a3f60b4b238bb99ca728d83
                           .group:00000000 wm4.stm32f2xx_hal_uart.h.40.d74def561ae6f78f40f477c8426ecbef
                           .group:00000000 wm4.stm32f2xx_ll_usb.h.40.9b0206a05bc6ce3bec1648b51f22cb81
                           .group:00000000 wm4.stm32f2xx_hal_pcd.h.99.11faba414c39e357b2f23364912d0605
                           .group:00000000 wm4.stm32f2xx_hal_hcd.h.40.44ee5e972983ae0139ddbacdc75c44ef
                           .group:00000000 wm4.stm32f2xx_hal.h.64.ed79ee83e52b151b3c365392b398f866
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.5759fe41f87f5211a5952dfb1fc64f19
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.64.f9f1bb6b0d3d7e12f6a27968d859709c
                           .group:00000000 wm4.stdlib.h.18.8bab2fb43ac4e90235390733c30a4530
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.55.7091a050e07f1c4abd225630fe3d62f1
                           .group:00000000 wm4.LEDs.h.9.36ffa4b30bd168dc58d64fa6e53a9a30
                           .group:00000000 wm4.usbh_conf.h.41.d72a4a1e5e10d8f062cf3fa4bcd8aa54
                           .group:00000000 wm4.usbh_def.h.42.e5773f0fe2e07d0c2c7284f319cefcfb
                           .group:00000000 wm4.usbh_ioreq.h.53.3586266a62e1adb6014256f47bfe28ae
                           .group:00000000 wm4.usbh_ctlreq.h.30.baf76fe1032fc0ccc3b759e321acc69d
                           .group:00000000 wm4.usbh_core.h.60.126ed10f424484efe8e3332cf8789488
                           .group:00000000 wm4.usbh_msc_bot.h.150.7a573dd4700e98f78a08f0e60cd8a2e8
                           .group:00000000 wm4.usbh_msc_scsi.h.30.7ac65aef8ad2b1cb473eb44388537ea2
                           .group:00000000 wm4.usbh_msc.h.92.1eaed72009e45245618cff3cc0ab5900
                           .group:00000000 wm4.ffconf.h.19.cf478c53f215b23144e0b163e0b92c6c
                           .group:00000000 wm4.ff.h.45.ea85cd9763a25d97ae88799c83ef7c63
                           .group:00000000 wm4.sd_diskio.h.30.cac223a26cab8a7b15f5bf6f8c42bad0

UNDEFINED SYMBOLS
puts
memcpy
uSdHandle
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_DMA_DeInit
HAL_DMA_Init
HAL_SD_Get_CardInfo
SDIO_Init
SDIO_PowerState_ON
SDIO_SendCommand
SDIO_GetResponse
SDIO_GetCommandResponse
SDIO_GetPowerState
SDIO_DataConfig
SDIO_ReadFIFO
HAL_GPIO_ReadPin
HAL_SD_ReadBlocks_DMA
HAL_SD_CheckReadOperation
HAL_SD_GetStatus
HAL_SD_WriteBlocks_DMA
HAL_SD_CheckWriteOperation
HAL_SD_IRQHandler
HAL_DMA_IRQHandler
SD_CardInfo
HAL_SD_Init
HAL_SD_WideBusOperation_Config
printf
