   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"usbh_core.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata
  19              		.align	2
  20              	.LC0:
  21 0000 4552524F 		.ascii	"ERROR: \000"
  21      523A2000 
  22              		.align	2
  23              	.LC1:
  24 0008 496E7661 		.ascii	"Invalid_Host_handle\000"
  24      6C69645F 
  24      486F7374 
  24      5F68616E 
  24      646C6500 
  25              		.text
  26              		.align	2
  27              		.global	USBH_Init
  28              		.thumb
  29              		.thumb_func
  31              	USBH_Init:
  32              	.LFB55:
  33              		.file 1 "../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c"
   1:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /**
   2:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   ******************************************************************************
   3:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @file    usbh_core.c 
   4:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @author  MCD Application Team
   5:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @version V3.0.0
   6:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @date    18-February-2014
   7:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @brief   This file implements the functions for the core state machine process
   8:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *          the enumeration and the control transfer process
   9:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   ******************************************************************************
  10:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @attention
  11:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *
  12:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * <h2><center>&copy; COPYRIGHT 2014 STMicroelectronics</center></h2>
  13:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *
  14:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  15:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * You may not use this file except in compliance with the License.
  16:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * You may obtain a copy of the License at:
  17:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *
  18:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  19:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *
  20:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * Unless required by applicable law or agreed to in writing, software 
  21:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  22:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  23:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * See the License for the specific language governing permissions and
  24:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * limitations under the License.
  25:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *
  26:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   ******************************************************************************
  27:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */ 
  28:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /* Includes ------------------------------------------------------------------*/
  29:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
  30:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #include "usbh_core.h"
  31:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #include "LEDs.h"
  32:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** //#include "usbh_conf.h"
  33:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
  34:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /** @addtogroup USBH_LIB
  35:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @{
  36:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */
  37:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
  38:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /** @addtogroup USBH_LIB_CORE
  39:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @{
  40:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */
  41:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
  42:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /** @defgroup USBH_CORE 
  43:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @brief TThis file handles the basic enumaration when a device is connected 
  44:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *          to the host.
  45:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @{
  46:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */ 
  47:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
  48:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
  49:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /** @defgroup USBH_CORE_Private_Defines
  50:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @{
  51:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */ 
  52:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #define USBH_ADDRESS_DEFAULT                     0
  53:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #define USBH_ADDRESS_ASSIGNED                    1      
  54:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #define USBH_MPS_DEFAULT                         0x40
  55:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /**
  56:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @}
  57:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */ 
  58:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
  59:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /** @defgroup USBH_CORE_Private_Macros
  60:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @{
  61:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */ 
  62:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /**
  63:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @}
  64:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */ 
  65:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
  66:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
  67:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /** @defgroup USBH_CORE_Private_Variables
  68:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @{
  69:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */ 
  70:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /**
  71:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @}
  72:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */ 
  73:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****  
  74:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
  75:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /** @defgroup USBH_CORE_Private_Functions
  76:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @{
  77:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */ 
  78:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** static USBH_StatusTypeDef  USBH_HandleEnum    (USBH_HandleTypeDef *phost);
  79:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** static void                USBH_HandleSof     (USBH_HandleTypeDef *phost);
  80:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** static USBH_StatusTypeDef  DeInitStateMachine(USBH_HandleTypeDef *phost);
  81:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
  82:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #if (USBH_USE_OS == 1)  
  83:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** static void USBH_Process_OS(void const * argument);
  84:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #endif
  85:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
  86:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /**
  87:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @brief  HCD_Init 
  88:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *         Initialize the HOST Core.
  89:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  phost: Host Handle
  90:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  pUsrFunc: User Callback
  91:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @retval USBH Status
  92:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */
  93:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** USBH_StatusTypeDef  USBH_Init(USBH_HandleTypeDef *phost, void (*pUsrFunc)(USBH_HandleTypeDef *phost
  94:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** {
  34              		.loc 1 94 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 16
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 84B0     		sub	sp, sp, #16
  43              		.cfi_def_cfa_offset 24
  44 0004 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  46 0006 F860     		str	r0, [r7, #12]
  47 0008 B960     		str	r1, [r7, #8]
  48 000a 1346     		mov	r3, r2
  49 000c FB71     		strb	r3, [r7, #7]
  95:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   /* Check whether the USB Host handle is valid */
  96:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   if(phost == NULL)
  50              		.loc 1 96 0
  51 000e FB68     		ldr	r3, [r7, #12]
  52 0010 002B     		cmp	r3, #0
  53 0012 10D1     		bne	.L2
  97:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   {
  98:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     USBH_ErrLog("Invalid_Host_handle");
  54              		.loc 1 98 0
  55 0014 40F20000 		movw	r0, #:lower16:.LC0
  56 0018 C0F20000 		movt	r0, #:upper16:.LC0
  57 001c FFF7FEFF 		bl	printf
  58 0020 40F20000 		movw	r0, #:lower16:.LC1
  59 0024 C0F20000 		movt	r0, #:upper16:.LC1
  60 0028 FFF7FEFF 		bl	printf
  61 002c 0A20     		movs	r0, #10
  62 002e FFF7FEFF 		bl	putchar
  99:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     return USBH_FAIL; 
  63              		.loc 1 99 0
  64 0032 0223     		movs	r3, #2
  65 0034 19E0     		b	.L3
  66              	.L2:
 100:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   }
 101:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 102:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   /* Set DRiver ID */
 103:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   phost->id = id;
  67              		.loc 1 103 0
  68 0036 FB68     		ldr	r3, [r7, #12]
  69 0038 FA79     		ldrb	r2, [r7, #7]
  70 003a 83F8BC22 		strb	r2, [r3, #700]
 104:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 105:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   /* Unlink class*/
 106:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   phost->pActiveClass = NULL;
  71              		.loc 1 106 0
  72 003e FB68     		ldr	r3, [r7, #12]
  73 0040 0022     		movs	r2, #0
  74 0042 C3F87422 		str	r2, [r3, #628]
 107:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   phost->ClassNumber = 0;
  75              		.loc 1 107 0
  76 0046 FB68     		ldr	r3, [r7, #12]
  77 0048 0022     		movs	r2, #0
  78 004a C3F87822 		str	r2, [r3, #632]
 108:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 109:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   /* Restore default states and prepare EP0 */ 
 110:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   DeInitStateMachine(phost);
  79              		.loc 1 110 0
  80 004e F868     		ldr	r0, [r7, #12]
  81 0050 00F02AF8 		bl	DeInitStateMachine
 111:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 112:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   /* Assign User process */
 113:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   if(pUsrFunc != NULL)
  82              		.loc 1 113 0
  83 0054 BB68     		ldr	r3, [r7, #8]
  84 0056 002B     		cmp	r3, #0
  85 0058 03D0     		beq	.L4
 114:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   {
 115:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     phost->pUser = pUsrFunc;
  86              		.loc 1 115 0
  87 005a FB68     		ldr	r3, [r7, #12]
  88 005c BA68     		ldr	r2, [r7, #8]
  89 005e C3F8C422 		str	r2, [r3, #708]
  90              	.L4:
 116:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   }
 117:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 118:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #if (USBH_USE_OS == 1) 
 119:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 120:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   /* Create USB Host Queue */
 121:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   osMessageQDef(USBH_Queue, 10, uint16_t);
 122:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   phost->os_event = osMessageCreate (osMessageQ(USBH_Queue), NULL); 
 123:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 124:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   /*Create USB Host Task */
 125:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   osThreadDef(USBH_Thread, USBH_Process_OS, USBH_PROCESS_PRIO, 0, 8 * configMINIMAL_STACK_SIZE);
 126:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   phost->thread = osThreadCreate (osThread(USBH_Thread), phost);
 127:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #endif  
 128:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 129:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   /* Initialize low level driver */
 130:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   USBH_LL_Init(phost);
  91              		.loc 1 130 0
  92 0062 F868     		ldr	r0, [r7, #12]
  93 0064 FFF7FEFF 		bl	USBH_LL_Init
 131:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   return USBH_OK;
  94              		.loc 1 131 0
  95 0068 0023     		movs	r3, #0
  96              	.L3:
 132:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** }
  97              		.loc 1 132 0
  98 006a 1846     		mov	r0, r3
  99 006c 1037     		adds	r7, r7, #16
 100 006e BD46     		mov	sp, r7
 101              		@ sp needed
 102 0070 80BD     		pop	{r7, pc}
 103              		.cfi_endproc
 104              	.LFE55:
 106 0072 00BF     		.align	2
 107              		.global	USBH_DeInit
 108              		.thumb
 109              		.thumb_func
 111              	USBH_DeInit:
 112              	.LFB56:
 133:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 134:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /**
 135:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @brief  HCD_Init 
 136:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *         De-Initialize the Host portion of the driver.
 137:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  phost: Host Handle
 138:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @retval USBH Status
 139:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */
 140:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** USBH_StatusTypeDef  USBH_DeInit(USBH_HandleTypeDef *phost)
 141:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** {
 113              		.loc 1 141 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 8
 116              		@ frame_needed = 1, uses_anonymous_args = 0
 117 0074 80B5     		push	{r7, lr}
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 7, -8
 120              		.cfi_offset 14, -4
 121 0076 82B0     		sub	sp, sp, #8
 122              		.cfi_def_cfa_offset 16
 123 0078 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
 125 007a 7860     		str	r0, [r7, #4]
 142:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   DeInitStateMachine(phost);
 126              		.loc 1 142 0
 127 007c 7868     		ldr	r0, [r7, #4]
 128 007e 00F013F8 		bl	DeInitStateMachine
 143:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 144:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   if(phost->pData != NULL)
 129              		.loc 1 144 0
 130 0082 7B68     		ldr	r3, [r7, #4]
 131 0084 D3F8C032 		ldr	r3, [r3, #704]
 132 0088 002B     		cmp	r3, #0
 133 008a 07D0     		beq	.L6
 145:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   {
 146:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     phost->pActiveClass->pData = NULL;
 134              		.loc 1 146 0
 135 008c 7B68     		ldr	r3, [r7, #4]
 136 008e D3F87432 		ldr	r3, [r3, #628]
 137 0092 0022     		movs	r2, #0
 138 0094 DA61     		str	r2, [r3, #28]
 147:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     USBH_LL_Stop(phost);
 139              		.loc 1 147 0
 140 0096 7868     		ldr	r0, [r7, #4]
 141 0098 FFF7FEFF 		bl	USBH_LL_Stop
 142              	.L6:
 148:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   }
 149:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 150:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   return USBH_OK;
 143              		.loc 1 150 0
 144 009c 0023     		movs	r3, #0
 151:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** }
 145              		.loc 1 151 0
 146 009e 1846     		mov	r0, r3
 147 00a0 0837     		adds	r7, r7, #8
 148 00a2 BD46     		mov	sp, r7
 149              		@ sp needed
 150 00a4 80BD     		pop	{r7, pc}
 151              		.cfi_endproc
 152              	.LFE56:
 154 00a6 00BF     		.align	2
 155              		.thumb
 156              		.thumb_func
 158              	DeInitStateMachine:
 159              	.LFB57:
 152:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 153:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /**
 154:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @brief  DeInitStateMachine 
 155:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *         De-Initialize the Host state machine.
 156:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  phost: Host Handle
 157:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @retval USBH Status
 158:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */
 159:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** static USBH_StatusTypeDef  DeInitStateMachine(USBH_HandleTypeDef *phost)
 160:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** {
 160              		.loc 1 160 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 16
 163              		@ frame_needed = 1, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 165 00a8 80B4     		push	{r7}
 166              		.cfi_def_cfa_offset 4
 167              		.cfi_offset 7, -4
 168 00aa 85B0     		sub	sp, sp, #20
 169              		.cfi_def_cfa_offset 24
 170 00ac 00AF     		add	r7, sp, #0
 171              		.cfi_def_cfa_register 7
 172 00ae 7860     		str	r0, [r7, #4]
 161:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   uint32_t i = 0;
 173              		.loc 1 161 0
 174 00b0 0023     		movs	r3, #0
 175 00b2 FB60     		str	r3, [r7, #12]
 162:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 163:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   /* Clear Pipes flags*/
 164:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   for ( ; i < USBH_MAX_PIPES_NBR; i++)
 176              		.loc 1 164 0
 177 00b4 09E0     		b	.L9
 178              	.L10:
 165:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   {
 166:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     phost->Pipes[i] = 0;
 179              		.loc 1 166 0 discriminator 2
 180 00b6 7A68     		ldr	r2, [r7, #4]
 181 00b8 FB68     		ldr	r3, [r7, #12]
 182 00ba 9E33     		adds	r3, r3, #158
 183 00bc 9B00     		lsls	r3, r3, #2
 184 00be 1344     		add	r3, r3, r2
 185 00c0 0022     		movs	r2, #0
 186 00c2 5A60     		str	r2, [r3, #4]
 164:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   {
 187              		.loc 1 164 0 discriminator 2
 188 00c4 FB68     		ldr	r3, [r7, #12]
 189 00c6 0133     		adds	r3, r3, #1
 190 00c8 FB60     		str	r3, [r7, #12]
 191              	.L9:
 164:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   {
 192              		.loc 1 164 0 is_stmt 0 discriminator 1
 193 00ca FB68     		ldr	r3, [r7, #12]
 194 00cc 0E2B     		cmp	r3, #14
 195 00ce F2D9     		bls	.L10
 167:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   }
 168:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 169:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   for(i = 0; i< USBH_MAX_DATA_BUFFER; i++)
 196              		.loc 1 169 0 is_stmt 1
 197 00d0 0023     		movs	r3, #0
 198 00d2 FB60     		str	r3, [r7, #12]
 199 00d4 08E0     		b	.L11
 200              	.L12:
 170:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   {
 171:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     phost->device.Data[i] = 0;
 201              		.loc 1 171 0 discriminator 2
 202 00d6 7A68     		ldr	r2, [r7, #4]
 203 00d8 FB68     		ldr	r3, [r7, #12]
 204 00da 1344     		add	r3, r3, r2
 205 00dc 1833     		adds	r3, r3, #24
 206 00de 0022     		movs	r2, #0
 207 00e0 1A71     		strb	r2, [r3, #4]
 169:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   {
 208              		.loc 1 169 0 discriminator 2
 209 00e2 FB68     		ldr	r3, [r7, #12]
 210 00e4 0133     		adds	r3, r3, #1
 211 00e6 FB60     		str	r3, [r7, #12]
 212              	.L11:
 169:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   {
 213              		.loc 1 169 0 is_stmt 0 discriminator 1
 214 00e8 FB68     		ldr	r3, [r7, #12]
 215 00ea B3F5007F 		cmp	r3, #512
 216 00ee F2D3     		bcc	.L12
 172:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   }
 173:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 174:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   phost->gState = HOST_IDLE;
 217              		.loc 1 174 0 is_stmt 1
 218 00f0 7B68     		ldr	r3, [r7, #4]
 219 00f2 0022     		movs	r2, #0
 220 00f4 1A70     		strb	r2, [r3]
 175:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   phost->EnumState = ENUM_IDLE;
 221              		.loc 1 175 0
 222 00f6 7B68     		ldr	r3, [r7, #4]
 223 00f8 0022     		movs	r2, #0
 224 00fa 5A70     		strb	r2, [r3, #1]
 176:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   phost->RequestState = CMD_SEND;
 225              		.loc 1 176 0
 226 00fc 7B68     		ldr	r3, [r7, #4]
 227 00fe 0122     		movs	r2, #1
 228 0100 9A70     		strb	r2, [r3, #2]
 177:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   phost->Timer = 0;  
 229              		.loc 1 177 0
 230 0102 7B68     		ldr	r3, [r7, #4]
 231 0104 0022     		movs	r2, #0
 232 0106 C3F8B822 		str	r2, [r3, #696]
 178:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 179:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   phost->Control.state = CTRL_SETUP;
 233              		.loc 1 179 0
 234 010a 7B68     		ldr	r3, [r7, #4]
 235 010c 0122     		movs	r2, #1
 236 010e 1A76     		strb	r2, [r3, #24]
 180:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   phost->Control.pipe_size = USBH_MPS_DEFAULT;  
 237              		.loc 1 180 0
 238 0110 7B68     		ldr	r3, [r7, #4]
 239 0112 4022     		movs	r2, #64
 240 0114 9A71     		strb	r2, [r3, #6]
 181:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   phost->Control.errorcount = 0;
 241              		.loc 1 181 0
 242 0116 7B68     		ldr	r3, [r7, #4]
 243 0118 0022     		movs	r2, #0
 244 011a 5A76     		strb	r2, [r3, #25]
 182:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 183:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   phost->device.address = USBH_ADDRESS_DEFAULT;
 245              		.loc 1 183 0
 246 011c 7B68     		ldr	r3, [r7, #4]
 247 011e 0022     		movs	r2, #0
 248 0120 83F81C22 		strb	r2, [r3, #540]
 184:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   phost->device.speed   = USBH_SPEED_FULL;
 249              		.loc 1 184 0
 250 0124 7B68     		ldr	r3, [r7, #4]
 251 0126 0122     		movs	r2, #1
 252 0128 83F81D22 		strb	r2, [r3, #541]
 185:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 186:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   return USBH_OK;
 253              		.loc 1 186 0
 254 012c 0023     		movs	r3, #0
 187:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** }
 255              		.loc 1 187 0
 256 012e 1846     		mov	r0, r3
 257 0130 1437     		adds	r7, r7, #20
 258 0132 BD46     		mov	sp, r7
 259              		@ sp needed
 260 0134 5DF8047B 		ldr	r7, [sp], #4
 261 0138 7047     		bx	lr
 262              		.cfi_endproc
 263              	.LFE57:
 265              		.section	.rodata
 266              		.align	2
 267              	.LC2:
 268 001c 4D617820 		.ascii	"Max Class Number reached\000"
 268      436C6173 
 268      73204E75 
 268      6D626572 
 268      20726561 
 269 0035 000000   		.align	2
 270              	.LC3:
 271 0038 496E7661 		.ascii	"Invalid Class handle\000"
 271      6C696420 
 271      436C6173 
 271      73206861 
 271      6E646C65 
 272              		.text
 273 013a 00BF     		.align	2
 274              		.global	USBH_RegisterClass
 275              		.thumb
 276              		.thumb_func
 278              	USBH_RegisterClass:
 279              	.LFB58:
 188:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 189:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /**
 190:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @brief  USBH_RegisterClass 
 191:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *         Link class driver to Host Core.
 192:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  phost : Host Handle
 193:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  pclass: Class handle
 194:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @retval USBH Status
 195:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */
 196:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** USBH_StatusTypeDef  USBH_RegisterClass(USBH_HandleTypeDef *phost, USBH_ClassTypeDef *pclass)
 197:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** {
 280              		.loc 1 197 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 16
 283              		@ frame_needed = 1, uses_anonymous_args = 0
 284 013c 80B5     		push	{r7, lr}
 285              		.cfi_def_cfa_offset 8
 286              		.cfi_offset 7, -8
 287              		.cfi_offset 14, -4
 288 013e 84B0     		sub	sp, sp, #16
 289              		.cfi_def_cfa_offset 24
 290 0140 00AF     		add	r7, sp, #0
 291              		.cfi_def_cfa_register 7
 292 0142 7860     		str	r0, [r7, #4]
 293 0144 3960     		str	r1, [r7]
 198:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   USBH_StatusTypeDef   status = USBH_OK;
 294              		.loc 1 198 0
 295 0146 0023     		movs	r3, #0
 296 0148 FB73     		strb	r3, [r7, #15]
 199:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 200:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   if(pclass != 0)
 297              		.loc 1 200 0
 298 014a 3B68     		ldr	r3, [r7]
 299 014c 002B     		cmp	r3, #0
 300 014e 25D0     		beq	.L15
 201:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   {
 202:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     if(phost->ClassNumber < USBH_MAX_NUM_SUPPORTED_CLASS)
 301              		.loc 1 202 0
 302 0150 7B68     		ldr	r3, [r7, #4]
 303 0152 D3F87832 		ldr	r3, [r3, #632]
 304 0156 002B     		cmp	r3, #0
 305 0158 0ED1     		bne	.L16
 203:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     {
 204:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       /* link the class tgo the USB Host handle */
 205:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       phost->pClass[phost->ClassNumber++] = pclass;
 306              		.loc 1 205 0
 307 015a 7B68     		ldr	r3, [r7, #4]
 308 015c D3F87832 		ldr	r3, [r3, #632]
 309 0160 591C     		adds	r1, r3, #1
 310 0162 7A68     		ldr	r2, [r7, #4]
 311 0164 C2F87812 		str	r1, [r2, #632]
 312 0168 7A68     		ldr	r2, [r7, #4]
 313 016a 9C33     		adds	r3, r3, #156
 314 016c 3968     		ldr	r1, [r7]
 315 016e 42F82310 		str	r1, [r2, r3, lsl #2]
 206:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       status = USBH_OK;
 316              		.loc 1 206 0
 317 0172 0023     		movs	r3, #0
 318 0174 FB73     		strb	r3, [r7, #15]
 319 0176 22E0     		b	.L18
 320              	.L16:
 207:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     }
 208:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     else
 209:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     {
 210:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       USBH_ErrLog("Max Class Number reached");
 321              		.loc 1 210 0
 322 0178 40F20000 		movw	r0, #:lower16:.LC0
 323 017c C0F20000 		movt	r0, #:upper16:.LC0
 324 0180 FFF7FEFF 		bl	printf
 325 0184 40F20000 		movw	r0, #:lower16:.LC2
 326 0188 C0F20000 		movt	r0, #:upper16:.LC2
 327 018c FFF7FEFF 		bl	printf
 328 0190 0A20     		movs	r0, #10
 329 0192 FFF7FEFF 		bl	putchar
 211:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       status = USBH_FAIL; 
 330              		.loc 1 211 0
 331 0196 0223     		movs	r3, #2
 332 0198 FB73     		strb	r3, [r7, #15]
 333 019a 10E0     		b	.L18
 334              	.L15:
 212:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     }
 213:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   }
 214:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   else
 215:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   {
 216:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     USBH_ErrLog("Invalid Class handle");
 335              		.loc 1 216 0
 336 019c 40F20000 		movw	r0, #:lower16:.LC0
 337 01a0 C0F20000 		movt	r0, #:upper16:.LC0
 338 01a4 FFF7FEFF 		bl	printf
 339 01a8 40F20000 		movw	r0, #:lower16:.LC3
 340 01ac C0F20000 		movt	r0, #:upper16:.LC3
 341 01b0 FFF7FEFF 		bl	printf
 342 01b4 0A20     		movs	r0, #10
 343 01b6 FFF7FEFF 		bl	putchar
 217:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     status = USBH_FAIL; 
 344              		.loc 1 217 0
 345 01ba 0223     		movs	r3, #2
 346 01bc FB73     		strb	r3, [r7, #15]
 347              	.L18:
 218:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   }
 219:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 220:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   return status;
 348              		.loc 1 220 0
 349 01be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 221:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** }
 350              		.loc 1 221 0
 351 01c0 1846     		mov	r0, r3
 352 01c2 1037     		adds	r7, r7, #16
 353 01c4 BD46     		mov	sp, r7
 354              		@ sp needed
 355 01c6 80BD     		pop	{r7, pc}
 356              		.cfi_endproc
 357              	.LFE58:
 359              		.section	.rodata
 360 004d 000000   		.align	2
 361              	.LC4:
 362 0050 53776974 		.ascii	"Switching to Interface (#%d)\000"
 362      6368696E 
 362      6720746F 
 362      20496E74 
 362      65726661 
 363 006d 000000   		.align	2
 364              	.LC5:
 365 0070 436C6173 		.ascii	"Class    : %xh\000"
 365      73202020 
 365      203A2025 
 365      786800
 366 007f 00       		.align	2
 367              	.LC6:
 368 0080 53756243 		.ascii	"SubClass : %xh\000"
 368      6C617373 
 368      203A2025 
 368      786800
 369 008f 00       		.align	2
 370              	.LC7:
 371 0090 50726F74 		.ascii	"Protocol : %xh\000"
 371      6F636F6C 
 371      203A2025 
 371      786800
 372 009f 00       		.align	2
 373              	.LC8:
 374 00a0 43616E6E 		.ascii	"Cannot Select This Interface.\000"
 374      6F742053 
 374      656C6563 
 374      74205468 
 374      69732049 
 375              		.text
 376              		.align	2
 377              		.global	USBH_SelectInterface
 378              		.thumb
 379              		.thumb_func
 381              	USBH_SelectInterface:
 382              	.LFB59:
 222:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 223:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /**
 224:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @brief  USBH_SelectInterface 
 225:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *         Select current interface.
 226:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  phost: Host Handle
 227:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  interface: Interface number
 228:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @retval USBH Status
 229:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */
 230:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** USBH_StatusTypeDef USBH_SelectInterface(USBH_HandleTypeDef *phost, uint8_t interface)
 231:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** {
 383              		.loc 1 231 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 16
 386              		@ frame_needed = 1, uses_anonymous_args = 0
 387 01c8 80B5     		push	{r7, lr}
 388              		.cfi_def_cfa_offset 8
 389              		.cfi_offset 7, -8
 390              		.cfi_offset 14, -4
 391 01ca 84B0     		sub	sp, sp, #16
 392              		.cfi_def_cfa_offset 24
 393 01cc 00AF     		add	r7, sp, #0
 394              		.cfi_def_cfa_register 7
 395 01ce 7860     		str	r0, [r7, #4]
 396 01d0 0B46     		mov	r3, r1
 397 01d2 FB70     		strb	r3, [r7, #3]
 232:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   USBH_StatusTypeDef   status = USBH_OK;
 398              		.loc 1 232 0
 399 01d4 0023     		movs	r3, #0
 400 01d6 FB73     		strb	r3, [r7, #15]
 233:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 234:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   if(interface < phost->device.CfgDesc.bNumInterfaces)
 401              		.loc 1 234 0
 402 01d8 7B68     		ldr	r3, [r7, #4]
 403 01da 93F83632 		ldrb	r3, [r3, #566]	@ zero_extendqisi2
 404 01de FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 405 01e0 9A42     		cmp	r2, r3
 406 01e2 48D2     		bcs	.L21
 235:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   {
 236:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     phost->device.current_interface = interface;
 407              		.loc 1 236 0
 408 01e4 7B68     		ldr	r3, [r7, #4]
 409 01e6 FA78     		ldrb	r2, [r7, #3]
 410 01e8 83F81F22 		strb	r2, [r3, #543]
 237:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     USBH_UsrLog ("Switching to Interface (#%d)", interface);
 411              		.loc 1 237 0
 412 01ec FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 413 01ee 40F20000 		movw	r0, #:lower16:.LC4
 414 01f2 C0F20000 		movt	r0, #:upper16:.LC4
 415 01f6 1946     		mov	r1, r3
 416 01f8 FFF7FEFF 		bl	printf
 417 01fc 0A20     		movs	r0, #10
 418 01fe FFF7FEFF 		bl	putchar
 238:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     USBH_UsrLog ("Class    : %xh", phost->device.CfgDesc.Itf_Desc[interface].bInterfaceClass );
 419              		.loc 1 238 0
 420 0202 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 421 0204 7A68     		ldr	r2, [r7, #4]
 422 0206 1A21     		movs	r1, #26
 423 0208 01FB03F3 		mul	r3, r1, r3
 424 020c 1344     		add	r3, r3, r2
 425 020e 03F50C73 		add	r3, r3, #560
 426 0212 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 427 0214 40F20000 		movw	r0, #:lower16:.LC5
 428 0218 C0F20000 		movt	r0, #:upper16:.LC5
 429 021c 1946     		mov	r1, r3
 430 021e FFF7FEFF 		bl	printf
 431 0222 0A20     		movs	r0, #10
 432 0224 FFF7FEFF 		bl	putchar
 239:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     USBH_UsrLog ("SubClass : %xh", phost->device.CfgDesc.Itf_Desc[interface].bInterfaceSubClass );
 433              		.loc 1 239 0
 434 0228 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 435 022a 7A68     		ldr	r2, [r7, #4]
 436 022c 1A21     		movs	r1, #26
 437 022e 01FB03F3 		mul	r3, r1, r3
 438 0232 1344     		add	r3, r3, r2
 439 0234 03F50C73 		add	r3, r3, #560
 440 0238 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 441 023a 40F20000 		movw	r0, #:lower16:.LC6
 442 023e C0F20000 		movt	r0, #:upper16:.LC6
 443 0242 1946     		mov	r1, r3
 444 0244 FFF7FEFF 		bl	printf
 445 0248 0A20     		movs	r0, #10
 446 024a FFF7FEFF 		bl	putchar
 240:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     USBH_UsrLog ("Protocol : %xh", phost->device.CfgDesc.Itf_Desc[interface].bInterfaceProtocol ); 
 447              		.loc 1 240 0
 448 024e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 449 0250 7A68     		ldr	r2, [r7, #4]
 450 0252 1A21     		movs	r1, #26
 451 0254 01FB03F3 		mul	r3, r1, r3
 452 0258 1344     		add	r3, r3, r2
 453 025a 03F50C73 		add	r3, r3, #560
 454 025e DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 455 0260 40F20000 		movw	r0, #:lower16:.LC7
 456 0264 C0F20000 		movt	r0, #:upper16:.LC7
 457 0268 1946     		mov	r1, r3
 458 026a FFF7FEFF 		bl	printf
 459 026e 0A20     		movs	r0, #10
 460 0270 FFF7FEFF 		bl	putchar
 461 0274 10E0     		b	.L22
 462              	.L21:
 241:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   }
 242:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   else
 243:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   {
 244:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     USBH_ErrLog ("Cannot Select This Interface.");
 463              		.loc 1 244 0
 464 0276 40F20000 		movw	r0, #:lower16:.LC0
 465 027a C0F20000 		movt	r0, #:upper16:.LC0
 466 027e FFF7FEFF 		bl	printf
 467 0282 40F20000 		movw	r0, #:lower16:.LC8
 468 0286 C0F20000 		movt	r0, #:upper16:.LC8
 469 028a FFF7FEFF 		bl	printf
 470 028e 0A20     		movs	r0, #10
 471 0290 FFF7FEFF 		bl	putchar
 245:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     status = USBH_FAIL; 
 472              		.loc 1 245 0
 473 0294 0223     		movs	r3, #2
 474 0296 FB73     		strb	r3, [r7, #15]
 475              	.L22:
 246:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   }
 247:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   return status;  
 476              		.loc 1 247 0
 477 0298 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 248:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** }
 478              		.loc 1 248 0
 479 029a 1846     		mov	r0, r3
 480 029c 1037     		adds	r7, r7, #16
 481 029e BD46     		mov	sp, r7
 482              		@ sp needed
 483 02a0 80BD     		pop	{r7, pc}
 484              		.cfi_endproc
 485              	.LFE59:
 487 02a2 00BF     		.align	2
 488              		.global	USBH_GetActiveClass
 489              		.thumb
 490              		.thumb_func
 492              	USBH_GetActiveClass:
 493              	.LFB60:
 249:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 250:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /**
 251:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @brief  USBH_GetActiveClass 
 252:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *         Return Device Class.
 253:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  phost: Host Handle
 254:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  interface: Interface index
 255:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @retval Class Code
 256:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */
 257:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** uint8_t USBH_GetActiveClass(USBH_HandleTypeDef *phost)
 258:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** {
 494              		.loc 1 258 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 8
 497              		@ frame_needed = 1, uses_anonymous_args = 0
 498              		@ link register save eliminated.
 499 02a4 80B4     		push	{r7}
 500              		.cfi_def_cfa_offset 4
 501              		.cfi_offset 7, -4
 502 02a6 83B0     		sub	sp, sp, #12
 503              		.cfi_def_cfa_offset 16
 504 02a8 00AF     		add	r7, sp, #0
 505              		.cfi_def_cfa_register 7
 506 02aa 7860     		str	r0, [r7, #4]
 259:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****    return (phost->device.CfgDesc.Itf_Desc[0].bInterfaceClass);            
 507              		.loc 1 259 0
 508 02ac 7B68     		ldr	r3, [r7, #4]
 509 02ae 93F84132 		ldrb	r3, [r3, #577]	@ zero_extendqisi2
 260:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** }
 510              		.loc 1 260 0
 511 02b2 1846     		mov	r0, r3
 512 02b4 0C37     		adds	r7, r7, #12
 513 02b6 BD46     		mov	sp, r7
 514              		@ sp needed
 515 02b8 5DF8047B 		ldr	r7, [sp], #4
 516 02bc 7047     		bx	lr
 517              		.cfi_endproc
 518              	.LFE60:
 520 02be 00BF     		.align	2
 521              		.global	USBH_FindInterface
 522              		.thumb
 523              		.thumb_func
 525              	USBH_FindInterface:
 526              	.LFB61:
 261:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /**
 262:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @brief  USBH_FindInterface 
 263:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *         Find the interface index for a specific class.
 264:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  phost: Host Handle
 265:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  Class: Class code
 266:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  SubClass: SubClass code
 267:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  Protocol: Protocol code
 268:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @retval interface index in the configuration structure
 269:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @note : (1)interface index 0xFF means interface index not found
 270:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */
 271:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** uint8_t  USBH_FindInterface(USBH_HandleTypeDef *phost, uint8_t Class, uint8_t SubClass, uint8_t Pro
 272:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** {
 527              		.loc 1 272 0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 24
 530              		@ frame_needed = 1, uses_anonymous_args = 0
 531              		@ link register save eliminated.
 532 02c0 80B4     		push	{r7}
 533              		.cfi_def_cfa_offset 4
 534              		.cfi_offset 7, -4
 535 02c2 87B0     		sub	sp, sp, #28
 536              		.cfi_def_cfa_offset 32
 537 02c4 00AF     		add	r7, sp, #0
 538              		.cfi_def_cfa_register 7
 539 02c6 7860     		str	r0, [r7, #4]
 540 02c8 F970     		strb	r1, [r7, #3]
 541 02ca BA70     		strb	r2, [r7, #2]
 542 02cc 7B70     		strb	r3, [r7, #1]
 273:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   USBH_InterfaceDescTypeDef    *pif ;
 274:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   USBH_CfgDescTypeDef          *pcfg ;
 275:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   int8_t                        if_ix = 0;
 543              		.loc 1 275 0
 544 02ce 0023     		movs	r3, #0
 545 02d0 FB75     		strb	r3, [r7, #23]
 276:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 277:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   pif = (USBH_InterfaceDescTypeDef *)0;
 546              		.loc 1 277 0
 547 02d2 0023     		movs	r3, #0
 548 02d4 3B61     		str	r3, [r7, #16]
 278:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   pcfg = &phost->device.CfgDesc;  
 549              		.loc 1 278 0
 550 02d6 7B68     		ldr	r3, [r7, #4]
 551 02d8 03F23223 		addw	r3, r3, #562
 552 02dc FB60     		str	r3, [r7, #12]
 279:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 280:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   if((pif->bInterfaceClass == 0xFF) &&(pif->bInterfaceSubClass == 0xFF) && (pif->bInterfaceProtocol
 553              		.loc 1 280 0
 554 02de 3B69     		ldr	r3, [r7, #16]
 555 02e0 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 556 02e2 FF2B     		cmp	r3, #255
 557 02e4 09D1     		bne	.L27
 558              		.loc 1 280 0 is_stmt 0 discriminator 1
 559 02e6 3B69     		ldr	r3, [r7, #16]
 560 02e8 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 561 02ea FF2B     		cmp	r3, #255
 562 02ec 05D1     		bne	.L27
 563 02ee 3B69     		ldr	r3, [r7, #16]
 564 02f0 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 565 02f2 FF2B     		cmp	r3, #255
 566 02f4 01D1     		bne	.L27
 281:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   {
 282:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     return 0xFF;
 567              		.loc 1 282 0 is_stmt 1
 568 02f6 FF23     		movs	r3, #255
 569 02f8 2CE0     		b	.L28
 570              	.L27:
 283:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   }
 284:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 285:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   while (if_ix < USBH_MAX_NUM_INTERFACES)
 571              		.loc 1 285 0
 572 02fa 26E0     		b	.L29
 573              	.L34:
 286:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   {
 287:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     pif = &pcfg->Itf_Desc[if_ix];
 574              		.loc 1 287 0
 575 02fc 97F91730 		ldrsb	r3, [r7, #23]
 576 0300 1A22     		movs	r2, #26
 577 0302 02FB03F3 		mul	r3, r2, r3
 578 0306 0833     		adds	r3, r3, #8
 579 0308 FA68     		ldr	r2, [r7, #12]
 580 030a 1344     		add	r3, r3, r2
 581 030c 0233     		adds	r3, r3, #2
 582 030e 3B61     		str	r3, [r7, #16]
 288:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     if(((pif->bInterfaceClass == Class) || (Class == 0xFF))&&
 583              		.loc 1 288 0
 584 0310 3B69     		ldr	r3, [r7, #16]
 585 0312 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 586 0314 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 587 0316 9A42     		cmp	r2, r3
 588 0318 02D0     		beq	.L30
 589              		.loc 1 288 0 is_stmt 0 discriminator 2
 590 031a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 591 031c FF2B     		cmp	r3, #255
 592 031e 11D1     		bne	.L31
 593              	.L30:
 289:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****        ((pif->bInterfaceSubClass == SubClass) || (SubClass == 0xFF))&&
 594              		.loc 1 289 0 is_stmt 1 discriminator 1
 595 0320 3B69     		ldr	r3, [r7, #16]
 596 0322 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 288:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     if(((pif->bInterfaceClass == Class) || (Class == 0xFF))&&
 597              		.loc 1 288 0 discriminator 1
 598 0324 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 599 0326 9A42     		cmp	r2, r3
 600 0328 02D0     		beq	.L32
 601              		.loc 1 289 0
 602 032a BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 603 032c FF2B     		cmp	r3, #255
 604 032e 09D1     		bne	.L31
 605              	.L32:
 290:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****          ((pif->bInterfaceProtocol == Protocol) || (Protocol == 0xFF)))
 606              		.loc 1 290 0 discriminator 1
 607 0330 3B69     		ldr	r3, [r7, #16]
 608 0332 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 289:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****        ((pif->bInterfaceSubClass == SubClass) || (SubClass == 0xFF))&&
 609              		.loc 1 289 0 discriminator 1
 610 0334 7A78     		ldrb	r2, [r7, #1]	@ zero_extendqisi2
 611 0336 9A42     		cmp	r2, r3
 612 0338 02D0     		beq	.L33
 613              		.loc 1 290 0
 614 033a 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 615 033c FF2B     		cmp	r3, #255
 616 033e 01D1     		bne	.L31
 617              	.L33:
 291:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     {
 292:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       return  if_ix;
 618              		.loc 1 292 0
 619 0340 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 620 0342 07E0     		b	.L28
 621              	.L31:
 293:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     }
 294:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     if_ix++;
 622              		.loc 1 294 0
 623 0344 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 624 0346 0133     		adds	r3, r3, #1
 625 0348 FB75     		strb	r3, [r7, #23]
 626              	.L29:
 285:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   {
 627              		.loc 1 285 0 discriminator 1
 628 034a 97F91730 		ldrsb	r3, [r7, #23]
 629 034e 012B     		cmp	r3, #1
 630 0350 D4DD     		ble	.L34
 295:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   }
 296:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   return 0xFF;
 631              		.loc 1 296 0
 632 0352 FF23     		movs	r3, #255
 633              	.L28:
 297:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** }
 634              		.loc 1 297 0
 635 0354 1846     		mov	r0, r3
 636 0356 1C37     		adds	r7, r7, #28
 637 0358 BD46     		mov	sp, r7
 638              		@ sp needed
 639 035a 5DF8047B 		ldr	r7, [sp], #4
 640 035e 7047     		bx	lr
 641              		.cfi_endproc
 642              	.LFE61:
 644              		.align	2
 645              		.global	USBH_FindInterfaceIndex
 646              		.thumb
 647              		.thumb_func
 649              	USBH_FindInterfaceIndex:
 650              	.LFB62:
 298:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 299:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /**
 300:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @brief  USBH_FindInterfaceIndex 
 301:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *         Find the interface index for a specific class interface and alternate setting number.
 302:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  phost: Host Handle
 303:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  interface_number: interface number
 304:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  alt_settings    : alaternate setting number
 305:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @retval interface index in the configuration structure
 306:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @note : (1)interface index 0xFF means interface index not found
 307:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */
 308:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** uint8_t  USBH_FindInterfaceIndex(USBH_HandleTypeDef *phost, uint8_t interface_number, uint8_t alt_s
 309:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** {
 651              		.loc 1 309 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 24
 654              		@ frame_needed = 1, uses_anonymous_args = 0
 655              		@ link register save eliminated.
 656 0360 80B4     		push	{r7}
 657              		.cfi_def_cfa_offset 4
 658              		.cfi_offset 7, -4
 659 0362 87B0     		sub	sp, sp, #28
 660              		.cfi_def_cfa_offset 32
 661 0364 00AF     		add	r7, sp, #0
 662              		.cfi_def_cfa_register 7
 663 0366 7860     		str	r0, [r7, #4]
 664 0368 1346     		mov	r3, r2
 665 036a 0A46     		mov	r2, r1
 666 036c FA70     		strb	r2, [r7, #3]
 667 036e BB70     		strb	r3, [r7, #2]
 310:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   USBH_InterfaceDescTypeDef    *pif ;
 311:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   USBH_CfgDescTypeDef          *pcfg ;
 312:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   int8_t                        if_ix = 0;
 668              		.loc 1 312 0
 669 0370 0023     		movs	r3, #0
 670 0372 FB75     		strb	r3, [r7, #23]
 313:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 314:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   pif = (USBH_InterfaceDescTypeDef *)0;
 671              		.loc 1 314 0
 672 0374 0023     		movs	r3, #0
 673 0376 3B61     		str	r3, [r7, #16]
 315:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   pcfg = &phost->device.CfgDesc;  
 674              		.loc 1 315 0
 675 0378 7B68     		ldr	r3, [r7, #4]
 676 037a 03F23223 		addw	r3, r3, #562
 677 037e FB60     		str	r3, [r7, #12]
 316:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 317:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   while (if_ix < USBH_MAX_NUM_INTERFACES)
 678              		.loc 1 317 0
 679 0380 18E0     		b	.L36
 680              	.L39:
 318:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   {
 319:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     pif = &pcfg->Itf_Desc[if_ix];
 681              		.loc 1 319 0
 682 0382 97F91730 		ldrsb	r3, [r7, #23]
 683 0386 1A22     		movs	r2, #26
 684 0388 02FB03F3 		mul	r3, r2, r3
 685 038c 0833     		adds	r3, r3, #8
 686 038e FA68     		ldr	r2, [r7, #12]
 687 0390 1344     		add	r3, r3, r2
 688 0392 0233     		adds	r3, r3, #2
 689 0394 3B61     		str	r3, [r7, #16]
 320:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     if((pif->bInterfaceNumber == interface_number) && (pif->bAlternateSetting == alt_settings))
 690              		.loc 1 320 0
 691 0396 3B69     		ldr	r3, [r7, #16]
 692 0398 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 693 039a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 694 039c 9A42     		cmp	r2, r3
 695 039e 06D1     		bne	.L37
 696              		.loc 1 320 0 is_stmt 0 discriminator 1
 697 03a0 3B69     		ldr	r3, [r7, #16]
 698 03a2 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 699 03a4 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 700 03a6 9A42     		cmp	r2, r3
 701 03a8 01D1     		bne	.L37
 321:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     {
 322:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       return  if_ix;
 702              		.loc 1 322 0 is_stmt 1
 703 03aa FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 704 03ac 07E0     		b	.L38
 705              	.L37:
 323:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     }
 324:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     if_ix++;
 706              		.loc 1 324 0
 707 03ae FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 708 03b0 0133     		adds	r3, r3, #1
 709 03b2 FB75     		strb	r3, [r7, #23]
 710              	.L36:
 317:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   {
 711              		.loc 1 317 0 discriminator 1
 712 03b4 97F91730 		ldrsb	r3, [r7, #23]
 713 03b8 012B     		cmp	r3, #1
 714 03ba E2DD     		ble	.L39
 325:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   }
 326:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   return 0xFF;
 715              		.loc 1 326 0
 716 03bc FF23     		movs	r3, #255
 717              	.L38:
 327:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** }
 718              		.loc 1 327 0
 719 03be 1846     		mov	r0, r3
 720 03c0 1C37     		adds	r7, r7, #28
 721 03c2 BD46     		mov	sp, r7
 722              		@ sp needed
 723 03c4 5DF8047B 		ldr	r7, [sp], #4
 724 03c8 7047     		bx	lr
 725              		.cfi_endproc
 726              	.LFE62:
 728 03ca 00BF     		.align	2
 729              		.global	USBH_Start
 730              		.thumb
 731              		.thumb_func
 733              	USBH_Start:
 734              	.LFB63:
 328:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 329:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /**
 330:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @brief  USBH_Start 
 331:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *         Start the USB Host Core.
 332:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  phost: Host Handle
 333:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @retval USBH Status
 334:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */
 335:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** USBH_StatusTypeDef  USBH_Start  (USBH_HandleTypeDef *phost)
 336:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** {
 735              		.loc 1 336 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 8
 738              		@ frame_needed = 1, uses_anonymous_args = 0
 739 03cc 80B5     		push	{r7, lr}
 740              		.cfi_def_cfa_offset 8
 741              		.cfi_offset 7, -8
 742              		.cfi_offset 14, -4
 743 03ce 82B0     		sub	sp, sp, #8
 744              		.cfi_def_cfa_offset 16
 745 03d0 00AF     		add	r7, sp, #0
 746              		.cfi_def_cfa_register 7
 747 03d2 7860     		str	r0, [r7, #4]
 337:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   /* Start the low level driver  */
 338:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   USBH_LL_Start(phost);
 748              		.loc 1 338 0
 749 03d4 7868     		ldr	r0, [r7, #4]
 750 03d6 FFF7FEFF 		bl	USBH_LL_Start
 339:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 340:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   /* Activate VBUS on the port */ 
 341:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   USBH_LL_DriverVBUS (phost, TRUE);
 751              		.loc 1 341 0
 752 03da 7868     		ldr	r0, [r7, #4]
 753 03dc 0121     		movs	r1, #1
 754 03de FFF7FEFF 		bl	USBH_LL_DriverVBUS
 342:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 343:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   return USBH_OK;  
 755              		.loc 1 343 0
 756 03e2 0023     		movs	r3, #0
 344:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** }
 757              		.loc 1 344 0
 758 03e4 1846     		mov	r0, r3
 759 03e6 0837     		adds	r7, r7, #8
 760 03e8 BD46     		mov	sp, r7
 761              		@ sp needed
 762 03ea 80BD     		pop	{r7, pc}
 763              		.cfi_endproc
 764              	.LFE63:
 766              		.align	2
 767              		.global	USBH_Stop
 768              		.thumb
 769              		.thumb_func
 771              	USBH_Stop:
 772              	.LFB64:
 345:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 346:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /**
 347:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @brief  USBH_Stop 
 348:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *         Stop the USB Host Core.
 349:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  phost: Host Handle
 350:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @retval USBH Status
 351:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */
 352:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** USBH_StatusTypeDef  USBH_Stop   (USBH_HandleTypeDef *phost)
 353:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** {
 773              		.loc 1 353 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 8
 776              		@ frame_needed = 1, uses_anonymous_args = 0
 777 03ec 80B5     		push	{r7, lr}
 778              		.cfi_def_cfa_offset 8
 779              		.cfi_offset 7, -8
 780              		.cfi_offset 14, -4
 781 03ee 82B0     		sub	sp, sp, #8
 782              		.cfi_def_cfa_offset 16
 783 03f0 00AF     		add	r7, sp, #0
 784              		.cfi_def_cfa_register 7
 785 03f2 7860     		str	r0, [r7, #4]
 354:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   /* Stop and cleanup the low level driver  */
 355:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   USBH_LL_Stop(phost);  
 786              		.loc 1 355 0
 787 03f4 7868     		ldr	r0, [r7, #4]
 788 03f6 FFF7FEFF 		bl	USBH_LL_Stop
 356:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 357:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   /* DeActivate VBUS on the port */ 
 358:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   USBH_LL_DriverVBUS (phost, FALSE);
 789              		.loc 1 358 0
 790 03fa 7868     		ldr	r0, [r7, #4]
 791 03fc 0021     		movs	r1, #0
 792 03fe FFF7FEFF 		bl	USBH_LL_DriverVBUS
 359:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 360:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   /* FRee Control Pipes */
 361:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   USBH_FreePipe  (phost, phost->Control.pipe_in);
 793              		.loc 1 361 0
 794 0402 7B68     		ldr	r3, [r7, #4]
 795 0404 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 796 0406 7868     		ldr	r0, [r7, #4]
 797 0408 1946     		mov	r1, r3
 798 040a FFF7FEFF 		bl	USBH_FreePipe
 362:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   USBH_FreePipe  (phost, phost->Control.pipe_out);  
 799              		.loc 1 362 0
 800 040e 7B68     		ldr	r3, [r7, #4]
 801 0410 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 802 0412 7868     		ldr	r0, [r7, #4]
 803 0414 1946     		mov	r1, r3
 804 0416 FFF7FEFF 		bl	USBH_FreePipe
 363:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 364:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   return USBH_OK;  
 805              		.loc 1 364 0
 806 041a 0023     		movs	r3, #0
 365:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** }
 807              		.loc 1 365 0
 808 041c 1846     		mov	r0, r3
 809 041e 0837     		adds	r7, r7, #8
 810 0420 BD46     		mov	sp, r7
 811              		@ sp needed
 812 0422 80BD     		pop	{r7, pc}
 813              		.cfi_endproc
 814              	.LFE64:
 816              		.align	2
 817              		.global	USBH_ReEnumerate
 818              		.thumb
 819              		.thumb_func
 821              	USBH_ReEnumerate:
 822              	.LFB65:
 366:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 367:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /**
 368:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @brief  HCD_ReEnumerate 
 369:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *         Perform a new Enumeration phase.
 370:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  phost: Host Handle
 371:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @retval USBH Status
 372:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */
 373:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** USBH_StatusTypeDef  USBH_ReEnumerate   (USBH_HandleTypeDef *phost)
 374:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** {
 823              		.loc 1 374 0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 8
 826              		@ frame_needed = 1, uses_anonymous_args = 0
 827 0424 80B5     		push	{r7, lr}
 828              		.cfi_def_cfa_offset 8
 829              		.cfi_offset 7, -8
 830              		.cfi_offset 14, -4
 831 0426 82B0     		sub	sp, sp, #8
 832              		.cfi_def_cfa_offset 16
 833 0428 00AF     		add	r7, sp, #0
 834              		.cfi_def_cfa_register 7
 835 042a 7860     		str	r0, [r7, #4]
 375:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   /*Stop Host */ 
 376:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   USBH_Stop(phost);
 836              		.loc 1 376 0
 837 042c 7868     		ldr	r0, [r7, #4]
 838 042e FFF7FEFF 		bl	USBH_Stop
 377:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 378:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   /*Device has disconnected, so wait for 200 ms */  
 379:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   USBH_Delay(200);
 839              		.loc 1 379 0
 840 0432 C820     		movs	r0, #200
 841 0434 FFF7FEFF 		bl	USBH_Delay
 380:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 381:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   /* Set State machines in default state */
 382:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   DeInitStateMachine(phost);
 842              		.loc 1 382 0
 843 0438 7868     		ldr	r0, [r7, #4]
 844 043a FFF735FE 		bl	DeInitStateMachine
 383:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****    
 384:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   /* Start again the host */
 385:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   USBH_Start(phost);
 845              		.loc 1 385 0
 846 043e 7868     		ldr	r0, [r7, #4]
 847 0440 FFF7FEFF 		bl	USBH_Start
 386:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       
 387:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #if (USBH_USE_OS == 1)
 388:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       osMessagePut ( phost->os_event, USBH_PORT_EVENT, 0);
 389:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #endif  
 390:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   return USBH_OK;  
 848              		.loc 1 390 0
 849 0444 0023     		movs	r3, #0
 391:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** }
 850              		.loc 1 391 0
 851 0446 1846     		mov	r0, r3
 852 0448 0837     		adds	r7, r7, #8
 853 044a BD46     		mov	sp, r7
 854              		@ sp needed
 855 044c 80BD     		pop	{r7, pc}
 856              		.cfi_endproc
 857              	.LFE65:
 859              		.section	.rodata
 860 00be 0000     		.align	2
 861              	.LC9:
 862 00c0 5553425F 		.ascii	"USB_Device_Attached\000"
 862      44657669 
 862      63655F41 
 862      74746163 
 862      68656400 
 863              		.align	2
 864              	.LC10:
 865 00d4 456E756D 		.ascii	"Enumeration_done.\000"
 865      65726174 
 865      696F6E5F 
 865      646F6E65 
 865      2E00
 866 00e6 0000     		.align	2
 867              	.LC11:
 868 00e8 54686973 		.ascii	"This device has only 1 configuration.\000"
 868      20646576 
 868      69636520 
 868      68617320 
 868      6F6E6C79 
 869 010e 0000     		.align	2
 870              	.LC12:
 871 0110 44656661 		.ascii	"Default_configuration_set.\000"
 871      756C745F 
 871      636F6E66 
 871      69677572 
 871      6174696F 
 872 012b 00       		.align	2
 873              	.LC13:
 874 012c 4E6F2043 		.ascii	"No Class has been registered.\000"
 874      6C617373 
 874      20686173 
 874      20626565 
 874      6E207265 
 875 014a 0000     		.align	2
 876              	.LC14:
 877 014c 25732063 		.ascii	"%s class started.\000"
 877      6C617373 
 877      20737461 
 877      72746564 
 877      2E00
 878 015e 0000     		.align	2
 879              	.LC15:
 880 0160 44657669 		.ascii	"Device not supporting %s class.\000"
 880      6365206E 
 880      6F742073 
 880      7570706F 
 880      7274696E 
 881              		.align	2
 882              	.LC16:
 883 0180 4E6F2072 		.ascii	"No registered class for this device.\000"
 883      65676973 
 883      74657265 
 883      6420636C 
 883      61737320 
 884 01a5 000000   		.align	2
 885              	.LC17:
 886 01a8 496E7661 		.ascii	"Invalid Class Driver.\000"
 886      6C696420 
 886      436C6173 
 886      73204472 
 886      69766572 
 887              		.text
 888 044e 00BF     		.align	2
 889              		.global	USBH_Process
 890              		.thumb
 891              		.thumb_func
 893              	USBH_Process:
 894              	.LFB66:
 392:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 393:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /**
 394:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @brief  USBH_Process 
 395:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *         Background process of the USB Core.
 396:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  phost: Host Handle
 397:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @retval USBH Status
 398:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */
 399:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** USBH_StatusTypeDef  USBH_Process(USBH_HandleTypeDef *phost)
 400:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** {
 895              		.loc 1 400 0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 16
 898              		@ frame_needed = 1, uses_anonymous_args = 0
 899 0450 80B5     		push	{r7, lr}
 900              		.cfi_def_cfa_offset 8
 901              		.cfi_offset 7, -8
 902              		.cfi_offset 14, -4
 903 0452 88B0     		sub	sp, sp, #32
 904              		.cfi_def_cfa_offset 40
 905 0454 04AF     		add	r7, sp, #16
 906              		.cfi_def_cfa 7, 24
 907 0456 7860     		str	r0, [r7, #4]
 401:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   __IO USBH_StatusTypeDef status = USBH_FAIL;
 908              		.loc 1 401 0
 909 0458 0223     		movs	r3, #2
 910 045a BB73     		strb	r3, [r7, #14]
 402:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   uint8_t idx = 0;
 911              		.loc 1 402 0
 912 045c 0023     		movs	r3, #0
 913 045e FB73     		strb	r3, [r7, #15]
 403:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 404:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   switch (phost->gState)
 914              		.loc 1 404 0
 915 0460 7B68     		ldr	r3, [r7, #4]
 916 0462 1B78     		ldrb	r3, [r3]
 917 0464 DBB2     		uxtb	r3, r3
 918 0466 0A2B     		cmp	r3, #10
 919 0468 00F28A81 		bhi	.L79
 920 046c 01A2     		adr	r2, .L49
 921 046e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 922 0472 00BF     		.p2align 2
 923              	.L49:
 924 0474 A1040000 		.word	.L48+1
 925 0478 81070000 		.word	.L79+1
 926 047c C3040000 		.word	.L51+1
 927 0480 59070000 		.word	.L52+1
 928 0484 81070000 		.word	.L79+1
 929 0488 5F050000 		.word	.L53+1
 930 048c ED060000 		.word	.L54+1
 931 0490 B3050000 		.word	.L55+1
 932 0494 D3050000 		.word	.L56+1
 933 0498 03060000 		.word	.L57+1
 934 049c 3F070000 		.word	.L58+1
 935              	.L48:
 405:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   {
 406:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   case HOST_IDLE :
 407:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 408:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     if (phost->device.is_connected)  
 936              		.loc 1 408 0
 937 04a0 7B68     		ldr	r3, [r7, #4]
 938 04a2 93F81E32 		ldrb	r3, [r3, #542]
 939 04a6 DBB2     		uxtb	r3, r3
 940 04a8 002B     		cmp	r3, #0
 941 04aa 09D0     		beq	.L59
 409:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     {
 410:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       /* Wait for 200 ms after connection */
 411:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       phost->gState = HOST_DEV_WAIT_FOR_ATTACHMENT; 
 942              		.loc 1 411 0
 943 04ac 7B68     		ldr	r3, [r7, #4]
 944 04ae 0122     		movs	r2, #1
 945 04b0 1A70     		strb	r2, [r3]
 412:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       USBH_Delay(200); 
 946              		.loc 1 412 0
 947 04b2 C820     		movs	r0, #200
 948 04b4 FFF7FEFF 		bl	USBH_Delay
 413:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       USBH_LL_ResetPort(phost);
 949              		.loc 1 413 0
 950 04b8 7868     		ldr	r0, [r7, #4]
 951 04ba FFF7FEFF 		bl	USBH_LL_ResetPort
 414:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #if (USBH_USE_OS == 1)
 415:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       osMessagePut ( phost->os_event, USBH_PORT_EVENT, 0);
 416:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #endif
 417:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     }
 418:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     break;
 952              		.loc 1 418 0
 953 04be 60E1     		b	.L60
 954              	.L59:
 955 04c0 5FE1     		b	.L60
 956              	.L51:
 419:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 420:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   case HOST_DEV_WAIT_FOR_ATTACHMENT:
 421:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     break;    
 422:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 423:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   case HOST_DEV_ATTACHED :
 424:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     USBH_UsrLog("USB_Device_Attached");
 957              		.loc 1 424 0
 958 04c2 40F20000 		movw	r0, #:lower16:.LC9
 959 04c6 C0F20000 		movt	r0, #:upper16:.LC9
 960 04ca FFF7FEFF 		bl	printf
 961 04ce 0A20     		movs	r0, #10
 962 04d0 FFF7FEFF 		bl	putchar
 425:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 426:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     /* Wait for 100 ms after Reset */
 427:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     USBH_Delay(100);
 963              		.loc 1 427 0
 964 04d4 6420     		movs	r0, #100
 965 04d6 FFF7FEFF 		bl	USBH_Delay
 428:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****           
 429:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     phost->device.speed = USBH_LL_GetSpeed(phost);
 966              		.loc 1 429 0
 967 04da 7868     		ldr	r0, [r7, #4]
 968 04dc FFF7FEFF 		bl	USBH_LL_GetSpeed
 969 04e0 0346     		mov	r3, r0
 970 04e2 1A46     		mov	r2, r3
 971 04e4 7B68     		ldr	r3, [r7, #4]
 972 04e6 83F81D22 		strb	r2, [r3, #541]
 430:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 431:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     phost->gState = HOST_ENUMERATION;
 973              		.loc 1 431 0
 974 04ea 7B68     		ldr	r3, [r7, #4]
 975 04ec 0522     		movs	r2, #5
 976 04ee 1A70     		strb	r2, [r3]
 432:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 433:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     phost->Control.pipe_out = USBH_AllocPipe (phost, 0x00);
 977              		.loc 1 433 0
 978 04f0 7868     		ldr	r0, [r7, #4]
 979 04f2 0021     		movs	r1, #0
 980 04f4 FFF7FEFF 		bl	USBH_AllocPipe
 981 04f8 0346     		mov	r3, r0
 982 04fa 1A46     		mov	r2, r3
 983 04fc 7B68     		ldr	r3, [r7, #4]
 984 04fe 5A71     		strb	r2, [r3, #5]
 434:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     phost->Control.pipe_in  = USBH_AllocPipe (phost, 0x80);    
 985              		.loc 1 434 0
 986 0500 7868     		ldr	r0, [r7, #4]
 987 0502 8021     		movs	r1, #128
 988 0504 FFF7FEFF 		bl	USBH_AllocPipe
 989 0508 0346     		mov	r3, r0
 990 050a 1A46     		mov	r2, r3
 991 050c 7B68     		ldr	r3, [r7, #4]
 992 050e 1A71     		strb	r2, [r3, #4]
 435:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 436:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 437:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     /* Open Control pipes */
 438:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     USBH_OpenPipe (phost,
 993              		.loc 1 438 0
 994 0510 7B68     		ldr	r3, [r7, #4]
 995 0512 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 996 0514 7B68     		ldr	r3, [r7, #4]
 997 0516 93F81C32 		ldrb	r3, [r3, #540]	@ zero_extendqisi2
 998 051a 7968     		ldr	r1, [r7, #4]
 999 051c 91F81D02 		ldrb	r0, [r1, #541]	@ zero_extendqisi2
 439:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                    phost->Control.pipe_in,
 440:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                    0x80,
 441:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                    phost->device.address,
 442:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                    phost->device.speed,
 443:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                    USBH_EP_CONTROL,
 444:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                    phost->Control.pipe_size); 
 1000              		.loc 1 444 0
 1001 0520 7968     		ldr	r1, [r7, #4]
 1002 0522 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 438:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                    phost->Control.pipe_in,
 1003              		.loc 1 438 0
 1004 0524 0090     		str	r0, [sp]
 1005 0526 0020     		movs	r0, #0
 1006 0528 0190     		str	r0, [sp, #4]
 1007 052a 0291     		str	r1, [sp, #8]
 1008 052c 7868     		ldr	r0, [r7, #4]
 1009 052e 1146     		mov	r1, r2
 1010 0530 8022     		movs	r2, #128
 1011 0532 FFF7FEFF 		bl	USBH_OpenPipe
 445:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 446:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****      /* Open Control pipes */
 447:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     USBH_OpenPipe (phost,
 1012              		.loc 1 447 0
 1013 0536 7B68     		ldr	r3, [r7, #4]
 1014 0538 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 1015 053a 7B68     		ldr	r3, [r7, #4]
 1016 053c 93F81C32 		ldrb	r3, [r3, #540]	@ zero_extendqisi2
 1017 0540 7968     		ldr	r1, [r7, #4]
 1018 0542 91F81D02 		ldrb	r0, [r1, #541]	@ zero_extendqisi2
 448:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                    phost->Control.pipe_out,
 449:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                    0x00,
 450:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                    phost->device.address,
 451:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                    phost->device.speed,
 452:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                    USBH_EP_CONTROL,
 453:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                    phost->Control.pipe_size);
 1019              		.loc 1 453 0
 1020 0546 7968     		ldr	r1, [r7, #4]
 1021 0548 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 447:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                    phost->Control.pipe_out,
 1022              		.loc 1 447 0
 1023 054a 0090     		str	r0, [sp]
 1024 054c 0020     		movs	r0, #0
 1025 054e 0190     		str	r0, [sp, #4]
 1026 0550 0291     		str	r1, [sp, #8]
 1027 0552 7868     		ldr	r0, [r7, #4]
 1028 0554 1146     		mov	r1, r2
 1029 0556 0022     		movs	r2, #0
 1030 0558 FFF7FEFF 		bl	USBH_OpenPipe
 454:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 455:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 456:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #if (USBH_USE_OS == 1)
 457:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     osMessagePut ( phost->os_event, USBH_PORT_EVENT, 0);
 458:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #endif    
 459:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 460:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     break;
 1031              		.loc 1 460 0
 1032 055c 11E1     		b	.L60
 1033              	.L53:
 461:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 462:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   case HOST_ENUMERATION:     
 463:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     /* Check for enumeration status */  
 464:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     if ( USBH_HandleEnum(phost) == USBH_OK)
 1034              		.loc 1 464 0
 1035 055e 7868     		ldr	r0, [r7, #4]
 1036 0560 00F014F9 		bl	USBH_HandleEnum
 1037 0564 0346     		mov	r3, r0
 1038 0566 002B     		cmp	r3, #0
 1039 0568 22D1     		bne	.L61
 465:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     { 
 466:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       /* The function shall return USBH_OK when full enumeration is complete */
 467:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       USBH_UsrLog ("Enumeration_done.");
 1040              		.loc 1 467 0
 1041 056a 40F20000 		movw	r0, #:lower16:.LC10
 1042 056e C0F20000 		movt	r0, #:upper16:.LC10
 1043 0572 FFF7FEFF 		bl	printf
 1044 0576 0A20     		movs	r0, #10
 1045 0578 FFF7FEFF 		bl	putchar
 468:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       phost->device.current_interface = 0;
 1046              		.loc 1 468 0
 1047 057c 7B68     		ldr	r3, [r7, #4]
 1048 057e 0022     		movs	r2, #0
 1049 0580 83F81F22 		strb	r2, [r3, #543]
 469:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       if(phost->device.DevDesc.bNumConfigurations == 1)
 1050              		.loc 1 469 0
 1051 0584 7B68     		ldr	r3, [r7, #4]
 1052 0586 93F83132 		ldrb	r3, [r3, #561]	@ zero_extendqisi2
 1053 058a 012B     		cmp	r3, #1
 1054 058c 0CD1     		bne	.L62
 470:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       {
 471:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         USBH_UsrLog ("This device has only 1 configuration.");
 1055              		.loc 1 471 0
 1056 058e 40F20000 		movw	r0, #:lower16:.LC11
 1057 0592 C0F20000 		movt	r0, #:upper16:.LC11
 1058 0596 FFF7FEFF 		bl	printf
 1059 059a 0A20     		movs	r0, #10
 1060 059c FFF7FEFF 		bl	putchar
 472:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         phost->gState  = HOST_SET_CONFIGURATION;        
 1061              		.loc 1 472 0
 1062 05a0 7B68     		ldr	r3, [r7, #4]
 1063 05a2 0822     		movs	r2, #8
 1064 05a4 1A70     		strb	r2, [r3]
 1065 05a6 03E0     		b	.L61
 1066              	.L62:
 473:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         
 474:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       }
 475:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       else
 476:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       {
 477:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         phost->gState  = HOST_INPUT; 
 1067              		.loc 1 477 0
 1068 05a8 7B68     		ldr	r3, [r7, #4]
 1069 05aa 0722     		movs	r2, #7
 1070 05ac 1A70     		strb	r2, [r3]
 478:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       }
 479:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****           
 480:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     }
 481:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     break;
 1071              		.loc 1 481 0
 1072 05ae E8E0     		b	.L60
 1073              	.L61:
 1074 05b0 E7E0     		b	.L60
 1075              	.L55:
 482:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 483:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   case HOST_INPUT:
 484:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     {
 485:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       /* user callback for end of device basic enumeration */
 486:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       if(phost->pUser != NULL)
 1076              		.loc 1 486 0
 1077 05b2 7B68     		ldr	r3, [r7, #4]
 1078 05b4 D3F8C432 		ldr	r3, [r3, #708]
 1079 05b8 002B     		cmp	r3, #0
 1080 05ba 09D0     		beq	.L63
 487:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       {
 488:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         phost->pUser(phost, HOST_USER_SELECT_CONFIGURATION);
 1081              		.loc 1 488 0
 1082 05bc 7B68     		ldr	r3, [r7, #4]
 1083 05be D3F8C432 		ldr	r3, [r3, #708]
 1084 05c2 7868     		ldr	r0, [r7, #4]
 1085 05c4 0121     		movs	r1, #1
 1086 05c6 9847     		blx	r3
 489:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         phost->gState = HOST_SET_CONFIGURATION;
 1087              		.loc 1 489 0
 1088 05c8 7B68     		ldr	r3, [r7, #4]
 1089 05ca 0822     		movs	r2, #8
 1090 05cc 1A70     		strb	r2, [r3]
 490:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         
 491:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #if (USBH_USE_OS == 1)
 492:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         osMessagePut ( phost->os_event, USBH_STATE_CHANGED_EVENT, 0);
 493:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #endif         
 494:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       }
 495:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     }
 496:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     break;
 1091              		.loc 1 496 0
 1092 05ce D8E0     		b	.L60
 1093              	.L63:
 1094 05d0 D7E0     		b	.L60
 1095              	.L56:
 497:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 498:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   case HOST_SET_CONFIGURATION:
 499:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     /* set configuration */
 500:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     if (USBH_SetCfg(phost, phost->device.CfgDesc.bConfigurationValue) == USBH_OK)
 1096              		.loc 1 500 0
 1097 05d2 7B68     		ldr	r3, [r7, #4]
 1098 05d4 93F83732 		ldrb	r3, [r3, #567]	@ zero_extendqisi2
 1099 05d8 7868     		ldr	r0, [r7, #4]
 1100 05da 1946     		mov	r1, r3
 1101 05dc FFF7FEFF 		bl	USBH_SetCfg
 1102 05e0 0346     		mov	r3, r0
 1103 05e2 002B     		cmp	r3, #0
 1104 05e4 0CD1     		bne	.L64
 501:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     {
 502:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       phost->gState  = HOST_CHECK_CLASS;
 1105              		.loc 1 502 0
 1106 05e6 7B68     		ldr	r3, [r7, #4]
 1107 05e8 0922     		movs	r2, #9
 1108 05ea 1A70     		strb	r2, [r3]
 503:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       USBH_UsrLog ("Default_configuration_set.");
 1109              		.loc 1 503 0
 1110 05ec 40F20000 		movw	r0, #:lower16:.LC12
 1111 05f0 C0F20000 		movt	r0, #:upper16:.LC12
 1112 05f4 FFF7FEFF 		bl	printf
 1113 05f8 0A20     		movs	r0, #10
 1114 05fa FFF7FEFF 		bl	putchar
 504:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       
 505:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     }      
 506:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 507:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     break;
 1115              		.loc 1 507 0
 1116 05fe C0E0     		b	.L60
 1117              	.L64:
 1118 0600 BFE0     		b	.L60
 1119              	.L57:
 508:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 509:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   case HOST_CHECK_CLASS:
 510:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 511:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     if(phost->ClassNumber == 0)
 1120              		.loc 1 511 0
 1121 0602 7B68     		ldr	r3, [r7, #4]
 1122 0604 D3F87832 		ldr	r3, [r3, #632]
 1123 0608 002B     		cmp	r3, #0
 1124 060a 09D1     		bne	.L65
 512:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     {
 513:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       USBH_UsrLog ("No Class has been registered.");
 1125              		.loc 1 513 0
 1126 060c 40F20000 		movw	r0, #:lower16:.LC13
 1127 0610 C0F20000 		movt	r0, #:upper16:.LC13
 1128 0614 FFF7FEFF 		bl	printf
 1129 0618 0A20     		movs	r0, #10
 1130 061a FFF7FEFF 		bl	putchar
 1131 061e 64E0     		b	.L66
 1132              	.L65:
 514:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     }
 515:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     else
 516:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     {
 517:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       phost->pActiveClass = NULL;
 1133              		.loc 1 517 0
 1134 0620 7B68     		ldr	r3, [r7, #4]
 1135 0622 0022     		movs	r2, #0
 1136 0624 C3F87422 		str	r2, [r3, #628]
 518:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       
 519:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       for (idx = 0; idx < USBH_MAX_NUM_SUPPORTED_CLASS ; idx ++)
 1137              		.loc 1 519 0
 1138 0628 0023     		movs	r3, #0
 1139 062a FB73     		strb	r3, [r7, #15]
 1140 062c 15E0     		b	.L67
 1141              	.L69:
 520:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       {
 521:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         if(phost->pClass[idx]->ClassCode == phost->device.CfgDesc.Itf_Desc[0].bInterfaceClass)
 1142              		.loc 1 521 0
 1143 062e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1144 0630 7B68     		ldr	r3, [r7, #4]
 1145 0632 9C32     		adds	r2, r2, #156
 1146 0634 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1147 0638 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 1148 063a 7B68     		ldr	r3, [r7, #4]
 1149 063c 93F84132 		ldrb	r3, [r3, #577]	@ zero_extendqisi2
 1150 0640 9A42     		cmp	r2, r3
 1151 0642 07D1     		bne	.L68
 522:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         {
 523:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****           phost->pActiveClass = phost->pClass[idx];
 1152              		.loc 1 523 0
 1153 0644 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1154 0646 7B68     		ldr	r3, [r7, #4]
 1155 0648 9C32     		adds	r2, r2, #156
 1156 064a 53F82220 		ldr	r2, [r3, r2, lsl #2]
 1157 064e 7B68     		ldr	r3, [r7, #4]
 1158 0650 C3F87422 		str	r2, [r3, #628]
 1159              	.L68:
 519:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       {
 1160              		.loc 1 519 0
 1161 0654 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1162 0656 0133     		adds	r3, r3, #1
 1163 0658 FB73     		strb	r3, [r7, #15]
 1164              	.L67:
 519:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       {
 1165              		.loc 1 519 0 is_stmt 0 discriminator 1
 1166 065a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1167 065c 002B     		cmp	r3, #0
 1168 065e E6D0     		beq	.L69
 524:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         }
 525:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       }
 526:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       
 527:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       if(phost->pActiveClass != NULL)
 1169              		.loc 1 527 0 is_stmt 1
 1170 0660 7B68     		ldr	r3, [r7, #4]
 1171 0662 D3F87432 		ldr	r3, [r3, #628]
 1172 0666 002B     		cmp	r3, #0
 1173 0668 32D0     		beq	.L70
 528:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       {
 529:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         if(phost->pActiveClass->Init(phost)== USBH_OK)
 1174              		.loc 1 529 0
 1175 066a 7B68     		ldr	r3, [r7, #4]
 1176 066c D3F87432 		ldr	r3, [r3, #628]
 1177 0670 9B68     		ldr	r3, [r3, #8]
 1178 0672 7868     		ldr	r0, [r7, #4]
 1179 0674 9847     		blx	r3
 1180 0676 0346     		mov	r3, r0
 1181 0678 002B     		cmp	r3, #0
 1182 067a 17D1     		bne	.L71
 530:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         {
 531:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****           phost->gState  = HOST_CLASS_REQUEST; 
 1183              		.loc 1 531 0
 1184 067c 7B68     		ldr	r3, [r7, #4]
 1185 067e 0622     		movs	r2, #6
 1186 0680 1A70     		strb	r2, [r3]
 532:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****           USBH_UsrLog ("%s class started.", phost->pActiveClass->Name);
 1187              		.loc 1 532 0
 1188 0682 7B68     		ldr	r3, [r7, #4]
 1189 0684 D3F87432 		ldr	r3, [r3, #628]
 1190 0688 1B68     		ldr	r3, [r3]
 1191 068a 40F20000 		movw	r0, #:lower16:.LC14
 1192 068e C0F20000 		movt	r0, #:upper16:.LC14
 1193 0692 1946     		mov	r1, r3
 1194 0694 FFF7FEFF 		bl	printf
 1195 0698 0A20     		movs	r0, #10
 1196 069a FFF7FEFF 		bl	putchar
 533:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****           
 534:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****           /* Inform user that a class has been activated */
 535:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****           phost->pUser(phost, HOST_USER_CLASS_SELECTED);   
 1197              		.loc 1 535 0
 1198 069e 7B68     		ldr	r3, [r7, #4]
 1199 06a0 D3F8C432 		ldr	r3, [r3, #708]
 1200 06a4 7868     		ldr	r0, [r7, #4]
 1201 06a6 0321     		movs	r1, #3
 1202 06a8 9847     		blx	r3
 1203 06aa 1EE0     		b	.L66
 1204              	.L71:
 536:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         }
 537:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         else
 538:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         {
 539:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****           phost->gState  = HOST_ABORT_STATE;
 1205              		.loc 1 539 0
 1206 06ac 7B68     		ldr	r3, [r7, #4]
 1207 06ae 0C22     		movs	r2, #12
 1208 06b0 1A70     		strb	r2, [r3]
 540:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****           USBH_UsrLog ("Device not supporting %s class.", phost->pActiveClass->Name);
 1209              		.loc 1 540 0
 1210 06b2 7B68     		ldr	r3, [r7, #4]
 1211 06b4 D3F87432 		ldr	r3, [r3, #628]
 1212 06b8 1B68     		ldr	r3, [r3]
 1213 06ba 40F20000 		movw	r0, #:lower16:.LC15
 1214 06be C0F20000 		movt	r0, #:upper16:.LC15
 1215 06c2 1946     		mov	r1, r3
 1216 06c4 FFF7FEFF 		bl	printf
 1217 06c8 0A20     		movs	r0, #10
 1218 06ca FFF7FEFF 		bl	putchar
 541:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         }
 542:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       }
 543:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       else
 544:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       {
 545:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         phost->gState  = HOST_ABORT_STATE;
 546:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         USBH_UsrLog ("No registered class for this device.");
 547:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       }
 548:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     }
 549:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 550:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #if (USBH_USE_OS == 1)
 551:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     osMessagePut ( phost->os_event, USBH_STATE_CHANGED_EVENT, 0);
 552:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #endif 
 553:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     break;    
 1219              		.loc 1 553 0
 1220 06ce 58E0     		b	.L60
 1221              	.L70:
 545:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         USBH_UsrLog ("No registered class for this device.");
 1222              		.loc 1 545 0
 1223 06d0 7B68     		ldr	r3, [r7, #4]
 1224 06d2 0C22     		movs	r2, #12
 1225 06d4 1A70     		strb	r2, [r3]
 546:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       }
 1226              		.loc 1 546 0
 1227 06d6 40F20000 		movw	r0, #:lower16:.LC16
 1228 06da C0F20000 		movt	r0, #:upper16:.LC16
 1229 06de FFF7FEFF 		bl	printf
 1230 06e2 0A20     		movs	r0, #10
 1231 06e4 FFF7FEFF 		bl	putchar
 1232              		.loc 1 553 0
 1233 06e8 4BE0     		b	.L60
 1234              	.L66:
 1235 06ea 4AE0     		b	.L60
 1236              	.L54:
 554:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 555:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   case HOST_CLASS_REQUEST:  
 556:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     /* process class standard contol requests state machine */ 
 557:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 558:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     if(phost->pActiveClass != NULL)
 1237              		.loc 1 558 0
 1238 06ec 7B68     		ldr	r3, [r7, #4]
 1239 06ee D3F87432 		ldr	r3, [r3, #628]
 1240 06f2 002B     		cmp	r3, #0
 1241 06f4 0FD0     		beq	.L73
 559:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     {
 560:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       status = phost->pActiveClass->Requests(phost);
 1242              		.loc 1 560 0
 1243 06f6 7B68     		ldr	r3, [r7, #4]
 1244 06f8 D3F87432 		ldr	r3, [r3, #628]
 1245 06fc 1B69     		ldr	r3, [r3, #16]
 1246 06fe 7868     		ldr	r0, [r7, #4]
 1247 0700 9847     		blx	r3
 1248 0702 0346     		mov	r3, r0
 1249 0704 BB73     		strb	r3, [r7, #14]
 561:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       
 562:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       if(status == USBH_OK)
 1250              		.loc 1 562 0
 1251 0706 BB7B     		ldrb	r3, [r7, #14]
 1252 0708 DBB2     		uxtb	r3, r3
 1253 070a 002B     		cmp	r3, #0
 1254 070c 16D1     		bne	.L75
 563:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       {
 564:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         phost->gState  = HOST_CLASS;        
 1255              		.loc 1 564 0
 1256 070e 7B68     		ldr	r3, [r7, #4]
 1257 0710 0A22     		movs	r2, #10
 1258 0712 1A70     		strb	r2, [r3]
 565:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       }  
 566:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     }
 567:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     else
 568:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     {
 569:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       phost->gState  = HOST_ABORT_STATE;
 570:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       USBH_ErrLog ("Invalid Class Driver.");
 571:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 572:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #if (USBH_USE_OS == 1)
 573:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     osMessagePut ( phost->os_event, USBH_STATE_CHANGED_EVENT, 0);
 574:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #endif       
 575:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     }
 576:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 577:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     break;    
 1259              		.loc 1 577 0
 1260 0714 35E0     		b	.L60
 1261              	.L73:
 569:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       USBH_ErrLog ("Invalid Class Driver.");
 1262              		.loc 1 569 0
 1263 0716 7B68     		ldr	r3, [r7, #4]
 1264 0718 0C22     		movs	r2, #12
 1265 071a 1A70     		strb	r2, [r3]
 570:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 1266              		.loc 1 570 0
 1267 071c 40F20000 		movw	r0, #:lower16:.LC0
 1268 0720 C0F20000 		movt	r0, #:upper16:.LC0
 1269 0724 FFF7FEFF 		bl	printf
 1270 0728 40F20000 		movw	r0, #:lower16:.LC17
 1271 072c C0F20000 		movt	r0, #:upper16:.LC17
 1272 0730 FFF7FEFF 		bl	printf
 1273 0734 0A20     		movs	r0, #10
 1274 0736 FFF7FEFF 		bl	putchar
 1275              		.loc 1 577 0
 1276 073a 22E0     		b	.L60
 1277              	.L75:
 1278 073c 21E0     		b	.L60
 1279              	.L58:
 578:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   case HOST_CLASS:
 579:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 580:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     /* process class state machine */
 581:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     if(phost->pActiveClass != NULL)
 1280              		.loc 1 581 0
 1281 073e 7B68     		ldr	r3, [r7, #4]
 1282 0740 D3F87432 		ldr	r3, [r3, #628]
 1283 0744 002B     		cmp	r3, #0
 1284 0746 06D0     		beq	.L76
 582:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     { 
 583:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       phost->pActiveClass->BgndProcess(phost);
 1285              		.loc 1 583 0
 1286 0748 7B68     		ldr	r3, [r7, #4]
 1287 074a D3F87432 		ldr	r3, [r3, #628]
 1288 074e 5B69     		ldr	r3, [r3, #20]
 1289 0750 7868     		ldr	r0, [r7, #4]
 1290 0752 9847     		blx	r3
 584:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     }
 585:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     break;       
 1291              		.loc 1 585 0
 1292 0754 15E0     		b	.L60
 1293              	.L76:
 1294 0756 14E0     		b	.L60
 1295              	.L52:
 586:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 587:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   case HOST_DEV_DISCONNECTED :
 588:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 589:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     DeInitStateMachine(phost);  
 1296              		.loc 1 589 0
 1297 0758 7868     		ldr	r0, [r7, #4]
 1298 075a FFF7A5FC 		bl	DeInitStateMachine
 590:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 591:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     /* Re-Initilaize Host for new Enumeration */
 592:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     if(phost->pActiveClass != NULL)
 1299              		.loc 1 592 0
 1300 075e 7B68     		ldr	r3, [r7, #4]
 1301 0760 D3F87432 		ldr	r3, [r3, #628]
 1302 0764 002B     		cmp	r3, #0
 1303 0766 0AD0     		beq	.L77
 593:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     {
 594:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       phost->pActiveClass->DeInit(phost); 
 1304              		.loc 1 594 0
 1305 0768 7B68     		ldr	r3, [r7, #4]
 1306 076a D3F87432 		ldr	r3, [r3, #628]
 1307 076e DB68     		ldr	r3, [r3, #12]
 1308 0770 7868     		ldr	r0, [r7, #4]
 1309 0772 9847     		blx	r3
 595:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       phost->pActiveClass = NULL;
 1310              		.loc 1 595 0
 1311 0774 7B68     		ldr	r3, [r7, #4]
 1312 0776 0022     		movs	r2, #0
 1313 0778 C3F87422 		str	r2, [r3, #628]
 596:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     }     
 597:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     break;
 1314              		.loc 1 597 0
 1315 077c 01E0     		b	.L60
 1316              	.L77:
 1317 077e 00E0     		b	.L60
 1318              	.L79:
 598:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 599:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   case HOST_ABORT_STATE:
 600:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   default :
 601:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     break;
 1319              		.loc 1 601 0
 1320 0780 00BF     		nop
 1321              	.L60:
 602:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   }
 603:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****  return USBH_OK;  
 1322              		.loc 1 603 0
 1323 0782 0023     		movs	r3, #0
 604:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** }
 1324              		.loc 1 604 0
 1325 0784 1846     		mov	r0, r3
 1326 0786 1037     		adds	r7, r7, #16
 1327 0788 BD46     		mov	sp, r7
 1328              		@ sp needed
 1329 078a 80BD     		pop	{r7, pc}
 1330              		.cfi_endproc
 1331              	.LFE66:
 1333              		.section	.rodata
 1334 01be 0000     		.align	2
 1335              	.LC18:
 1336 01c0 5049443A 		.ascii	"PID: %xh\000"
 1336      20257868 
 1336      00
 1337 01c9 000000   		.align	2
 1338              	.LC19:
 1339 01cc 5649443A 		.ascii	"VID: %xh\000"
 1339      20257868 
 1339      00
 1340 01d5 000000   		.align	2
 1341              	.LC20:
 1342 01d8 41646472 		.ascii	"Address (#%d) assigned.\000"
 1342      65737320 
 1342      28232564 
 1342      29206173 
 1342      7369676E 
 1343              		.align	2
 1344              	.LC21:
 1345 01f0 4D616E75 		.ascii	"Manufacturer : %s\000"
 1345      66616374 
 1345      75726572 
 1345      203A2025 
 1345      7300
 1346 0202 0000     		.align	2
 1347              	.LC22:
 1348 0204 4D616E75 		.ascii	"Manufacturer : N/A\000"
 1348      66616374 
 1348      75726572 
 1348      203A204E 
 1348      2F4100
 1349 0217 00       		.align	2
 1350              	.LC23:
 1351 0218 50726F64 		.ascii	"Product : %s\000"
 1351      75637420 
 1351      3A202573 
 1351      00
 1352 0225 000000   		.align	2
 1353              	.LC24:
 1354 0228 50726F64 		.ascii	"Product : N/A\000"
 1354      75637420 
 1354      3A204E2F 
 1354      4100
 1355 0236 0000     		.align	2
 1356              	.LC25:
 1357 0238 53657269 		.ascii	"Serial Number : %s\000"
 1357      616C204E 
 1357      756D6265 
 1357      72203A20 
 1357      257300
 1358 024b 00       		.align	2
 1359              	.LC26:
 1360 024c 53657269 		.ascii	"Serial Number : N/A\000"
 1360      616C204E 
 1360      756D6265 
 1360      72203A20 
 1360      4E2F4100 
 1361              		.text
 1362              		.align	2
 1363              		.thumb
 1364              		.thumb_func
 1366              	USBH_HandleEnum:
 1367              	.LFB67:
 605:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 606:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 607:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /**
 608:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @brief  USBH_HandleEnum 
 609:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *         This function includes the complete enumeration process
 610:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  phost: Host Handle
 611:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @retval USBH_Status
 612:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */
 613:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** static USBH_StatusTypeDef USBH_HandleEnum (USBH_HandleTypeDef *phost)
 614:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** {
 1368              		.loc 1 614 0
 1369              		.cfi_startproc
 1370              		@ args = 0, pretend = 0, frame = 16
 1371              		@ frame_needed = 1, uses_anonymous_args = 0
 1372 078c 80B5     		push	{r7, lr}
 1373              		.cfi_def_cfa_offset 8
 1374              		.cfi_offset 7, -8
 1375              		.cfi_offset 14, -4
 1376 078e 88B0     		sub	sp, sp, #32
 1377              		.cfi_def_cfa_offset 40
 1378 0790 04AF     		add	r7, sp, #16
 1379              		.cfi_def_cfa 7, 24
 1380 0792 7860     		str	r0, [r7, #4]
 615:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   USBH_StatusTypeDef Status = USBH_BUSY;  
 1381              		.loc 1 615 0
 1382 0794 0123     		movs	r3, #1
 1383 0796 FB73     		strb	r3, [r7, #15]
 616:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 617:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   switch (phost->EnumState)
 1384              		.loc 1 617 0
 1385 0798 7B68     		ldr	r3, [r7, #4]
 1386 079a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1387 079c 072B     		cmp	r3, #7
 1388 079e 00F26281 		bhi	.L107
 1389 07a2 01A2     		adr	r2, .L83
 1390 07a4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1391              		.p2align 2
 1392              	.L83:
 1393 07a8 C9070000 		.word	.L82+1
 1394 07ac 37080000 		.word	.L84+1
 1395 07b0 83080000 		.word	.L85+1
 1396 07b4 0F090000 		.word	.L86+1
 1397 07b8 27090000 		.word	.L87+1
 1398 07bc 45090000 		.word	.L88+1
 1399 07c0 A7090000 		.word	.L89+1
 1400 07c4 090A0000 		.word	.L90+1
 1401              	.L82:
 618:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   {
 619:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   case ENUM_IDLE:  
 620:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     /* Get Device Desc for only 1st 8 bytes : To get EP0 MaxPacketSize */
 621:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     if ( USBH_Get_DevDesc(phost, 8) == USBH_OK)
 1402              		.loc 1 621 0
 1403 07c8 7868     		ldr	r0, [r7, #4]
 1404 07ca 0821     		movs	r1, #8
 1405 07cc FFF7FEFF 		bl	USBH_Get_DevDesc
 1406 07d0 0346     		mov	r3, r0
 1407 07d2 002B     		cmp	r3, #0
 1408 07d4 2ED1     		bne	.L91
 622:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     {
 623:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       phost->Control.pipe_size = phost->device.DevDesc.bMaxPacketSize;
 1409              		.loc 1 623 0
 1410 07d6 7B68     		ldr	r3, [r7, #4]
 1411 07d8 93F82722 		ldrb	r2, [r3, #551]	@ zero_extendqisi2
 1412 07dc 7B68     		ldr	r3, [r7, #4]
 1413 07de 9A71     		strb	r2, [r3, #6]
 624:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 625:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       phost->EnumState = ENUM_GET_FULL_DEV_DESC;
 1414              		.loc 1 625 0
 1415 07e0 7B68     		ldr	r3, [r7, #4]
 1416 07e2 0122     		movs	r2, #1
 1417 07e4 5A70     		strb	r2, [r3, #1]
 626:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       
 627:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       /* modify control channels configuration for MaxPacket size */
 628:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       USBH_OpenPipe (phost,
 1418              		.loc 1 628 0
 1419 07e6 7B68     		ldr	r3, [r7, #4]
 1420 07e8 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 1421 07ea 7B68     		ldr	r3, [r7, #4]
 1422 07ec 93F81C32 		ldrb	r3, [r3, #540]	@ zero_extendqisi2
 1423 07f0 7968     		ldr	r1, [r7, #4]
 1424 07f2 91F81D02 		ldrb	r0, [r1, #541]	@ zero_extendqisi2
 629:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            phost->Control.pipe_in,
 630:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            0x80,
 631:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            phost->device.address,
 632:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            phost->device.speed,
 633:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            USBH_EP_CONTROL,
 634:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            phost->Control.pipe_size); 
 1425              		.loc 1 634 0
 1426 07f6 7968     		ldr	r1, [r7, #4]
 1427 07f8 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 628:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            phost->Control.pipe_in,
 1428              		.loc 1 628 0
 1429 07fa 0090     		str	r0, [sp]
 1430 07fc 0020     		movs	r0, #0
 1431 07fe 0190     		str	r0, [sp, #4]
 1432 0800 0291     		str	r1, [sp, #8]
 1433 0802 7868     		ldr	r0, [r7, #4]
 1434 0804 1146     		mov	r1, r2
 1435 0806 8022     		movs	r2, #128
 1436 0808 FFF7FEFF 		bl	USBH_OpenPipe
 635:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       
 636:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       /* Open Control pipes */
 637:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       USBH_OpenPipe (phost,
 1437              		.loc 1 637 0
 1438 080c 7B68     		ldr	r3, [r7, #4]
 1439 080e 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 1440 0810 7B68     		ldr	r3, [r7, #4]
 1441 0812 93F81C32 		ldrb	r3, [r3, #540]	@ zero_extendqisi2
 1442 0816 7968     		ldr	r1, [r7, #4]
 1443 0818 91F81D02 		ldrb	r0, [r1, #541]	@ zero_extendqisi2
 638:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            phost->Control.pipe_out,
 639:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            0x00,
 640:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            phost->device.address,
 641:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            phost->device.speed,
 642:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            USBH_EP_CONTROL,
 643:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            phost->Control.pipe_size);           
 1444              		.loc 1 643 0
 1445 081c 7968     		ldr	r1, [r7, #4]
 1446 081e 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 637:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            phost->Control.pipe_out,
 1447              		.loc 1 637 0
 1448 0820 0090     		str	r0, [sp]
 1449 0822 0020     		movs	r0, #0
 1450 0824 0190     		str	r0, [sp, #4]
 1451 0826 0291     		str	r1, [sp, #8]
 1452 0828 7868     		ldr	r0, [r7, #4]
 1453 082a 1146     		mov	r1, r2
 1454 082c 0022     		movs	r2, #0
 1455 082e FFF7FEFF 		bl	USBH_OpenPipe
 644:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       
 645:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     }
 646:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     break;
 1456              		.loc 1 646 0
 1457 0832 19E1     		b	.L92
 1458              	.L91:
 1459 0834 18E1     		b	.L92
 1460              	.L84:
 647:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 648:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   case ENUM_GET_FULL_DEV_DESC:  
 649:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     /* Get FULL Device Desc  */
 650:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     if ( USBH_Get_DevDesc(phost, USB_DEVICE_DESC_SIZE)== USBH_OK)
 1461              		.loc 1 650 0
 1462 0836 7868     		ldr	r0, [r7, #4]
 1463 0838 1221     		movs	r1, #18
 1464 083a FFF7FEFF 		bl	USBH_Get_DevDesc
 1465 083e 0346     		mov	r3, r0
 1466 0840 002B     		cmp	r3, #0
 1467 0842 1DD1     		bne	.L93
 651:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     {
 652:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       USBH_UsrLog("PID: %xh", phost->device.DevDesc.idProduct );
 1468              		.loc 1 652 0
 1469 0844 7B68     		ldr	r3, [r7, #4]
 1470 0846 B3F82A32 		ldrh	r3, [r3, #554]
 1471 084a 40F20000 		movw	r0, #:lower16:.LC18
 1472 084e C0F20000 		movt	r0, #:upper16:.LC18
 1473 0852 1946     		mov	r1, r3
 1474 0854 FFF7FEFF 		bl	printf
 1475 0858 0A20     		movs	r0, #10
 1476 085a FFF7FEFF 		bl	putchar
 653:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       USBH_UsrLog("VID: %xh", phost->device.DevDesc.idVendor );  
 1477              		.loc 1 653 0
 1478 085e 7B68     		ldr	r3, [r7, #4]
 1479 0860 B3F82832 		ldrh	r3, [r3, #552]
 1480 0864 40F20000 		movw	r0, #:lower16:.LC19
 1481 0868 C0F20000 		movt	r0, #:upper16:.LC19
 1482 086c 1946     		mov	r1, r3
 1483 086e FFF7FEFF 		bl	printf
 1484 0872 0A20     		movs	r0, #10
 1485 0874 FFF7FEFF 		bl	putchar
 654:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       
 655:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       phost->EnumState = ENUM_SET_ADDR;
 1486              		.loc 1 655 0
 1487 0878 7B68     		ldr	r3, [r7, #4]
 1488 087a 0222     		movs	r2, #2
 1489 087c 5A70     		strb	r2, [r3, #1]
 656:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****        
 657:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     }
 658:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     break;
 1490              		.loc 1 658 0
 1491 087e F3E0     		b	.L92
 1492              	.L93:
 1493 0880 F2E0     		b	.L92
 1494              	.L85:
 659:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****    
 660:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   case ENUM_SET_ADDR: 
 661:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     /* set address */
 662:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     if ( USBH_SetAddress(phost, USBH_DEVICE_ADDRESS) == USBH_OK)
 1495              		.loc 1 662 0
 1496 0882 7868     		ldr	r0, [r7, #4]
 1497 0884 0121     		movs	r1, #1
 1498 0886 FFF7FEFF 		bl	USBH_SetAddress
 1499 088a 0346     		mov	r3, r0
 1500 088c 002B     		cmp	r3, #0
 1501 088e 3DD1     		bne	.L94
 663:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     {
 664:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       USBH_Delay(2);
 1502              		.loc 1 664 0
 1503 0890 0220     		movs	r0, #2
 1504 0892 FFF7FEFF 		bl	USBH_Delay
 665:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       phost->device.address = USBH_DEVICE_ADDRESS;
 1505              		.loc 1 665 0
 1506 0896 7B68     		ldr	r3, [r7, #4]
 1507 0898 0122     		movs	r2, #1
 1508 089a 83F81C22 		strb	r2, [r3, #540]
 666:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       
 667:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       /* user callback for device address assigned */
 668:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       USBH_UsrLog("Address (#%d) assigned.", phost->device.address);
 1509              		.loc 1 668 0
 1510 089e 7B68     		ldr	r3, [r7, #4]
 1511 08a0 93F81C32 		ldrb	r3, [r3, #540]	@ zero_extendqisi2
 1512 08a4 40F20000 		movw	r0, #:lower16:.LC20
 1513 08a8 C0F20000 		movt	r0, #:upper16:.LC20
 1514 08ac 1946     		mov	r1, r3
 1515 08ae FFF7FEFF 		bl	printf
 1516 08b2 0A20     		movs	r0, #10
 1517 08b4 FFF7FEFF 		bl	putchar
 669:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       phost->EnumState = ENUM_GET_CFG_DESC;
 1518              		.loc 1 669 0
 1519 08b8 7B68     		ldr	r3, [r7, #4]
 1520 08ba 0322     		movs	r2, #3
 1521 08bc 5A70     		strb	r2, [r3, #1]
 670:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       
 671:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       /* modify control channels to update device address */
 672:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       USBH_OpenPipe (phost,
 1522              		.loc 1 672 0
 1523 08be 7B68     		ldr	r3, [r7, #4]
 1524 08c0 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 1525 08c2 7B68     		ldr	r3, [r7, #4]
 1526 08c4 93F81C32 		ldrb	r3, [r3, #540]	@ zero_extendqisi2
 1527 08c8 7968     		ldr	r1, [r7, #4]
 1528 08ca 91F81D02 		ldrb	r0, [r1, #541]	@ zero_extendqisi2
 673:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            phost->Control.pipe_in,
 674:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            0x80,
 675:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            phost->device.address,
 676:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            phost->device.speed,
 677:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            USBH_EP_CONTROL,
 678:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            phost->Control.pipe_size); 
 1529              		.loc 1 678 0
 1530 08ce 7968     		ldr	r1, [r7, #4]
 1531 08d0 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 672:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            phost->Control.pipe_in,
 1532              		.loc 1 672 0
 1533 08d2 0090     		str	r0, [sp]
 1534 08d4 0020     		movs	r0, #0
 1535 08d6 0190     		str	r0, [sp, #4]
 1536 08d8 0291     		str	r1, [sp, #8]
 1537 08da 7868     		ldr	r0, [r7, #4]
 1538 08dc 1146     		mov	r1, r2
 1539 08de 8022     		movs	r2, #128
 1540 08e0 FFF7FEFF 		bl	USBH_OpenPipe
 679:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       
 680:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       /* Open Control pipes */
 681:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       USBH_OpenPipe (phost,
 1541              		.loc 1 681 0
 1542 08e4 7B68     		ldr	r3, [r7, #4]
 1543 08e6 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 1544 08e8 7B68     		ldr	r3, [r7, #4]
 1545 08ea 93F81C32 		ldrb	r3, [r3, #540]	@ zero_extendqisi2
 1546 08ee 7968     		ldr	r1, [r7, #4]
 1547 08f0 91F81D02 		ldrb	r0, [r1, #541]	@ zero_extendqisi2
 682:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            phost->Control.pipe_out,
 683:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            0x00,
 684:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            phost->device.address,
 685:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            phost->device.speed,
 686:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            USBH_EP_CONTROL,
 687:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            phost->Control.pipe_size);        
 1548              		.loc 1 687 0
 1549 08f4 7968     		ldr	r1, [r7, #4]
 1550 08f6 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 681:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                            phost->Control.pipe_out,
 1551              		.loc 1 681 0
 1552 08f8 0090     		str	r0, [sp]
 1553 08fa 0020     		movs	r0, #0
 1554 08fc 0190     		str	r0, [sp, #4]
 1555 08fe 0291     		str	r1, [sp, #8]
 1556 0900 7868     		ldr	r0, [r7, #4]
 1557 0902 1146     		mov	r1, r2
 1558 0904 0022     		movs	r2, #0
 1559 0906 FFF7FEFF 		bl	USBH_OpenPipe
 688:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     }
 689:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     break;
 1560              		.loc 1 689 0
 1561 090a ADE0     		b	.L92
 1562              	.L94:
 1563 090c ACE0     		b	.L92
 1564              	.L86:
 690:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 691:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   case ENUM_GET_CFG_DESC:  
 692:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     /* get standard configuration descriptor */
 693:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     if ( USBH_Get_CfgDesc(phost, 
 1565              		.loc 1 693 0
 1566 090e 7868     		ldr	r0, [r7, #4]
 1567 0910 0921     		movs	r1, #9
 1568 0912 FFF7FEFF 		bl	USBH_Get_CfgDesc
 1569 0916 0346     		mov	r3, r0
 1570 0918 002B     		cmp	r3, #0
 1571 091a 03D1     		bne	.L95
 694:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                           USB_CONFIGURATION_DESC_SIZE) == USBH_OK)
 695:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     {
 696:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       phost->EnumState = ENUM_GET_FULL_CFG_DESC;        
 1572              		.loc 1 696 0
 1573 091c 7B68     		ldr	r3, [r7, #4]
 1574 091e 0422     		movs	r2, #4
 1575 0920 5A70     		strb	r2, [r3, #1]
 697:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     }
 698:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     break;
 1576              		.loc 1 698 0
 1577 0922 A1E0     		b	.L92
 1578              	.L95:
 1579 0924 A0E0     		b	.L92
 1580              	.L87:
 699:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 700:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   case ENUM_GET_FULL_CFG_DESC:  
 701:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     /* get FULL config descriptor (config, interface, endpoints) */
 702:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     if (USBH_Get_CfgDesc(phost, 
 1581              		.loc 1 702 0
 1582 0926 7B68     		ldr	r3, [r7, #4]
 1583 0928 B3F83432 		ldrh	r3, [r3, #564]
 1584 092c 7868     		ldr	r0, [r7, #4]
 1585 092e 1946     		mov	r1, r3
 1586 0930 FFF7FEFF 		bl	USBH_Get_CfgDesc
 1587 0934 0346     		mov	r3, r0
 1588 0936 002B     		cmp	r3, #0
 1589 0938 03D1     		bne	.L96
 703:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                          phost->device.CfgDesc.wTotalLength) == USBH_OK)
 704:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     {
 705:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       phost->EnumState = ENUM_GET_MFC_STRING_DESC;       
 1590              		.loc 1 705 0
 1591 093a 7B68     		ldr	r3, [r7, #4]
 1592 093c 0522     		movs	r2, #5
 1593 093e 5A70     		strb	r2, [r3, #1]
 706:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     }
 707:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     break;
 1594              		.loc 1 707 0
 1595 0940 92E0     		b	.L92
 1596              	.L96:
 1597 0942 91E0     		b	.L92
 1598              	.L88:
 708:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 709:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   case ENUM_GET_MFC_STRING_DESC:  
 710:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     if (phost->device.DevDesc.iManufacturer != 0)
 1599              		.loc 1 710 0
 1600 0944 7B68     		ldr	r3, [r7, #4]
 1601 0946 93F82E32 		ldrb	r3, [r3, #558]	@ zero_extendqisi2
 1602 094a 002B     		cmp	r3, #0
 1603 094c 1DD0     		beq	.L97
 711:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     { /* Check that Manufacturer String is available */
 712:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       
 713:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       if ( USBH_Get_StringDesc(phost,
 1604              		.loc 1 713 0
 1605 094e 7B68     		ldr	r3, [r7, #4]
 1606 0950 93F82E22 		ldrb	r2, [r3, #558]	@ zero_extendqisi2
 714:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                                phost->device.DevDesc.iManufacturer, 
 715:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                                 phost->device.Data , 
 1607              		.loc 1 715 0
 1608 0954 7B68     		ldr	r3, [r7, #4]
 1609 0956 1C33     		adds	r3, r3, #28
 713:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                                phost->device.DevDesc.iManufacturer, 
 1610              		.loc 1 713 0
 1611 0958 7868     		ldr	r0, [r7, #4]
 1612 095a 1146     		mov	r1, r2
 1613 095c 1A46     		mov	r2, r3
 1614 095e FF23     		movs	r3, #255
 1615 0960 FFF7FEFF 		bl	USBH_Get_StringDesc
 1616 0964 0346     		mov	r3, r0
 1617 0966 002B     		cmp	r3, #0
 1618 0968 1CD1     		bne	.L99
 716:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                                0xff) == USBH_OK)
 717:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       {
 718:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         /* User callback for Manufacturing string */
 719:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         USBH_UsrLog("Manufacturer : %s",  (char *)phost->device.Data);
 1619              		.loc 1 719 0
 1620 096a 7B68     		ldr	r3, [r7, #4]
 1621 096c 1C33     		adds	r3, r3, #28
 1622 096e 40F20000 		movw	r0, #:lower16:.LC21
 1623 0972 C0F20000 		movt	r0, #:upper16:.LC21
 1624 0976 1946     		mov	r1, r3
 1625 0978 FFF7FEFF 		bl	printf
 1626 097c 0A20     		movs	r0, #10
 1627 097e FFF7FEFF 		bl	putchar
 720:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         phost->EnumState = ENUM_GET_PRODUCT_STRING_DESC;
 1628              		.loc 1 720 0
 1629 0982 7B68     		ldr	r3, [r7, #4]
 1630 0984 0622     		movs	r2, #6
 1631 0986 5A70     		strb	r2, [r3, #1]
 721:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         
 722:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #if (USBH_USE_OS == 1)
 723:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     osMessagePut ( phost->os_event, USBH_STATE_CHANGED_EVENT, 0);
 724:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #endif          
 725:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       }
 726:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     }
 727:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     else
 728:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     {
 729:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****      USBH_UsrLog("Manufacturer : N/A");      
 730:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****      phost->EnumState = ENUM_GET_PRODUCT_STRING_DESC; 
 731:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #if (USBH_USE_OS == 1)
 732:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     osMessagePut ( phost->os_event, USBH_STATE_CHANGED_EVENT, 0);
 733:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #endif       
 734:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     }
 735:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     break;
 1632              		.loc 1 735 0
 1633 0988 6EE0     		b	.L92
 1634              	.L97:
 729:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****      phost->EnumState = ENUM_GET_PRODUCT_STRING_DESC; 
 1635              		.loc 1 729 0
 1636 098a 40F20000 		movw	r0, #:lower16:.LC22
 1637 098e C0F20000 		movt	r0, #:upper16:.LC22
 1638 0992 FFF7FEFF 		bl	printf
 1639 0996 0A20     		movs	r0, #10
 1640 0998 FFF7FEFF 		bl	putchar
 730:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #if (USBH_USE_OS == 1)
 1641              		.loc 1 730 0
 1642 099c 7B68     		ldr	r3, [r7, #4]
 1643 099e 0622     		movs	r2, #6
 1644 09a0 5A70     		strb	r2, [r3, #1]
 1645              		.loc 1 735 0
 1646 09a2 61E0     		b	.L92
 1647              	.L99:
 1648 09a4 60E0     		b	.L92
 1649              	.L89:
 736:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 737:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   case ENUM_GET_PRODUCT_STRING_DESC:   
 738:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     if (phost->device.DevDesc.iProduct != 0)
 1650              		.loc 1 738 0
 1651 09a6 7B68     		ldr	r3, [r7, #4]
 1652 09a8 93F82F32 		ldrb	r3, [r3, #559]	@ zero_extendqisi2
 1653 09ac 002B     		cmp	r3, #0
 1654 09ae 1DD0     		beq	.L100
 739:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     { /* Check that Product string is available */
 740:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       if ( USBH_Get_StringDesc(phost,
 1655              		.loc 1 740 0
 1656 09b0 7B68     		ldr	r3, [r7, #4]
 1657 09b2 93F82F22 		ldrb	r2, [r3, #559]	@ zero_extendqisi2
 741:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                                phost->device.DevDesc.iProduct, 
 742:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                                phost->device.Data, 
 1658              		.loc 1 742 0
 1659 09b6 7B68     		ldr	r3, [r7, #4]
 1660 09b8 1C33     		adds	r3, r3, #28
 740:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                                phost->device.DevDesc.iProduct, 
 1661              		.loc 1 740 0
 1662 09ba 7868     		ldr	r0, [r7, #4]
 1663 09bc 1146     		mov	r1, r2
 1664 09be 1A46     		mov	r2, r3
 1665 09c0 FF23     		movs	r3, #255
 1666 09c2 FFF7FEFF 		bl	USBH_Get_StringDesc
 1667 09c6 0346     		mov	r3, r0
 1668 09c8 002B     		cmp	r3, #0
 1669 09ca 1CD1     		bne	.L102
 743:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                                0xff) == USBH_OK)
 744:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       {
 745:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         /* User callback for Product string */
 746:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         USBH_UsrLog("Product : %s",  (char *)phost->device.Data);
 1670              		.loc 1 746 0
 1671 09cc 7B68     		ldr	r3, [r7, #4]
 1672 09ce 1C33     		adds	r3, r3, #28
 1673 09d0 40F20000 		movw	r0, #:lower16:.LC23
 1674 09d4 C0F20000 		movt	r0, #:upper16:.LC23
 1675 09d8 1946     		mov	r1, r3
 1676 09da FFF7FEFF 		bl	printf
 1677 09de 0A20     		movs	r0, #10
 1678 09e0 FFF7FEFF 		bl	putchar
 747:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         phost->EnumState = ENUM_GET_SERIALNUM_STRING_DESC;        
 1679              		.loc 1 747 0
 1680 09e4 7B68     		ldr	r3, [r7, #4]
 1681 09e6 0722     		movs	r2, #7
 1682 09e8 5A70     		strb	r2, [r3, #1]
 748:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       }
 749:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     }
 750:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     else
 751:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     {
 752:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       USBH_UsrLog("Product : N/A");
 753:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       phost->EnumState = ENUM_GET_SERIALNUM_STRING_DESC; 
 754:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #if (USBH_USE_OS == 1)
 755:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     osMessagePut ( phost->os_event, USBH_STATE_CHANGED_EVENT, 0);
 756:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #endif        
 757:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     } 
 758:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     break;
 1683              		.loc 1 758 0
 1684 09ea 3DE0     		b	.L92
 1685              	.L100:
 752:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       phost->EnumState = ENUM_GET_SERIALNUM_STRING_DESC; 
 1686              		.loc 1 752 0
 1687 09ec 40F20000 		movw	r0, #:lower16:.LC24
 1688 09f0 C0F20000 		movt	r0, #:upper16:.LC24
 1689 09f4 FFF7FEFF 		bl	printf
 1690 09f8 0A20     		movs	r0, #10
 1691 09fa FFF7FEFF 		bl	putchar
 753:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #if (USBH_USE_OS == 1)
 1692              		.loc 1 753 0
 1693 09fe 7B68     		ldr	r3, [r7, #4]
 1694 0a00 0722     		movs	r2, #7
 1695 0a02 5A70     		strb	r2, [r3, #1]
 1696              		.loc 1 758 0
 1697 0a04 30E0     		b	.L92
 1698              	.L102:
 1699 0a06 2FE0     		b	.L92
 1700              	.L90:
 759:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 760:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   case ENUM_GET_SERIALNUM_STRING_DESC:   
 761:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     if (phost->device.DevDesc.iSerialNumber != 0)
 1701              		.loc 1 761 0
 1702 0a08 7B68     		ldr	r3, [r7, #4]
 1703 0a0a 93F83032 		ldrb	r3, [r3, #560]	@ zero_extendqisi2
 1704 0a0e 002B     		cmp	r3, #0
 1705 0a10 1CD0     		beq	.L103
 762:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     { /* Check that Serial number string is available */    
 763:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       if ( USBH_Get_StringDesc(phost,
 1706              		.loc 1 763 0
 1707 0a12 7B68     		ldr	r3, [r7, #4]
 1708 0a14 93F83022 		ldrb	r2, [r3, #560]	@ zero_extendqisi2
 764:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                                phost->device.DevDesc.iSerialNumber, 
 765:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                                phost->device.Data, 
 1709              		.loc 1 765 0
 1710 0a18 7B68     		ldr	r3, [r7, #4]
 1711 0a1a 1C33     		adds	r3, r3, #28
 763:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                                phost->device.DevDesc.iSerialNumber, 
 1712              		.loc 1 763 0
 1713 0a1c 7868     		ldr	r0, [r7, #4]
 1714 0a1e 1146     		mov	r1, r2
 1715 0a20 1A46     		mov	r2, r3
 1716 0a22 FF23     		movs	r3, #255
 1717 0a24 FFF7FEFF 		bl	USBH_Get_StringDesc
 1718 0a28 0346     		mov	r3, r0
 1719 0a2a 002B     		cmp	r3, #0
 1720 0a2c 1AD1     		bne	.L105
 766:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****                                0xff) == USBH_OK)
 767:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       {
 768:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         /* User callback for Serial number string */
 769:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****          USBH_UsrLog("Serial Number : %s",  (char *)phost->device.Data);
 1721              		.loc 1 769 0
 1722 0a2e 7B68     		ldr	r3, [r7, #4]
 1723 0a30 1C33     		adds	r3, r3, #28
 1724 0a32 40F20000 		movw	r0, #:lower16:.LC25
 1725 0a36 C0F20000 		movt	r0, #:upper16:.LC25
 1726 0a3a 1946     		mov	r1, r3
 1727 0a3c FFF7FEFF 		bl	printf
 1728 0a40 0A20     		movs	r0, #10
 1729 0a42 FFF7FEFF 		bl	putchar
 770:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****         Status = USBH_OK;
 1730              		.loc 1 770 0
 1731 0a46 0023     		movs	r3, #0
 1732 0a48 FB73     		strb	r3, [r7, #15]
 771:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       }
 772:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     }
 773:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     else
 774:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     {
 775:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       USBH_UsrLog("Serial Number : N/A"); 
 776:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       Status = USBH_OK;
 777:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #if (USBH_USE_OS == 1)
 778:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     osMessagePut ( phost->os_event, USBH_STATE_CHANGED_EVENT, 0);
 779:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #endif        
 780:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     }  
 781:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     break;
 1733              		.loc 1 781 0
 1734 0a4a 0DE0     		b	.L92
 1735              	.L103:
 775:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       Status = USBH_OK;
 1736              		.loc 1 775 0
 1737 0a4c 40F20000 		movw	r0, #:lower16:.LC26
 1738 0a50 C0F20000 		movt	r0, #:upper16:.LC26
 1739 0a54 FFF7FEFF 		bl	printf
 1740 0a58 0A20     		movs	r0, #10
 1741 0a5a FFF7FEFF 		bl	putchar
 776:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #if (USBH_USE_OS == 1)
 1742              		.loc 1 776 0
 1743 0a5e 0023     		movs	r3, #0
 1744 0a60 FB73     		strb	r3, [r7, #15]
 1745              		.loc 1 781 0
 1746 0a62 01E0     		b	.L92
 1747              	.L105:
 1748 0a64 00E0     		b	.L92
 1749              	.L107:
 782:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 783:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   default:
 784:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     break;
 1750              		.loc 1 784 0
 1751 0a66 00BF     		nop
 1752              	.L92:
 785:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   }  
 786:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   return Status;
 1753              		.loc 1 786 0
 1754 0a68 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 787:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** }
 1755              		.loc 1 787 0
 1756 0a6a 1846     		mov	r0, r3
 1757 0a6c 1037     		adds	r7, r7, #16
 1758 0a6e BD46     		mov	sp, r7
 1759              		@ sp needed
 1760 0a70 80BD     		pop	{r7, pc}
 1761              		.cfi_endproc
 1762              	.LFE67:
 1764 0a72 00BF     		.align	2
 1765              		.global	USBH_LL_SetTimer
 1766              		.thumb
 1767              		.thumb_func
 1769              	USBH_LL_SetTimer:
 1770              	.LFB68:
 788:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 789:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /**
 790:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @brief  USBH_LL_SetTimer 
 791:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *         Set the initial Host Timer tick
 792:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  phost: Host Handle
 793:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @retval None
 794:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */
 795:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** void  USBH_LL_SetTimer  (USBH_HandleTypeDef *phost, uint32_t time)
 796:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** {
 1771              		.loc 1 796 0
 1772              		.cfi_startproc
 1773              		@ args = 0, pretend = 0, frame = 8
 1774              		@ frame_needed = 1, uses_anonymous_args = 0
 1775              		@ link register save eliminated.
 1776 0a74 80B4     		push	{r7}
 1777              		.cfi_def_cfa_offset 4
 1778              		.cfi_offset 7, -4
 1779 0a76 83B0     		sub	sp, sp, #12
 1780              		.cfi_def_cfa_offset 16
 1781 0a78 00AF     		add	r7, sp, #0
 1782              		.cfi_def_cfa_register 7
 1783 0a7a 7860     		str	r0, [r7, #4]
 1784 0a7c 3960     		str	r1, [r7]
 797:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   phost->Timer = time;
 1785              		.loc 1 797 0
 1786 0a7e 7B68     		ldr	r3, [r7, #4]
 1787 0a80 3A68     		ldr	r2, [r7]
 1788 0a82 C3F8B822 		str	r2, [r3, #696]
 798:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** }
 1789              		.loc 1 798 0
 1790 0a86 0C37     		adds	r7, r7, #12
 1791 0a88 BD46     		mov	sp, r7
 1792              		@ sp needed
 1793 0a8a 5DF8047B 		ldr	r7, [sp], #4
 1794 0a8e 7047     		bx	lr
 1795              		.cfi_endproc
 1796              	.LFE68:
 1798              		.align	2
 1799              		.global	USBH_LL_IncTimer
 1800              		.thumb
 1801              		.thumb_func
 1803              	USBH_LL_IncTimer:
 1804              	.LFB69:
 799:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /**
 800:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @brief  USBH_LL_IncTimer 
 801:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *         Increment Host Timer tick
 802:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  phost: Host Handle
 803:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @retval None
 804:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */
 805:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** void  USBH_LL_IncTimer  (USBH_HandleTypeDef *phost)
 806:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** {
 1805              		.loc 1 806 0
 1806              		.cfi_startproc
 1807              		@ args = 0, pretend = 0, frame = 8
 1808              		@ frame_needed = 1, uses_anonymous_args = 0
 1809 0a90 80B5     		push	{r7, lr}
 1810              		.cfi_def_cfa_offset 8
 1811              		.cfi_offset 7, -8
 1812              		.cfi_offset 14, -4
 1813 0a92 82B0     		sub	sp, sp, #8
 1814              		.cfi_def_cfa_offset 16
 1815 0a94 00AF     		add	r7, sp, #0
 1816              		.cfi_def_cfa_register 7
 1817 0a96 7860     		str	r0, [r7, #4]
 807:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   phost->Timer ++;
 1818              		.loc 1 807 0
 1819 0a98 7B68     		ldr	r3, [r7, #4]
 1820 0a9a D3F8B832 		ldr	r3, [r3, #696]
 1821 0a9e 5A1C     		adds	r2, r3, #1
 1822 0aa0 7B68     		ldr	r3, [r7, #4]
 1823 0aa2 C3F8B822 		str	r2, [r3, #696]
 808:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   USBH_HandleSof(phost);
 1824              		.loc 1 808 0
 1825 0aa6 7868     		ldr	r0, [r7, #4]
 1826 0aa8 00F004F8 		bl	USBH_HandleSof
 809:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** }
 1827              		.loc 1 809 0
 1828 0aac 0837     		adds	r7, r7, #8
 1829 0aae BD46     		mov	sp, r7
 1830              		@ sp needed
 1831 0ab0 80BD     		pop	{r7, pc}
 1832              		.cfi_endproc
 1833              	.LFE69:
 1835 0ab2 00BF     		.align	2
 1836              		.thumb
 1837              		.thumb_func
 1839              	USBH_HandleSof:
 1840              	.LFB70:
 810:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 811:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /**
 812:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @brief  USBH_HandleSof 
 813:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *         Call SOF process
 814:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  phost: Host Handle
 815:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @retval None
 816:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */
 817:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** void  USBH_HandleSof  (USBH_HandleTypeDef *phost)
 818:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** {
 1841              		.loc 1 818 0
 1842              		.cfi_startproc
 1843              		@ args = 0, pretend = 0, frame = 8
 1844              		@ frame_needed = 1, uses_anonymous_args = 0
 1845 0ab4 80B5     		push	{r7, lr}
 1846              		.cfi_def_cfa_offset 8
 1847              		.cfi_offset 7, -8
 1848              		.cfi_offset 14, -4
 1849 0ab6 82B0     		sub	sp, sp, #8
 1850              		.cfi_def_cfa_offset 16
 1851 0ab8 00AF     		add	r7, sp, #0
 1852              		.cfi_def_cfa_register 7
 1853 0aba 7860     		str	r0, [r7, #4]
 819:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   if((phost->gState == HOST_CLASS)&&(phost->pActiveClass != NULL))
 1854              		.loc 1 819 0
 1855 0abc 7B68     		ldr	r3, [r7, #4]
 1856 0abe 1B78     		ldrb	r3, [r3]
 1857 0ac0 DBB2     		uxtb	r3, r3
 1858 0ac2 0A2B     		cmp	r3, #10
 1859 0ac4 0AD1     		bne	.L110
 1860              		.loc 1 819 0 is_stmt 0 discriminator 1
 1861 0ac6 7B68     		ldr	r3, [r7, #4]
 1862 0ac8 D3F87432 		ldr	r3, [r3, #628]
 1863 0acc 002B     		cmp	r3, #0
 1864 0ace 05D0     		beq	.L110
 820:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   {
 821:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     phost->pActiveClass->SOFProcess(phost);
 1865              		.loc 1 821 0 is_stmt 1
 1866 0ad0 7B68     		ldr	r3, [r7, #4]
 1867 0ad2 D3F87432 		ldr	r3, [r3, #628]
 1868 0ad6 9B69     		ldr	r3, [r3, #24]
 1869 0ad8 7868     		ldr	r0, [r7, #4]
 1870 0ada 9847     		blx	r3
 1871              	.L110:
 822:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   }
 823:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** }
 1872              		.loc 1 823 0
 1873 0adc 0837     		adds	r7, r7, #8
 1874 0ade BD46     		mov	sp, r7
 1875              		@ sp needed
 1876 0ae0 80BD     		pop	{r7, pc}
 1877              		.cfi_endproc
 1878              	.LFE70:
 1880 0ae2 00BF     		.align	2
 1881              		.global	USBH_LL_Connect
 1882              		.thumb
 1883              		.thumb_func
 1885              	USBH_LL_Connect:
 1886              	.LFB71:
 824:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /**
 825:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @brief  USBH_LL_Connect 
 826:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *         Handle USB Host connexion event
 827:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  phost: Host Handle
 828:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @retval USBH_Status
 829:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */
 830:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** USBH_StatusTypeDef  USBH_LL_Connect  (USBH_HandleTypeDef *phost)
 831:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** {
 1887              		.loc 1 831 0
 1888              		.cfi_startproc
 1889              		@ args = 0, pretend = 0, frame = 8
 1890              		@ frame_needed = 1, uses_anonymous_args = 0
 1891 0ae4 80B5     		push	{r7, lr}
 1892              		.cfi_def_cfa_offset 8
 1893              		.cfi_offset 7, -8
 1894              		.cfi_offset 14, -4
 1895 0ae6 82B0     		sub	sp, sp, #8
 1896              		.cfi_def_cfa_offset 16
 1897 0ae8 00AF     		add	r7, sp, #0
 1898              		.cfi_def_cfa_register 7
 1899 0aea 7860     		str	r0, [r7, #4]
 832:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   if(phost->gState == HOST_IDLE )
 1900              		.loc 1 832 0
 1901 0aec 7B68     		ldr	r3, [r7, #4]
 1902 0aee 1B78     		ldrb	r3, [r3]
 1903 0af0 DBB2     		uxtb	r3, r3
 1904 0af2 002B     		cmp	r3, #0
 1905 0af4 12D1     		bne	.L113
 833:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   {
 834:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     phost->device.is_connected = 1;
 1906              		.loc 1 834 0
 1907 0af6 7B68     		ldr	r3, [r7, #4]
 1908 0af8 0122     		movs	r2, #1
 1909 0afa 83F81E22 		strb	r2, [r3, #542]
 835:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     phost->gState = HOST_IDLE ;
 1910              		.loc 1 835 0
 1911 0afe 7B68     		ldr	r3, [r7, #4]
 1912 0b00 0022     		movs	r2, #0
 1913 0b02 1A70     		strb	r2, [r3]
 836:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     
 837:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     if(phost->pUser != NULL)
 1914              		.loc 1 837 0
 1915 0b04 7B68     		ldr	r3, [r7, #4]
 1916 0b06 D3F8C432 		ldr	r3, [r3, #708]
 1917 0b0a 002B     		cmp	r3, #0
 1918 0b0c 0ED0     		beq	.L115
 838:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     {    
 839:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****       phost->pUser(phost, HOST_USER_CONNECTION);
 1919              		.loc 1 839 0
 1920 0b0e 7B68     		ldr	r3, [r7, #4]
 1921 0b10 D3F8C432 		ldr	r3, [r3, #708]
 1922 0b14 7868     		ldr	r0, [r7, #4]
 1923 0b16 0421     		movs	r1, #4
 1924 0b18 9847     		blx	r3
 1925 0b1a 07E0     		b	.L115
 1926              	.L113:
 840:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     }
 841:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   } 
 842:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   else if(phost->gState == HOST_DEV_WAIT_FOR_ATTACHMENT )
 1927              		.loc 1 842 0
 1928 0b1c 7B68     		ldr	r3, [r7, #4]
 1929 0b1e 1B78     		ldrb	r3, [r3]
 1930 0b20 DBB2     		uxtb	r3, r3
 1931 0b22 012B     		cmp	r3, #1
 1932 0b24 02D1     		bne	.L115
 843:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   {
 844:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     phost->gState = HOST_DEV_ATTACHED ;
 1933              		.loc 1 844 0
 1934 0b26 7B68     		ldr	r3, [r7, #4]
 1935 0b28 0222     		movs	r2, #2
 1936 0b2a 1A70     		strb	r2, [r3]
 1937              	.L115:
 845:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   }
 846:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #if (USBH_USE_OS == 1)
 847:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   osMessagePut ( phost->os_event, USBH_PORT_EVENT, 0);
 848:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #endif 
 849:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 850:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   return USBH_OK;
 1938              		.loc 1 850 0
 1939 0b2c 0023     		movs	r3, #0
 851:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** }
 1940              		.loc 1 851 0
 1941 0b2e 1846     		mov	r0, r3
 1942 0b30 0837     		adds	r7, r7, #8
 1943 0b32 BD46     		mov	sp, r7
 1944              		@ sp needed
 1945 0b34 80BD     		pop	{r7, pc}
 1946              		.cfi_endproc
 1947              	.LFE71:
 1949              		.section	.rodata
 1950              		.align	2
 1951              	.LC27:
 1952 0260 5553425F 		.ascii	"USB_Device_disconnected\000"
 1952      44657669 
 1952      63655F64 
 1952      6973636F 
 1952      6E6E6563 
 1953              		.text
 1954 0b36 00BF     		.align	2
 1955              		.global	USBH_LL_Disconnect
 1956              		.thumb
 1957              		.thumb_func
 1959              	USBH_LL_Disconnect:
 1960              	.LFB72:
 852:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** 
 853:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** /**
 854:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @brief  USBH_LL_Disconnect 
 855:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   *         Handle USB Host disconnexion event
 856:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @param  phost: Host Handle
 857:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   * @retval USBH_Status
 858:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   */
 859:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** USBH_StatusTypeDef  USBH_LL_Disconnect  (USBH_HandleTypeDef *phost)
 860:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** {
 1961              		.loc 1 860 0
 1962              		.cfi_startproc
 1963              		@ args = 0, pretend = 0, frame = 8
 1964              		@ frame_needed = 1, uses_anonymous_args = 0
 1965 0b38 80B5     		push	{r7, lr}
 1966              		.cfi_def_cfa_offset 8
 1967              		.cfi_offset 7, -8
 1968              		.cfi_offset 14, -4
 1969 0b3a 82B0     		sub	sp, sp, #8
 1970              		.cfi_def_cfa_offset 16
 1971 0b3c 00AF     		add	r7, sp, #0
 1972              		.cfi_def_cfa_register 7
 1973 0b3e 7860     		str	r0, [r7, #4]
 861:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   /*Stop Host */ 
 862:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   USBH_LL_Stop(phost);  
 1974              		.loc 1 862 0
 1975 0b40 7868     		ldr	r0, [r7, #4]
 1976 0b42 FFF7FEFF 		bl	USBH_LL_Stop
 863:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 864:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   /* FRee Control Pipes */
 865:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   USBH_FreePipe  (phost, phost->Control.pipe_in);
 1977              		.loc 1 865 0
 1978 0b46 7B68     		ldr	r3, [r7, #4]
 1979 0b48 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1980 0b4a 7868     		ldr	r0, [r7, #4]
 1981 0b4c 1946     		mov	r1, r3
 1982 0b4e FFF7FEFF 		bl	USBH_FreePipe
 866:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   USBH_FreePipe  (phost, phost->Control.pipe_out);  
 1983              		.loc 1 866 0
 1984 0b52 7B68     		ldr	r3, [r7, #4]
 1985 0b54 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1986 0b56 7868     		ldr	r0, [r7, #4]
 1987 0b58 1946     		mov	r1, r3
 1988 0b5a FFF7FEFF 		bl	USBH_FreePipe
 867:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****    
 868:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   phost->device.is_connected = 0; 
 1989              		.loc 1 868 0
 1990 0b5e 7B68     		ldr	r3, [r7, #4]
 1991 0b60 0022     		movs	r2, #0
 1992 0b62 83F81E22 		strb	r2, [r3, #542]
 869:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****    
 870:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   if(phost->pUser != NULL)
 1993              		.loc 1 870 0
 1994 0b66 7B68     		ldr	r3, [r7, #4]
 1995 0b68 D3F8C432 		ldr	r3, [r3, #708]
 1996 0b6c 002B     		cmp	r3, #0
 1997 0b6e 05D0     		beq	.L118
 871:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   {    
 872:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****     phost->pUser(phost, HOST_USER_DISCONNECTION);
 1998              		.loc 1 872 0
 1999 0b70 7B68     		ldr	r3, [r7, #4]
 2000 0b72 D3F8C432 		ldr	r3, [r3, #708]
 2001 0b76 7868     		ldr	r0, [r7, #4]
 2002 0b78 0521     		movs	r1, #5
 2003 0b7a 9847     		blx	r3
 2004              	.L118:
 873:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   }
 874:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   USBH_UsrLog("USB_Device_disconnected");
 2005              		.loc 1 874 0
 2006 0b7c 40F20000 		movw	r0, #:lower16:.LC27
 2007 0b80 C0F20000 		movt	r0, #:upper16:.LC27
 2008 0b84 FFF7FEFF 		bl	printf
 2009 0b88 0A20     		movs	r0, #10
 2010 0b8a FFF7FEFF 		bl	putchar
 875:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 876:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   /* Start the low level driver  */
 877:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   USBH_LL_Start(phost);
 2011              		.loc 1 877 0
 2012 0b8e 7868     		ldr	r0, [r7, #4]
 2013 0b90 FFF7FEFF 		bl	USBH_LL_Start
 878:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 879:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   phost->gState = HOST_DEV_DISCONNECTED;
 2014              		.loc 1 879 0
 2015 0b94 7B68     		ldr	r3, [r7, #4]
 2016 0b96 0322     		movs	r2, #3
 2017 0b98 1A70     		strb	r2, [r3]
 880:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 881:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #if (USBH_USE_OS == 1)
 882:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   osMessagePut ( phost->os_event, USBH_PORT_EVENT, 0);
 883:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** #endif 
 884:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   
 885:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c ****   return USBH_OK;
 2018              		.loc 1 885 0
 2019 0b9a 0023     		movs	r3, #0
 886:../tasks/usb/STM32_USB_HOST_Library/Core/Src/usbh_core.c **** }
 2020              		.loc 1 886 0
 2021 0b9c 1846     		mov	r0, r3
 2022 0b9e 0837     		adds	r7, r7, #8
 2023 0ba0 BD46     		mov	sp, r7
 2024              		@ sp needed
 2025 0ba2 80BD     		pop	{r7, pc}
 2026              		.cfi_endproc
 2027              	.LFE72:
 2029              	.Letext0:
 2030              		.file 2 "c:\\program files (x86)\\codesourcery\\arm-none-eabi\\include\\stdint.h"
 2031              		.file 3 "D:\\workspace\\console800480\\tasks\\usb\\STM32_USB_HOST_Library\\Core\\Inc/usbh_def.h"
 2032              		.file 4 "D:\\workspace\\console800480\\system/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 usbh_core.c
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:19     .rodata:00000000 $d
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:20     .rodata:00000000 .LC0
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:23     .rodata:00000008 .LC1
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:26     .text:00000000 $t
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:31     .text:00000000 USBH_Init
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:158    .text:000000a8 DeInitStateMachine
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:111    .text:00000074 USBH_DeInit
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:267    .rodata:0000001c .LC2
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:270    .rodata:00000038 .LC3
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:278    .text:0000013c USBH_RegisterClass
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:361    .rodata:00000050 .LC4
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:364    .rodata:00000070 .LC5
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:367    .rodata:00000080 .LC6
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:370    .rodata:00000090 .LC7
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:373    .rodata:000000a0 .LC8
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:381    .text:000001c8 USBH_SelectInterface
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:492    .text:000002a4 USBH_GetActiveClass
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:525    .text:000002c0 USBH_FindInterface
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:649    .text:00000360 USBH_FindInterfaceIndex
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:733    .text:000003cc USBH_Start
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:771    .text:000003ec USBH_Stop
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:821    .text:00000424 USBH_ReEnumerate
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:861    .rodata:000000c0 .LC9
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:864    .rodata:000000d4 .LC10
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:867    .rodata:000000e8 .LC11
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:870    .rodata:00000110 .LC12
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:873    .rodata:0000012c .LC13
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:876    .rodata:0000014c .LC14
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:879    .rodata:00000160 .LC15
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:882    .rodata:00000180 .LC16
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:885    .rodata:000001a8 .LC17
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:893    .text:00000450 USBH_Process
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:924    .text:00000474 $d
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:937    .text:000004a0 $t
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:1366   .text:0000078c USBH_HandleEnum
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:1335   .rodata:000001c0 .LC18
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:1338   .rodata:000001cc .LC19
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:1341   .rodata:000001d8 .LC20
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:1344   .rodata:000001f0 .LC21
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:1347   .rodata:00000204 .LC22
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:1350   .rodata:00000218 .LC23
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:1353   .rodata:00000228 .LC24
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:1356   .rodata:00000238 .LC25
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:1359   .rodata:0000024c .LC26
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:1393   .text:000007a8 $d
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:1403   .text:000007c8 $t
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:1769   .text:00000a74 USBH_LL_SetTimer
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:1803   .text:00000a90 USBH_LL_IncTimer
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:1839   .text:00000ab4 USBH_HandleSof
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:1885   .text:00000ae4 USBH_LL_Connect
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:1951   .rodata:00000260 .LC27
C:\Users\sagok\AppData\Local\Temp\ccBb7WUs.s:1959   .text:00000b38 USBH_LL_Disconnect
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.7f551ac7fcad8b79b9df4bfdaa536673
                           .group:00000000 wm4.stm32f2xx.h.57.5ec1581efc43612c411d33a8686e9ec7
                           .group:00000000 wm4.stm32f217xx.h.52.9c940d76d00294b78837dc334c172fdd
                           .group:00000000 wm4.core_cm3.h.32.49180ccb4d36cabd2d7016d2a51d91ae
                           .group:00000000 wm4.newlib.h.8.384a112feabb3bef7b573ae48cde2e3b
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4.config.h.183.aa62afef667fb61d15fa64c48beb2f14
                           .group:00000000 wm4._ansi.h.23.5644b60c990a4800b02a6e654e88f93a
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:00000000 wm4.core_cm3.h.130.63ab2348a6eed0fdb318040d970b676c
                           .group:00000000 wm4.stm32f217xx.h.978.a5c681952b2f704a0e7f2ba21d08adf5
                           .group:00000000 wm4.stm32f2xx.h.142.bc2155a1f7498bab16371e38413a9e41
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4.stddef.h.184.159df79b4ca79c76561572a55985524c
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.59.db8450f33c1f6150c0372fa1091a887a
                           .group:00000000 wm4.stddef.h.348.9a99de77b6ba3b4278b57e9cc6d6e349
                           .group:00000000 wm4.reent.h.16.567d760e6ae9ad7f917851a308bd7a57
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4.stddef.h.39.7e3d906ac58942e0b374c527445f5de5
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.5759fe41f87f5211a5952dfb1fc64f19
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.64.f9f1bb6b0d3d7e12f6a27968d859709c
                           .group:00000000 wm4.stdlib.h.18.8bab2fb43ac4e90235390733c30a4530
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.55.7091a050e07f1c4abd225630fe3d62f1
                           .group:00000000 wm4.cdefs.h.56.efab90f4d89fbc41d6b3a5c5fb0d3d0f
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.string.h.126.6ff3aa59129e7f66b2c273baf353e066
                           .group:00000000 wm4.LEDs.h.9.36ffa4b30bd168dc58d64fa6e53a9a30
                           .group:00000000 wm4.usbh_conf.h.41.d72a4a1e5e10d8f062cf3fa4bcd8aa54
                           .group:00000000 wm4.usbh_def.h.42.a34fe1f5dab2cebf8fac0e0ec6a7c913
                           .group:00000000 wm4.usbh_ioreq.h.53.3586266a62e1adb6014256f47bfe28ae
                           .group:00000000 wm4.usbh_ctlreq.h.30.baf76fe1032fc0ccc3b759e321acc69d
                           .group:00000000 wm4.usbh_core.h.60.126ed10f424484efe8e3332cf8789488

UNDEFINED SYMBOLS
printf
putchar
USBH_LL_Init
USBH_LL_Stop
USBH_LL_Start
USBH_LL_DriverVBUS
USBH_FreePipe
USBH_Delay
USBH_LL_ResetPort
USBH_LL_GetSpeed
USBH_AllocPipe
USBH_OpenPipe
USBH_SetCfg
USBH_Get_DevDesc
USBH_SetAddress
USBH_Get_CfgDesc
USBH_Get_StringDesc
