   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"usbd_conf.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	hpcd,944,4
  19              		.align	2
  20              		.global	HAL_PCD_MspInit
  21              		.thumb
  22              		.thumb_func
  24              	HAL_PCD_MspInit:
  25              	.LFB55:
  26              		.file 1 "../tasks/usb/usbd_conf.c"
   1:../tasks/usb/usbd_conf.c **** /**
   2:../tasks/usb/usbd_conf.c ****   ******************************************************************************
   3:../tasks/usb/usbd_conf.c ****   * @file    USB_Device/HID_Standalone/Src/usbd_conf.c
   4:../tasks/usb/usbd_conf.c ****   * @author  MCD Application Team
   5:../tasks/usb/usbd_conf.c ****   * @version V1.1.0
   6:../tasks/usb/usbd_conf.c ****   * @date    13-March-2014
   7:../tasks/usb/usbd_conf.c ****   * @brief   This file implements the USB Device library callbacks and MSP
   8:../tasks/usb/usbd_conf.c ****   ******************************************************************************
   9:../tasks/usb/usbd_conf.c ****   * @attention
  10:../tasks/usb/usbd_conf.c ****   *
  11:../tasks/usb/usbd_conf.c ****   * <h2><center>&copy; COPYRIGHT(c) 2014 STMicroelectronics</center></h2>
  12:../tasks/usb/usbd_conf.c ****   *
  13:../tasks/usb/usbd_conf.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  14:../tasks/usb/usbd_conf.c ****   * You may not use this file except in compliance with the License.
  15:../tasks/usb/usbd_conf.c ****   * You may obtain a copy of the License at:
  16:../tasks/usb/usbd_conf.c ****   *
  17:../tasks/usb/usbd_conf.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  18:../tasks/usb/usbd_conf.c ****   *
  19:../tasks/usb/usbd_conf.c ****   * Unless required by applicable law or agreed to in writing, software 
  20:../tasks/usb/usbd_conf.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  21:../tasks/usb/usbd_conf.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:../tasks/usb/usbd_conf.c ****   * See the License for the specific language governing permissions and
  23:../tasks/usb/usbd_conf.c ****   * limitations under the License.
  24:../tasks/usb/usbd_conf.c ****   *
  25:../tasks/usb/usbd_conf.c ****   ******************************************************************************
  26:../tasks/usb/usbd_conf.c ****   */
  27:../tasks/usb/usbd_conf.c **** 
  28:../tasks/usb/usbd_conf.c **** /* Includes ------------------------------------------------------------------*/
  29:../tasks/usb/usbd_conf.c **** #include "stm32f2xx_hal.h"
  30:../tasks/usb/usbd_conf.c **** #include "usbd_core.h"
  31:../tasks/usb/usbd_conf.c **** /* Private typedef -----------------------------------------------------------*/
  32:../tasks/usb/usbd_conf.c **** /* Private define ------------------------------------------------------------*/
  33:../tasks/usb/usbd_conf.c **** /* Private macro -------------------------------------------------------------*/
  34:../tasks/usb/usbd_conf.c **** /* Private variables ---------------------------------------------------------*/
  35:../tasks/usb/usbd_conf.c **** PCD_HandleTypeDef hpcd;
  36:../tasks/usb/usbd_conf.c **** 
  37:../tasks/usb/usbd_conf.c **** /* Private function prototypes -----------------------------------------------*/
  38:../tasks/usb/usbd_conf.c **** /* Private functions ---------------------------------------------------------*/
  39:../tasks/usb/usbd_conf.c ****   
  40:../tasks/usb/usbd_conf.c **** /*******************************************************************************
  41:../tasks/usb/usbd_conf.c ****                        PCD BSP Routines
  42:../tasks/usb/usbd_conf.c **** *******************************************************************************/
  43:../tasks/usb/usbd_conf.c **** 
  44:../tasks/usb/usbd_conf.c **** /**
  45:../tasks/usb/usbd_conf.c ****   * @brief  Initializes the PCD MSP.
  46:../tasks/usb/usbd_conf.c ****   * @param  hpcd: PCD handle
  47:../tasks/usb/usbd_conf.c ****   * @retval None
  48:../tasks/usb/usbd_conf.c ****   */
  49:../tasks/usb/usbd_conf.c **** void HAL_PCD_MspInit(PCD_HandleTypeDef *hpcd)
  50:../tasks/usb/usbd_conf.c **** {
  27              		.loc 1 50 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              		.cfi_def_cfa_offset 40
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
  51:../tasks/usb/usbd_conf.c ****   GPIO_InitTypeDef  GPIO_InitStruct;
  52:../tasks/usb/usbd_conf.c ****   
  53:../tasks/usb/usbd_conf.c ****   if(hpcd->Instance == USB_OTG_FS)
  40              		.loc 1 53 0
  41 0008 7B68     		ldr	r3, [r7, #4]
  42 000a 1B68     		ldr	r3, [r3]
  43 000c B3F1A04F 		cmp	r3, #1342177280
  44 0010 3FD1     		bne	.L2
  54:../tasks/usb/usbd_conf.c ****   {
  55:../tasks/usb/usbd_conf.c ****     /* Configure USB FS GPIOs */
  56:../tasks/usb/usbd_conf.c ****     __GPIOA_CLK_ENABLE();
  45              		.loc 1 56 0
  46 0012 4FF46053 		mov	r3, #14336
  47 0016 C4F20203 		movt	r3, 16386
  48 001a 4FF46052 		mov	r2, #14336
  49 001e C4F20202 		movt	r2, 16386
  50 0022 126B     		ldr	r2, [r2, #48]
  51 0024 42F00102 		orr	r2, r2, #1
  52 0028 1A63     		str	r2, [r3, #48]
  57:../tasks/usb/usbd_conf.c ****     
  58:../tasks/usb/usbd_conf.c ****      /* Configure DM DP Pins */
  59:../tasks/usb/usbd_conf.c ****     GPIO_InitStruct.Pin = (GPIO_PIN_11 | GPIO_PIN_12);
  53              		.loc 1 59 0
  54 002a 4FF4C053 		mov	r3, #6144
  55 002e FB60     		str	r3, [r7, #12]
  60:../tasks/usb/usbd_conf.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  56              		.loc 1 60 0
  57 0030 0223     		movs	r3, #2
  58 0032 3B61     		str	r3, [r7, #16]
  61:../tasks/usb/usbd_conf.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  59              		.loc 1 61 0
  60 0034 0023     		movs	r3, #0
  61 0036 7B61     		str	r3, [r7, #20]
  62:../tasks/usb/usbd_conf.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
  62              		.loc 1 62 0
  63 0038 0323     		movs	r3, #3
  64 003a BB61     		str	r3, [r7, #24]
  63:../tasks/usb/usbd_conf.c ****     GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
  65              		.loc 1 63 0
  66 003c 0A23     		movs	r3, #10
  67 003e FB61     		str	r3, [r7, #28]
  64:../tasks/usb/usbd_conf.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct); 
  68              		.loc 1 64 0
  69 0040 07F10C03 		add	r3, r7, #12
  70 0044 0020     		movs	r0, #0
  71 0046 C4F20200 		movt	r0, 16386
  72 004a 1946     		mov	r1, r3
  73 004c FFF7FEFF 		bl	HAL_GPIO_Init
  65:../tasks/usb/usbd_conf.c ****     
  66:../tasks/usb/usbd_conf.c **** 	/* Configure VBUS Pin */
  67:../tasks/usb/usbd_conf.c **** //    GPIO_InitStruct.Pin = GPIO_PIN_9;
  68:../tasks/usb/usbd_conf.c **** //    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  69:../tasks/usb/usbd_conf.c **** //    GPIO_InitStruct.Pull = GPIO_NOPULL;
  70:../tasks/usb/usbd_conf.c **** //    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  71:../tasks/usb/usbd_conf.c ****     
  72:../tasks/usb/usbd_conf.c ****     /* Configure ID pin */
  73:../tasks/usb/usbd_conf.c **** //    GPIO_InitStruct.Pin = GPIO_PIN_10;
  74:../tasks/usb/usbd_conf.c **** //    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
  75:../tasks/usb/usbd_conf.c **** //    GPIO_InitStruct.Pull = GPIO_PULLUP;
  76:../tasks/usb/usbd_conf.c **** //    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
  77:../tasks/usb/usbd_conf.c **** //    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  78:../tasks/usb/usbd_conf.c **** 	
  79:../tasks/usb/usbd_conf.c ****     /* Enable USB FS Clocks */
  80:../tasks/usb/usbd_conf.c ****     __USB_OTG_FS_CLK_ENABLE();
  74              		.loc 1 80 0
  75 0050 4FF46053 		mov	r3, #14336
  76 0054 C4F20203 		movt	r3, 16386
  77 0058 4FF46052 		mov	r2, #14336
  78 005c C4F20202 		movt	r2, 16386
  79 0060 526B     		ldr	r2, [r2, #52]
  80 0062 42F08002 		orr	r2, r2, #128
  81 0066 5A63     		str	r2, [r3, #52]
  82 0068 4FF46053 		mov	r3, #14336
  83 006c C4F20203 		movt	r3, 16386
  84 0070 4FF46052 		mov	r2, #14336
  85 0074 C4F20202 		movt	r2, 16386
  86 0078 526C     		ldr	r2, [r2, #68]
  87 007a 42F48042 		orr	r2, r2, #16384
  88 007e 5A64     		str	r2, [r3, #68]
  81:../tasks/usb/usbd_conf.c **** 
  82:../tasks/usb/usbd_conf.c ****      /* Set USBFS Interrupt priority */
  83:../tasks/usb/usbd_conf.c ****     HAL_NVIC_SetPriority(OTG_FS_IRQn, 5, 0);
  89              		.loc 1 83 0
  90 0080 4320     		movs	r0, #67
  91 0082 0521     		movs	r1, #5
  92 0084 0022     		movs	r2, #0
  93 0086 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  84:../tasks/usb/usbd_conf.c ****     
  85:../tasks/usb/usbd_conf.c ****     /* Enable USBFS Interrupt */
  86:../tasks/usb/usbd_conf.c ****     HAL_NVIC_EnableIRQ(OTG_FS_IRQn);
  94              		.loc 1 86 0
  95 008a 4320     		movs	r0, #67
  96 008c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  97 0090 3AE0     		b	.L1
  98              	.L2:
  87:../tasks/usb/usbd_conf.c **** 
  88:../tasks/usb/usbd_conf.c ****    
  89:../tasks/usb/usbd_conf.c ****   } 
  90:../tasks/usb/usbd_conf.c ****   
  91:../tasks/usb/usbd_conf.c ****   else if(hpcd->Instance == USB_OTG_HS)
  99              		.loc 1 91 0
 100 0092 7B68     		ldr	r3, [r7, #4]
 101 0094 1A68     		ldr	r2, [r3]
 102 0096 0023     		movs	r3, #0
 103 0098 C4F20403 		movt	r3, 16388
 104 009c 9A42     		cmp	r2, r3
 105 009e 33D1     		bne	.L1
  92:../tasks/usb/usbd_conf.c ****   {
  93:../tasks/usb/usbd_conf.c ****     /* Configure USB FS GPIOs */
  94:../tasks/usb/usbd_conf.c ****     __GPIOB_CLK_ENABLE();
 106              		.loc 1 94 0
 107 00a0 4FF46053 		mov	r3, #14336
 108 00a4 C4F20203 		movt	r3, 16386
 109 00a8 4FF46052 		mov	r2, #14336
 110 00ac C4F20202 		movt	r2, 16386
 111 00b0 126B     		ldr	r2, [r2, #48]
 112 00b2 42F00202 		orr	r2, r2, #2
 113 00b6 1A63     		str	r2, [r3, #48]
  95:../tasks/usb/usbd_conf.c ****     
  96:../tasks/usb/usbd_conf.c ****     GPIO_InitStruct.Pin = (GPIO_PIN_14 | GPIO_PIN_15);
 114              		.loc 1 96 0
 115 00b8 4FF44043 		mov	r3, #49152
 116 00bc FB60     		str	r3, [r7, #12]
  97:../tasks/usb/usbd_conf.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 117              		.loc 1 97 0
 118 00be 0223     		movs	r3, #2
 119 00c0 3B61     		str	r3, [r7, #16]
  98:../tasks/usb/usbd_conf.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 120              		.loc 1 98 0
 121 00c2 0023     		movs	r3, #0
 122 00c4 7B61     		str	r3, [r7, #20]
  99:../tasks/usb/usbd_conf.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;//GPIO_SPEED_HIGH;
 123              		.loc 1 99 0
 124 00c6 0323     		movs	r3, #3
 125 00c8 BB61     		str	r3, [r7, #24]
 100:../tasks/usb/usbd_conf.c ****     GPIO_InitStruct.Alternate = GPIO_AF12_OTG_HS_FS;//GPIO_AF10_OTG_HS;
 126              		.loc 1 100 0
 127 00ca 0C23     		movs	r3, #12
 128 00cc FB61     		str	r3, [r7, #28]
 101:../tasks/usb/usbd_conf.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 129              		.loc 1 101 0
 130 00ce 07F10C03 		add	r3, r7, #12
 131 00d2 4FF48060 		mov	r0, #1024
 132 00d6 C4F20200 		movt	r0, 16386
 133 00da 1946     		mov	r1, r3
 134 00dc FFF7FEFF 		bl	HAL_GPIO_Init
 102:../tasks/usb/usbd_conf.c ****     
 103:../tasks/usb/usbd_conf.c ****     /* Enable USB HS Clocks */
 104:../tasks/usb/usbd_conf.c ****     __USB_OTG_HS_CLK_ENABLE();
 135              		.loc 1 104 0
 136 00e0 4FF46053 		mov	r3, #14336
 137 00e4 C4F20203 		movt	r3, 16386
 138 00e8 4FF46052 		mov	r2, #14336
 139 00ec C4F20202 		movt	r2, 16386
 140 00f0 126B     		ldr	r2, [r2, #48]
 141 00f2 42F00052 		orr	r2, r2, #536870912
 142 00f6 1A63     		str	r2, [r3, #48]
 105:../tasks/usb/usbd_conf.c **** 
 106:../tasks/usb/usbd_conf.c ****     /* Set USBHS Interrupt to the lowest priority */
 107:../tasks/usb/usbd_conf.c ****     HAL_NVIC_SetPriority(OTG_HS_IRQn, 5, 0);
 143              		.loc 1 107 0
 144 00f8 4D20     		movs	r0, #77
 145 00fa 0521     		movs	r1, #5
 146 00fc 0022     		movs	r2, #0
 147 00fe FFF7FEFF 		bl	HAL_NVIC_SetPriority
 108:../tasks/usb/usbd_conf.c ****     
 109:../tasks/usb/usbd_conf.c ****     /* Enable USBHS Interrupt */
 110:../tasks/usb/usbd_conf.c ****     HAL_NVIC_EnableIRQ(OTG_HS_IRQn);
 148              		.loc 1 110 0
 149 0102 4D20     		movs	r0, #77
 150 0104 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 151              	.L1:
 111:../tasks/usb/usbd_conf.c ****     
 112:../tasks/usb/usbd_conf.c ****   }   
 113:../tasks/usb/usbd_conf.c **** }
 152              		.loc 1 113 0
 153 0108 2037     		adds	r7, r7, #32
 154 010a BD46     		mov	sp, r7
 155              		@ sp needed
 156 010c 80BD     		pop	{r7, pc}
 157              		.cfi_endproc
 158              	.LFE55:
 160 010e 00BF     		.align	2
 161              		.global	HAL_PCD_MspDeInit
 162              		.thumb
 163              		.thumb_func
 165              	HAL_PCD_MspDeInit:
 166              	.LFB56:
 114:../tasks/usb/usbd_conf.c **** 
 115:../tasks/usb/usbd_conf.c **** /**
 116:../tasks/usb/usbd_conf.c ****   * @brief  De-Initializes the PCD MSP.
 117:../tasks/usb/usbd_conf.c ****   * @param  hpcd: PCD handle
 118:../tasks/usb/usbd_conf.c ****   * @retval None
 119:../tasks/usb/usbd_conf.c ****   */
 120:../tasks/usb/usbd_conf.c **** void HAL_PCD_MspDeInit(PCD_HandleTypeDef *hpcd)
 121:../tasks/usb/usbd_conf.c **** {
 167              		.loc 1 121 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 8
 170              		@ frame_needed = 1, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172 0110 80B4     		push	{r7}
 173              		.cfi_def_cfa_offset 4
 174              		.cfi_offset 7, -4
 175 0112 83B0     		sub	sp, sp, #12
 176              		.cfi_def_cfa_offset 16
 177 0114 00AF     		add	r7, sp, #0
 178              		.cfi_def_cfa_register 7
 179 0116 7860     		str	r0, [r7, #4]
 122:../tasks/usb/usbd_conf.c ****   if(hpcd->Instance == USB_OTG_FS)
 180              		.loc 1 122 0
 181 0118 7B68     		ldr	r3, [r7, #4]
 182 011a 1B68     		ldr	r3, [r3]
 183 011c B3F1A04F 		cmp	r3, #1342177280
 184 0120 24D1     		bne	.L5
 123:../tasks/usb/usbd_conf.c ****   {  
 124:../tasks/usb/usbd_conf.c ****     /* Disable USB FS Clocks */
 125:../tasks/usb/usbd_conf.c ****     __USB_OTG_FS_CLK_DISABLE();
 185              		.loc 1 125 0
 186 0122 4FF46053 		mov	r3, #14336
 187 0126 C4F20203 		movt	r3, 16386
 188 012a 4FF46052 		mov	r2, #14336
 189 012e C4F20202 		movt	r2, 16386
 190 0132 526B     		ldr	r2, [r2, #52]
 191 0134 22F08002 		bic	r2, r2, #128
 192 0138 5A63     		str	r2, [r3, #52]
 193 013a 4FF46053 		mov	r3, #14336
 194 013e C4F20203 		movt	r3, 16386
 195 0142 4FF46052 		mov	r2, #14336
 196 0146 C4F20202 		movt	r2, 16386
 197 014a 526C     		ldr	r2, [r2, #68]
 198 014c 22F48042 		bic	r2, r2, #16384
 199 0150 5A64     		str	r2, [r3, #68]
 126:../tasks/usb/usbd_conf.c ****     __SYSCFG_CLK_DISABLE();
 200              		.loc 1 126 0
 201 0152 4FF46053 		mov	r3, #14336
 202 0156 C4F20203 		movt	r3, 16386
 203 015a 4FF46052 		mov	r2, #14336
 204 015e C4F20202 		movt	r2, 16386
 205 0162 526C     		ldr	r2, [r2, #68]
 206 0164 22F48042 		bic	r2, r2, #16384
 207 0168 5A64     		str	r2, [r3, #68]
 208 016a 1EE0     		b	.L4
 209              	.L5:
 127:../tasks/usb/usbd_conf.c ****   }
 128:../tasks/usb/usbd_conf.c ****   else if(hpcd->Instance == USB_OTG_HS)
 210              		.loc 1 128 0
 211 016c 7B68     		ldr	r3, [r7, #4]
 212 016e 1A68     		ldr	r2, [r3]
 213 0170 0023     		movs	r3, #0
 214 0172 C4F20403 		movt	r3, 16388
 215 0176 9A42     		cmp	r2, r3
 216 0178 17D1     		bne	.L4
 129:../tasks/usb/usbd_conf.c ****   {  
 130:../tasks/usb/usbd_conf.c ****     /* Disable USB HS Clocks */
 131:../tasks/usb/usbd_conf.c ****     __USB_OTG_HS_CLK_DISABLE();
 217              		.loc 1 131 0
 218 017a 4FF46053 		mov	r3, #14336
 219 017e C4F20203 		movt	r3, 16386
 220 0182 4FF46052 		mov	r2, #14336
 221 0186 C4F20202 		movt	r2, 16386
 222 018a 126B     		ldr	r2, [r2, #48]
 223 018c 22F00052 		bic	r2, r2, #536870912
 224 0190 1A63     		str	r2, [r3, #48]
 132:../tasks/usb/usbd_conf.c ****     __SYSCFG_CLK_DISABLE();
 225              		.loc 1 132 0
 226 0192 4FF46053 		mov	r3, #14336
 227 0196 C4F20203 		movt	r3, 16386
 228 019a 4FF46052 		mov	r2, #14336
 229 019e C4F20202 		movt	r2, 16386
 230 01a2 526C     		ldr	r2, [r2, #68]
 231 01a4 22F48042 		bic	r2, r2, #16384
 232 01a8 5A64     		str	r2, [r3, #68]
 233              	.L4:
 133:../tasks/usb/usbd_conf.c ****   }  
 134:../tasks/usb/usbd_conf.c **** }
 234              		.loc 1 134 0
 235 01aa 0C37     		adds	r7, r7, #12
 236 01ac BD46     		mov	sp, r7
 237              		@ sp needed
 238 01ae 5DF8047B 		ldr	r7, [sp], #4
 239 01b2 7047     		bx	lr
 240              		.cfi_endproc
 241              	.LFE56:
 243              		.align	2
 244              		.global	HAL_PCD_SetupStageCallback
 245              		.thumb
 246              		.thumb_func
 248              	HAL_PCD_SetupStageCallback:
 249              	.LFB57:
 135:../tasks/usb/usbd_conf.c **** 
 136:../tasks/usb/usbd_conf.c **** /*******************************************************************************
 137:../tasks/usb/usbd_conf.c ****                        LL Driver Callbacks (PCD -> USB Device Library)
 138:../tasks/usb/usbd_conf.c **** *******************************************************************************/
 139:../tasks/usb/usbd_conf.c **** 
 140:../tasks/usb/usbd_conf.c **** /**
 141:../tasks/usb/usbd_conf.c ****   * @brief  SOF callback.
 142:../tasks/usb/usbd_conf.c ****   * @param  hpcd: PCD handle
 143:../tasks/usb/usbd_conf.c ****   * @retval None
 144:../tasks/usb/usbd_conf.c ****   */
 145:../tasks/usb/usbd_conf.c **** void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
 146:../tasks/usb/usbd_conf.c **** {
 250              		.loc 1 146 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 8
 253              		@ frame_needed = 1, uses_anonymous_args = 0
 254 01b4 80B5     		push	{r7, lr}
 255              		.cfi_def_cfa_offset 8
 256              		.cfi_offset 7, -8
 257              		.cfi_offset 14, -4
 258 01b6 82B0     		sub	sp, sp, #8
 259              		.cfi_def_cfa_offset 16
 260 01b8 00AF     		add	r7, sp, #0
 261              		.cfi_def_cfa_register 7
 262 01ba 7860     		str	r0, [r7, #4]
 147:../tasks/usb/usbd_conf.c ****   USBD_LL_SetupStage(hpcd->pData, (uint8_t *)hpcd->Setup);
 263              		.loc 1 147 0
 264 01bc 7B68     		ldr	r3, [r7, #4]
 265 01be D3F8AC23 		ldr	r2, [r3, #940]
 266 01c2 7B68     		ldr	r3, [r7, #4]
 267 01c4 03F55F73 		add	r3, r3, #892
 268 01c8 1046     		mov	r0, r2
 269 01ca 1946     		mov	r1, r3
 270 01cc FFF7FEFF 		bl	USBD_LL_SetupStage
 148:../tasks/usb/usbd_conf.c **** }
 271              		.loc 1 148 0
 272 01d0 0837     		adds	r7, r7, #8
 273 01d2 BD46     		mov	sp, r7
 274              		@ sp needed
 275 01d4 80BD     		pop	{r7, pc}
 276              		.cfi_endproc
 277              	.LFE57:
 279 01d6 00BF     		.align	2
 280              		.global	HAL_PCD_DataOutStageCallback
 281              		.thumb
 282              		.thumb_func
 284              	HAL_PCD_DataOutStageCallback:
 285              	.LFB58:
 149:../tasks/usb/usbd_conf.c **** 
 150:../tasks/usb/usbd_conf.c **** /**
 151:../tasks/usb/usbd_conf.c ****   * @brief  SOF callback.
 152:../tasks/usb/usbd_conf.c ****   * @param  hpcd: PCD handle
 153:../tasks/usb/usbd_conf.c ****   * @param  epnum: Endpoint Number
 154:../tasks/usb/usbd_conf.c ****   * @retval None
 155:../tasks/usb/usbd_conf.c ****   */
 156:../tasks/usb/usbd_conf.c **** void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 157:../tasks/usb/usbd_conf.c **** {
 286              		.loc 1 157 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 8
 289              		@ frame_needed = 1, uses_anonymous_args = 0
 290 01d8 80B5     		push	{r7, lr}
 291              		.cfi_def_cfa_offset 8
 292              		.cfi_offset 7, -8
 293              		.cfi_offset 14, -4
 294 01da 82B0     		sub	sp, sp, #8
 295              		.cfi_def_cfa_offset 16
 296 01dc 00AF     		add	r7, sp, #0
 297              		.cfi_def_cfa_register 7
 298 01de 7860     		str	r0, [r7, #4]
 299 01e0 0B46     		mov	r3, r1
 300 01e2 FB70     		strb	r3, [r7, #3]
 158:../tasks/usb/usbd_conf.c ****   USBD_LL_DataOutStage(hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 301              		.loc 1 158 0
 302 01e4 7B68     		ldr	r3, [r7, #4]
 303 01e6 D3F8AC13 		ldr	r1, [r3, #940]
 304 01ea FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 305 01ec 7868     		ldr	r0, [r7, #4]
 306 01ee 1346     		mov	r3, r2
 307 01f0 DB00     		lsls	r3, r3, #3
 308 01f2 9B1A     		subs	r3, r3, r2
 309 01f4 9B00     		lsls	r3, r3, #2
 310 01f6 0344     		add	r3, r3, r0
 311 01f8 03F5F073 		add	r3, r3, #480
 312 01fc 1B68     		ldr	r3, [r3]
 313 01fe FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 314 0200 0846     		mov	r0, r1
 315 0202 1146     		mov	r1, r2
 316 0204 1A46     		mov	r2, r3
 317 0206 FFF7FEFF 		bl	USBD_LL_DataOutStage
 159:../tasks/usb/usbd_conf.c **** }
 318              		.loc 1 159 0
 319 020a 0837     		adds	r7, r7, #8
 320 020c BD46     		mov	sp, r7
 321              		@ sp needed
 322 020e 80BD     		pop	{r7, pc}
 323              		.cfi_endproc
 324              	.LFE58:
 326              		.align	2
 327              		.global	HAL_PCD_DataInStageCallback
 328              		.thumb
 329              		.thumb_func
 331              	HAL_PCD_DataInStageCallback:
 332              	.LFB59:
 160:../tasks/usb/usbd_conf.c **** 
 161:../tasks/usb/usbd_conf.c **** /**
 162:../tasks/usb/usbd_conf.c ****   * @brief  SOF callback.
 163:../tasks/usb/usbd_conf.c ****   * @param  hpcd: PCD handle
 164:../tasks/usb/usbd_conf.c ****   * @param  epnum: Endpoint Number
 165:../tasks/usb/usbd_conf.c ****   * @retval None
 166:../tasks/usb/usbd_conf.c ****   */
 167:../tasks/usb/usbd_conf.c **** void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 168:../tasks/usb/usbd_conf.c **** {
 333              		.loc 1 168 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 8
 336              		@ frame_needed = 1, uses_anonymous_args = 0
 337 0210 80B5     		push	{r7, lr}
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 7, -8
 340              		.cfi_offset 14, -4
 341 0212 82B0     		sub	sp, sp, #8
 342              		.cfi_def_cfa_offset 16
 343 0214 00AF     		add	r7, sp, #0
 344              		.cfi_def_cfa_register 7
 345 0216 7860     		str	r0, [r7, #4]
 346 0218 0B46     		mov	r3, r1
 347 021a FB70     		strb	r3, [r7, #3]
 169:../tasks/usb/usbd_conf.c ****   USBD_LL_DataInStage(hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 348              		.loc 1 169 0
 349 021c 7B68     		ldr	r3, [r7, #4]
 350 021e D3F8AC13 		ldr	r1, [r3, #940]
 351 0222 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 352 0224 7868     		ldr	r0, [r7, #4]
 353 0226 1346     		mov	r3, r2
 354 0228 DB00     		lsls	r3, r3, #3
 355 022a 9B1A     		subs	r3, r3, r2
 356 022c 9B00     		lsls	r3, r3, #2
 357 022e 0344     		add	r3, r3, r0
 358 0230 3C33     		adds	r3, r3, #60
 359 0232 1B68     		ldr	r3, [r3]
 360 0234 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 361 0236 0846     		mov	r0, r1
 362 0238 1146     		mov	r1, r2
 363 023a 1A46     		mov	r2, r3
 364 023c FFF7FEFF 		bl	USBD_LL_DataInStage
 170:../tasks/usb/usbd_conf.c **** }
 365              		.loc 1 170 0
 366 0240 0837     		adds	r7, r7, #8
 367 0242 BD46     		mov	sp, r7
 368              		@ sp needed
 369 0244 80BD     		pop	{r7, pc}
 370              		.cfi_endproc
 371              	.LFE59:
 373 0246 00BF     		.align	2
 374              		.global	HAL_PCD_SOFCallback
 375              		.thumb
 376              		.thumb_func
 378              	HAL_PCD_SOFCallback:
 379              	.LFB60:
 171:../tasks/usb/usbd_conf.c **** 
 172:../tasks/usb/usbd_conf.c **** /**
 173:../tasks/usb/usbd_conf.c ****   * @brief  SOF callback.
 174:../tasks/usb/usbd_conf.c ****   * @param  hpcd: PCD handle
 175:../tasks/usb/usbd_conf.c ****   * @retval None
 176:../tasks/usb/usbd_conf.c ****   */
 177:../tasks/usb/usbd_conf.c **** void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
 178:../tasks/usb/usbd_conf.c **** {
 380              		.loc 1 178 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 8
 383              		@ frame_needed = 1, uses_anonymous_args = 0
 384 0248 80B5     		push	{r7, lr}
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 7, -8
 387              		.cfi_offset 14, -4
 388 024a 82B0     		sub	sp, sp, #8
 389              		.cfi_def_cfa_offset 16
 390 024c 00AF     		add	r7, sp, #0
 391              		.cfi_def_cfa_register 7
 392 024e 7860     		str	r0, [r7, #4]
 179:../tasks/usb/usbd_conf.c ****   USBD_LL_SOF(hpcd->pData);
 393              		.loc 1 179 0
 394 0250 7B68     		ldr	r3, [r7, #4]
 395 0252 D3F8AC33 		ldr	r3, [r3, #940]
 396 0256 1846     		mov	r0, r3
 397 0258 FFF7FEFF 		bl	USBD_LL_SOF
 180:../tasks/usb/usbd_conf.c **** }
 398              		.loc 1 180 0
 399 025c 0837     		adds	r7, r7, #8
 400 025e BD46     		mov	sp, r7
 401              		@ sp needed
 402 0260 80BD     		pop	{r7, pc}
 403              		.cfi_endproc
 404              	.LFE60:
 406 0262 00BF     		.align	2
 407              		.global	HAL_PCD_ResetCallback
 408              		.thumb
 409              		.thumb_func
 411              	HAL_PCD_ResetCallback:
 412              	.LFB61:
 181:../tasks/usb/usbd_conf.c **** 
 182:../tasks/usb/usbd_conf.c **** /**
 183:../tasks/usb/usbd_conf.c ****   * @brief  SOF callback.
 184:../tasks/usb/usbd_conf.c ****   * @param  hpcd: PCD handle
 185:../tasks/usb/usbd_conf.c ****   * @retval None
 186:../tasks/usb/usbd_conf.c ****   */
 187:../tasks/usb/usbd_conf.c **** void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
 188:../tasks/usb/usbd_conf.c **** {   
 413              		.loc 1 188 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 16
 416              		@ frame_needed = 1, uses_anonymous_args = 0
 417 0264 80B5     		push	{r7, lr}
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 7, -8
 420              		.cfi_offset 14, -4
 421 0266 84B0     		sub	sp, sp, #16
 422              		.cfi_def_cfa_offset 24
 423 0268 00AF     		add	r7, sp, #0
 424              		.cfi_def_cfa_register 7
 425 026a 7860     		str	r0, [r7, #4]
 189:../tasks/usb/usbd_conf.c ****   USBD_SpeedTypeDef speed = USBD_SPEED_FULL;
 426              		.loc 1 189 0
 427 026c 0123     		movs	r3, #1
 428 026e FB73     		strb	r3, [r7, #15]
 190:../tasks/usb/usbd_conf.c ****   
 191:../tasks/usb/usbd_conf.c ****   /* Set USB Current Speed */
 192:../tasks/usb/usbd_conf.c ****   switch(hpcd->Init.speed)
 429              		.loc 1 192 0
 430 0270 7B68     		ldr	r3, [r7, #4]
 431 0272 DB68     		ldr	r3, [r3, #12]
 432 0274 002B     		cmp	r3, #0
 433 0276 02D0     		beq	.L13
 434 0278 022B     		cmp	r3, #2
 435 027a 03D0     		beq	.L14
 436 027c 05E0     		b	.L16
 437              	.L13:
 193:../tasks/usb/usbd_conf.c ****   {
 194:../tasks/usb/usbd_conf.c ****   case PCD_SPEED_HIGH:
 195:../tasks/usb/usbd_conf.c ****     speed = USBD_SPEED_HIGH;
 438              		.loc 1 195 0
 439 027e 0023     		movs	r3, #0
 440 0280 FB73     		strb	r3, [r7, #15]
 196:../tasks/usb/usbd_conf.c ****     break;
 441              		.loc 1 196 0
 442 0282 05E0     		b	.L15
 443              	.L14:
 197:../tasks/usb/usbd_conf.c ****     
 198:../tasks/usb/usbd_conf.c ****   case PCD_SPEED_FULL:
 199:../tasks/usb/usbd_conf.c ****     speed = USBD_SPEED_FULL;
 444              		.loc 1 199 0
 445 0284 0123     		movs	r3, #1
 446 0286 FB73     		strb	r3, [r7, #15]
 200:../tasks/usb/usbd_conf.c ****     break;   
 447              		.loc 1 200 0
 448 0288 02E0     		b	.L15
 449              	.L16:
 201:../tasks/usb/usbd_conf.c ****     
 202:../tasks/usb/usbd_conf.c ****   default:
 203:../tasks/usb/usbd_conf.c ****     speed = USBD_SPEED_FULL;
 450              		.loc 1 203 0
 451 028a 0123     		movs	r3, #1
 452 028c FB73     		strb	r3, [r7, #15]
 204:../tasks/usb/usbd_conf.c ****     break;
 453              		.loc 1 204 0
 454 028e 00BF     		nop
 455              	.L15:
 205:../tasks/usb/usbd_conf.c ****   }
 206:../tasks/usb/usbd_conf.c ****   USBD_LL_SetSpeed(hpcd->pData, speed);
 456              		.loc 1 206 0
 457 0290 7B68     		ldr	r3, [r7, #4]
 458 0292 D3F8AC23 		ldr	r2, [r3, #940]
 459 0296 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 460 0298 1046     		mov	r0, r2
 461 029a 1946     		mov	r1, r3
 462 029c FFF7FEFF 		bl	USBD_LL_SetSpeed
 207:../tasks/usb/usbd_conf.c ****   /* Reset Device */
 208:../tasks/usb/usbd_conf.c ****   USBD_LL_Reset(hpcd->pData);
 463              		.loc 1 208 0
 464 02a0 7B68     		ldr	r3, [r7, #4]
 465 02a2 D3F8AC33 		ldr	r3, [r3, #940]
 466 02a6 1846     		mov	r0, r3
 467 02a8 FFF7FEFF 		bl	USBD_LL_Reset
 209:../tasks/usb/usbd_conf.c **** }
 468              		.loc 1 209 0
 469 02ac 1037     		adds	r7, r7, #16
 470 02ae BD46     		mov	sp, r7
 471              		@ sp needed
 472 02b0 80BD     		pop	{r7, pc}
 473              		.cfi_endproc
 474              	.LFE61:
 476 02b2 00BF     		.align	2
 477              		.global	HAL_PCD_SuspendCallback
 478              		.thumb
 479              		.thumb_func
 481              	HAL_PCD_SuspendCallback:
 482              	.LFB62:
 210:../tasks/usb/usbd_conf.c **** 
 211:../tasks/usb/usbd_conf.c **** /**
 212:../tasks/usb/usbd_conf.c ****   * @brief  SOF callback.
 213:../tasks/usb/usbd_conf.c ****   * @param  hpcd: PCD handle
 214:../tasks/usb/usbd_conf.c ****   * @retval None
 215:../tasks/usb/usbd_conf.c ****   */
 216:../tasks/usb/usbd_conf.c **** void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
 217:../tasks/usb/usbd_conf.c **** {
 483              		.loc 1 217 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 16
 486              		@ frame_needed = 1, uses_anonymous_args = 0
 487 02b4 80B5     		push	{r7, lr}
 488              		.cfi_def_cfa_offset 8
 489              		.cfi_offset 7, -8
 490              		.cfi_offset 14, -4
 491 02b6 84B0     		sub	sp, sp, #16
 492              		.cfi_def_cfa_offset 24
 493 02b8 00AF     		add	r7, sp, #0
 494              		.cfi_def_cfa_register 7
 495 02ba 7860     		str	r0, [r7, #4]
 218:../tasks/usb/usbd_conf.c ****     __IO uint32_t i=0;
 496              		.loc 1 218 0
 497 02bc 0023     		movs	r3, #0
 498 02be FB60     		str	r3, [r7, #12]
 219:../tasks/usb/usbd_conf.c ****  
 220:../tasks/usb/usbd_conf.c ****   if  (hpcd->Instance == USB_OTG_HS)
 499              		.loc 1 220 0
 500 02c0 7B68     		ldr	r3, [r7, #4]
 501 02c2 1A68     		ldr	r2, [r3]
 502 02c4 0023     		movs	r3, #0
 503 02c6 C4F20403 		movt	r3, 16388
 504 02ca 9A42     		cmp	r2, r3
 505 02cc 54D1     		bne	.L18
 221:../tasks/usb/usbd_conf.c ****   { 	
 222:../tasks/usb/usbd_conf.c ****     __HAL_USB_HS_EXTI_DISABLE_IT();
 506              		.loc 1 222 0
 507 02ce 4FF47053 		mov	r3, #15360
 508 02d2 C4F20103 		movt	r3, 16385
 509 02d6 4FF47052 		mov	r2, #15360
 510 02da C4F20102 		movt	r2, 16385
 511 02de 1268     		ldr	r2, [r2]
 512 02e0 22F48012 		bic	r2, r2, #1048576
 513 02e4 1A60     		str	r2, [r3]
 223:../tasks/usb/usbd_conf.c **** 
 224:../tasks/usb/usbd_conf.c ****     __HAL_PCD_GATE_PHYCLOCK(hpcd);
 514              		.loc 1 224 0
 515 02e6 7B68     		ldr	r3, [r7, #4]
 516 02e8 1B68     		ldr	r3, [r3]
 517 02ea 03F56063 		add	r3, r3, #3584
 518 02ee 7A68     		ldr	r2, [r7, #4]
 519 02f0 1268     		ldr	r2, [r2]
 520 02f2 02F56062 		add	r2, r2, #3584
 521 02f6 1268     		ldr	r2, [r2]
 522 02f8 42F00102 		orr	r2, r2, #1
 523 02fc 1A60     		str	r2, [r3]
 225:../tasks/usb/usbd_conf.c **** 
 226:../tasks/usb/usbd_conf.c ****     /*wait tiemout of 6 ULPI PHY clock ~= 18 cpu clocks @120 MHz*/
 227:../tasks/usb/usbd_conf.c ****     for (i=0; i<18; i++)
 524              		.loc 1 227 0
 525 02fe 0023     		movs	r3, #0
 526 0300 FB60     		str	r3, [r7, #12]
 527 0302 03E0     		b	.L19
 528              	.L20:
 529              	.LBB4:
 530              	.LBB5:
 531              		.file 2 "D:\\workspace\\console800480\\system/core_cmInstr.h"
   1:D:\workspace\console800480\system\core_cmInstr.h **** /**************************************************************************//**
   2:D:\workspace\console800480\system\core_cmInstr.h ****  * @file     core_cmInstr.h
   3:D:\workspace\console800480\system\core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:D:\workspace\console800480\system\core_cmInstr.h ****  * @version  V2.10
   5:D:\workspace\console800480\system\core_cmInstr.h ****  * @date     19. July 2011
   6:D:\workspace\console800480\system\core_cmInstr.h ****  *
   7:D:\workspace\console800480\system\core_cmInstr.h ****  * @note
   8:D:\workspace\console800480\system\core_cmInstr.h ****  * Copyright (C) 2009-2011 ARM Limited. All rights reserved.
   9:D:\workspace\console800480\system\core_cmInstr.h ****  *
  10:D:\workspace\console800480\system\core_cmInstr.h ****  * @par
  11:D:\workspace\console800480\system\core_cmInstr.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:D:\workspace\console800480\system\core_cmInstr.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:D:\workspace\console800480\system\core_cmInstr.h ****  * within development tools that are supporting such ARM based processors. 
  14:D:\workspace\console800480\system\core_cmInstr.h ****  *
  15:D:\workspace\console800480\system\core_cmInstr.h ****  * @par
  16:D:\workspace\console800480\system\core_cmInstr.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:D:\workspace\console800480\system\core_cmInstr.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:D:\workspace\console800480\system\core_cmInstr.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:D:\workspace\console800480\system\core_cmInstr.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:D:\workspace\console800480\system\core_cmInstr.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:D:\workspace\console800480\system\core_cmInstr.h ****  *
  22:D:\workspace\console800480\system\core_cmInstr.h ****  ******************************************************************************/
  23:D:\workspace\console800480\system\core_cmInstr.h **** 
  24:D:\workspace\console800480\system\core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  25:D:\workspace\console800480\system\core_cmInstr.h **** #define __CORE_CMINSTR_H
  26:D:\workspace\console800480\system\core_cmInstr.h **** 
  27:D:\workspace\console800480\system\core_cmInstr.h **** 
  28:D:\workspace\console800480\system\core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  29:D:\workspace\console800480\system\core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  30:D:\workspace\console800480\system\core_cmInstr.h ****   Access to dedicated instructions
  31:D:\workspace\console800480\system\core_cmInstr.h ****   @{
  32:D:\workspace\console800480\system\core_cmInstr.h **** */
  33:D:\workspace\console800480\system\core_cmInstr.h **** 
  34:D:\workspace\console800480\system\core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  35:D:\workspace\console800480\system\core_cmInstr.h **** /* ARM armcc specific functions */
  36:D:\workspace\console800480\system\core_cmInstr.h **** 
  37:D:\workspace\console800480\system\core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  38:D:\workspace\console800480\system\core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  39:D:\workspace\console800480\system\core_cmInstr.h **** #endif
  40:D:\workspace\console800480\system\core_cmInstr.h **** 
  41:D:\workspace\console800480\system\core_cmInstr.h **** 
  42:D:\workspace\console800480\system\core_cmInstr.h **** /** \brief  No Operation
  43:D:\workspace\console800480\system\core_cmInstr.h **** 
  44:D:\workspace\console800480\system\core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  45:D:\workspace\console800480\system\core_cmInstr.h ****  */
  46:D:\workspace\console800480\system\core_cmInstr.h **** #define __NOP                             __nop
  47:D:\workspace\console800480\system\core_cmInstr.h **** 
  48:D:\workspace\console800480\system\core_cmInstr.h **** 
  49:D:\workspace\console800480\system\core_cmInstr.h **** /** \brief  Wait For Interrupt
  50:D:\workspace\console800480\system\core_cmInstr.h **** 
  51:D:\workspace\console800480\system\core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  52:D:\workspace\console800480\system\core_cmInstr.h ****     until one of a number of events occurs.
  53:D:\workspace\console800480\system\core_cmInstr.h ****  */
  54:D:\workspace\console800480\system\core_cmInstr.h **** #define __WFI                             __wfi
  55:D:\workspace\console800480\system\core_cmInstr.h **** 
  56:D:\workspace\console800480\system\core_cmInstr.h **** 
  57:D:\workspace\console800480\system\core_cmInstr.h **** /** \brief  Wait For Event
  58:D:\workspace\console800480\system\core_cmInstr.h **** 
  59:D:\workspace\console800480\system\core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  60:D:\workspace\console800480\system\core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  61:D:\workspace\console800480\system\core_cmInstr.h ****  */
  62:D:\workspace\console800480\system\core_cmInstr.h **** #define __WFE                             __wfe
  63:D:\workspace\console800480\system\core_cmInstr.h **** 
  64:D:\workspace\console800480\system\core_cmInstr.h **** 
  65:D:\workspace\console800480\system\core_cmInstr.h **** /** \brief  Send Event
  66:D:\workspace\console800480\system\core_cmInstr.h **** 
  67:D:\workspace\console800480\system\core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  68:D:\workspace\console800480\system\core_cmInstr.h ****  */
  69:D:\workspace\console800480\system\core_cmInstr.h **** #define __SEV                             __sev
  70:D:\workspace\console800480\system\core_cmInstr.h **** 
  71:D:\workspace\console800480\system\core_cmInstr.h **** 
  72:D:\workspace\console800480\system\core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  73:D:\workspace\console800480\system\core_cmInstr.h **** 
  74:D:\workspace\console800480\system\core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
  75:D:\workspace\console800480\system\core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
  76:D:\workspace\console800480\system\core_cmInstr.h ****     memory, after the instruction has been completed.
  77:D:\workspace\console800480\system\core_cmInstr.h ****  */
  78:D:\workspace\console800480\system\core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  79:D:\workspace\console800480\system\core_cmInstr.h **** 
  80:D:\workspace\console800480\system\core_cmInstr.h **** 
  81:D:\workspace\console800480\system\core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  82:D:\workspace\console800480\system\core_cmInstr.h **** 
  83:D:\workspace\console800480\system\core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
  84:D:\workspace\console800480\system\core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  85:D:\workspace\console800480\system\core_cmInstr.h ****  */
  86:D:\workspace\console800480\system\core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
  87:D:\workspace\console800480\system\core_cmInstr.h **** 
  88:D:\workspace\console800480\system\core_cmInstr.h **** 
  89:D:\workspace\console800480\system\core_cmInstr.h **** /** \brief  Data Memory Barrier
  90:D:\workspace\console800480\system\core_cmInstr.h **** 
  91:D:\workspace\console800480\system\core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before 
  92:D:\workspace\console800480\system\core_cmInstr.h ****     and after the instruction, without ensuring their completion.
  93:D:\workspace\console800480\system\core_cmInstr.h ****  */
  94:D:\workspace\console800480\system\core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
  95:D:\workspace\console800480\system\core_cmInstr.h **** 
  96:D:\workspace\console800480\system\core_cmInstr.h **** 
  97:D:\workspace\console800480\system\core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
  98:D:\workspace\console800480\system\core_cmInstr.h **** 
  99:D:\workspace\console800480\system\core_cmInstr.h ****     This function reverses the byte order in integer value.
 100:D:\workspace\console800480\system\core_cmInstr.h **** 
 101:D:\workspace\console800480\system\core_cmInstr.h ****     \param [in]    value  Value to reverse
 102:D:\workspace\console800480\system\core_cmInstr.h ****     \return               Reversed value
 103:D:\workspace\console800480\system\core_cmInstr.h ****  */
 104:D:\workspace\console800480\system\core_cmInstr.h **** #define __REV                             __rev
 105:D:\workspace\console800480\system\core_cmInstr.h **** 
 106:D:\workspace\console800480\system\core_cmInstr.h **** 
 107:D:\workspace\console800480\system\core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 108:D:\workspace\console800480\system\core_cmInstr.h **** 
 109:D:\workspace\console800480\system\core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 110:D:\workspace\console800480\system\core_cmInstr.h **** 
 111:D:\workspace\console800480\system\core_cmInstr.h ****     \param [in]    value  Value to reverse
 112:D:\workspace\console800480\system\core_cmInstr.h ****     \return               Reversed value
 113:D:\workspace\console800480\system\core_cmInstr.h ****  */
 114:D:\workspace\console800480\system\core_cmInstr.h **** static __INLINE __ASM uint32_t __REV16(uint32_t value)
 115:D:\workspace\console800480\system\core_cmInstr.h **** {
 116:D:\workspace\console800480\system\core_cmInstr.h ****   rev16 r0, r0
 117:D:\workspace\console800480\system\core_cmInstr.h ****   bx lr
 118:D:\workspace\console800480\system\core_cmInstr.h **** }
 119:D:\workspace\console800480\system\core_cmInstr.h **** 
 120:D:\workspace\console800480\system\core_cmInstr.h **** 
 121:D:\workspace\console800480\system\core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 122:D:\workspace\console800480\system\core_cmInstr.h **** 
 123:D:\workspace\console800480\system\core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 124:D:\workspace\console800480\system\core_cmInstr.h **** 
 125:D:\workspace\console800480\system\core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:D:\workspace\console800480\system\core_cmInstr.h ****     \return               Reversed value
 127:D:\workspace\console800480\system\core_cmInstr.h ****  */
 128:D:\workspace\console800480\system\core_cmInstr.h **** static __INLINE __ASM int32_t __REVSH(int32_t value)
 129:D:\workspace\console800480\system\core_cmInstr.h **** {
 130:D:\workspace\console800480\system\core_cmInstr.h ****   revsh r0, r0
 131:D:\workspace\console800480\system\core_cmInstr.h ****   bx lr
 132:D:\workspace\console800480\system\core_cmInstr.h **** }
 133:D:\workspace\console800480\system\core_cmInstr.h **** 
 134:D:\workspace\console800480\system\core_cmInstr.h **** 
 135:D:\workspace\console800480\system\core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 136:D:\workspace\console800480\system\core_cmInstr.h **** 
 137:D:\workspace\console800480\system\core_cmInstr.h **** /** \brief  Reverse bit order of value
 138:D:\workspace\console800480\system\core_cmInstr.h **** 
 139:D:\workspace\console800480\system\core_cmInstr.h ****     This function reverses the bit order of the given value.
 140:D:\workspace\console800480\system\core_cmInstr.h **** 
 141:D:\workspace\console800480\system\core_cmInstr.h ****     \param [in]    value  Value to reverse
 142:D:\workspace\console800480\system\core_cmInstr.h ****     \return               Reversed value
 143:D:\workspace\console800480\system\core_cmInstr.h ****  */
 144:D:\workspace\console800480\system\core_cmInstr.h **** #define __RBIT                            __rbit
 145:D:\workspace\console800480\system\core_cmInstr.h **** 
 146:D:\workspace\console800480\system\core_cmInstr.h **** 
 147:D:\workspace\console800480\system\core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 148:D:\workspace\console800480\system\core_cmInstr.h **** 
 149:D:\workspace\console800480\system\core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 150:D:\workspace\console800480\system\core_cmInstr.h **** 
 151:D:\workspace\console800480\system\core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 152:D:\workspace\console800480\system\core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 153:D:\workspace\console800480\system\core_cmInstr.h ****  */
 154:D:\workspace\console800480\system\core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 155:D:\workspace\console800480\system\core_cmInstr.h **** 
 156:D:\workspace\console800480\system\core_cmInstr.h **** 
 157:D:\workspace\console800480\system\core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 158:D:\workspace\console800480\system\core_cmInstr.h **** 
 159:D:\workspace\console800480\system\core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 160:D:\workspace\console800480\system\core_cmInstr.h **** 
 161:D:\workspace\console800480\system\core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 162:D:\workspace\console800480\system\core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 163:D:\workspace\console800480\system\core_cmInstr.h ****  */
 164:D:\workspace\console800480\system\core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 165:D:\workspace\console800480\system\core_cmInstr.h **** 
 166:D:\workspace\console800480\system\core_cmInstr.h **** 
 167:D:\workspace\console800480\system\core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 168:D:\workspace\console800480\system\core_cmInstr.h **** 
 169:D:\workspace\console800480\system\core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 170:D:\workspace\console800480\system\core_cmInstr.h **** 
 171:D:\workspace\console800480\system\core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 172:D:\workspace\console800480\system\core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 173:D:\workspace\console800480\system\core_cmInstr.h ****  */
 174:D:\workspace\console800480\system\core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 175:D:\workspace\console800480\system\core_cmInstr.h **** 
 176:D:\workspace\console800480\system\core_cmInstr.h **** 
 177:D:\workspace\console800480\system\core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 178:D:\workspace\console800480\system\core_cmInstr.h **** 
 179:D:\workspace\console800480\system\core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 180:D:\workspace\console800480\system\core_cmInstr.h **** 
 181:D:\workspace\console800480\system\core_cmInstr.h ****     \param [in]  value  Value to store
 182:D:\workspace\console800480\system\core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 183:D:\workspace\console800480\system\core_cmInstr.h ****     \return          0  Function succeeded
 184:D:\workspace\console800480\system\core_cmInstr.h ****     \return          1  Function failed
 185:D:\workspace\console800480\system\core_cmInstr.h ****  */
 186:D:\workspace\console800480\system\core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 187:D:\workspace\console800480\system\core_cmInstr.h **** 
 188:D:\workspace\console800480\system\core_cmInstr.h **** 
 189:D:\workspace\console800480\system\core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 190:D:\workspace\console800480\system\core_cmInstr.h **** 
 191:D:\workspace\console800480\system\core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 192:D:\workspace\console800480\system\core_cmInstr.h **** 
 193:D:\workspace\console800480\system\core_cmInstr.h ****     \param [in]  value  Value to store
 194:D:\workspace\console800480\system\core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 195:D:\workspace\console800480\system\core_cmInstr.h ****     \return          0  Function succeeded
 196:D:\workspace\console800480\system\core_cmInstr.h ****     \return          1  Function failed
 197:D:\workspace\console800480\system\core_cmInstr.h ****  */
 198:D:\workspace\console800480\system\core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 199:D:\workspace\console800480\system\core_cmInstr.h **** 
 200:D:\workspace\console800480\system\core_cmInstr.h **** 
 201:D:\workspace\console800480\system\core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 202:D:\workspace\console800480\system\core_cmInstr.h **** 
 203:D:\workspace\console800480\system\core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 204:D:\workspace\console800480\system\core_cmInstr.h **** 
 205:D:\workspace\console800480\system\core_cmInstr.h ****     \param [in]  value  Value to store
 206:D:\workspace\console800480\system\core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 207:D:\workspace\console800480\system\core_cmInstr.h ****     \return          0  Function succeeded
 208:D:\workspace\console800480\system\core_cmInstr.h ****     \return          1  Function failed
 209:D:\workspace\console800480\system\core_cmInstr.h ****  */
 210:D:\workspace\console800480\system\core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 211:D:\workspace\console800480\system\core_cmInstr.h **** 
 212:D:\workspace\console800480\system\core_cmInstr.h **** 
 213:D:\workspace\console800480\system\core_cmInstr.h **** /** \brief  Remove the exclusive lock
 214:D:\workspace\console800480\system\core_cmInstr.h **** 
 215:D:\workspace\console800480\system\core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 216:D:\workspace\console800480\system\core_cmInstr.h **** 
 217:D:\workspace\console800480\system\core_cmInstr.h ****  */
 218:D:\workspace\console800480\system\core_cmInstr.h **** #define __CLREX                           __clrex
 219:D:\workspace\console800480\system\core_cmInstr.h **** 
 220:D:\workspace\console800480\system\core_cmInstr.h **** 
 221:D:\workspace\console800480\system\core_cmInstr.h **** /** \brief  Signed Saturate
 222:D:\workspace\console800480\system\core_cmInstr.h **** 
 223:D:\workspace\console800480\system\core_cmInstr.h ****     This function saturates a signed value.
 224:D:\workspace\console800480\system\core_cmInstr.h **** 
 225:D:\workspace\console800480\system\core_cmInstr.h ****     \param [in]  value  Value to be saturated
 226:D:\workspace\console800480\system\core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 227:D:\workspace\console800480\system\core_cmInstr.h ****     \return             Saturated value
 228:D:\workspace\console800480\system\core_cmInstr.h ****  */
 229:D:\workspace\console800480\system\core_cmInstr.h **** #define __SSAT                            __ssat
 230:D:\workspace\console800480\system\core_cmInstr.h **** 
 231:D:\workspace\console800480\system\core_cmInstr.h **** 
 232:D:\workspace\console800480\system\core_cmInstr.h **** /** \brief  Unsigned Saturate
 233:D:\workspace\console800480\system\core_cmInstr.h **** 
 234:D:\workspace\console800480\system\core_cmInstr.h ****     This function saturates an unsigned value.
 235:D:\workspace\console800480\system\core_cmInstr.h **** 
 236:D:\workspace\console800480\system\core_cmInstr.h ****     \param [in]  value  Value to be saturated
 237:D:\workspace\console800480\system\core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 238:D:\workspace\console800480\system\core_cmInstr.h ****     \return             Saturated value
 239:D:\workspace\console800480\system\core_cmInstr.h ****  */
 240:D:\workspace\console800480\system\core_cmInstr.h **** #define __USAT                            __usat
 241:D:\workspace\console800480\system\core_cmInstr.h **** 
 242:D:\workspace\console800480\system\core_cmInstr.h **** 
 243:D:\workspace\console800480\system\core_cmInstr.h **** /** \brief  Count leading zeros
 244:D:\workspace\console800480\system\core_cmInstr.h **** 
 245:D:\workspace\console800480\system\core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 246:D:\workspace\console800480\system\core_cmInstr.h **** 
 247:D:\workspace\console800480\system\core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 248:D:\workspace\console800480\system\core_cmInstr.h ****     \return             number of leading zeros in value
 249:D:\workspace\console800480\system\core_cmInstr.h ****  */
 250:D:\workspace\console800480\system\core_cmInstr.h **** #define __CLZ                             __clz 
 251:D:\workspace\console800480\system\core_cmInstr.h **** 
 252:D:\workspace\console800480\system\core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 253:D:\workspace\console800480\system\core_cmInstr.h **** 
 254:D:\workspace\console800480\system\core_cmInstr.h **** 
 255:D:\workspace\console800480\system\core_cmInstr.h **** 
 256:D:\workspace\console800480\system\core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 257:D:\workspace\console800480\system\core_cmInstr.h **** /* IAR iccarm specific functions */
 258:D:\workspace\console800480\system\core_cmInstr.h **** 
 259:D:\workspace\console800480\system\core_cmInstr.h **** #include <cmsis_iar.h>
 260:D:\workspace\console800480\system\core_cmInstr.h **** 
 261:D:\workspace\console800480\system\core_cmInstr.h **** 
 262:D:\workspace\console800480\system\core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 263:D:\workspace\console800480\system\core_cmInstr.h **** /* GNU gcc specific functions */
 264:D:\workspace\console800480\system\core_cmInstr.h **** 
 265:D:\workspace\console800480\system\core_cmInstr.h **** /** \brief  No Operation
 266:D:\workspace\console800480\system\core_cmInstr.h **** 
 267:D:\workspace\console800480\system\core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 268:D:\workspace\console800480\system\core_cmInstr.h ****  */
 269:D:\workspace\console800480\system\core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __NOP(void)
 270:D:\workspace\console800480\system\core_cmInstr.h **** {
 271:D:\workspace\console800480\system\core_cmInstr.h ****   __ASM volatile ("nop");
 532              		.loc 2 271 0 discriminator 2
 533              	@ 271 "D:\workspace\console800480\system/core_cmInstr.h" 1
 534 0304 00BF     		nop
 535              	@ 0 "" 2
 536              		.thumb
 537              	.LBE5:
 538              	.LBE4:
 539              		.loc 1 227 0 discriminator 2
 540 0306 FB68     		ldr	r3, [r7, #12]
 541 0308 0133     		adds	r3, r3, #1
 542 030a FB60     		str	r3, [r7, #12]
 543              	.L19:
 544              		.loc 1 227 0 is_stmt 0 discriminator 1
 545 030c FB68     		ldr	r3, [r7, #12]
 546 030e 112B     		cmp	r3, #17
 547 0310 F8D9     		bls	.L20
 228:../tasks/usb/usbd_conf.c ****     {
 229:../tasks/usb/usbd_conf.c ****       __NOP();
 230:../tasks/usb/usbd_conf.c ****     }
 231:../tasks/usb/usbd_conf.c ****   
 232:../tasks/usb/usbd_conf.c ****     if (__HAL_PCD_IS_PHY_SUSPENDED(hpcd))  /* when set then false resume condition*/
 548              		.loc 1 232 0 is_stmt 1
 549 0312 7B68     		ldr	r3, [r7, #4]
 550 0314 1B68     		ldr	r3, [r3]
 551 0316 03F56063 		add	r3, r3, #3584
 552 031a 1B68     		ldr	r3, [r3]
 553 031c 03F01003 		and	r3, r3, #16
 554 0320 002B     		cmp	r3, #0
 555 0322 4BD0     		beq	.L17
 233:../tasks/usb/usbd_conf.c ****     {
 234:../tasks/usb/usbd_conf.c ****       __HAL_USB_HS_EXTI_CLEAR_FLAG();
 556              		.loc 1 234 0
 557 0324 4FF47053 		mov	r3, #15360
 558 0328 C4F20103 		movt	r3, 16385
 559 032c 4FF48012 		mov	r2, #1048576
 560 0330 5A61     		str	r2, [r3, #20]
 235:../tasks/usb/usbd_conf.c ****       __HAL_USB_HS_EXTI_ENABLE_IT(); 
 561              		.loc 1 235 0
 562 0332 4FF47053 		mov	r3, #15360
 563 0336 C4F20103 		movt	r3, 16385
 564 033a 4FF47052 		mov	r2, #15360
 565 033e C4F20102 		movt	r2, 16385
 566 0342 1268     		ldr	r2, [r2]
 567 0344 42F48012 		orr	r2, r2, #1048576
 568 0348 1A60     		str	r2, [r3]
 236:../tasks/usb/usbd_conf.c ****       
 237:../tasks/usb/usbd_conf.c ****       USBD_LL_Suspend(hpcd->pData);
 569              		.loc 1 237 0
 570 034a 7B68     		ldr	r3, [r7, #4]
 571 034c D3F8AC33 		ldr	r3, [r3, #940]
 572 0350 1846     		mov	r0, r3
 573 0352 FFF7FEFF 		bl	USBD_LL_Suspend
 238:../tasks/usb/usbd_conf.c ****   
 239:../tasks/usb/usbd_conf.c ****       /*Enter in STOP mode */
 240:../tasks/usb/usbd_conf.c ****       if (hpcd->Init.low_power_enable)
 574              		.loc 1 240 0
 575 0356 7B68     		ldr	r3, [r7, #4]
 576 0358 1B6A     		ldr	r3, [r3, #32]
 577 035a 002B     		cmp	r3, #0
 578 035c 2ED0     		beq	.L17
 241:../tasks/usb/usbd_conf.c ****       {
 242:../tasks/usb/usbd_conf.c ****         /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register */
 243:../tasks/usb/usbd_conf.c ****         SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 579              		.loc 1 243 0
 580 035e 4FF46D43 		mov	r3, #60672
 581 0362 CEF20003 		movt	r3, 57344
 582 0366 4FF46D42 		mov	r2, #60672
 583 036a CEF20002 		movt	r2, 57344
 584 036e 1269     		ldr	r2, [r2, #16]
 585 0370 42F00602 		orr	r2, r2, #6
 586 0374 1A61     		str	r2, [r3, #16]
 587 0376 21E0     		b	.L17
 588              	.L18:
 244:../tasks/usb/usbd_conf.c ****       }
 245:../tasks/usb/usbd_conf.c ****     }
 246:../tasks/usb/usbd_conf.c ****   }
 247:../tasks/usb/usbd_conf.c ****   else
 248:../tasks/usb/usbd_conf.c ****   	{
 249:../tasks/usb/usbd_conf.c **** 
 250:../tasks/usb/usbd_conf.c ****   		__HAL_PCD_GATE_PHYCLOCK(hpcd);
 589              		.loc 1 250 0
 590 0378 7B68     		ldr	r3, [r7, #4]
 591 037a 1B68     		ldr	r3, [r3]
 592 037c 03F56063 		add	r3, r3, #3584
 593 0380 7A68     		ldr	r2, [r7, #4]
 594 0382 1268     		ldr	r2, [r2]
 595 0384 02F56062 		add	r2, r2, #3584
 596 0388 1268     		ldr	r2, [r2]
 597 038a 42F00102 		orr	r2, r2, #1
 598 038e 1A60     		str	r2, [r3]
 251:../tasks/usb/usbd_conf.c ****   		USBD_LL_Suspend(hpcd->pData);
 599              		.loc 1 251 0
 600 0390 7B68     		ldr	r3, [r7, #4]
 601 0392 D3F8AC33 		ldr	r3, [r3, #940]
 602 0396 1846     		mov	r0, r3
 603 0398 FFF7FEFF 		bl	USBD_LL_Suspend
 252:../tasks/usb/usbd_conf.c ****   
 253:../tasks/usb/usbd_conf.c ****   /*Enter in STOP mode */
 254:../tasks/usb/usbd_conf.c ****   if (hpcd->Init.low_power_enable)
 604              		.loc 1 254 0
 605 039c 7B68     		ldr	r3, [r7, #4]
 606 039e 1B6A     		ldr	r3, [r3, #32]
 607 03a0 002B     		cmp	r3, #0
 608 03a2 0BD0     		beq	.L17
 255:../tasks/usb/usbd_conf.c ****   {
 256:../tasks/usb/usbd_conf.c ****     
 257:../tasks/usb/usbd_conf.c ****     /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register */
 258:../tasks/usb/usbd_conf.c ****     SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 609              		.loc 1 258 0
 610 03a4 4FF46D43 		mov	r3, #60672
 611 03a8 CEF20003 		movt	r3, 57344
 612 03ac 4FF46D42 		mov	r2, #60672
 613 03b0 CEF20002 		movt	r2, 57344
 614 03b4 1269     		ldr	r2, [r2, #16]
 615 03b6 42F00602 		orr	r2, r2, #6
 616 03ba 1A61     		str	r2, [r3, #16]
 617              	.L17:
 259:../tasks/usb/usbd_conf.c ****   }
 260:../tasks/usb/usbd_conf.c ****  
 261:../tasks/usb/usbd_conf.c ****     }
 262:../tasks/usb/usbd_conf.c **** 
 263:../tasks/usb/usbd_conf.c **** }
 618              		.loc 1 263 0
 619 03bc 1037     		adds	r7, r7, #16
 620 03be BD46     		mov	sp, r7
 621              		@ sp needed
 622 03c0 80BD     		pop	{r7, pc}
 623              		.cfi_endproc
 624              	.LFE62:
 626 03c2 00BF     		.align	2
 627              		.global	HAL_PCD_ResumeCallback
 628              		.thumb
 629              		.thumb_func
 631              	HAL_PCD_ResumeCallback:
 632              	.LFB63:
 264:../tasks/usb/usbd_conf.c **** 
 265:../tasks/usb/usbd_conf.c **** /**
 266:../tasks/usb/usbd_conf.c ****   * @brief  SOF callback.
 267:../tasks/usb/usbd_conf.c ****   * @param  hpcd: PCD handle
 268:../tasks/usb/usbd_conf.c ****   * @retval None
 269:../tasks/usb/usbd_conf.c ****   */
 270:../tasks/usb/usbd_conf.c **** void HAL_PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
 271:../tasks/usb/usbd_conf.c **** {
 633              		.loc 1 271 0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 8
 636              		@ frame_needed = 1, uses_anonymous_args = 0
 637 03c4 80B5     		push	{r7, lr}
 638              		.cfi_def_cfa_offset 8
 639              		.cfi_offset 7, -8
 640              		.cfi_offset 14, -4
 641 03c6 82B0     		sub	sp, sp, #8
 642              		.cfi_def_cfa_offset 16
 643 03c8 00AF     		add	r7, sp, #0
 644              		.cfi_def_cfa_register 7
 645 03ca 7860     		str	r0, [r7, #4]
 272:../tasks/usb/usbd_conf.c ****   __HAL_PCD_UNGATE_PHYCLOCK(hpcd);
 646              		.loc 1 272 0
 647 03cc 7B68     		ldr	r3, [r7, #4]
 648 03ce 1B68     		ldr	r3, [r3]
 649 03d0 03F56063 		add	r3, r3, #3584
 650 03d4 7A68     		ldr	r2, [r7, #4]
 651 03d6 1268     		ldr	r2, [r2]
 652 03d8 02F56062 		add	r2, r2, #3584
 653 03dc 1268     		ldr	r2, [r2]
 654 03de 22F00102 		bic	r2, r2, #1
 655 03e2 1A60     		str	r2, [r3]
 273:../tasks/usb/usbd_conf.c ****   USBD_LL_Resume(hpcd->pData);
 656              		.loc 1 273 0
 657 03e4 7B68     		ldr	r3, [r7, #4]
 658 03e6 D3F8AC33 		ldr	r3, [r3, #940]
 659 03ea 1846     		mov	r0, r3
 660 03ec FFF7FEFF 		bl	USBD_LL_Resume
 274:../tasks/usb/usbd_conf.c **** }
 661              		.loc 1 274 0
 662 03f0 0837     		adds	r7, r7, #8
 663 03f2 BD46     		mov	sp, r7
 664              		@ sp needed
 665 03f4 80BD     		pop	{r7, pc}
 666              		.cfi_endproc
 667              	.LFE63:
 669 03f6 00BF     		.align	2
 670              		.global	HAL_PCD_ISOOUTIncompleteCallback
 671              		.thumb
 672              		.thumb_func
 674              	HAL_PCD_ISOOUTIncompleteCallback:
 675              	.LFB64:
 275:../tasks/usb/usbd_conf.c **** 
 276:../tasks/usb/usbd_conf.c **** /**
 277:../tasks/usb/usbd_conf.c ****   * @brief  SOF callback.
 278:../tasks/usb/usbd_conf.c ****   * @param  hpcd: PCD handle 
 279:../tasks/usb/usbd_conf.c ****   * @param  epnum: Endpoint Number
 280:../tasks/usb/usbd_conf.c ****   * @retval None
 281:../tasks/usb/usbd_conf.c ****   */
 282:../tasks/usb/usbd_conf.c **** void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 283:../tasks/usb/usbd_conf.c **** {
 676              		.loc 1 283 0
 677              		.cfi_startproc
 678              		@ args = 0, pretend = 0, frame = 8
 679              		@ frame_needed = 1, uses_anonymous_args = 0
 680 03f8 80B5     		push	{r7, lr}
 681              		.cfi_def_cfa_offset 8
 682              		.cfi_offset 7, -8
 683              		.cfi_offset 14, -4
 684 03fa 82B0     		sub	sp, sp, #8
 685              		.cfi_def_cfa_offset 16
 686 03fc 00AF     		add	r7, sp, #0
 687              		.cfi_def_cfa_register 7
 688 03fe 7860     		str	r0, [r7, #4]
 689 0400 0B46     		mov	r3, r1
 690 0402 FB70     		strb	r3, [r7, #3]
 284:../tasks/usb/usbd_conf.c ****   USBD_LL_IsoOUTIncomplete(hpcd->pData, epnum);
 691              		.loc 1 284 0
 692 0404 7B68     		ldr	r3, [r7, #4]
 693 0406 D3F8AC23 		ldr	r2, [r3, #940]
 694 040a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 695 040c 1046     		mov	r0, r2
 696 040e 1946     		mov	r1, r3
 697 0410 FFF7FEFF 		bl	USBD_LL_IsoOUTIncomplete
 285:../tasks/usb/usbd_conf.c **** }
 698              		.loc 1 285 0
 699 0414 0837     		adds	r7, r7, #8
 700 0416 BD46     		mov	sp, r7
 701              		@ sp needed
 702 0418 80BD     		pop	{r7, pc}
 703              		.cfi_endproc
 704              	.LFE64:
 706 041a 00BF     		.align	2
 707              		.global	HAL_PCD_ISOINIncompleteCallback
 708              		.thumb
 709              		.thumb_func
 711              	HAL_PCD_ISOINIncompleteCallback:
 712              	.LFB65:
 286:../tasks/usb/usbd_conf.c **** 
 287:../tasks/usb/usbd_conf.c **** /**
 288:../tasks/usb/usbd_conf.c ****   * @brief  SOF callback.
 289:../tasks/usb/usbd_conf.c ****   * @param  hpcd: PCD handle 
 290:../tasks/usb/usbd_conf.c ****   * @param  epnum: Endpoint Number
 291:../tasks/usb/usbd_conf.c ****   * @retval None
 292:../tasks/usb/usbd_conf.c ****   */
 293:../tasks/usb/usbd_conf.c **** void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 294:../tasks/usb/usbd_conf.c **** {
 713              		.loc 1 294 0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 8
 716              		@ frame_needed = 1, uses_anonymous_args = 0
 717 041c 80B5     		push	{r7, lr}
 718              		.cfi_def_cfa_offset 8
 719              		.cfi_offset 7, -8
 720              		.cfi_offset 14, -4
 721 041e 82B0     		sub	sp, sp, #8
 722              		.cfi_def_cfa_offset 16
 723 0420 00AF     		add	r7, sp, #0
 724              		.cfi_def_cfa_register 7
 725 0422 7860     		str	r0, [r7, #4]
 726 0424 0B46     		mov	r3, r1
 727 0426 FB70     		strb	r3, [r7, #3]
 295:../tasks/usb/usbd_conf.c ****   USBD_LL_IsoINIncomplete(hpcd->pData, epnum);
 728              		.loc 1 295 0
 729 0428 7B68     		ldr	r3, [r7, #4]
 730 042a D3F8AC23 		ldr	r2, [r3, #940]
 731 042e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 732 0430 1046     		mov	r0, r2
 733 0432 1946     		mov	r1, r3
 734 0434 FFF7FEFF 		bl	USBD_LL_IsoINIncomplete
 296:../tasks/usb/usbd_conf.c **** }
 735              		.loc 1 296 0
 736 0438 0837     		adds	r7, r7, #8
 737 043a BD46     		mov	sp, r7
 738              		@ sp needed
 739 043c 80BD     		pop	{r7, pc}
 740              		.cfi_endproc
 741              	.LFE65:
 743 043e 00BF     		.align	2
 744              		.global	HAL_PCD_ConnectCallback
 745              		.thumb
 746              		.thumb_func
 748              	HAL_PCD_ConnectCallback:
 749              	.LFB66:
 297:../tasks/usb/usbd_conf.c **** 
 298:../tasks/usb/usbd_conf.c **** /**
 299:../tasks/usb/usbd_conf.c ****   * @brief  SOF callback.
 300:../tasks/usb/usbd_conf.c ****   * @param  hpcd: PCD handle
 301:../tasks/usb/usbd_conf.c ****   * @retval None
 302:../tasks/usb/usbd_conf.c ****   */
 303:../tasks/usb/usbd_conf.c **** void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
 304:../tasks/usb/usbd_conf.c **** {
 750              		.loc 1 304 0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 8
 753              		@ frame_needed = 1, uses_anonymous_args = 0
 754 0440 80B5     		push	{r7, lr}
 755              		.cfi_def_cfa_offset 8
 756              		.cfi_offset 7, -8
 757              		.cfi_offset 14, -4
 758 0442 82B0     		sub	sp, sp, #8
 759              		.cfi_def_cfa_offset 16
 760 0444 00AF     		add	r7, sp, #0
 761              		.cfi_def_cfa_register 7
 762 0446 7860     		str	r0, [r7, #4]
 305:../tasks/usb/usbd_conf.c ****   USBD_LL_DevConnected(hpcd->pData);
 763              		.loc 1 305 0
 764 0448 7B68     		ldr	r3, [r7, #4]
 765 044a D3F8AC33 		ldr	r3, [r3, #940]
 766 044e 1846     		mov	r0, r3
 767 0450 FFF7FEFF 		bl	USBD_LL_DevConnected
 306:../tasks/usb/usbd_conf.c **** }
 768              		.loc 1 306 0
 769 0454 0837     		adds	r7, r7, #8
 770 0456 BD46     		mov	sp, r7
 771              		@ sp needed
 772 0458 80BD     		pop	{r7, pc}
 773              		.cfi_endproc
 774              	.LFE66:
 776 045a 00BF     		.align	2
 777              		.global	HAL_PCD_DisconnectCallback
 778              		.thumb
 779              		.thumb_func
 781              	HAL_PCD_DisconnectCallback:
 782              	.LFB67:
 307:../tasks/usb/usbd_conf.c **** 
 308:../tasks/usb/usbd_conf.c **** /**
 309:../tasks/usb/usbd_conf.c ****   * @brief  SOF callback.
 310:../tasks/usb/usbd_conf.c ****   * @param  hpcd: PCD handle
 311:../tasks/usb/usbd_conf.c ****   * @retval None
 312:../tasks/usb/usbd_conf.c ****   */
 313:../tasks/usb/usbd_conf.c **** void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
 314:../tasks/usb/usbd_conf.c **** {
 783              		.loc 1 314 0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 8
 786              		@ frame_needed = 1, uses_anonymous_args = 0
 787 045c 80B5     		push	{r7, lr}
 788              		.cfi_def_cfa_offset 8
 789              		.cfi_offset 7, -8
 790              		.cfi_offset 14, -4
 791 045e 82B0     		sub	sp, sp, #8
 792              		.cfi_def_cfa_offset 16
 793 0460 00AF     		add	r7, sp, #0
 794              		.cfi_def_cfa_register 7
 795 0462 7860     		str	r0, [r7, #4]
 315:../tasks/usb/usbd_conf.c ****   USBD_LL_DevDisconnected(hpcd->pData);
 796              		.loc 1 315 0
 797 0464 7B68     		ldr	r3, [r7, #4]
 798 0466 D3F8AC33 		ldr	r3, [r3, #940]
 799 046a 1846     		mov	r0, r3
 800 046c FFF7FEFF 		bl	USBD_LL_DevDisconnected
 316:../tasks/usb/usbd_conf.c **** }
 801              		.loc 1 316 0
 802 0470 0837     		adds	r7, r7, #8
 803 0472 BD46     		mov	sp, r7
 804              		@ sp needed
 805 0474 80BD     		pop	{r7, pc}
 806              		.cfi_endproc
 807              	.LFE67:
 809 0476 00BF     		.align	2
 810              		.global	USBD_LL_Init
 811              		.thumb
 812              		.thumb_func
 814              	USBD_LL_Init:
 815              	.LFB68:
 317:../tasks/usb/usbd_conf.c **** 
 318:../tasks/usb/usbd_conf.c **** /*******************************************************************************
 319:../tasks/usb/usbd_conf.c ****                        LL Driver Interface (USB Device Library --> PCD)
 320:../tasks/usb/usbd_conf.c **** *******************************************************************************/
 321:../tasks/usb/usbd_conf.c **** 
 322:../tasks/usb/usbd_conf.c **** /**
 323:../tasks/usb/usbd_conf.c ****   * @brief  Initializes the Low Level portion of the Device driver.
 324:../tasks/usb/usbd_conf.c ****   * @param  pdev: Device handle
 325:../tasks/usb/usbd_conf.c ****   * @retval USBD Status
 326:../tasks/usb/usbd_conf.c ****   */
 327:../tasks/usb/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_Init(USBD_HandleTypeDef *pdev)
 328:../tasks/usb/usbd_conf.c **** {    
 816              		.loc 1 328 0
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 8
 819              		@ frame_needed = 1, uses_anonymous_args = 0
 820 0478 80B5     		push	{r7, lr}
 821              		.cfi_def_cfa_offset 8
 822              		.cfi_offset 7, -8
 823              		.cfi_offset 14, -4
 824 047a 82B0     		sub	sp, sp, #8
 825              		.cfi_def_cfa_offset 16
 826 047c 00AF     		add	r7, sp, #0
 827              		.cfi_def_cfa_register 7
 828 047e 7860     		str	r0, [r7, #4]
 329:../tasks/usb/usbd_conf.c ****   
 330:../tasks/usb/usbd_conf.c **** #ifdef USE_USB_FS
 331:../tasks/usb/usbd_conf.c ****   /* Set LL Driver parameters */
 332:../tasks/usb/usbd_conf.c ****   hpcd.Instance = USB_OTG_FS;
 829              		.loc 1 332 0
 830 0480 40F20003 		movw	r3, #:lower16:hpcd
 831 0484 C0F20003 		movt	r3, #:upper16:hpcd
 832 0488 4FF0A042 		mov	r2, #1342177280
 833 048c 1A60     		str	r2, [r3]
 333:../tasks/usb/usbd_conf.c ****   hpcd.Init.dev_endpoints = 2;		//
 834              		.loc 1 333 0
 835 048e 40F20003 		movw	r3, #:lower16:hpcd
 836 0492 C0F20003 		movt	r3, #:upper16:hpcd
 837 0496 0222     		movs	r2, #2
 838 0498 5A60     		str	r2, [r3, #4]
 334:../tasks/usb/usbd_conf.c ****   hpcd.Init.use_dedicated_ep1 = 0;
 839              		.loc 1 334 0
 840 049a 40F20003 		movw	r3, #:lower16:hpcd
 841 049e C0F20003 		movt	r3, #:upper16:hpcd
 842 04a2 0022     		movs	r2, #0
 843 04a4 9A62     		str	r2, [r3, #40]
 335:../tasks/usb/usbd_conf.c ****   hpcd.Init.ep0_mps = 0x40;
 844              		.loc 1 335 0
 845 04a6 40F20003 		movw	r3, #:lower16:hpcd
 846 04aa C0F20003 		movt	r3, #:upper16:hpcd
 847 04ae 4022     		movs	r2, #64
 848 04b0 5A61     		str	r2, [r3, #20]
 336:../tasks/usb/usbd_conf.c ****   hpcd.Init.dma_enable = 0;
 849              		.loc 1 336 0
 850 04b2 40F20003 		movw	r3, #:lower16:hpcd
 851 04b6 C0F20003 		movt	r3, #:upper16:hpcd
 852 04ba 0022     		movs	r2, #0
 853 04bc 1A61     		str	r2, [r3, #16]
 337:../tasks/usb/usbd_conf.c ****   hpcd.Init.low_power_enable = 0;
 854              		.loc 1 337 0
 855 04be 40F20003 		movw	r3, #:lower16:hpcd
 856 04c2 C0F20003 		movt	r3, #:upper16:hpcd
 857 04c6 0022     		movs	r2, #0
 858 04c8 1A62     		str	r2, [r3, #32]
 338:../tasks/usb/usbd_conf.c ****   hpcd.Init.phy_itface = PCD_PHY_EMBEDDED;
 859              		.loc 1 338 0
 860 04ca 40F20003 		movw	r3, #:lower16:hpcd
 861 04ce C0F20003 		movt	r3, #:upper16:hpcd
 862 04d2 0222     		movs	r2, #2
 863 04d4 9A61     		str	r2, [r3, #24]
 339:../tasks/usb/usbd_conf.c ****   hpcd.Init.Sof_enable = 0;
 864              		.loc 1 339 0
 865 04d6 40F20003 		movw	r3, #:lower16:hpcd
 866 04da C0F20003 		movt	r3, #:upper16:hpcd
 867 04de 0022     		movs	r2, #0
 868 04e0 DA61     		str	r2, [r3, #28]
 340:../tasks/usb/usbd_conf.c ****   hpcd.Init.speed = PCD_SPEED_FULL;
 869              		.loc 1 340 0
 870 04e2 40F20003 		movw	r3, #:lower16:hpcd
 871 04e6 C0F20003 		movt	r3, #:upper16:hpcd
 872 04ea 0222     		movs	r2, #2
 873 04ec DA60     		str	r2, [r3, #12]
 341:../tasks/usb/usbd_conf.c ****   hpcd.Init.vbus_sensing_enable = 0;
 874              		.loc 1 341 0
 875 04ee 40F20003 		movw	r3, #:lower16:hpcd
 876 04f2 C0F20003 		movt	r3, #:upper16:hpcd
 877 04f6 0022     		movs	r2, #0
 878 04f8 5A62     		str	r2, [r3, #36]
 342:../tasks/usb/usbd_conf.c ****   /* Link The driver to the stack */
 343:../tasks/usb/usbd_conf.c ****   hpcd.pData = pdev;
 879              		.loc 1 343 0
 880 04fa 40F20003 		movw	r3, #:lower16:hpcd
 881 04fe C0F20003 		movt	r3, #:upper16:hpcd
 882 0502 7A68     		ldr	r2, [r7, #4]
 883 0504 C3F8AC23 		str	r2, [r3, #940]
 344:../tasks/usb/usbd_conf.c ****   pdev->pData = &hpcd;
 884              		.loc 1 344 0
 885 0508 7A68     		ldr	r2, [r7, #4]
 886 050a 40F20003 		movw	r3, #:lower16:hpcd
 887 050e C0F20003 		movt	r3, #:upper16:hpcd
 888 0512 C2F82032 		str	r3, [r2, #544]
 345:../tasks/usb/usbd_conf.c ****   /* Initialize LL Driver */
 346:../tasks/usb/usbd_conf.c ****   HAL_PCD_Init(&hpcd);
 889              		.loc 1 346 0
 890 0516 40F20000 		movw	r0, #:lower16:hpcd
 891 051a C0F20000 		movt	r0, #:upper16:hpcd
 892 051e FFF7FEFF 		bl	HAL_PCD_Init
 347:../tasks/usb/usbd_conf.c ****   
 348:../tasks/usb/usbd_conf.c ****   HAL_PCD_SetRxFiFo(&hpcd, 0x80);
 893              		.loc 1 348 0
 894 0522 40F20000 		movw	r0, #:lower16:hpcd
 895 0526 C0F20000 		movt	r0, #:upper16:hpcd
 896 052a 8021     		movs	r1, #128
 897 052c FFF7FEFF 		bl	HAL_PCD_SetRxFiFo
 349:../tasks/usb/usbd_conf.c ****   HAL_PCD_SetTxFiFo(&hpcd, 0, 0x40);
 898              		.loc 1 349 0
 899 0530 40F20000 		movw	r0, #:lower16:hpcd
 900 0534 C0F20000 		movt	r0, #:upper16:hpcd
 901 0538 0021     		movs	r1, #0
 902 053a 4022     		movs	r2, #64
 903 053c FFF7FEFF 		bl	HAL_PCD_SetTxFiFo
 350:../tasks/usb/usbd_conf.c ****   HAL_PCD_SetTxFiFo(&hpcd, 1, 0x80);
 904              		.loc 1 350 0
 905 0540 40F20000 		movw	r0, #:lower16:hpcd
 906 0544 C0F20000 		movt	r0, #:upper16:hpcd
 907 0548 0121     		movs	r1, #1
 908 054a 8022     		movs	r2, #128
 909 054c FFF7FEFF 		bl	HAL_PCD_SetTxFiFo
 351:../tasks/usb/usbd_conf.c **** #endif
 352:../tasks/usb/usbd_conf.c ****   
 353:../tasks/usb/usbd_conf.c **** #ifdef USE_USB_HS
 354:../tasks/usb/usbd_conf.c ****   /* Set LL Driver parameters */
 355:../tasks/usb/usbd_conf.c ****   hpcd.Instance = USB_OTG_HS;
 356:../tasks/usb/usbd_conf.c ****   hpcd.Init.dev_endpoints = 2;		//6
 357:../tasks/usb/usbd_conf.c ****   hpcd.Init.use_dedicated_ep1 = 0;
 358:../tasks/usb/usbd_conf.c ****   hpcd.Init.ep0_mps = 0x40;
 359:../tasks/usb/usbd_conf.c ****   
 360:../tasks/usb/usbd_conf.c ****   /* Be aware that enabling DMA mode will result in data being sent only by
 361:../tasks/usb/usbd_conf.c ****      multiple of 4 packet sizes. This is due to the fact that USB DMA does
 362:../tasks/usb/usbd_conf.c ****      not allow sending data from non word-aligned addresses.
 363:../tasks/usb/usbd_conf.c ****      For this specific application, it is advised to not enable this option
 364:../tasks/usb/usbd_conf.c ****      unless required. */
 365:../tasks/usb/usbd_conf.c ****   hpcd.Init.dma_enable = 0;
 366:../tasks/usb/usbd_conf.c ****   hpcd.Init.low_power_enable = 0;	//0
 367:../tasks/usb/usbd_conf.c ****   hpcd.Init.phy_itface = PCD_PHY_ULPI;//PCD_PHY_ULPI;//PCD_PHY_EMBEDDED
 368:../tasks/usb/usbd_conf.c ****   hpcd.Init.Sof_enable = 0;
 369:../tasks/usb/usbd_conf.c ****   hpcd.Init.speed = PCD_SPEED_HIGH;//PCD_SPEED_HIGH;
 370:../tasks/usb/usbd_conf.c ****   hpcd.Init.vbus_sensing_enable = 0;
 371:../tasks/usb/usbd_conf.c ****   /* Link The driver to the stack */
 372:../tasks/usb/usbd_conf.c ****   hpcd.pData = pdev;
 373:../tasks/usb/usbd_conf.c ****   pdev->pData = &hpcd;
 374:../tasks/usb/usbd_conf.c ****   /* Initialize LL Driver */
 375:../tasks/usb/usbd_conf.c ****   HAL_PCD_Init(&hpcd);
 376:../tasks/usb/usbd_conf.c **** 
 377:../tasks/usb/usbd_conf.c ****   HAL_PCD_SetRxFiFo(&hpcd, 0x200);
 378:../tasks/usb/usbd_conf.c ****   HAL_PCD_SetTxFiFo(&hpcd, 0, 0x80);
 379:../tasks/usb/usbd_conf.c ****   HAL_PCD_SetTxFiFo(&hpcd, 1, 0x174);
 380:../tasks/usb/usbd_conf.c **** #endif 
 381:../tasks/usb/usbd_conf.c ****   
 382:../tasks/usb/usbd_conf.c ****   return USBD_OK;
 910              		.loc 1 382 0
 911 0550 0023     		movs	r3, #0
 383:../tasks/usb/usbd_conf.c **** }
 912              		.loc 1 383 0
 913 0552 1846     		mov	r0, r3
 914 0554 0837     		adds	r7, r7, #8
 915 0556 BD46     		mov	sp, r7
 916              		@ sp needed
 917 0558 80BD     		pop	{r7, pc}
 918              		.cfi_endproc
 919              	.LFE68:
 921 055a 00BF     		.align	2
 922              		.global	USBD_LL_DeInit
 923              		.thumb
 924              		.thumb_func
 926              	USBD_LL_DeInit:
 927              	.LFB69:
 384:../tasks/usb/usbd_conf.c **** 
 385:../tasks/usb/usbd_conf.c **** /**
 386:../tasks/usb/usbd_conf.c ****   * @brief  De-Initializes the Low Level portion of the Device driver.
 387:../tasks/usb/usbd_conf.c ****   * @param  pdev: Device handle
 388:../tasks/usb/usbd_conf.c ****   * @retval USBD Status
 389:../tasks/usb/usbd_conf.c ****   */
 390:../tasks/usb/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_DeInit(USBD_HandleTypeDef *pdev)
 391:../tasks/usb/usbd_conf.c **** {
 928              		.loc 1 391 0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 8
 931              		@ frame_needed = 1, uses_anonymous_args = 0
 932 055c 80B5     		push	{r7, lr}
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 7, -8
 935              		.cfi_offset 14, -4
 936 055e 82B0     		sub	sp, sp, #8
 937              		.cfi_def_cfa_offset 16
 938 0560 00AF     		add	r7, sp, #0
 939              		.cfi_def_cfa_register 7
 940 0562 7860     		str	r0, [r7, #4]
 392:../tasks/usb/usbd_conf.c ****   HAL_PCD_DeInit(pdev->pData);
 941              		.loc 1 392 0
 942 0564 7B68     		ldr	r3, [r7, #4]
 943 0566 D3F82032 		ldr	r3, [r3, #544]
 944 056a 1846     		mov	r0, r3
 945 056c FFF7FEFF 		bl	HAL_PCD_DeInit
 393:../tasks/usb/usbd_conf.c ****   return USBD_OK;
 946              		.loc 1 393 0
 947 0570 0023     		movs	r3, #0
 394:../tasks/usb/usbd_conf.c **** }
 948              		.loc 1 394 0
 949 0572 1846     		mov	r0, r3
 950 0574 0837     		adds	r7, r7, #8
 951 0576 BD46     		mov	sp, r7
 952              		@ sp needed
 953 0578 80BD     		pop	{r7, pc}
 954              		.cfi_endproc
 955              	.LFE69:
 957 057a 00BF     		.align	2
 958              		.global	USBD_LL_Start
 959              		.thumb
 960              		.thumb_func
 962              	USBD_LL_Start:
 963              	.LFB70:
 395:../tasks/usb/usbd_conf.c **** 
 396:../tasks/usb/usbd_conf.c **** /**
 397:../tasks/usb/usbd_conf.c ****   * @brief  Starts the Low Level portion of the Device driver. 
 398:../tasks/usb/usbd_conf.c ****   * @param  pdev: Device handle
 399:../tasks/usb/usbd_conf.c ****   * @retval USBD Status
 400:../tasks/usb/usbd_conf.c ****   */
 401:../tasks/usb/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_Start(USBD_HandleTypeDef *pdev)
 402:../tasks/usb/usbd_conf.c **** {
 964              		.loc 1 402 0
 965              		.cfi_startproc
 966              		@ args = 0, pretend = 0, frame = 8
 967              		@ frame_needed = 1, uses_anonymous_args = 0
 968 057c 80B5     		push	{r7, lr}
 969              		.cfi_def_cfa_offset 8
 970              		.cfi_offset 7, -8
 971              		.cfi_offset 14, -4
 972 057e 82B0     		sub	sp, sp, #8
 973              		.cfi_def_cfa_offset 16
 974 0580 00AF     		add	r7, sp, #0
 975              		.cfi_def_cfa_register 7
 976 0582 7860     		str	r0, [r7, #4]
 403:../tasks/usb/usbd_conf.c ****   HAL_PCD_Start(pdev->pData);
 977              		.loc 1 403 0
 978 0584 7B68     		ldr	r3, [r7, #4]
 979 0586 D3F82032 		ldr	r3, [r3, #544]
 980 058a 1846     		mov	r0, r3
 981 058c FFF7FEFF 		bl	HAL_PCD_Start
 404:../tasks/usb/usbd_conf.c ****   return USBD_OK;
 982              		.loc 1 404 0
 983 0590 0023     		movs	r3, #0
 405:../tasks/usb/usbd_conf.c **** }
 984              		.loc 1 405 0
 985 0592 1846     		mov	r0, r3
 986 0594 0837     		adds	r7, r7, #8
 987 0596 BD46     		mov	sp, r7
 988              		@ sp needed
 989 0598 80BD     		pop	{r7, pc}
 990              		.cfi_endproc
 991              	.LFE70:
 993 059a 00BF     		.align	2
 994              		.global	USBD_LL_Stop
 995              		.thumb
 996              		.thumb_func
 998              	USBD_LL_Stop:
 999              	.LFB71:
 406:../tasks/usb/usbd_conf.c **** 
 407:../tasks/usb/usbd_conf.c **** /**
 408:../tasks/usb/usbd_conf.c ****   * @brief  Stops the Low Level portion of the Device driver.
 409:../tasks/usb/usbd_conf.c ****   * @param  pdev: Device handle
 410:../tasks/usb/usbd_conf.c ****   * @retval USBD Status
 411:../tasks/usb/usbd_conf.c ****   */
 412:../tasks/usb/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_Stop(USBD_HandleTypeDef *pdev)
 413:../tasks/usb/usbd_conf.c **** {
 1000              		.loc 1 413 0
 1001              		.cfi_startproc
 1002              		@ args = 0, pretend = 0, frame = 8
 1003              		@ frame_needed = 1, uses_anonymous_args = 0
 1004 059c 80B5     		push	{r7, lr}
 1005              		.cfi_def_cfa_offset 8
 1006              		.cfi_offset 7, -8
 1007              		.cfi_offset 14, -4
 1008 059e 82B0     		sub	sp, sp, #8
 1009              		.cfi_def_cfa_offset 16
 1010 05a0 00AF     		add	r7, sp, #0
 1011              		.cfi_def_cfa_register 7
 1012 05a2 7860     		str	r0, [r7, #4]
 414:../tasks/usb/usbd_conf.c ****   HAL_PCD_Stop(pdev->pData);
 1013              		.loc 1 414 0
 1014 05a4 7B68     		ldr	r3, [r7, #4]
 1015 05a6 D3F82032 		ldr	r3, [r3, #544]
 1016 05aa 1846     		mov	r0, r3
 1017 05ac FFF7FEFF 		bl	HAL_PCD_Stop
 415:../tasks/usb/usbd_conf.c ****   return USBD_OK;
 1018              		.loc 1 415 0
 1019 05b0 0023     		movs	r3, #0
 416:../tasks/usb/usbd_conf.c **** }
 1020              		.loc 1 416 0
 1021 05b2 1846     		mov	r0, r3
 1022 05b4 0837     		adds	r7, r7, #8
 1023 05b6 BD46     		mov	sp, r7
 1024              		@ sp needed
 1025 05b8 80BD     		pop	{r7, pc}
 1026              		.cfi_endproc
 1027              	.LFE71:
 1029 05ba 00BF     		.align	2
 1030              		.global	USBD_LL_OpenEP
 1031              		.thumb
 1032              		.thumb_func
 1034              	USBD_LL_OpenEP:
 1035              	.LFB72:
 417:../tasks/usb/usbd_conf.c **** 
 418:../tasks/usb/usbd_conf.c **** /**
 419:../tasks/usb/usbd_conf.c ****   * @brief  Opens an endpoint of the Low Level Driver.
 420:../tasks/usb/usbd_conf.c ****   * @param  pdev: Device handle
 421:../tasks/usb/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 422:../tasks/usb/usbd_conf.c ****   * @param  ep_type: Endpoint Type
 423:../tasks/usb/usbd_conf.c ****   * @param  ep_mps: Endpoint Max Packet Size
 424:../tasks/usb/usbd_conf.c ****   * @retval USBD Status
 425:../tasks/usb/usbd_conf.c ****   */
 426:../tasks/usb/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_OpenEP(USBD_HandleTypeDef *pdev,
 427:../tasks/usb/usbd_conf.c ****                                   uint8_t ep_addr,
 428:../tasks/usb/usbd_conf.c ****                                   uint8_t ep_type,
 429:../tasks/usb/usbd_conf.c ****                                   uint16_t ep_mps)
 430:../tasks/usb/usbd_conf.c **** {
 1036              		.loc 1 430 0
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 8
 1039              		@ frame_needed = 1, uses_anonymous_args = 0
 1040 05bc 80B5     		push	{r7, lr}
 1041              		.cfi_def_cfa_offset 8
 1042              		.cfi_offset 7, -8
 1043              		.cfi_offset 14, -4
 1044 05be 82B0     		sub	sp, sp, #8
 1045              		.cfi_def_cfa_offset 16
 1046 05c0 00AF     		add	r7, sp, #0
 1047              		.cfi_def_cfa_register 7
 1048 05c2 7860     		str	r0, [r7, #4]
 1049 05c4 F970     		strb	r1, [r7, #3]
 1050 05c6 BA70     		strb	r2, [r7, #2]
 1051 05c8 3B80     		strh	r3, [r7]	@ movhi
 431:../tasks/usb/usbd_conf.c ****   HAL_PCD_EP_Open(pdev->pData,
 1052              		.loc 1 431 0
 1053 05ca 7B68     		ldr	r3, [r7, #4]
 1054 05cc D3F82002 		ldr	r0, [r3, #544]
 1055 05d0 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1056 05d2 3A88     		ldrh	r2, [r7]
 1057 05d4 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1058 05d6 FFF7FEFF 		bl	HAL_PCD_EP_Open
 432:../tasks/usb/usbd_conf.c ****                   ep_addr,
 433:../tasks/usb/usbd_conf.c ****                   ep_mps,
 434:../tasks/usb/usbd_conf.c ****                   ep_type);
 435:../tasks/usb/usbd_conf.c ****   
 436:../tasks/usb/usbd_conf.c ****   return USBD_OK;
 1059              		.loc 1 436 0
 1060 05da 0023     		movs	r3, #0
 437:../tasks/usb/usbd_conf.c **** }
 1061              		.loc 1 437 0
 1062 05dc 1846     		mov	r0, r3
 1063 05de 0837     		adds	r7, r7, #8
 1064 05e0 BD46     		mov	sp, r7
 1065              		@ sp needed
 1066 05e2 80BD     		pop	{r7, pc}
 1067              		.cfi_endproc
 1068              	.LFE72:
 1070              		.align	2
 1071              		.global	USBD_LL_CloseEP
 1072              		.thumb
 1073              		.thumb_func
 1075              	USBD_LL_CloseEP:
 1076              	.LFB73:
 438:../tasks/usb/usbd_conf.c **** 
 439:../tasks/usb/usbd_conf.c **** /**
 440:../tasks/usb/usbd_conf.c ****   * @brief  Closes an endpoint of the Low Level Driver.
 441:../tasks/usb/usbd_conf.c ****   * @param  pdev: Device handle
 442:../tasks/usb/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 443:../tasks/usb/usbd_conf.c ****   * @retval USBD Status
 444:../tasks/usb/usbd_conf.c ****   */
 445:../tasks/usb/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_CloseEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 446:../tasks/usb/usbd_conf.c **** {
 1077              		.loc 1 446 0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 8
 1080              		@ frame_needed = 1, uses_anonymous_args = 0
 1081 05e4 80B5     		push	{r7, lr}
 1082              		.cfi_def_cfa_offset 8
 1083              		.cfi_offset 7, -8
 1084              		.cfi_offset 14, -4
 1085 05e6 82B0     		sub	sp, sp, #8
 1086              		.cfi_def_cfa_offset 16
 1087 05e8 00AF     		add	r7, sp, #0
 1088              		.cfi_def_cfa_register 7
 1089 05ea 7860     		str	r0, [r7, #4]
 1090 05ec 0B46     		mov	r3, r1
 1091 05ee FB70     		strb	r3, [r7, #3]
 447:../tasks/usb/usbd_conf.c ****   HAL_PCD_EP_Close(pdev->pData, ep_addr);
 1092              		.loc 1 447 0
 1093 05f0 7B68     		ldr	r3, [r7, #4]
 1094 05f2 D3F82022 		ldr	r2, [r3, #544]
 1095 05f6 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1096 05f8 1046     		mov	r0, r2
 1097 05fa 1946     		mov	r1, r3
 1098 05fc FFF7FEFF 		bl	HAL_PCD_EP_Close
 448:../tasks/usb/usbd_conf.c ****   return USBD_OK;
 1099              		.loc 1 448 0
 1100 0600 0023     		movs	r3, #0
 449:../tasks/usb/usbd_conf.c **** }
 1101              		.loc 1 449 0
 1102 0602 1846     		mov	r0, r3
 1103 0604 0837     		adds	r7, r7, #8
 1104 0606 BD46     		mov	sp, r7
 1105              		@ sp needed
 1106 0608 80BD     		pop	{r7, pc}
 1107              		.cfi_endproc
 1108              	.LFE73:
 1110 060a 00BF     		.align	2
 1111              		.global	USBD_LL_FlushEP
 1112              		.thumb
 1113              		.thumb_func
 1115              	USBD_LL_FlushEP:
 1116              	.LFB74:
 450:../tasks/usb/usbd_conf.c **** 
 451:../tasks/usb/usbd_conf.c **** /**
 452:../tasks/usb/usbd_conf.c ****   * @brief  Flushes an endpoint of the Low Level Driver.
 453:../tasks/usb/usbd_conf.c ****   * @param  pdev: Device handle
 454:../tasks/usb/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 455:../tasks/usb/usbd_conf.c ****   * @retval USBD Status
 456:../tasks/usb/usbd_conf.c ****   */
 457:../tasks/usb/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_FlushEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 458:../tasks/usb/usbd_conf.c **** {
 1117              		.loc 1 458 0
 1118              		.cfi_startproc
 1119              		@ args = 0, pretend = 0, frame = 8
 1120              		@ frame_needed = 1, uses_anonymous_args = 0
 1121 060c 80B5     		push	{r7, lr}
 1122              		.cfi_def_cfa_offset 8
 1123              		.cfi_offset 7, -8
 1124              		.cfi_offset 14, -4
 1125 060e 82B0     		sub	sp, sp, #8
 1126              		.cfi_def_cfa_offset 16
 1127 0610 00AF     		add	r7, sp, #0
 1128              		.cfi_def_cfa_register 7
 1129 0612 7860     		str	r0, [r7, #4]
 1130 0614 0B46     		mov	r3, r1
 1131 0616 FB70     		strb	r3, [r7, #3]
 459:../tasks/usb/usbd_conf.c ****   HAL_PCD_EP_Flush(pdev->pData, ep_addr);
 1132              		.loc 1 459 0
 1133 0618 7B68     		ldr	r3, [r7, #4]
 1134 061a D3F82022 		ldr	r2, [r3, #544]
 1135 061e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1136 0620 1046     		mov	r0, r2
 1137 0622 1946     		mov	r1, r3
 1138 0624 FFF7FEFF 		bl	HAL_PCD_EP_Flush
 460:../tasks/usb/usbd_conf.c ****   return USBD_OK;
 1139              		.loc 1 460 0
 1140 0628 0023     		movs	r3, #0
 461:../tasks/usb/usbd_conf.c **** }
 1141              		.loc 1 461 0
 1142 062a 1846     		mov	r0, r3
 1143 062c 0837     		adds	r7, r7, #8
 1144 062e BD46     		mov	sp, r7
 1145              		@ sp needed
 1146 0630 80BD     		pop	{r7, pc}
 1147              		.cfi_endproc
 1148              	.LFE74:
 1150 0632 00BF     		.align	2
 1151              		.global	USBD_LL_StallEP
 1152              		.thumb
 1153              		.thumb_func
 1155              	USBD_LL_StallEP:
 1156              	.LFB75:
 462:../tasks/usb/usbd_conf.c **** 
 463:../tasks/usb/usbd_conf.c **** /**
 464:../tasks/usb/usbd_conf.c ****   * @brief  Sets a Stall condition on an endpoint of the Low Level Driver.
 465:../tasks/usb/usbd_conf.c ****   * @param  pdev: Device handle
 466:../tasks/usb/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 467:../tasks/usb/usbd_conf.c ****   * @retval USBD Status
 468:../tasks/usb/usbd_conf.c ****   */
 469:../tasks/usb/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_StallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 470:../tasks/usb/usbd_conf.c **** {
 1157              		.loc 1 470 0
 1158              		.cfi_startproc
 1159              		@ args = 0, pretend = 0, frame = 8
 1160              		@ frame_needed = 1, uses_anonymous_args = 0
 1161 0634 80B5     		push	{r7, lr}
 1162              		.cfi_def_cfa_offset 8
 1163              		.cfi_offset 7, -8
 1164              		.cfi_offset 14, -4
 1165 0636 82B0     		sub	sp, sp, #8
 1166              		.cfi_def_cfa_offset 16
 1167 0638 00AF     		add	r7, sp, #0
 1168              		.cfi_def_cfa_register 7
 1169 063a 7860     		str	r0, [r7, #4]
 1170 063c 0B46     		mov	r3, r1
 1171 063e FB70     		strb	r3, [r7, #3]
 471:../tasks/usb/usbd_conf.c ****   HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 1172              		.loc 1 471 0
 1173 0640 7B68     		ldr	r3, [r7, #4]
 1174 0642 D3F82022 		ldr	r2, [r3, #544]
 1175 0646 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1176 0648 1046     		mov	r0, r2
 1177 064a 1946     		mov	r1, r3
 1178 064c FFF7FEFF 		bl	HAL_PCD_EP_SetStall
 472:../tasks/usb/usbd_conf.c ****   return USBD_OK;
 1179              		.loc 1 472 0
 1180 0650 0023     		movs	r3, #0
 473:../tasks/usb/usbd_conf.c **** }
 1181              		.loc 1 473 0
 1182 0652 1846     		mov	r0, r3
 1183 0654 0837     		adds	r7, r7, #8
 1184 0656 BD46     		mov	sp, r7
 1185              		@ sp needed
 1186 0658 80BD     		pop	{r7, pc}
 1187              		.cfi_endproc
 1188              	.LFE75:
 1190 065a 00BF     		.align	2
 1191              		.global	USBD_LL_ClearStallEP
 1192              		.thumb
 1193              		.thumb_func
 1195              	USBD_LL_ClearStallEP:
 1196              	.LFB76:
 474:../tasks/usb/usbd_conf.c **** 
 475:../tasks/usb/usbd_conf.c **** /**
 476:../tasks/usb/usbd_conf.c ****   * @brief  Clears a Stall condition on an endpoint of the Low Level Driver.
 477:../tasks/usb/usbd_conf.c ****   * @param  pdev: Device handle
 478:../tasks/usb/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 479:../tasks/usb/usbd_conf.c ****   * @retval USBD Status
 480:../tasks/usb/usbd_conf.c ****   */
 481:../tasks/usb/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_ClearStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 482:../tasks/usb/usbd_conf.c **** {
 1197              		.loc 1 482 0
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 8
 1200              		@ frame_needed = 1, uses_anonymous_args = 0
 1201 065c 80B5     		push	{r7, lr}
 1202              		.cfi_def_cfa_offset 8
 1203              		.cfi_offset 7, -8
 1204              		.cfi_offset 14, -4
 1205 065e 82B0     		sub	sp, sp, #8
 1206              		.cfi_def_cfa_offset 16
 1207 0660 00AF     		add	r7, sp, #0
 1208              		.cfi_def_cfa_register 7
 1209 0662 7860     		str	r0, [r7, #4]
 1210 0664 0B46     		mov	r3, r1
 1211 0666 FB70     		strb	r3, [r7, #3]
 483:../tasks/usb/usbd_conf.c ****   HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);
 1212              		.loc 1 483 0
 1213 0668 7B68     		ldr	r3, [r7, #4]
 1214 066a D3F82022 		ldr	r2, [r3, #544]
 1215 066e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1216 0670 1046     		mov	r0, r2
 1217 0672 1946     		mov	r1, r3
 1218 0674 FFF7FEFF 		bl	HAL_PCD_EP_ClrStall
 484:../tasks/usb/usbd_conf.c ****   return USBD_OK; 
 1219              		.loc 1 484 0
 1220 0678 0023     		movs	r3, #0
 485:../tasks/usb/usbd_conf.c **** }
 1221              		.loc 1 485 0
 1222 067a 1846     		mov	r0, r3
 1223 067c 0837     		adds	r7, r7, #8
 1224 067e BD46     		mov	sp, r7
 1225              		@ sp needed
 1226 0680 80BD     		pop	{r7, pc}
 1227              		.cfi_endproc
 1228              	.LFE76:
 1230 0682 00BF     		.align	2
 1231              		.global	USBD_LL_IsStallEP
 1232              		.thumb
 1233              		.thumb_func
 1235              	USBD_LL_IsStallEP:
 1236              	.LFB77:
 486:../tasks/usb/usbd_conf.c **** 
 487:../tasks/usb/usbd_conf.c **** /**
 488:../tasks/usb/usbd_conf.c ****   * @brief  Returns Stall condition.
 489:../tasks/usb/usbd_conf.c ****   * @param  pdev: Device handle
 490:../tasks/usb/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 491:../tasks/usb/usbd_conf.c ****   * @retval Stall (1: Yes, 0: No)
 492:../tasks/usb/usbd_conf.c ****   */
 493:../tasks/usb/usbd_conf.c **** uint8_t USBD_LL_IsStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 494:../tasks/usb/usbd_conf.c **** {
 1237              		.loc 1 494 0
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 16
 1240              		@ frame_needed = 1, uses_anonymous_args = 0
 1241              		@ link register save eliminated.
 1242 0684 80B4     		push	{r7}
 1243              		.cfi_def_cfa_offset 4
 1244              		.cfi_offset 7, -4
 1245 0686 85B0     		sub	sp, sp, #20
 1246              		.cfi_def_cfa_offset 24
 1247 0688 00AF     		add	r7, sp, #0
 1248              		.cfi_def_cfa_register 7
 1249 068a 7860     		str	r0, [r7, #4]
 1250 068c 0B46     		mov	r3, r1
 1251 068e FB70     		strb	r3, [r7, #3]
 495:../tasks/usb/usbd_conf.c ****   PCD_HandleTypeDef *hpcd = pdev->pData;
 1252              		.loc 1 495 0
 1253 0690 7B68     		ldr	r3, [r7, #4]
 1254 0692 D3F82032 		ldr	r3, [r3, #544]
 1255 0696 FB60     		str	r3, [r7, #12]
 496:../tasks/usb/usbd_conf.c ****   
 497:../tasks/usb/usbd_conf.c ****   if((ep_addr & 0x80) == 0x80)
 1256              		.loc 1 497 0
 1257 0698 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1258 069a 5BB2     		sxtb	r3, r3
 1259 069c 002B     		cmp	r3, #0
 1260 069e 0BDA     		bge	.L47
 498:../tasks/usb/usbd_conf.c ****   {
 499:../tasks/usb/usbd_conf.c ****     return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 1261              		.loc 1 499 0
 1262 06a0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1263 06a2 03F07F02 		and	r2, r3, #127
 1264 06a6 F968     		ldr	r1, [r7, #12]
 1265 06a8 1346     		mov	r3, r2
 1266 06aa DB00     		lsls	r3, r3, #3
 1267 06ac 9B1A     		subs	r3, r3, r2
 1268 06ae 9B00     		lsls	r3, r3, #2
 1269 06b0 0B44     		add	r3, r3, r1
 1270 06b2 3033     		adds	r3, r3, #48
 1271 06b4 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1272 06b6 0BE0     		b	.L48
 1273              	.L47:
 500:../tasks/usb/usbd_conf.c ****   }
 501:../tasks/usb/usbd_conf.c ****   else
 502:../tasks/usb/usbd_conf.c ****   {
 503:../tasks/usb/usbd_conf.c ****     return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 1274              		.loc 1 503 0
 1275 06b8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1276 06ba 03F07F02 		and	r2, r3, #127
 1277 06be F968     		ldr	r1, [r7, #12]
 1278 06c0 1346     		mov	r3, r2
 1279 06c2 DB00     		lsls	r3, r3, #3
 1280 06c4 9B1A     		subs	r3, r3, r2
 1281 06c6 9B00     		lsls	r3, r3, #2
 1282 06c8 0B44     		add	r3, r3, r1
 1283 06ca 03F5E873 		add	r3, r3, #464
 1284 06ce 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 1285              	.L48:
 504:../tasks/usb/usbd_conf.c ****   }
 505:../tasks/usb/usbd_conf.c **** }
 1286              		.loc 1 505 0
 1287 06d0 1846     		mov	r0, r3
 1288 06d2 1437     		adds	r7, r7, #20
 1289 06d4 BD46     		mov	sp, r7
 1290              		@ sp needed
 1291 06d6 5DF8047B 		ldr	r7, [sp], #4
 1292 06da 7047     		bx	lr
 1293              		.cfi_endproc
 1294              	.LFE77:
 1296              		.align	2
 1297              		.global	USBD_LL_SetUSBAddress
 1298              		.thumb
 1299              		.thumb_func
 1301              	USBD_LL_SetUSBAddress:
 1302              	.LFB78:
 506:../tasks/usb/usbd_conf.c **** 
 507:../tasks/usb/usbd_conf.c **** /**
 508:../tasks/usb/usbd_conf.c ****   * @brief  Assigns a USB address to the device.
 509:../tasks/usb/usbd_conf.c ****   * @param  pdev: Device handle
 510:../tasks/usb/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 511:../tasks/usb/usbd_conf.c ****   * @retval USBD Status
 512:../tasks/usb/usbd_conf.c ****   */
 513:../tasks/usb/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_SetUSBAddress(USBD_HandleTypeDef *pdev, uint8_t dev_addr)
 514:../tasks/usb/usbd_conf.c **** {
 1303              		.loc 1 514 0
 1304              		.cfi_startproc
 1305              		@ args = 0, pretend = 0, frame = 8
 1306              		@ frame_needed = 1, uses_anonymous_args = 0
 1307 06dc 80B5     		push	{r7, lr}
 1308              		.cfi_def_cfa_offset 8
 1309              		.cfi_offset 7, -8
 1310              		.cfi_offset 14, -4
 1311 06de 82B0     		sub	sp, sp, #8
 1312              		.cfi_def_cfa_offset 16
 1313 06e0 00AF     		add	r7, sp, #0
 1314              		.cfi_def_cfa_register 7
 1315 06e2 7860     		str	r0, [r7, #4]
 1316 06e4 0B46     		mov	r3, r1
 1317 06e6 FB70     		strb	r3, [r7, #3]
 515:../tasks/usb/usbd_conf.c ****   HAL_PCD_SetAddress(pdev->pData, dev_addr);
 1318              		.loc 1 515 0
 1319 06e8 7B68     		ldr	r3, [r7, #4]
 1320 06ea D3F82022 		ldr	r2, [r3, #544]
 1321 06ee FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1322 06f0 1046     		mov	r0, r2
 1323 06f2 1946     		mov	r1, r3
 1324 06f4 FFF7FEFF 		bl	HAL_PCD_SetAddress
 516:../tasks/usb/usbd_conf.c ****   return USBD_OK; 
 1325              		.loc 1 516 0
 1326 06f8 0023     		movs	r3, #0
 517:../tasks/usb/usbd_conf.c **** }
 1327              		.loc 1 517 0
 1328 06fa 1846     		mov	r0, r3
 1329 06fc 0837     		adds	r7, r7, #8
 1330 06fe BD46     		mov	sp, r7
 1331              		@ sp needed
 1332 0700 80BD     		pop	{r7, pc}
 1333              		.cfi_endproc
 1334              	.LFE78:
 1336 0702 00BF     		.align	2
 1337              		.global	USBD_LL_Transmit
 1338              		.thumb
 1339              		.thumb_func
 1341              	USBD_LL_Transmit:
 1342              	.LFB79:
 518:../tasks/usb/usbd_conf.c **** 
 519:../tasks/usb/usbd_conf.c **** /**
 520:../tasks/usb/usbd_conf.c ****   * @brief  Transmits data over an endpoint.
 521:../tasks/usb/usbd_conf.c ****   * @param  pdev: Device handle
 522:../tasks/usb/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 523:../tasks/usb/usbd_conf.c ****   * @param  pbuf: Pointer to data to be sent
 524:../tasks/usb/usbd_conf.c ****   * @param  size: Data size    
 525:../tasks/usb/usbd_conf.c ****   * @retval USBD Status
 526:../tasks/usb/usbd_conf.c ****   */
 527:../tasks/usb/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_Transmit(USBD_HandleTypeDef *pdev, 
 528:../tasks/usb/usbd_conf.c ****                                     uint8_t ep_addr,
 529:../tasks/usb/usbd_conf.c ****                                     uint8_t *pbuf,
 530:../tasks/usb/usbd_conf.c ****                                     uint16_t size)
 531:../tasks/usb/usbd_conf.c **** {
 1343              		.loc 1 531 0
 1344              		.cfi_startproc
 1345              		@ args = 0, pretend = 0, frame = 16
 1346              		@ frame_needed = 1, uses_anonymous_args = 0
 1347 0704 80B5     		push	{r7, lr}
 1348              		.cfi_def_cfa_offset 8
 1349              		.cfi_offset 7, -8
 1350              		.cfi_offset 14, -4
 1351 0706 84B0     		sub	sp, sp, #16
 1352              		.cfi_def_cfa_offset 24
 1353 0708 00AF     		add	r7, sp, #0
 1354              		.cfi_def_cfa_register 7
 1355 070a F860     		str	r0, [r7, #12]
 1356 070c 7A60     		str	r2, [r7, #4]
 1357 070e 0A46     		mov	r2, r1
 1358 0710 FA72     		strb	r2, [r7, #11]
 1359 0712 3B81     		strh	r3, [r7, #8]	@ movhi
 532:../tasks/usb/usbd_conf.c ****   HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 1360              		.loc 1 532 0
 1361 0714 FB68     		ldr	r3, [r7, #12]
 1362 0716 D3F82012 		ldr	r1, [r3, #544]
 1363 071a 3B89     		ldrh	r3, [r7, #8]
 1364 071c FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 1365 071e 0846     		mov	r0, r1
 1366 0720 1146     		mov	r1, r2
 1367 0722 7A68     		ldr	r2, [r7, #4]
 1368 0724 FFF7FEFF 		bl	HAL_PCD_EP_Transmit
 533:../tasks/usb/usbd_conf.c ****   return USBD_OK;
 1369              		.loc 1 533 0
 1370 0728 0023     		movs	r3, #0
 534:../tasks/usb/usbd_conf.c **** }
 1371              		.loc 1 534 0
 1372 072a 1846     		mov	r0, r3
 1373 072c 1037     		adds	r7, r7, #16
 1374 072e BD46     		mov	sp, r7
 1375              		@ sp needed
 1376 0730 80BD     		pop	{r7, pc}
 1377              		.cfi_endproc
 1378              	.LFE79:
 1380 0732 00BF     		.align	2
 1381              		.global	USBD_LL_PrepareReceive
 1382              		.thumb
 1383              		.thumb_func
 1385              	USBD_LL_PrepareReceive:
 1386              	.LFB80:
 535:../tasks/usb/usbd_conf.c **** 
 536:../tasks/usb/usbd_conf.c **** /**
 537:../tasks/usb/usbd_conf.c ****   * @brief  Prepares an endpoint for reception.
 538:../tasks/usb/usbd_conf.c ****   * @param  pdev: Device handle
 539:../tasks/usb/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 540:../tasks/usb/usbd_conf.c ****   * @param  pbuf: Pointer to data to be received
 541:../tasks/usb/usbd_conf.c ****   * @param  size: Data size
 542:../tasks/usb/usbd_conf.c ****   * @retval USBD Status
 543:../tasks/usb/usbd_conf.c ****   */
 544:../tasks/usb/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_PrepareReceive(USBD_HandleTypeDef *pdev, 
 545:../tasks/usb/usbd_conf.c ****                                           uint8_t ep_addr,
 546:../tasks/usb/usbd_conf.c ****                                           uint8_t *pbuf,
 547:../tasks/usb/usbd_conf.c ****                                           uint16_t size)
 548:../tasks/usb/usbd_conf.c **** {
 1387              		.loc 1 548 0
 1388              		.cfi_startproc
 1389              		@ args = 0, pretend = 0, frame = 16
 1390              		@ frame_needed = 1, uses_anonymous_args = 0
 1391 0734 80B5     		push	{r7, lr}
 1392              		.cfi_def_cfa_offset 8
 1393              		.cfi_offset 7, -8
 1394              		.cfi_offset 14, -4
 1395 0736 84B0     		sub	sp, sp, #16
 1396              		.cfi_def_cfa_offset 24
 1397 0738 00AF     		add	r7, sp, #0
 1398              		.cfi_def_cfa_register 7
 1399 073a F860     		str	r0, [r7, #12]
 1400 073c 7A60     		str	r2, [r7, #4]
 1401 073e 0A46     		mov	r2, r1
 1402 0740 FA72     		strb	r2, [r7, #11]
 1403 0742 3B81     		strh	r3, [r7, #8]	@ movhi
 549:../tasks/usb/usbd_conf.c ****   HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 1404              		.loc 1 549 0
 1405 0744 FB68     		ldr	r3, [r7, #12]
 1406 0746 D3F82012 		ldr	r1, [r3, #544]
 1407 074a 3B89     		ldrh	r3, [r7, #8]
 1408 074c FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 1409 074e 0846     		mov	r0, r1
 1410 0750 1146     		mov	r1, r2
 1411 0752 7A68     		ldr	r2, [r7, #4]
 1412 0754 FFF7FEFF 		bl	HAL_PCD_EP_Receive
 550:../tasks/usb/usbd_conf.c ****   return USBD_OK;
 1413              		.loc 1 550 0
 1414 0758 0023     		movs	r3, #0
 551:../tasks/usb/usbd_conf.c **** }
 1415              		.loc 1 551 0
 1416 075a 1846     		mov	r0, r3
 1417 075c 1037     		adds	r7, r7, #16
 1418 075e BD46     		mov	sp, r7
 1419              		@ sp needed
 1420 0760 80BD     		pop	{r7, pc}
 1421              		.cfi_endproc
 1422              	.LFE80:
 1424 0762 00BF     		.align	2
 1425              		.global	USBD_LL_GetRxDataSize
 1426              		.thumb
 1427              		.thumb_func
 1429              	USBD_LL_GetRxDataSize:
 1430              	.LFB81:
 552:../tasks/usb/usbd_conf.c **** 
 553:../tasks/usb/usbd_conf.c **** /**
 554:../tasks/usb/usbd_conf.c ****   * @brief  Returns the last transfered packet size.
 555:../tasks/usb/usbd_conf.c ****   * @param  pdev: Device handle
 556:../tasks/usb/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 557:../tasks/usb/usbd_conf.c ****   * @retval Recived Data Size
 558:../tasks/usb/usbd_conf.c ****   */
 559:../tasks/usb/usbd_conf.c **** uint32_t USBD_LL_GetRxDataSize(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 560:../tasks/usb/usbd_conf.c **** {
 1431              		.loc 1 560 0
 1432              		.cfi_startproc
 1433              		@ args = 0, pretend = 0, frame = 8
 1434              		@ frame_needed = 1, uses_anonymous_args = 0
 1435 0764 80B5     		push	{r7, lr}
 1436              		.cfi_def_cfa_offset 8
 1437              		.cfi_offset 7, -8
 1438              		.cfi_offset 14, -4
 1439 0766 82B0     		sub	sp, sp, #8
 1440              		.cfi_def_cfa_offset 16
 1441 0768 00AF     		add	r7, sp, #0
 1442              		.cfi_def_cfa_register 7
 1443 076a 7860     		str	r0, [r7, #4]
 1444 076c 0B46     		mov	r3, r1
 1445 076e FB70     		strb	r3, [r7, #3]
 561:../tasks/usb/usbd_conf.c ****   return HAL_PCD_EP_GetRxCount(pdev->pData, ep_addr);
 1446              		.loc 1 561 0
 1447 0770 7B68     		ldr	r3, [r7, #4]
 1448 0772 D3F82022 		ldr	r2, [r3, #544]
 1449 0776 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1450 0778 1046     		mov	r0, r2
 1451 077a 1946     		mov	r1, r3
 1452 077c FFF7FEFF 		bl	HAL_PCD_EP_GetRxCount
 1453 0780 0346     		mov	r3, r0
 562:../tasks/usb/usbd_conf.c **** }
 1454              		.loc 1 562 0
 1455 0782 1846     		mov	r0, r3
 1456 0784 0837     		adds	r7, r7, #8
 1457 0786 BD46     		mov	sp, r7
 1458              		@ sp needed
 1459 0788 80BD     		pop	{r7, pc}
 1460              		.cfi_endproc
 1461              	.LFE81:
 1463 078a 00BF     		.align	2
 1464              		.global	USBD_LL_Delay
 1465              		.thumb
 1466              		.thumb_func
 1468              	USBD_LL_Delay:
 1469              	.LFB82:
 563:../tasks/usb/usbd_conf.c **** 
 564:../tasks/usb/usbd_conf.c **** /**
 565:../tasks/usb/usbd_conf.c ****   * @brief  Delays routine for the USB Device Library.
 566:../tasks/usb/usbd_conf.c ****   * @param  Delay: Delay in ms
 567:../tasks/usb/usbd_conf.c ****   * @retval None
 568:../tasks/usb/usbd_conf.c ****   */
 569:../tasks/usb/usbd_conf.c **** void USBD_LL_Delay(uint32_t Delay)
 570:../tasks/usb/usbd_conf.c **** {
 1470              		.loc 1 570 0
 1471              		.cfi_startproc
 1472              		@ args = 0, pretend = 0, frame = 8
 1473              		@ frame_needed = 1, uses_anonymous_args = 0
 1474 078c 80B5     		push	{r7, lr}
 1475              		.cfi_def_cfa_offset 8
 1476              		.cfi_offset 7, -8
 1477              		.cfi_offset 14, -4
 1478 078e 82B0     		sub	sp, sp, #8
 1479              		.cfi_def_cfa_offset 16
 1480 0790 00AF     		add	r7, sp, #0
 1481              		.cfi_def_cfa_register 7
 1482 0792 7860     		str	r0, [r7, #4]
 571:../tasks/usb/usbd_conf.c ****   HAL_Delay(Delay);
 1483              		.loc 1 571 0
 1484 0794 7868     		ldr	r0, [r7, #4]
 1485 0796 FFF7FEFF 		bl	HAL_Delay
 572:../tasks/usb/usbd_conf.c **** }
 1486              		.loc 1 572 0
 1487 079a 0837     		adds	r7, r7, #8
 1488 079c BD46     		mov	sp, r7
 1489              		@ sp needed
 1490 079e 80BD     		pop	{r7, pc}
 1491              		.cfi_endproc
 1492              	.LFE82:
 1494              	.Letext0:
 1495              		.file 3 "c:\\program files (x86)\\codesourcery\\arm-none-eabi\\include\\stdint.h"
 1496              		.file 4 "D:\\workspace\\console800480\\system/core_cm3.h"
 1497              		.file 5 "D:\\workspace\\console800480\\system/stm32f217xx.h"
 1498              		.file 6 "D:\\workspace\\console800480\\STM32F2xx_HAL_Driver\\Inc/stm32f2xx_hal_def.h"
 1499              		.file 7 "D:\\workspace\\console800480\\STM32F2xx_HAL_Driver\\Inc/stm32f2xx_hal_gpio.h"
 1500              		.file 8 "D:\\workspace\\console800480\\STM32F2xx_HAL_Driver\\Inc/stm32f2xx_ll_usb.h"
 1501              		.file 9 "D:\\workspace\\console800480\\STM32F2xx_HAL_Driver\\Inc/stm32f2xx_hal_pcd.h"
 1502              		.file 10 "D:\\workspace\\console800480\\tasks\\usb\\STM32_USB_Device_Library\\Core\\Inc/usbd_def.h
DEFINED SYMBOLS
                            *ABS*:00000000 usbd_conf.c
                            *COM*:000003b0 hpcd
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:19     .text:00000000 $t
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:24     .text:00000000 HAL_PCD_MspInit
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:165    .text:00000110 HAL_PCD_MspDeInit
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:248    .text:000001b4 HAL_PCD_SetupStageCallback
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:284    .text:000001d8 HAL_PCD_DataOutStageCallback
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:331    .text:00000210 HAL_PCD_DataInStageCallback
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:378    .text:00000248 HAL_PCD_SOFCallback
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:411    .text:00000264 HAL_PCD_ResetCallback
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:481    .text:000002b4 HAL_PCD_SuspendCallback
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:631    .text:000003c4 HAL_PCD_ResumeCallback
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:674    .text:000003f8 HAL_PCD_ISOOUTIncompleteCallback
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:711    .text:0000041c HAL_PCD_ISOINIncompleteCallback
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:748    .text:00000440 HAL_PCD_ConnectCallback
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:781    .text:0000045c HAL_PCD_DisconnectCallback
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:814    .text:00000478 USBD_LL_Init
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:926    .text:0000055c USBD_LL_DeInit
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:962    .text:0000057c USBD_LL_Start
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:998    .text:0000059c USBD_LL_Stop
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:1034   .text:000005bc USBD_LL_OpenEP
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:1075   .text:000005e4 USBD_LL_CloseEP
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:1115   .text:0000060c USBD_LL_FlushEP
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:1155   .text:00000634 USBD_LL_StallEP
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:1195   .text:0000065c USBD_LL_ClearStallEP
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:1235   .text:00000684 USBD_LL_IsStallEP
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:1301   .text:000006dc USBD_LL_SetUSBAddress
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:1341   .text:00000704 USBD_LL_Transmit
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:1385   .text:00000734 USBD_LL_PrepareReceive
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:1429   .text:00000764 USBD_LL_GetRxDataSize
C:\Users\sagok\AppData\Local\Temp\ccKhUak7.s:1468   .text:0000078c USBD_LL_Delay
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.7f551ac7fcad8b79b9df4bfdaa536673
                           .group:00000000 wm4.stm32f2xx_hal_conf.h.40.007126baefb9f966c36646edbf8040d2
                           .group:00000000 wm4.stm32f2xx.h.57.5ec1581efc43612c411d33a8686e9ec7
                           .group:00000000 wm4.stm32f217xx.h.52.9c940d76d00294b78837dc334c172fdd
                           .group:00000000 wm4.core_cm3.h.32.49180ccb4d36cabd2d7016d2a51d91ae
                           .group:00000000 wm4.newlib.h.8.384a112feabb3bef7b573ae48cde2e3b
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4.config.h.183.aa62afef667fb61d15fa64c48beb2f14
                           .group:00000000 wm4._ansi.h.23.5644b60c990a4800b02a6e654e88f93a
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:00000000 wm4.core_cm3.h.130.63ab2348a6eed0fdb318040d970b676c
                           .group:00000000 wm4.stm32f217xx.h.978.a5c681952b2f704a0e7f2ba21d08adf5
                           .group:00000000 wm4.stm32f2xx.h.142.bc2155a1f7498bab16371e38413a9e41
                           .group:00000000 wm4.stm32f2xx_hal_def.h.74.8ad2dc8aa82c4fd02e5aeaae592641ba
                           .group:00000000 wm4.stm32f2xx_hal_rcc.h.142.ec0f91cc6576a6acebd17e6dd85829ae
                           .group:00000000 wm4.stm32f2xx_hal_rcc_ex.h.40.0829033e864455c6bdd0db01f8ba5a50
                           .group:00000000 wm4.stm32f2xx_hal_gpio.h.40.ba64e0bb94d9a68835f80159f39a86f1
                           .group:00000000 wm4.stm32f2xx_hal_gpio_ex.h.40.24e547fd402281923f446b510381083f
                           .group:00000000 wm4.stm32f2xx_hal_dma.h.40.5d9732ace2a21a4526ce8f0c52428fff
                           .group:00000000 wm4.stm32f2xx_hal_cortex.h.40.e10263d2ec5d4fa79b4180ce1a38aff1
                           .group:00000000 wm4.stm32f2xx_hal_adc.h.40.89ac8b78113cac4cf63847587daabac9
                           .group:00000000 wm4.stm32f2xx_hal_adc_ex.h.40.7de68ed256ef25526ee31cc017f2c291
                           .group:00000000 wm4.stm32f2xx_hal_flash.h.40.c3171719ce015e9cff20c795e44e886d
                           .group:00000000 wm4.stm32f2xx_hal_flash_ex.h.40.7389508bd24a0aeb077bde0c9fb651eb
                           .group:00000000 wm4.stm32f2xx_ll_fsmc.h.40.c1c32f2e1862f4dd342bd9b80fb895bb
                           .group:00000000 wm4.stm32f2xx_hal_pwr.h.40.812df32e5c31b609a128e9db0eb4cbd0
                           .group:00000000 wm4.stm32f2xx_hal_rtc.h.40.850fda5fe2cce8797446913dee18382f
                           .group:00000000 wm4.stm32f2xx_hal_rtc_ex.h.40.f3e0c408e3bf4e8a0352d7ec9a18a822
                           .group:00000000 wm4.stm32f2xx_ll_sdmmc.h.40.3719ab487c4b77401c572f459adf6eb7
                           .group:00000000 wm4.stm32f2xx_hal_sd.h.58.760215394dcc316161a6482c0af9b866
                           .group:00000000 wm4.stm32f2xx_hal_spi.h.40.7984243dbaba8b21c6392998a47e6987
                           .group:00000000 wm4.stm32f2xx_hal_tim.h.40.d79172f25d0e9a15dc346aba8515bdd6
                           .group:00000000 wm4.stm32f2xx_hal_tim_ex.h.40.361f280a7a3f60b4b238bb99ca728d83
                           .group:00000000 wm4.stm32f2xx_hal_uart.h.40.d74def561ae6f78f40f477c8426ecbef
                           .group:00000000 wm4.stm32f2xx_ll_usb.h.40.9b0206a05bc6ce3bec1648b51f22cb81
                           .group:00000000 wm4.stm32f2xx_hal_pcd.h.99.11faba414c39e357b2f23364912d0605
                           .group:00000000 wm4.stm32f2xx_hal_hcd.h.40.44ee5e972983ae0139ddbacdc75c44ef
                           .group:00000000 wm4.stm32f2xx_hal.h.64.ed79ee83e52b151b3c365392b398f866
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4.stddef.h.184.159df79b4ca79c76561572a55985524c
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.59.db8450f33c1f6150c0372fa1091a887a
                           .group:00000000 wm4.stddef.h.348.9a99de77b6ba3b4278b57e9cc6d6e349
                           .group:00000000 wm4.reent.h.16.567d760e6ae9ad7f917851a308bd7a57
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4.stddef.h.39.7e3d906ac58942e0b374c527445f5de5
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.5759fe41f87f5211a5952dfb1fc64f19
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.64.f9f1bb6b0d3d7e12f6a27968d859709c
                           .group:00000000 wm4.stdlib.h.18.8bab2fb43ac4e90235390733c30a4530
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.55.7091a050e07f1c4abd225630fe3d62f1
                           .group:00000000 wm4.cdefs.h.56.efab90f4d89fbc41d6b3a5c5fb0d3d0f
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.string.h.126.6ff3aa59129e7f66b2c273baf353e066
                           .group:00000000 wm4.Display.h.39.49592f1e6d055d6383457fd20cdd98de
                           .group:00000000 wm4.usbd_conf.h.42.6b5dabdfef26be13dabbf5c06e1837cb
                           .group:00000000 wm4.usbd_def.h.31.c6dc8a88074757ab7e1498fc76ddfad4

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
USBD_LL_SetupStage
USBD_LL_DataOutStage
USBD_LL_DataInStage
USBD_LL_SOF
USBD_LL_SetSpeed
USBD_LL_Reset
USBD_LL_Suspend
USBD_LL_Resume
USBD_LL_IsoOUTIncomplete
USBD_LL_IsoINIncomplete
USBD_LL_DevConnected
USBD_LL_DevDisconnected
HAL_PCD_Init
HAL_PCD_SetRxFiFo
HAL_PCD_SetTxFiFo
HAL_PCD_DeInit
HAL_PCD_Start
HAL_PCD_Stop
HAL_PCD_EP_Open
HAL_PCD_EP_Close
HAL_PCD_EP_Flush
HAL_PCD_EP_SetStall
HAL_PCD_EP_ClrStall
HAL_PCD_SetAddress
HAL_PCD_EP_Transmit
HAL_PCD_EP_Receive
HAL_PCD_EP_GetRxCount
HAL_Delay
