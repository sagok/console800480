   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"usbh_diskio.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	USBH_Driver
  19              		.data
  20              		.align	2
  23              	USBH_Driver:
  24 0000 00000000 		.word	USBH_initialize
  25 0004 00000000 		.word	USBH_status
  26 0008 00000000 		.word	USBH_read
  27 000c 00000000 		.word	USBH_write
  28 0010 00000000 		.word	USBH_ioctl
  29              		.text
  30              		.align	2
  31              		.global	USBH_initialize
  32              		.thumb
  33              		.thumb_func
  35              	USBH_initialize:
  36              	.LFB55:
  37              		.file 1 "../tasks/usb/usbh_diskio.c"
   1:../tasks/usb/usbh_diskio.c **** /**
   2:../tasks/usb/usbh_diskio.c ****   ******************************************************************************
   3:../tasks/usb/usbh_diskio.c ****   * @file    usbh_diskio.c 
   4:../tasks/usb/usbh_diskio.c ****   * @author  MCD Application Team
   5:../tasks/usb/usbh_diskio.c ****   * @version V1.0.0
   6:../tasks/usb/usbh_diskio.c ****   * @date    18-February-2014
   7:../tasks/usb/usbh_diskio.c ****   * @brief   USB Key Disk I/O driver.
   8:../tasks/usb/usbh_diskio.c ****   ******************************************************************************
   9:../tasks/usb/usbh_diskio.c ****   * @attention
  10:../tasks/usb/usbh_diskio.c ****   *
  11:../tasks/usb/usbh_diskio.c ****   * <h2><center>&copy; COPYRIGHT 2014 STMicroelectronics</center></h2>
  12:../tasks/usb/usbh_diskio.c ****   *
  13:../tasks/usb/usbh_diskio.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  14:../tasks/usb/usbh_diskio.c ****   * You may not use this file except in compliance with the License.
  15:../tasks/usb/usbh_diskio.c ****   * You may obtain a copy of the License at:
  16:../tasks/usb/usbh_diskio.c ****   *
  17:../tasks/usb/usbh_diskio.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  18:../tasks/usb/usbh_diskio.c ****   *
  19:../tasks/usb/usbh_diskio.c ****   * Unless required by applicable law or agreed to in writing, software 
  20:../tasks/usb/usbh_diskio.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  21:../tasks/usb/usbh_diskio.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:../tasks/usb/usbh_diskio.c ****   * See the License for the specific language governing permissions and
  23:../tasks/usb/usbh_diskio.c ****   * limitations under the License.
  24:../tasks/usb/usbh_diskio.c ****   *
  25:../tasks/usb/usbh_diskio.c ****   ******************************************************************************
  26:../tasks/usb/usbh_diskio.c ****   */ 
  27:../tasks/usb/usbh_diskio.c **** 
  28:../tasks/usb/usbh_diskio.c **** /* Includes ------------------------------------------------------------------*/
  29:../tasks/usb/usbh_diskio.c **** #include <string.h>
  30:../tasks/usb/usbh_diskio.c **** #include "ff_gen_drv.h"
  31:../tasks/usb/usbh_diskio.c **** 
  32:../tasks/usb/usbh_diskio.c **** /* Private typedef -----------------------------------------------------------*/
  33:../tasks/usb/usbh_diskio.c **** /* Private define ------------------------------------------------------------*/
  34:../tasks/usb/usbh_diskio.c **** /* Private variables ---------------------------------------------------------*/
  35:../tasks/usb/usbh_diskio.c **** extern USBH_HandleTypeDef  HOST_HANDLE;
  36:../tasks/usb/usbh_diskio.c **** 
  37:../tasks/usb/usbh_diskio.c **** /* Private function prototypes -----------------------------------------------*/
  38:../tasks/usb/usbh_diskio.c **** DSTATUS USBH_initialize (void);
  39:../tasks/usb/usbh_diskio.c **** DSTATUS USBH_status (void);
  40:../tasks/usb/usbh_diskio.c **** DRESULT USBH_read (BYTE*, DWORD, BYTE);
  41:../tasks/usb/usbh_diskio.c **** 
  42:../tasks/usb/usbh_diskio.c **** #if _USE_WRITE == 1
  43:../tasks/usb/usbh_diskio.c ****   DRESULT USBH_write (const BYTE*, DWORD, BYTE);
  44:../tasks/usb/usbh_diskio.c **** #endif /* _USE_WRITE == 1 */
  45:../tasks/usb/usbh_diskio.c **** 
  46:../tasks/usb/usbh_diskio.c **** #if _USE_IOCTL == 1
  47:../tasks/usb/usbh_diskio.c ****   DRESULT USBH_ioctl (BYTE, void*);
  48:../tasks/usb/usbh_diskio.c **** #endif /* _USE_IOCTL == 1 */
  49:../tasks/usb/usbh_diskio.c ****   
  50:../tasks/usb/usbh_diskio.c **** Diskio_drvTypeDef  USBH_Driver =
  51:../tasks/usb/usbh_diskio.c **** {
  52:../tasks/usb/usbh_diskio.c ****   USBH_initialize,
  53:../tasks/usb/usbh_diskio.c ****   USBH_status,
  54:../tasks/usb/usbh_diskio.c ****   USBH_read, 
  55:../tasks/usb/usbh_diskio.c **** #if  _USE_WRITE == 1
  56:../tasks/usb/usbh_diskio.c ****   USBH_write,
  57:../tasks/usb/usbh_diskio.c **** #endif /* _USE_WRITE == 1 */  
  58:../tasks/usb/usbh_diskio.c **** #if  _USE_IOCTL == 1
  59:../tasks/usb/usbh_diskio.c ****   USBH_ioctl,
  60:../tasks/usb/usbh_diskio.c **** #endif /* _USE_IOCTL == 1 */
  61:../tasks/usb/usbh_diskio.c **** };
  62:../tasks/usb/usbh_diskio.c **** 
  63:../tasks/usb/usbh_diskio.c **** /* Private functions ---------------------------------------------------------*/
  64:../tasks/usb/usbh_diskio.c **** 
  65:../tasks/usb/usbh_diskio.c **** /**
  66:../tasks/usb/usbh_diskio.c ****   * @brief  Initializes a Drive
  67:../tasks/usb/usbh_diskio.c ****   * @param  None
  68:../tasks/usb/usbh_diskio.c ****   * @retval DSTATUS: Operation status
  69:../tasks/usb/usbh_diskio.c ****   */
  70:../tasks/usb/usbh_diskio.c **** DSTATUS USBH_initialize(void)
  71:../tasks/usb/usbh_diskio.c **** {
  38              		.loc 1 71 0
  39              		.cfi_startproc
  40              		@ args = 0, pretend = 0, frame = 0
  41              		@ frame_needed = 1, uses_anonymous_args = 0
  42              		@ link register save eliminated.
  43 0000 80B4     		push	{r7}
  44              		.cfi_def_cfa_offset 4
  45              		.cfi_offset 7, -4
  46 0002 00AF     		add	r7, sp, #0
  47              		.cfi_def_cfa_register 7
  72:../tasks/usb/usbh_diskio.c ****   return RES_OK;
  48              		.loc 1 72 0
  49 0004 0023     		movs	r3, #0
  73:../tasks/usb/usbh_diskio.c **** }
  50              		.loc 1 73 0
  51 0006 1846     		mov	r0, r3
  52 0008 BD46     		mov	sp, r7
  53              		@ sp needed
  54 000a 5DF8047B 		ldr	r7, [sp], #4
  55 000e 7047     		bx	lr
  56              		.cfi_endproc
  57              	.LFE55:
  59              		.align	2
  60              		.global	USBH_status
  61              		.thumb
  62              		.thumb_func
  64              	USBH_status:
  65              	.LFB56:
  74:../tasks/usb/usbh_diskio.c **** 
  75:../tasks/usb/usbh_diskio.c **** /**
  76:../tasks/usb/usbh_diskio.c ****   * @brief  Gets Disk Status
  77:../tasks/usb/usbh_diskio.c ****   * @param  None
  78:../tasks/usb/usbh_diskio.c ****   * @retval DSTATUS: Operation status
  79:../tasks/usb/usbh_diskio.c ****   */
  80:../tasks/usb/usbh_diskio.c **** DSTATUS USBH_status(void)
  81:../tasks/usb/usbh_diskio.c **** {
  66              		.loc 1 81 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 8
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70 0010 80B5     		push	{r7, lr}
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 7, -8
  73              		.cfi_offset 14, -4
  74 0012 82B0     		sub	sp, sp, #8
  75              		.cfi_def_cfa_offset 16
  76 0014 00AF     		add	r7, sp, #0
  77              		.cfi_def_cfa_register 7
  82:../tasks/usb/usbh_diskio.c ****   DRESULT res = RES_ERROR;
  78              		.loc 1 82 0
  79 0016 0123     		movs	r3, #1
  80 0018 FB71     		strb	r3, [r7, #7]
  83:../tasks/usb/usbh_diskio.c ****   
  84:../tasks/usb/usbh_diskio.c ****   if(USBH_MSC_UnitIsReady(&HOST_HANDLE, 0))
  81              		.loc 1 84 0
  82 001a 40F20000 		movw	r0, #:lower16:hUSB_Host
  83 001e C0F20000 		movt	r0, #:upper16:hUSB_Host
  84 0022 0021     		movs	r1, #0
  85 0024 FFF7FEFF 		bl	USBH_MSC_UnitIsReady
  86 0028 0346     		mov	r3, r0
  87 002a 002B     		cmp	r3, #0
  88 002c 02D0     		beq	.L4
  85:../tasks/usb/usbh_diskio.c ****   {
  86:../tasks/usb/usbh_diskio.c ****     res = RES_OK;
  89              		.loc 1 86 0
  90 002e 0023     		movs	r3, #0
  91 0030 FB71     		strb	r3, [r7, #7]
  92 0032 01E0     		b	.L5
  93              	.L4:
  87:../tasks/usb/usbh_diskio.c ****   }
  88:../tasks/usb/usbh_diskio.c ****   else
  89:../tasks/usb/usbh_diskio.c ****   {
  90:../tasks/usb/usbh_diskio.c ****     res = RES_ERROR;
  94              		.loc 1 90 0
  95 0034 0123     		movs	r3, #1
  96 0036 FB71     		strb	r3, [r7, #7]
  97              	.L5:
  91:../tasks/usb/usbh_diskio.c ****   }
  92:../tasks/usb/usbh_diskio.c ****   
  93:../tasks/usb/usbh_diskio.c ****   return res;
  98              		.loc 1 93 0
  99 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  94:../tasks/usb/usbh_diskio.c **** }
 100              		.loc 1 94 0
 101 003a 1846     		mov	r0, r3
 102 003c 0837     		adds	r7, r7, #8
 103 003e BD46     		mov	sp, r7
 104              		@ sp needed
 105 0040 80BD     		pop	{r7, pc}
 106              		.cfi_endproc
 107              	.LFE56:
 109              		.section	.rodata
 110              		.align	2
 111              	.LC0:
 112 0000 4552524F 		.ascii	"ERROR: \000"
 112      523A2000 
 113              		.align	2
 114              	.LC1:
 115 0008 55534220 		.ascii	"USB Disk is not ready!\000"
 115      4469736B 
 115      20697320 
 115      6E6F7420 
 115      72656164 
 116              		.text
 117 0042 00BF     		.align	2
 118              		.global	USBH_read
 119              		.thumb
 120              		.thumb_func
 122              	USBH_read:
 123              	.LFB57:
  95:../tasks/usb/usbh_diskio.c **** 
  96:../tasks/usb/usbh_diskio.c **** /**
  97:../tasks/usb/usbh_diskio.c ****   * @brief  Reads Sector(s) 
  98:../tasks/usb/usbh_diskio.c ****   * @param  *buff: Data buffer to store read data
  99:../tasks/usb/usbh_diskio.c ****   * @param  sector: Sector address (LBA)
 100:../tasks/usb/usbh_diskio.c ****   * @param  count: Number of sectors to read (1..128)
 101:../tasks/usb/usbh_diskio.c ****   * @retval DRESULT: Operation result
 102:../tasks/usb/usbh_diskio.c ****   */
 103:../tasks/usb/usbh_diskio.c **** DRESULT USBH_read(BYTE *buff, DWORD sector, BYTE count)
 104:../tasks/usb/usbh_diskio.c **** {
 124              		.loc 1 104 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 584
 127              		@ frame_needed = 1, uses_anonymous_args = 0
 128 0044 80B5     		push	{r7, lr}
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 7, -8
 131              		.cfi_offset 14, -4
 132 0046 ADF5147D 		sub	sp, sp, #592
 133              		.cfi_def_cfa_offset 600
 134 004a 02AF     		add	r7, sp, #8
 135              		.cfi_def_cfa 7, 592
 136 004c 07F10C03 		add	r3, r7, #12
 137 0050 1860     		str	r0, [r3]
 138 0052 07F10803 		add	r3, r7, #8
 139 0056 1960     		str	r1, [r3]
 140 0058 FB1D     		adds	r3, r7, #7
 141 005a 1A70     		strb	r2, [r3]
 105:../tasks/usb/usbh_diskio.c ****   DRESULT res = RES_ERROR;
 142              		.loc 1 105 0
 143 005c 0123     		movs	r3, #1
 144 005e 87F84732 		strb	r3, [r7, #583]
 106:../tasks/usb/usbh_diskio.c ****   MSC_LUNTypeDef info;
 107:../tasks/usb/usbh_diskio.c ****   USBH_StatusTypeDef  status = USBH_OK;
 145              		.loc 1 107 0
 146 0062 0023     		movs	r3, #0
 147 0064 87F84632 		strb	r3, [r7, #582]
 108:../tasks/usb/usbh_diskio.c ****   DWORD scratch [_MAX_SS / 4];
 109:../tasks/usb/usbh_diskio.c ****   
 110:../tasks/usb/usbh_diskio.c ****   if ((DWORD)buff & 3) /* DMA Alignment issue, do single up to aligned buffer */
 148              		.loc 1 110 0
 149 0068 07F10C03 		add	r3, r7, #12
 150 006c 1B68     		ldr	r3, [r3]
 151 006e 03F00303 		and	r3, r3, #3
 152 0072 002B     		cmp	r3, #0
 153 0074 36D0     		beq	.L8
 111:../tasks/usb/usbh_diskio.c ****   {
 112:../tasks/usb/usbh_diskio.c ****     while ((count--)&&(status == USBH_OK))
 154              		.loc 1 112 0
 155 0076 29E0     		b	.L9
 156              	.L12:
 113:../tasks/usb/usbh_diskio.c ****     {
 114:../tasks/usb/usbh_diskio.c ****       status = USBH_MSC_Read(&HOST_HANDLE, 0, sector + count, (uint8_t *)scratch, 1);
 157              		.loc 1 114 0
 158 0078 FB1D     		adds	r3, r7, #7
 159 007a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 160 007c 07F10803 		add	r3, r7, #8
 161 0080 1B68     		ldr	r3, [r3]
 162 0082 1A44     		add	r2, r2, r3
 163 0084 07F11003 		add	r3, r7, #16
 164 0088 0121     		movs	r1, #1
 165 008a 0091     		str	r1, [sp]
 166 008c 40F20000 		movw	r0, #:lower16:hUSB_Host
 167 0090 C0F20000 		movt	r0, #:upper16:hUSB_Host
 168 0094 0021     		movs	r1, #0
 169 0096 FFF7FEFF 		bl	USBH_MSC_Read
 170 009a 0346     		mov	r3, r0
 171 009c 87F84632 		strb	r3, [r7, #582]
 115:../tasks/usb/usbh_diskio.c ****       if(status == USBH_OK)
 172              		.loc 1 115 0
 173 00a0 97F84632 		ldrb	r3, [r7, #582]	@ zero_extendqisi2
 174 00a4 002B     		cmp	r3, #0
 175 00a6 0FD1     		bne	.L10
 116:../tasks/usb/usbh_diskio.c ****       {
 117:../tasks/usb/usbh_diskio.c ****         memcpy (&buff[count * _MAX_SS] ,scratch, _MAX_SS);
 176              		.loc 1 117 0
 177 00a8 FB1D     		adds	r3, r7, #7
 178 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 179 00ac 5B02     		lsls	r3, r3, #9
 180 00ae 07F10C02 		add	r2, r7, #12
 181 00b2 1268     		ldr	r2, [r2]
 182 00b4 1A44     		add	r2, r2, r3
 183 00b6 07F11003 		add	r3, r7, #16
 184 00ba 1046     		mov	r0, r2
 185 00bc 1946     		mov	r1, r3
 186 00be 4FF40072 		mov	r2, #512
 187 00c2 FFF7FEFF 		bl	memcpy
 188 00c6 01E0     		b	.L9
 189              	.L10:
 118:../tasks/usb/usbh_diskio.c ****       }
 119:../tasks/usb/usbh_diskio.c ****       else
 120:../tasks/usb/usbh_diskio.c ****       {
 121:../tasks/usb/usbh_diskio.c ****         break;
 190              		.loc 1 121 0
 191 00c8 00BF     		nop
 192 00ca 1EE0     		b	.L13
 193              	.L9:
 112:../tasks/usb/usbh_diskio.c ****     {
 194              		.loc 1 112 0 discriminator 1
 195 00cc FB1D     		adds	r3, r7, #7
 196 00ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 197 00d0 FA1D     		adds	r2, r7, #7
 198 00d2 591E     		subs	r1, r3, #1
 199 00d4 1170     		strb	r1, [r2]
 200 00d6 002B     		cmp	r3, #0
 201 00d8 17D0     		beq	.L13
 112:../tasks/usb/usbh_diskio.c ****     {
 202              		.loc 1 112 0 is_stmt 0 discriminator 2
 203 00da 97F84632 		ldrb	r3, [r7, #582]	@ zero_extendqisi2
 204 00de 002B     		cmp	r3, #0
 205 00e0 CAD0     		beq	.L12
 206 00e2 12E0     		b	.L13
 207              	.L8:
 122:../tasks/usb/usbh_diskio.c ****       }
 123:../tasks/usb/usbh_diskio.c ****     }
 124:../tasks/usb/usbh_diskio.c ****   }
 125:../tasks/usb/usbh_diskio.c ****   else
 126:../tasks/usb/usbh_diskio.c ****   {
 127:../tasks/usb/usbh_diskio.c ****     status = USBH_MSC_Read(&HOST_HANDLE, 0, sector, buff, count);
 208              		.loc 1 127 0 is_stmt 1
 209 00e4 FB1D     		adds	r3, r7, #7
 210 00e6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 211 00e8 07F10802 		add	r2, r7, #8
 212 00ec 07F10C03 		add	r3, r7, #12
 213 00f0 0091     		str	r1, [sp]
 214 00f2 40F20000 		movw	r0, #:lower16:hUSB_Host
 215 00f6 C0F20000 		movt	r0, #:upper16:hUSB_Host
 216 00fa 0021     		movs	r1, #0
 217 00fc 1268     		ldr	r2, [r2]
 218 00fe 1B68     		ldr	r3, [r3]
 219 0100 FFF7FEFF 		bl	USBH_MSC_Read
 220 0104 0346     		mov	r3, r0
 221 0106 87F84632 		strb	r3, [r7, #582]
 222              	.L13:
 128:../tasks/usb/usbh_diskio.c ****   }
 129:../tasks/usb/usbh_diskio.c ****   
 130:../tasks/usb/usbh_diskio.c ****   if(status == USBH_OK)
 223              		.loc 1 130 0
 224 010a 97F84632 		ldrb	r3, [r7, #582]	@ zero_extendqisi2
 225 010e 002B     		cmp	r3, #0
 226 0110 03D1     		bne	.L14
 131:../tasks/usb/usbh_diskio.c ****   {
 132:../tasks/usb/usbh_diskio.c ****     res = RES_OK;
 227              		.loc 1 132 0
 228 0112 0023     		movs	r3, #0
 229 0114 87F84732 		strb	r3, [r7, #583]
 230 0118 28E0     		b	.L15
 231              	.L14:
 133:../tasks/usb/usbh_diskio.c ****   }
 134:../tasks/usb/usbh_diskio.c ****   else
 135:../tasks/usb/usbh_diskio.c ****   {
 136:../tasks/usb/usbh_diskio.c ****     USBH_MSC_GetLUNInfo(&HOST_HANDLE, 0, &info); 
 232              		.loc 1 136 0
 233 011a 07F50473 		add	r3, r7, #528
 234 011e 40F20000 		movw	r0, #:lower16:hUSB_Host
 235 0122 C0F20000 		movt	r0, #:upper16:hUSB_Host
 236 0126 0021     		movs	r1, #0
 237 0128 1A46     		mov	r2, r3
 238 012a FFF7FEFF 		bl	USBH_MSC_GetLUNInfo
 137:../tasks/usb/usbh_diskio.c ****     
 138:../tasks/usb/usbh_diskio.c ****     switch (info.sense.asc)
 239              		.loc 1 138 0
 240 012e 97F81D32 		ldrb	r3, [r7, #541]	@ zero_extendqisi2
 241 0132 282B     		cmp	r3, #40
 242 0134 03D0     		beq	.L17
 243 0136 3A2B     		cmp	r3, #58
 244 0138 01D0     		beq	.L17
 245 013a 042B     		cmp	r3, #4
 246 013c 12D1     		bne	.L19
 247              	.L17:
 139:../tasks/usb/usbh_diskio.c ****     {
 140:../tasks/usb/usbh_diskio.c ****     case SCSI_ASC_LOGICAL_UNIT_NOT_READY:
 141:../tasks/usb/usbh_diskio.c ****     case SCSI_ASC_MEDIUM_NOT_PRESENT:
 142:../tasks/usb/usbh_diskio.c ****     case SCSI_ASC_NOT_READY_TO_READY_CHANGE: 
 143:../tasks/usb/usbh_diskio.c ****       USBH_ErrLog ("USB Disk is not ready!");  
 248              		.loc 1 143 0
 249 013e 40F20000 		movw	r0, #:lower16:.LC0
 250 0142 C0F20000 		movt	r0, #:upper16:.LC0
 251 0146 FFF7FEFF 		bl	printf
 252 014a 40F20000 		movw	r0, #:lower16:.LC1
 253 014e C0F20000 		movt	r0, #:upper16:.LC1
 254 0152 FFF7FEFF 		bl	printf
 255 0156 0A20     		movs	r0, #10
 256 0158 FFF7FEFF 		bl	putchar
 144:../tasks/usb/usbh_diskio.c ****       res = RES_NOTRDY;
 257              		.loc 1 144 0
 258 015c 0323     		movs	r3, #3
 259 015e 87F84732 		strb	r3, [r7, #583]
 145:../tasks/usb/usbh_diskio.c ****       break; 
 260              		.loc 1 145 0
 261 0162 03E0     		b	.L15
 262              	.L19:
 146:../tasks/usb/usbh_diskio.c ****       
 147:../tasks/usb/usbh_diskio.c ****     default:
 148:../tasks/usb/usbh_diskio.c ****       res = RES_ERROR;
 263              		.loc 1 148 0
 264 0164 0123     		movs	r3, #1
 265 0166 87F84732 		strb	r3, [r7, #583]
 149:../tasks/usb/usbh_diskio.c ****       break;
 266              		.loc 1 149 0
 267 016a 00BF     		nop
 268              	.L15:
 150:../tasks/usb/usbh_diskio.c ****     }
 151:../tasks/usb/usbh_diskio.c ****   }
 152:../tasks/usb/usbh_diskio.c ****   
 153:../tasks/usb/usbh_diskio.c ****   return res;
 269              		.loc 1 153 0
 270 016c 97F84732 		ldrb	r3, [r7, #583]	@ zero_extendqisi2
 154:../tasks/usb/usbh_diskio.c **** }
 271              		.loc 1 154 0
 272 0170 1846     		mov	r0, r3
 273 0172 07F51277 		add	r7, r7, #584
 274 0176 BD46     		mov	sp, r7
 275              		@ sp needed
 276 0178 80BD     		pop	{r7, pc}
 277              		.cfi_endproc
 278              	.LFE57:
 280              		.section	.rodata
 281 001f 00       		.align	2
 282              	.LC2:
 283 0020 55534220 		.ascii	"USB Disk is Write protected!\000"
 283      4469736B 
 283      20697320 
 283      57726974 
 283      65207072 
 284 003d 000000   		.text
 285 017a 00BF     		.align	2
 286              		.global	USBH_write
 287              		.thumb
 288              		.thumb_func
 290              	USBH_write:
 291              	.LFB58:
 155:../tasks/usb/usbh_diskio.c **** 
 156:../tasks/usb/usbh_diskio.c **** /**
 157:../tasks/usb/usbh_diskio.c ****   * @brief  Writes Sector(s)
 158:../tasks/usb/usbh_diskio.c ****   * @param  *buff: Data to be written
 159:../tasks/usb/usbh_diskio.c ****   * @param  sector: Sector address (LBA)
 160:../tasks/usb/usbh_diskio.c ****   * @param  count: Number of sectors to write (1..128)
 161:../tasks/usb/usbh_diskio.c ****   * @retval DRESULT: Operation result
 162:../tasks/usb/usbh_diskio.c ****   */
 163:../tasks/usb/usbh_diskio.c **** #if _USE_WRITE == 1
 164:../tasks/usb/usbh_diskio.c **** DRESULT USBH_write(const BYTE *buff, DWORD sector, BYTE count)
 165:../tasks/usb/usbh_diskio.c **** {
 292              		.loc 1 165 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 584
 295              		@ frame_needed = 1, uses_anonymous_args = 0
 296 017c 80B5     		push	{r7, lr}
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 7, -8
 299              		.cfi_offset 14, -4
 300 017e ADF5147D 		sub	sp, sp, #592
 301              		.cfi_def_cfa_offset 600
 302 0182 02AF     		add	r7, sp, #8
 303              		.cfi_def_cfa 7, 592
 304 0184 07F10C03 		add	r3, r7, #12
 305 0188 1860     		str	r0, [r3]
 306 018a 07F10803 		add	r3, r7, #8
 307 018e 1960     		str	r1, [r3]
 308 0190 FB1D     		adds	r3, r7, #7
 309 0192 1A70     		strb	r2, [r3]
 166:../tasks/usb/usbh_diskio.c ****   DRESULT res = RES_ERROR; 
 310              		.loc 1 166 0
 311 0194 0123     		movs	r3, #1
 312 0196 87F84732 		strb	r3, [r7, #583]
 167:../tasks/usb/usbh_diskio.c ****   MSC_LUNTypeDef info;
 168:../tasks/usb/usbh_diskio.c ****   USBH_StatusTypeDef  status = USBH_OK;  
 313              		.loc 1 168 0
 314 019a 0023     		movs	r3, #0
 315 019c 87F84632 		strb	r3, [r7, #582]
 169:../tasks/usb/usbh_diskio.c ****   DWORD scratch [_MAX_SS / 4];  
 170:../tasks/usb/usbh_diskio.c ****   
 171:../tasks/usb/usbh_diskio.c ****   if ((DWORD)buff & 3) /* DMA Alignment issue, do single up to aligned buffer */
 316              		.loc 1 171 0
 317 01a0 07F10C03 		add	r3, r7, #12
 318 01a4 1B68     		ldr	r3, [r3]
 319 01a6 03F00303 		and	r3, r3, #3
 320 01aa 002B     		cmp	r3, #0
 321 01ac 31D0     		beq	.L21
 172:../tasks/usb/usbh_diskio.c ****   {
 173:../tasks/usb/usbh_diskio.c ****     while (count--)
 322              		.loc 1 173 0
 323 01ae 28E0     		b	.L22
 324              	.L24:
 174:../tasks/usb/usbh_diskio.c ****     {
 175:../tasks/usb/usbh_diskio.c ****       memcpy (scratch, &buff[count * _MAX_SS], _MAX_SS);
 325              		.loc 1 175 0
 326 01b0 FB1D     		adds	r3, r7, #7
 327 01b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 328 01b4 5B02     		lsls	r3, r3, #9
 329 01b6 07F10C02 		add	r2, r7, #12
 330 01ba 1268     		ldr	r2, [r2]
 331 01bc 1344     		add	r3, r3, r2
 332 01be 07F11002 		add	r2, r7, #16
 333 01c2 1046     		mov	r0, r2
 334 01c4 1946     		mov	r1, r3
 335 01c6 4FF40072 		mov	r2, #512
 336 01ca FFF7FEFF 		bl	memcpy
 176:../tasks/usb/usbh_diskio.c ****       
 177:../tasks/usb/usbh_diskio.c ****       status = USBH_MSC_Write(&HOST_HANDLE, 0, sector + count, (BYTE *)scratch, 1) ;
 337              		.loc 1 177 0
 338 01ce FB1D     		adds	r3, r7, #7
 339 01d0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 340 01d2 07F10803 		add	r3, r7, #8
 341 01d6 1B68     		ldr	r3, [r3]
 342 01d8 1A44     		add	r2, r2, r3
 343 01da 07F11003 		add	r3, r7, #16
 344 01de 0121     		movs	r1, #1
 345 01e0 0091     		str	r1, [sp]
 346 01e2 40F20000 		movw	r0, #:lower16:hUSB_Host
 347 01e6 C0F20000 		movt	r0, #:upper16:hUSB_Host
 348 01ea 0021     		movs	r1, #0
 349 01ec FFF7FEFF 		bl	USBH_MSC_Write
 350 01f0 0346     		mov	r3, r0
 351 01f2 87F84632 		strb	r3, [r7, #582]
 178:../tasks/usb/usbh_diskio.c ****       if(status == USBH_FAIL)
 352              		.loc 1 178 0
 353 01f6 97F84632 		ldrb	r3, [r7, #582]	@ zero_extendqisi2
 354 01fa 022B     		cmp	r3, #2
 355 01fc 01D1     		bne	.L22
 179:../tasks/usb/usbh_diskio.c ****       {
 180:../tasks/usb/usbh_diskio.c ****         break;
 356              		.loc 1 180 0
 357 01fe 00BF     		nop
 358 0200 1AE0     		b	.L25
 359              	.L22:
 173:../tasks/usb/usbh_diskio.c ****     {
 360              		.loc 1 173 0 discriminator 1
 361 0202 FB1D     		adds	r3, r7, #7
 362 0204 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 363 0206 FA1D     		adds	r2, r7, #7
 364 0208 591E     		subs	r1, r3, #1
 365 020a 1170     		strb	r1, [r2]
 366 020c 002B     		cmp	r3, #0
 367 020e CFD1     		bne	.L24
 368 0210 12E0     		b	.L25
 369              	.L21:
 181:../tasks/usb/usbh_diskio.c ****       }
 182:../tasks/usb/usbh_diskio.c ****     }
 183:../tasks/usb/usbh_diskio.c ****   }
 184:../tasks/usb/usbh_diskio.c ****   else
 185:../tasks/usb/usbh_diskio.c ****   {
 186:../tasks/usb/usbh_diskio.c ****     status = USBH_MSC_Write(&HOST_HANDLE, 0, sector, (BYTE *)buff, count);
 370              		.loc 1 186 0
 371 0212 FB1D     		adds	r3, r7, #7
 372 0214 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 373 0216 07F10802 		add	r2, r7, #8
 374 021a 07F10C03 		add	r3, r7, #12
 375 021e 0091     		str	r1, [sp]
 376 0220 40F20000 		movw	r0, #:lower16:hUSB_Host
 377 0224 C0F20000 		movt	r0, #:upper16:hUSB_Host
 378 0228 0021     		movs	r1, #0
 379 022a 1268     		ldr	r2, [r2]
 380 022c 1B68     		ldr	r3, [r3]
 381 022e FFF7FEFF 		bl	USBH_MSC_Write
 382 0232 0346     		mov	r3, r0
 383 0234 87F84632 		strb	r3, [r7, #582]
 384              	.L25:
 187:../tasks/usb/usbh_diskio.c ****   }
 188:../tasks/usb/usbh_diskio.c ****   
 189:../tasks/usb/usbh_diskio.c ****   if(status == USBH_OK)
 385              		.loc 1 189 0
 386 0238 97F84632 		ldrb	r3, [r7, #582]	@ zero_extendqisi2
 387 023c 002B     		cmp	r3, #0
 388 023e 03D1     		bne	.L26
 190:../tasks/usb/usbh_diskio.c ****   {
 191:../tasks/usb/usbh_diskio.c ****     res = RES_OK;
 389              		.loc 1 191 0
 390 0240 0023     		movs	r3, #0
 391 0242 87F84732 		strb	r3, [r7, #583]
 392 0246 41E0     		b	.L27
 393              	.L26:
 192:../tasks/usb/usbh_diskio.c ****   }
 193:../tasks/usb/usbh_diskio.c ****   else
 194:../tasks/usb/usbh_diskio.c ****   {
 195:../tasks/usb/usbh_diskio.c ****     USBH_MSC_GetLUNInfo(&HOST_HANDLE, 0, &info); 
 394              		.loc 1 195 0
 395 0248 07F50473 		add	r3, r7, #528
 396 024c 40F20000 		movw	r0, #:lower16:hUSB_Host
 397 0250 C0F20000 		movt	r0, #:upper16:hUSB_Host
 398 0254 0021     		movs	r1, #0
 399 0256 1A46     		mov	r2, r3
 400 0258 FFF7FEFF 		bl	USBH_MSC_GetLUNInfo
 196:../tasks/usb/usbh_diskio.c ****     
 197:../tasks/usb/usbh_diskio.c ****     switch (info.sense.asc)
 401              		.loc 1 197 0
 402 025c 97F81D32 		ldrb	r3, [r7, #541]	@ zero_extendqisi2
 403 0260 272B     		cmp	r3, #39
 404 0262 09D0     		beq	.L29
 405 0264 272B     		cmp	r3, #39
 406 0266 02DC     		bgt	.L30
 407 0268 042B     		cmp	r3, #4
 408 026a 18D0     		beq	.L31
 409 026c 2AE0     		b	.L28
 410              	.L30:
 411 026e 282B     		cmp	r3, #40
 412 0270 15D0     		beq	.L31
 413 0272 3A2B     		cmp	r3, #58
 414 0274 13D0     		beq	.L31
 415 0276 25E0     		b	.L28
 416              	.L29:
 198:../tasks/usb/usbh_diskio.c ****     {
 199:../tasks/usb/usbh_diskio.c ****     case SCSI_ASC_WRITE_PROTECTED:
 200:../tasks/usb/usbh_diskio.c ****       USBH_ErrLog("USB Disk is Write protected!");
 417              		.loc 1 200 0
 418 0278 40F20000 		movw	r0, #:lower16:.LC0
 419 027c C0F20000 		movt	r0, #:upper16:.LC0
 420 0280 FFF7FEFF 		bl	printf
 421 0284 40F20000 		movw	r0, #:lower16:.LC2
 422 0288 C0F20000 		movt	r0, #:upper16:.LC2
 423 028c FFF7FEFF 		bl	printf
 424 0290 0A20     		movs	r0, #10
 425 0292 FFF7FEFF 		bl	putchar
 201:../tasks/usb/usbh_diskio.c ****       res = RES_WRPRT;
 426              		.loc 1 201 0
 427 0296 0223     		movs	r3, #2
 428 0298 87F84732 		strb	r3, [r7, #583]
 202:../tasks/usb/usbh_diskio.c ****       break;
 429              		.loc 1 202 0
 430 029c 16E0     		b	.L27
 431              	.L31:
 203:../tasks/usb/usbh_diskio.c ****       
 204:../tasks/usb/usbh_diskio.c ****     case SCSI_ASC_LOGICAL_UNIT_NOT_READY:
 205:../tasks/usb/usbh_diskio.c ****     case SCSI_ASC_MEDIUM_NOT_PRESENT:
 206:../tasks/usb/usbh_diskio.c ****     case SCSI_ASC_NOT_READY_TO_READY_CHANGE:
 207:../tasks/usb/usbh_diskio.c ****       USBH_ErrLog("USB Disk is not ready!");      
 432              		.loc 1 207 0
 433 029e 40F20000 		movw	r0, #:lower16:.LC0
 434 02a2 C0F20000 		movt	r0, #:upper16:.LC0
 435 02a6 FFF7FEFF 		bl	printf
 436 02aa 40F20000 		movw	r0, #:lower16:.LC1
 437 02ae C0F20000 		movt	r0, #:upper16:.LC1
 438 02b2 FFF7FEFF 		bl	printf
 439 02b6 0A20     		movs	r0, #10
 440 02b8 FFF7FEFF 		bl	putchar
 208:../tasks/usb/usbh_diskio.c ****       res = RES_NOTRDY;
 441              		.loc 1 208 0
 442 02bc 0323     		movs	r3, #3
 443 02be 87F84732 		strb	r3, [r7, #583]
 209:../tasks/usb/usbh_diskio.c ****       break; 
 444              		.loc 1 209 0
 445 02c2 03E0     		b	.L27
 446              	.L28:
 210:../tasks/usb/usbh_diskio.c ****       
 211:../tasks/usb/usbh_diskio.c ****     default:
 212:../tasks/usb/usbh_diskio.c ****       res = RES_ERROR;
 447              		.loc 1 212 0
 448 02c4 0123     		movs	r3, #1
 449 02c6 87F84732 		strb	r3, [r7, #583]
 213:../tasks/usb/usbh_diskio.c ****       break;
 450              		.loc 1 213 0
 451 02ca 00BF     		nop
 452              	.L27:
 214:../tasks/usb/usbh_diskio.c ****     }
 215:../tasks/usb/usbh_diskio.c ****   }
 216:../tasks/usb/usbh_diskio.c ****   
 217:../tasks/usb/usbh_diskio.c ****   return res;   
 453              		.loc 1 217 0
 454 02cc 97F84732 		ldrb	r3, [r7, #583]	@ zero_extendqisi2
 218:../tasks/usb/usbh_diskio.c **** }
 455              		.loc 1 218 0
 456 02d0 1846     		mov	r0, r3
 457 02d2 07F51277 		add	r7, r7, #584
 458 02d6 BD46     		mov	sp, r7
 459              		@ sp needed
 460 02d8 80BD     		pop	{r7, pc}
 461              		.cfi_endproc
 462              	.LFE58:
 464 02da 00BF     		.align	2
 465              		.global	USBH_ioctl
 466              		.thumb
 467              		.thumb_func
 469              	USBH_ioctl:
 470              	.LFB59:
 219:../tasks/usb/usbh_diskio.c **** #endif /* _USE_WRITE == 1 */
 220:../tasks/usb/usbh_diskio.c **** 
 221:../tasks/usb/usbh_diskio.c **** /**
 222:../tasks/usb/usbh_diskio.c ****   * @brief  I/O control operation
 223:../tasks/usb/usbh_diskio.c ****   * @param  cmd: Control code
 224:../tasks/usb/usbh_diskio.c ****   * @param  *buff: Buffer to send/receive control data
 225:../tasks/usb/usbh_diskio.c ****   * @retval DRESULT: Operation result
 226:../tasks/usb/usbh_diskio.c ****   */
 227:../tasks/usb/usbh_diskio.c **** #if _USE_IOCTL == 1
 228:../tasks/usb/usbh_diskio.c **** DRESULT USBH_ioctl(BYTE cmd, void *buff)
 229:../tasks/usb/usbh_diskio.c **** {
 471              		.loc 1 229 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 64
 474              		@ frame_needed = 1, uses_anonymous_args = 0
 475 02dc 80B5     		push	{r7, lr}
 476              		.cfi_def_cfa_offset 8
 477              		.cfi_offset 7, -8
 478              		.cfi_offset 14, -4
 479 02de 90B0     		sub	sp, sp, #64
 480              		.cfi_def_cfa_offset 72
 481 02e0 00AF     		add	r7, sp, #0
 482              		.cfi_def_cfa_register 7
 483 02e2 0346     		mov	r3, r0
 484 02e4 3960     		str	r1, [r7]
 485 02e6 FB71     		strb	r3, [r7, #7]
 230:../tasks/usb/usbh_diskio.c ****   DRESULT res = RES_ERROR;
 486              		.loc 1 230 0
 487 02e8 0123     		movs	r3, #1
 488 02ea 87F83F30 		strb	r3, [r7, #63]
 231:../tasks/usb/usbh_diskio.c ****   MSC_LUNTypeDef info;
 232:../tasks/usb/usbh_diskio.c ****   
 233:../tasks/usb/usbh_diskio.c ****   switch (cmd)
 489              		.loc 1 233 0
 490 02ee FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 491 02f0 032B     		cmp	r3, #3
 492 02f2 59D8     		bhi	.L34
 493 02f4 01A2     		adr	r2, .L36
 494 02f6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 495 02fa 00BF     		.p2align 2
 496              	.L36:
 497 02fc 0D030000 		.word	.L35+1
 498 0300 15030000 		.word	.L37+1
 499 0304 45030000 		.word	.L38+1
 500 0308 77030000 		.word	.L39+1
 501              	.L35:
 234:../tasks/usb/usbh_diskio.c ****   {
 235:../tasks/usb/usbh_diskio.c ****   /* Make sure that no pending write process */
 236:../tasks/usb/usbh_diskio.c ****   case CTRL_SYNC: 
 237:../tasks/usb/usbh_diskio.c ****     res = RES_OK;
 502              		.loc 1 237 0
 503 030c 0023     		movs	r3, #0
 504 030e 87F83F30 		strb	r3, [r7, #63]
 238:../tasks/usb/usbh_diskio.c ****     break;
 505              		.loc 1 238 0
 506 0312 4CE0     		b	.L40
 507              	.L37:
 239:../tasks/usb/usbh_diskio.c ****     
 240:../tasks/usb/usbh_diskio.c ****   /* Get number of sectors on the disk (DWORD) */  
 241:../tasks/usb/usbh_diskio.c ****   case GET_SECTOR_COUNT : 
 242:../tasks/usb/usbh_diskio.c ****     if(USBH_MSC_GetLUNInfo(&HOST_HANDLE, 0, &info) == USBH_OK)
 508              		.loc 1 242 0
 509 0314 07F10803 		add	r3, r7, #8
 510 0318 40F20000 		movw	r0, #:lower16:hUSB_Host
 511 031c C0F20000 		movt	r0, #:upper16:hUSB_Host
 512 0320 0021     		movs	r1, #0
 513 0322 1A46     		mov	r2, r3
 514 0324 FFF7FEFF 		bl	USBH_MSC_GetLUNInfo
 515 0328 0346     		mov	r3, r0
 516 032a 002B     		cmp	r3, #0
 517 032c 06D1     		bne	.L41
 243:../tasks/usb/usbh_diskio.c ****     {
 244:../tasks/usb/usbh_diskio.c ****       *(DWORD*)buff = info.capacity.block_nbr;
 518              		.loc 1 244 0
 519 032e FA68     		ldr	r2, [r7, #12]
 520 0330 3B68     		ldr	r3, [r7]
 521 0332 1A60     		str	r2, [r3]
 245:../tasks/usb/usbh_diskio.c ****       res = RES_OK;
 522              		.loc 1 245 0
 523 0334 0023     		movs	r3, #0
 524 0336 87F83F30 		strb	r3, [r7, #63]
 246:../tasks/usb/usbh_diskio.c ****     }
 247:../tasks/usb/usbh_diskio.c ****     else
 248:../tasks/usb/usbh_diskio.c ****     {
 249:../tasks/usb/usbh_diskio.c ****       res = RES_ERROR;
 250:../tasks/usb/usbh_diskio.c ****     }
 251:../tasks/usb/usbh_diskio.c ****     break;
 525              		.loc 1 251 0
 526 033a 38E0     		b	.L40
 527              	.L41:
 249:../tasks/usb/usbh_diskio.c ****     }
 528              		.loc 1 249 0
 529 033c 0123     		movs	r3, #1
 530 033e 87F83F30 		strb	r3, [r7, #63]
 531              		.loc 1 251 0
 532 0342 34E0     		b	.L40
 533              	.L38:
 252:../tasks/usb/usbh_diskio.c ****     
 253:../tasks/usb/usbh_diskio.c ****   /* Get R/W sector size (WORD) */  
 254:../tasks/usb/usbh_diskio.c ****   case GET_SECTOR_SIZE :	
 255:../tasks/usb/usbh_diskio.c ****     if(USBH_MSC_GetLUNInfo(&HOST_HANDLE, 0, &info) == USBH_OK)
 534              		.loc 1 255 0
 535 0344 07F10803 		add	r3, r7, #8
 536 0348 40F20000 		movw	r0, #:lower16:hUSB_Host
 537 034c C0F20000 		movt	r0, #:upper16:hUSB_Host
 538 0350 0021     		movs	r1, #0
 539 0352 1A46     		mov	r2, r3
 540 0354 FFF7FEFF 		bl	USBH_MSC_GetLUNInfo
 541 0358 0346     		mov	r3, r0
 542 035a 002B     		cmp	r3, #0
 543 035c 07D1     		bne	.L43
 256:../tasks/usb/usbh_diskio.c ****     {
 257:../tasks/usb/usbh_diskio.c ****       *(DWORD*)buff = info.capacity.block_size;
 544              		.loc 1 257 0
 545 035e 3B8A     		ldrh	r3, [r7, #16]
 546 0360 1A46     		mov	r2, r3
 547 0362 3B68     		ldr	r3, [r7]
 548 0364 1A60     		str	r2, [r3]
 258:../tasks/usb/usbh_diskio.c ****       res = RES_OK;
 549              		.loc 1 258 0
 550 0366 0023     		movs	r3, #0
 551 0368 87F83F30 		strb	r3, [r7, #63]
 259:../tasks/usb/usbh_diskio.c ****     }
 260:../tasks/usb/usbh_diskio.c ****     else
 261:../tasks/usb/usbh_diskio.c ****     {
 262:../tasks/usb/usbh_diskio.c ****       res = RES_ERROR;
 263:../tasks/usb/usbh_diskio.c ****     }
 264:../tasks/usb/usbh_diskio.c ****     break;
 552              		.loc 1 264 0
 553 036c 1FE0     		b	.L40
 554              	.L43:
 262:../tasks/usb/usbh_diskio.c ****     }
 555              		.loc 1 262 0
 556 036e 0123     		movs	r3, #1
 557 0370 87F83F30 		strb	r3, [r7, #63]
 558              		.loc 1 264 0
 559 0374 1BE0     		b	.L40
 560              	.L39:
 265:../tasks/usb/usbh_diskio.c ****     
 266:../tasks/usb/usbh_diskio.c ****     /* Get erase block size in unit of sector (DWORD) */ 
 267:../tasks/usb/usbh_diskio.c ****   case GET_BLOCK_SIZE : 
 268:../tasks/usb/usbh_diskio.c ****     
 269:../tasks/usb/usbh_diskio.c ****     if(USBH_MSC_GetLUNInfo(&HOST_HANDLE, 0, &info) == USBH_OK)
 561              		.loc 1 269 0
 562 0376 07F10803 		add	r3, r7, #8
 563 037a 40F20000 		movw	r0, #:lower16:hUSB_Host
 564 037e C0F20000 		movt	r0, #:upper16:hUSB_Host
 565 0382 0021     		movs	r1, #0
 566 0384 1A46     		mov	r2, r3
 567 0386 FFF7FEFF 		bl	USBH_MSC_GetLUNInfo
 568 038a 0346     		mov	r3, r0
 569 038c 002B     		cmp	r3, #0
 570 038e 07D1     		bne	.L45
 270:../tasks/usb/usbh_diskio.c ****     {
 271:../tasks/usb/usbh_diskio.c ****       *(DWORD*)buff = info.capacity.block_size;
 571              		.loc 1 271 0
 572 0390 3B8A     		ldrh	r3, [r7, #16]
 573 0392 1A46     		mov	r2, r3
 574 0394 3B68     		ldr	r3, [r7]
 575 0396 1A60     		str	r2, [r3]
 272:../tasks/usb/usbh_diskio.c ****       res = RES_OK;
 576              		.loc 1 272 0
 577 0398 0023     		movs	r3, #0
 578 039a 87F83F30 		strb	r3, [r7, #63]
 273:../tasks/usb/usbh_diskio.c ****     }
 274:../tasks/usb/usbh_diskio.c ****     else
 275:../tasks/usb/usbh_diskio.c ****     {
 276:../tasks/usb/usbh_diskio.c ****       res = RES_ERROR;
 277:../tasks/usb/usbh_diskio.c ****     }
 278:../tasks/usb/usbh_diskio.c ****     break;
 579              		.loc 1 278 0
 580 039e 06E0     		b	.L40
 581              	.L45:
 276:../tasks/usb/usbh_diskio.c ****     }
 582              		.loc 1 276 0
 583 03a0 0123     		movs	r3, #1
 584 03a2 87F83F30 		strb	r3, [r7, #63]
 585              		.loc 1 278 0
 586 03a6 02E0     		b	.L40
 587              	.L34:
 279:../tasks/usb/usbh_diskio.c ****     
 280:../tasks/usb/usbh_diskio.c ****   default:
 281:../tasks/usb/usbh_diskio.c ****     res = RES_PARERR;
 588              		.loc 1 281 0
 589 03a8 0423     		movs	r3, #4
 590 03aa 87F83F30 		strb	r3, [r7, #63]
 591              	.L40:
 282:../tasks/usb/usbh_diskio.c ****   }
 283:../tasks/usb/usbh_diskio.c ****   
 284:../tasks/usb/usbh_diskio.c ****   return res;
 592              		.loc 1 284 0
 593 03ae 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 285:../tasks/usb/usbh_diskio.c **** }
 594              		.loc 1 285 0
 595 03b2 1846     		mov	r0, r3
 596 03b4 4037     		adds	r7, r7, #64
 597 03b6 BD46     		mov	sp, r7
 598              		@ sp needed
 599 03b8 80BD     		pop	{r7, pc}
 600              		.cfi_endproc
 601              	.LFE59:
 603              	.Letext0:
 604              		.file 2 "c:\\program files (x86)\\codesourcery\\arm-none-eabi\\include\\stdint.h"
 605              		.file 3 "D:\\workspace\\console800480\\tasks\\SDMMC/integer.h"
 606              		.file 4 "D:\\workspace\\console800480\\tasks\\SDMMC/diskio.h"
 607              		.file 5 "D:\\workspace\\console800480\\tasks\\usb\\STM32_USB_HOST_Library\\Core\\Inc/usbh_def.h"
 608              		.file 6 "D:\\workspace\\console800480\\tasks\\usb\\STM32_USB_HOST_Library\\Class\\MSC\\Inc/usbh_ms
 609              		.file 7 "D:\\workspace\\console800480\\tasks\\usb\\STM32_USB_HOST_Library\\Class\\MSC\\Inc/usbh_ms
 610              		.file 8 "D:\\workspace\\console800480\\tasks\\SDMMC/ff_gen_drv.h"
 611              		.file 9 "D:\\workspace\\console800480\\system/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 usbh_diskio.c
C:\Users\sagok\AppData\Local\Temp\ccBMJodU.s:23     .data:00000000 USBH_Driver
C:\Users\sagok\AppData\Local\Temp\ccBMJodU.s:20     .data:00000000 $d
C:\Users\sagok\AppData\Local\Temp\ccBMJodU.s:35     .text:00000000 USBH_initialize
C:\Users\sagok\AppData\Local\Temp\ccBMJodU.s:64     .text:00000010 USBH_status
C:\Users\sagok\AppData\Local\Temp\ccBMJodU.s:122    .text:00000044 USBH_read
C:\Users\sagok\AppData\Local\Temp\ccBMJodU.s:290    .text:0000017c USBH_write
C:\Users\sagok\AppData\Local\Temp\ccBMJodU.s:469    .text:000002dc USBH_ioctl
C:\Users\sagok\AppData\Local\Temp\ccBMJodU.s:30     .text:00000000 $t
C:\Users\sagok\AppData\Local\Temp\ccBMJodU.s:110    .rodata:00000000 $d
C:\Users\sagok\AppData\Local\Temp\ccBMJodU.s:111    .rodata:00000000 .LC0
C:\Users\sagok\AppData\Local\Temp\ccBMJodU.s:114    .rodata:00000008 .LC1
C:\Users\sagok\AppData\Local\Temp\ccBMJodU.s:282    .rodata:00000020 .LC2
C:\Users\sagok\AppData\Local\Temp\ccBMJodU.s:497    .text:000002fc $d
C:\Users\sagok\AppData\Local\Temp\ccBMJodU.s:503    .text:0000030c $t
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.7f551ac7fcad8b79b9df4bfdaa536673
                           .group:00000000 wm4.newlib.h.8.384a112feabb3bef7b573ae48cde2e3b
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4.config.h.183.aa62afef667fb61d15fa64c48beb2f14
                           .group:00000000 wm4._ansi.h.23.5644b60c990a4800b02a6e654e88f93a
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.59.db8450f33c1f6150c0372fa1091a887a
                           .group:00000000 wm4.stddef.h.348.9a99de77b6ba3b4278b57e9cc6d6e349
                           .group:00000000 wm4.reent.h.16.567d760e6ae9ad7f917851a308bd7a57
                           .group:00000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.cdefs.h.56.efab90f4d89fbc41d6b3a5c5fb0d3d0f
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.string.h.126.6ff3aa59129e7f66b2c273baf353e066
                           .group:00000000 wm4.diskio.h.6.8da7330f9b93c43e88f440080fbc00d0
                           .group:00000000 wm4.diskio.h.43.17c6f92f3f6ff58b941e8553c0aeafe2
                           .group:00000000 wm4.stm32f2xx_hal_conf.h.40.007126baefb9f966c36646edbf8040d2
                           .group:00000000 wm4.stm32f2xx.h.57.5ec1581efc43612c411d33a8686e9ec7
                           .group:00000000 wm4.stm32f217xx.h.52.9c940d76d00294b78837dc334c172fdd
                           .group:00000000 wm4.core_cm3.h.32.49180ccb4d36cabd2d7016d2a51d91ae
                           .group:00000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:00000000 wm4.core_cm3.h.130.63ab2348a6eed0fdb318040d970b676c
                           .group:00000000 wm4.stm32f217xx.h.978.a5c681952b2f704a0e7f2ba21d08adf5
                           .group:00000000 wm4.stm32f2xx.h.142.bc2155a1f7498bab16371e38413a9e41
                           .group:00000000 wm4.stm32f2xx_hal_def.h.77.85e18fadb694368b08f53dcd86f4d15e
                           .group:00000000 wm4.stm32f2xx_hal_rcc.h.142.ec0f91cc6576a6acebd17e6dd85829ae
                           .group:00000000 wm4.stm32f2xx_hal_rcc_ex.h.40.0829033e864455c6bdd0db01f8ba5a50
                           .group:00000000 wm4.stm32f2xx_hal_gpio.h.40.ba64e0bb94d9a68835f80159f39a86f1
                           .group:00000000 wm4.stm32f2xx_hal_gpio_ex.h.40.24e547fd402281923f446b510381083f
                           .group:00000000 wm4.stm32f2xx_hal_dma.h.40.5d9732ace2a21a4526ce8f0c52428fff
                           .group:00000000 wm4.stm32f2xx_hal_cortex.h.40.e10263d2ec5d4fa79b4180ce1a38aff1
                           .group:00000000 wm4.stm32f2xx_hal_adc.h.40.89ac8b78113cac4cf63847587daabac9
                           .group:00000000 wm4.stm32f2xx_hal_adc_ex.h.40.7de68ed256ef25526ee31cc017f2c291
                           .group:00000000 wm4.stm32f2xx_hal_flash.h.40.c3171719ce015e9cff20c795e44e886d
                           .group:00000000 wm4.stm32f2xx_hal_flash_ex.h.40.7389508bd24a0aeb077bde0c9fb651eb
                           .group:00000000 wm4.stm32f2xx_ll_fsmc.h.40.c1c32f2e1862f4dd342bd9b80fb895bb
                           .group:00000000 wm4.stm32f2xx_hal_pwr.h.40.812df32e5c31b609a128e9db0eb4cbd0
                           .group:00000000 wm4.stm32f2xx_hal_rtc.h.40.850fda5fe2cce8797446913dee18382f
                           .group:00000000 wm4.stm32f2xx_hal_rtc_ex.h.40.f3e0c408e3bf4e8a0352d7ec9a18a822
                           .group:00000000 wm4.stm32f2xx_ll_sdmmc.h.40.3719ab487c4b77401c572f459adf6eb7
                           .group:00000000 wm4.stm32f2xx_hal_sd.h.58.760215394dcc316161a6482c0af9b866
                           .group:00000000 wm4.stm32f2xx_hal_spi.h.40.7984243dbaba8b21c6392998a47e6987
                           .group:00000000 wm4.stm32f2xx_hal_tim.h.40.d79172f25d0e9a15dc346aba8515bdd6
                           .group:00000000 wm4.stm32f2xx_hal_tim_ex.h.40.361f280a7a3f60b4b238bb99ca728d83
                           .group:00000000 wm4.stm32f2xx_hal_uart.h.40.d74def561ae6f78f40f477c8426ecbef
                           .group:00000000 wm4.stm32f2xx_ll_usb.h.40.9b0206a05bc6ce3bec1648b51f22cb81
                           .group:00000000 wm4.stm32f2xx_hal_pcd.h.99.11faba414c39e357b2f23364912d0605
                           .group:00000000 wm4.stm32f2xx_hal_hcd.h.40.44ee5e972983ae0139ddbacdc75c44ef
                           .group:00000000 wm4.stm32f2xx_hal.h.64.ed79ee83e52b151b3c365392b398f866
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.5759fe41f87f5211a5952dfb1fc64f19
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.64.f9f1bb6b0d3d7e12f6a27968d859709c
                           .group:00000000 wm4.stdlib.h.18.8bab2fb43ac4e90235390733c30a4530
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.55.7091a050e07f1c4abd225630fe3d62f1
                           .group:00000000 wm4.LEDs.h.9.36ffa4b30bd168dc58d64fa6e53a9a30
                           .group:00000000 wm4.usbh_conf.h.41.d72a4a1e5e10d8f062cf3fa4bcd8aa54
                           .group:00000000 wm4.usbh_def.h.42.e5773f0fe2e07d0c2c7284f319cefcfb
                           .group:00000000 wm4.usbh_ioreq.h.53.3586266a62e1adb6014256f47bfe28ae
                           .group:00000000 wm4.usbh_ctlreq.h.30.baf76fe1032fc0ccc3b759e321acc69d
                           .group:00000000 wm4.usbh_core.h.60.126ed10f424484efe8e3332cf8789488
                           .group:00000000 wm4.usbh_msc_bot.h.150.7a573dd4700e98f78a08f0e60cd8a2e8
                           .group:00000000 wm4.usbh_msc_scsi.h.30.7ac65aef8ad2b1cb473eb44388537ea2
                           .group:00000000 wm4.usbh_msc.h.92.1eaed72009e45245618cff3cc0ab5900
                           .group:00000000 wm4.ffconf.h.19.cf478c53f215b23144e0b163e0b92c6c
                           .group:00000000 wm4.ff.h.45.ea85cd9763a25d97ae88799c83ef7c63

UNDEFINED SYMBOLS
hUSB_Host
USBH_MSC_UnitIsReady
USBH_MSC_Read
memcpy
USBH_MSC_GetLUNInfo
printf
putchar
USBH_MSC_Write
