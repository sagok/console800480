   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f2xx_hal_sd.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	HAL_SD_Init
  20              		.thumb
  21              		.thumb_func
  23              	HAL_SD_Init:
  24              	.LFB55:
  25              		.file 1 "../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c"
   1:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
   2:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   ******************************************************************************
   3:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @file    stm32f2xx_hal_sd.c
   4:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @author  MCD Application Team
   5:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @version V1.0.1
   6:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @date    25-March-2014
   7:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief   SD card HAL module driver.
   8:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *          This file provides firmware functions to manage the following 
   9:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *          functionalities of the Secure Digital (SD) peripheral:
  10:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *           + Initialization and de-initialization functions
  11:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *           + IO operation functions
  12:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *           + Peripheral Control functions 
  13:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *           + Peripheral State functions
  14:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         
  15:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   @verbatim
  16:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   ==============================================================================
  17:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****                         ##### How to use this driver #####
  18:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   ==============================================================================
  19:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   [..]
  20:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     This driver implements a high level communication layer for read and write from/to 
  21:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     this memory. The needed STM32 hardware resources (SDIO and GPIO) are performed by 
  22:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     the user in HAL_SD_MspInit() function (MSP layer).                             
  23:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     Basically, the MSP layer configuration should be the same as we provide in the 
  24:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     examples.
  25:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     You can easily tailor this configuration according to hardware resources.
  26:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
  27:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   [..]
  28:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     This driver is a generic layered driver for SDIO memories which uses the HAL 
  29:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO driver functions to interface with SD and uSD cards devices. 
  30:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     It is used as follows:
  31:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****  
  32:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (#)Initialize the SDIO low level resources by implement the HAL_SD_MspInit() API:
  33:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         (##) Enable the SDIO interface clock using __SDIO_CLK_ENABLE(); 
  34:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         (##) SDIO pins configuration for SD card
  35:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****             (+++) Enable the clock for the SDIO GPIOs using the functions __GPIOx_CLK_ENABLE();   
  36:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****             (+++) Configure these SDIO pins as alternate function pull-up using HAL_GPIO_Init()
  37:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****                   and according to your pin assignment;
  38:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         (##) DMA Configuration if you need to use DMA process (HAL_SD_ReadBlocks_DMA()
  39:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****              and HAL_SD_WriteBlocks_DMA() APIs).
  40:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****             (+++) Enable the DMAx interface clock using __DMAx_CLK_ENABLE(); 
  41:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****             (+++) Configure the DMA using the function HAL_DMA_Init() with predeclared and filled. 
  42:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         (##) NVIC configuration if you need to use interrupt process when using DMA transfer.
  43:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****             (+++) Configure the SDIO and DMA interrupt priorities using functions
  44:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****                   HAL_NVIC_SetPriority(); DMA priority is superior to SDIO's priority
  45:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****             (+++) Enable the NVIC DMA and SDIO IRQs using function HAL_NVIC_EnableIRQ()
  46:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****             (+++) SDIO interrupts are managed using the macros __HAL_SD_SDIO_ENABLE_IT() 
  47:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****                   and __HAL_SD_SDIO_DISABLE_IT() inside the communication process.
  48:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****             (+++) SDIO interrupts pending bits are managed using the macros __HAL_SD_SDIO_GET_IT()
  49:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****                   and __HAL_SD_SDIO_CLEAR_IT()
  50:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (#) At this stage, you can perform SD read/write/erase operations after SD card initialization 
  51:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
  52:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****          
  53:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *** SD Card Initialization and configuration ***
  54:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   ================================================    
  55:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   [..]
  56:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     To initialize the SD Card, use the HAL_SD_Init() function.  It Initializes 
  57:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     the SD Card and put it into StandBy State (Ready for data transfer). 
  58:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     This function provide the following operations:
  59:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
  60:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (#) Apply the SD Card initialization process at 400KHz and check the SD Card 
  61:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         type (Standard Capacity or High Capacity). You can change or adapt this 
  62:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         frequency by adjusting the "ClockDiv" field. 
  63:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         The SD Card frequency (SDIO_CK) is computed as follows:
  64:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
  65:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****            SDIO_CK = SDIOCLK / (ClockDiv + 2)
  66:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
  67:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         In initialization mode and according to the SD Card standard, 
  68:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         make sure that the SDIO_CK frequency doesn't exceed 400KHz.
  69:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
  70:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (#) Get the SD CID and CSD data. All these information are managed by the SDCardInfo 
  71:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         structure. This structure provide also ready computed SD Card capacity 
  72:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         and Block size.
  73:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         
  74:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         -@- These information are stored in SD handle structure in case of future use.  
  75:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
  76:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (#) Configure the SD Card Data transfer frequency. By Default, the card transfer 
  77:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         frequency is set to 24MHz. You can change or adapt this frequency by adjusting 
  78:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         the "ClockDiv" field.
  79:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         The SD Card frequency (SDIO_CK) is computed as follows:
  80:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
  81:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****            SDIO_CK = SDIOCLK / (ClockDiv + 2) 
  82:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
  83:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         In transfer mode and according to the SD Card standard, make sure that the 
  84:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         SDIO_CK frequency doesn't exceed 25MHz and 50MHz in High-speed mode switch.
  85:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         To be able to use a frequency higher than 24MHz, you should use the SDIO 
  86:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         peripheral in bypass mode. Refer to the corresponding reference manual 
  87:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         for more details.
  88:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
  89:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (#) Select the corresponding SD Card according to the address read with the step 2.
  90:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
  91:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (#) Configure the SD Card in wide bus mode: 4-bits data.
  92:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
  93:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *** SD Card Read operation ***
  94:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   ==============================
  95:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   [..] 
  96:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (+) You can read from SD card in polling mode by using function HAL_SD_ReadBlocks(). 
  97:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         This function support only 512-byte block length (the block size should be 
  98:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         chosen as 512 byte).
  99:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         You can choose either one block read operation or multiple block read operation 
 100:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         by adjusting the "NumberOfBlocks" parameter.
 101:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 102:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (+) You can read from SD card in DMA mode by using function HAL_SD_ReadBlocks_DMA().
 103:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         This function support only 512-byte block length (the block size should be 
 104:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         chosen as 512 byte).
 105:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         You can choose either one block read operation or multiple block read operation 
 106:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         by adjusting the "NumberOfBlocks" parameter.
 107:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         After this, you have to call the function HAL_SD_CheckReadOperation(), to insure
 108:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         that the read transfer is done correctly in both DMA and SD sides.
 109:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 110:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *** SD Card Write operation ***
 111:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   =============================== 
 112:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   [..] 
 113:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (+) You can write to SD card in polling mode by using function HAL_SD_WriteBlocks(). 
 114:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         This function support only 512-byte block length (the block size should be 
 115:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         chosen as 512 byte).
 116:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         You can choose either one block read operation or multiple block read operation 
 117:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         by adjusting the "NumberOfBlocks" parameter.
 118:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 119:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (+) You can write to SD card in DMA mode by using function HAL_SD_WriteBlocks_DMA().
 120:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         This function support only 512-byte block length (the block size should be 
 121:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         chosen as 512 byte).
 122:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         You can choose either one block read operation or multiple block read operation 
 123:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         by adjusting the "NumberOfBlocks" parameter.
 124:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         After this, you have to call the function HAL_SD_CheckWriteOperation(), to insure
 125:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         that the write transfer is done correctly in both DMA and SD sides.  
 126:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 127:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *** SD card status ***
 128:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   ====================== 
 129:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   [..]
 130:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (+) At any time, you can check the SD Card status and get the SD card state 
 131:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         by using the HAL_SD_GetStatus() function. This function checks first if the 
 132:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         SD card is still connected and then get the internal SD Card transfer state.     
 133:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (+) You can also get the SD card SD Status register by using the HAL_SD_SendSDStatus() 
 134:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         function.    
 135:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 136:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *** SD HAL driver macros list ***
 137:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   ==================================
 138:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   [..]
 139:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     Below the list of most used macros in SD HAL driver.
 140:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****        
 141:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (+) __HAL_SD_SDIO_ENABLE : Enable the SD device
 142:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (+) __HAL_SD_SDIO_DISABLE : Disable the SD device
 143:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (+) __HAL_SD_SDIO_DMA_ENABLE: Enable the SDIO DMA transfer
 144:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (+) __HAL_SD_SDIO_DMA_DISABLE: Disable the SDIO DMA transfer
 145:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (+) __HAL_SD_SDIO_ENABLE_IT: Enable the SD device interrupt
 146:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (+) __HAL_SD_SDIO_DISABLE_IT: Disable the SD device interrupt
 147:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (+) __HAL_SD_SDIO_GET_FLAG:Check whether the specified SD flag is set or not
 148:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (+) __HAL_SD_SDIO_CLEAR_FLAG: Clear the SD's pending flags
 149:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
 150:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (@) You can refer to the SD HAL driver header file for more useful macros 
 151:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
 152:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   @endverbatim
 153:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   ******************************************************************************
 154:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @attention
 155:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *
 156:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * <h2><center>&copy; COPYRIGHT(c) 2014 STMicroelectronics</center></h2>
 157:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *
 158:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * Redistribution and use in source and binary forms, with or without modification,
 159:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * are permitted provided that the following conditions are met:
 160:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 161:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *      this list of conditions and the following disclaimer.
 162:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 163:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *      this list of conditions and the following disclaimer in the documentation
 164:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *      and/or other materials provided with the distribution.
 165:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 166:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *      may be used to endorse or promote products derived from this software
 167:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *      without specific prior written permission.
 168:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *
 169:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 170:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 171:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 172:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 173:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 174:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 175:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 176:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 177:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 178:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 179:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *
 180:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   ******************************************************************************
 181:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */ 
 182:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 183:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /* Includes ------------------------------------------------------------------*/
 184:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #include "stm32f2xx_hal.h"
 185:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 186:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /** @addtogroup STM32F2xx_HAL_Driver
 187:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @{
 188:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
 189:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 190:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /** @defgroup SD
 191:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief SD HAL module driver
 192:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @{
 193:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
 194:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 195:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #ifdef HAL_SD_MODULE_ENABLED
 196:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 197:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /* Private typedef -----------------------------------------------------------*/
 198:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /* Private define ------------------------------------------------------------*/
 199:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 200:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /** 
 201:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  SDIO Static flags, TimeOut, FIFO Address  
 202:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
 203:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SDIO_STATIC_FLAGS               ((uint32_t)0x000005FF)
 204:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SDIO_CMD0TIMEOUT                ((uint32_t)0x00010000)
 205:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 206:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /** 
 207:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Mask for errors Card Status R1 (OCR Register) 
 208:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
 209:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_OCR_ADDR_OUT_OF_RANGE        ((uint32_t)0x80000000)
 210:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_OCR_ADDR_MISALIGNED          ((uint32_t)0x40000000)
 211:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_OCR_BLOCK_LEN_ERR            ((uint32_t)0x20000000)
 212:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_OCR_ERASE_SEQ_ERR            ((uint32_t)0x10000000)
 213:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_OCR_BAD_ERASE_PARAM          ((uint32_t)0x08000000)
 214:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_OCR_WRITE_PROT_VIOLATION     ((uint32_t)0x04000000)
 215:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_OCR_LOCK_UNLOCK_FAILED       ((uint32_t)0x01000000)
 216:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_OCR_COM_CRC_FAILED           ((uint32_t)0x00800000)
 217:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_OCR_ILLEGAL_CMD              ((uint32_t)0x00400000)
 218:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_OCR_CARD_ECC_FAILED          ((uint32_t)0x00200000)
 219:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_OCR_CC_ERROR                 ((uint32_t)0x00100000)
 220:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_OCR_GENERAL_UNKNOWN_ERROR    ((uint32_t)0x00080000)
 221:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_OCR_STREAM_READ_UNDERRUN     ((uint32_t)0x00040000)
 222:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_OCR_STREAM_WRITE_OVERRUN     ((uint32_t)0x00020000)
 223:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_OCR_CID_CSD_OVERWRIETE       ((uint32_t)0x00010000)
 224:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_OCR_WP_ERASE_SKIP            ((uint32_t)0x00008000)
 225:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_OCR_CARD_ECC_DISABLED        ((uint32_t)0x00004000)
 226:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_OCR_ERASE_RESET              ((uint32_t)0x00002000)
 227:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_OCR_AKE_SEQ_ERROR            ((uint32_t)0x00000008)
 228:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_OCR_ERRORBITS                ((uint32_t)0xFDFFE008)
 229:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 230:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /** 
 231:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Masks for R6 Response 
 232:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
 233:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_R6_GENERAL_UNKNOWN_ERROR     ((uint32_t)0x00002000)
 234:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_R6_ILLEGAL_CMD               ((uint32_t)0x00004000)
 235:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_R6_COM_CRC_FAILED            ((uint32_t)0x00008000)
 236:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 237:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_VOLTAGE_WINDOW_SD            ((uint32_t)0x80100000)
 238:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_HIGH_CAPACITY                ((uint32_t)0x40000000)
 239:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_STD_CAPACITY                 ((uint32_t)0x00000000)
 240:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_CHECK_PATTERN                ((uint32_t)0x000001AA)
 241:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 242:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_MAX_VOLT_TRIAL               ((uint32_t)0x0000FFFF)
 243:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_ALLZERO                      ((uint32_t)0x00000000)
 244:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 245:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_WIDE_BUS_SUPPORT             ((uint32_t)0x00040000)
 246:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_SINGLE_BUS_SUPPORT           ((uint32_t)0x00010000)
 247:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_CARD_LOCKED                  ((uint32_t)0x02000000)
 248:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 249:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_DATATIMEOUT                  ((uint32_t)0xFFFFFFFF)
 250:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_0TO7BITS                     ((uint32_t)0x000000FF)
 251:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_8TO15BITS                    ((uint32_t)0x0000FF00)
 252:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_16TO23BITS                   ((uint32_t)0x00FF0000)
 253:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_24TO31BITS                   ((uint32_t)0xFF000000)
 254:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_MAX_DATA_LENGTH              ((uint32_t)0x01FFFFFF)
 255:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 256:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_HALFFIFO                     ((uint32_t)0x00000008)
 257:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_HALFFIFOBYTES                ((uint32_t)0x00000020)
 258:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 259:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /** 
 260:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Command Class Supported 
 261:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
 262:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_CCCC_LOCK_UNLOCK             ((uint32_t)0x00000080)
 263:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_CCCC_WRITE_PROT              ((uint32_t)0x00000040)
 264:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_CCCC_ERASE                   ((uint32_t)0x00000020)
 265:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 266:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /** 
 267:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Following commands are SD Card Specific commands.
 268:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         SDIO_APP_CMD should be sent before sending these commands. 
 269:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
 270:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** #define SD_SDIO_SEND_IF_COND            ((uint32_t)SD_CMD_HS_SEND_EXT_CSD)
 271:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 272:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 273:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /* Private macro -------------------------------------------------------------*/
 274:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /* Private variables ---------------------------------------------------------*/
 275:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /* Private function prototypes -----------------------------------------------*/
 276:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /* Private functions ---------------------------------------------------------*/
 277:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_Initialize_Cards(SD_HandleTypeDef *hsd);
 278:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_Select_Deselect(SD_HandleTypeDef *hsd, uint64_t addr);
 279:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_PowerON(SD_HandleTypeDef *hsd); 
 280:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_PowerOFF(SD_HandleTypeDef *hsd);
 281:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_SendStatus(SD_HandleTypeDef *hsd, uint32_t *pCardStatus);
 282:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_CardStateTypedef SD_GetState(SD_HandleTypeDef *hsd);
 283:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_IsCardProgramming(SD_HandleTypeDef *hsd, uint8_t *pStatus);
 284:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_CmdError(SD_HandleTypeDef *hsd);
 285:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_CmdResp1Error(SD_HandleTypeDef *hsd, uint8_t SD_CMD);
 286:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_CmdResp7Error(SD_HandleTypeDef *hsd);
 287:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_CmdResp3Error(SD_HandleTypeDef *hsd);
 288:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_CmdResp2Error(SD_HandleTypeDef *hsd);
 289:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_CmdResp6Error(SD_HandleTypeDef *hsd, uint8_t SD_CMD, uint16_t *pRCA);
 290:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_WideBus_Enable(SD_HandleTypeDef *hsd);
 291:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_WideBus_Disable(SD_HandleTypeDef *hsd);
 292:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_FindSCR(SD_HandleTypeDef *hsd, uint32_t *pSCR);  
 293:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static void SD_DMA_RxCplt(DMA_HandleTypeDef *hdma);
 294:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static void SD_DMA_RxError(DMA_HandleTypeDef *hdma);
 295:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static void SD_DMA_TxCplt(DMA_HandleTypeDef *hdma);
 296:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static void SD_DMA_TxError(DMA_HandleTypeDef *hdma);
 297:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 298:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /** @defgroup SD_Private_Functions
 299:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @{
 300:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
 301:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 302:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /** @defgroup SD_Group1 Initialization and de-initialization functions 
 303:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****  *  @brief    Initialization and Configuration functions 
 304:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****  *
 305:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** @verbatim    
 306:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   ==============================================================================
 307:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           ##### Initialization and de-initialization functions #####
 308:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   ==============================================================================
 309:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   [..]  
 310:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     This section provides functions allowing to initialize/de-initialize the SD
 311:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     card device to be ready for use.
 312:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
 313:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****  
 314:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** @endverbatim
 315:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @{
 316:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
 317:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 318:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
 319:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Initializes the SD card according to the specified parameters in the 
 320:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****             SD_HandleTypeDef and create the associated handle.
 321:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
 322:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  SDCardInfo: HAL_SD_CardInfoTypedef structure for SD card information   
 323:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval HAL SD error state
 324:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
 325:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** HAL_SD_ErrorTypedef HAL_SD_Init(SD_HandleTypeDef *hsd, HAL_SD_CardInfoTypedef *SDCardInfo)
 326:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** { 
  26              		.loc 1 326 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 40
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 B0B5     		push	{r4, r5, r7, lr}
  31              		.cfi_def_cfa_offset 16
  32              		.cfi_offset 4, -16
  33              		.cfi_offset 5, -12
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 8EB0     		sub	sp, sp, #56
  37              		.cfi_def_cfa_offset 72
  38 0004 04AF     		add	r7, sp, #16
  39              		.cfi_def_cfa 7, 56
  40 0006 7860     		str	r0, [r7, #4]
  41 0008 3960     		str	r1, [r7]
 327:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   __IO HAL_SD_ErrorTypedef errorState = SD_OK;
  42              		.loc 1 327 0
  43 000a 0023     		movs	r3, #0
  44 000c 87F82730 		strb	r3, [r7, #39]
 328:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SD_InitTypeDef tmpInit;
 329:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 330:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Initialize the low level hardware (MSP) */
 331:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_MspInit(hsd);
  45              		.loc 1 331 0
  46 0010 7868     		ldr	r0, [r7, #4]
  47 0012 FFF7FEFF 		bl	HAL_SD_MspInit
 332:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 333:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Default SDIO peripheral configuration for SD card initialization */
 334:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmpInit.ClockEdge           = SDIO_CLOCK_EDGE_RISING;
  48              		.loc 1 334 0
  49 0016 0023     		movs	r3, #0
  50 0018 FB60     		str	r3, [r7, #12]
 335:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmpInit.ClockBypass         = SDIO_CLOCK_BYPASS_DISABLE;
  51              		.loc 1 335 0
  52 001a 0023     		movs	r3, #0
  53 001c 3B61     		str	r3, [r7, #16]
 336:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmpInit.ClockPowerSave      = SDIO_CLOCK_POWER_SAVE_DISABLE;
  54              		.loc 1 336 0
  55 001e 0023     		movs	r3, #0
  56 0020 7B61     		str	r3, [r7, #20]
 337:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmpInit.BusWide             = SDIO_BUS_WIDE_1B;
  57              		.loc 1 337 0
  58 0022 0023     		movs	r3, #0
  59 0024 BB61     		str	r3, [r7, #24]
 338:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmpInit.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
  60              		.loc 1 338 0
  61 0026 0023     		movs	r3, #0
  62 0028 FB61     		str	r3, [r7, #28]
 339:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmpInit.ClockDiv            = SDIO_INIT_CLK_DIV;
  63              		.loc 1 339 0
  64 002a 7623     		movs	r3, #118
  65 002c 3B62     		str	r3, [r7, #32]
 340:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 341:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Initialize SDIO peripheral interface with default configuration */
 342:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_Init(hsd->Instance, tmpInit);
  66              		.loc 1 342 0
  67 002e 7B68     		ldr	r3, [r7, #4]
  68 0030 1C68     		ldr	r4, [r3]
  69 0032 6B46     		mov	r3, sp
  70 0034 07F11802 		add	r2, r7, #24
  71 0038 07CA     		ldmia	r2, {r0, r1, r2}
  72 003a 83E80700 		stmia	r3, {r0, r1, r2}
  73 003e 07F10C03 		add	r3, r7, #12
  74 0042 0ECB     		ldmia	r3, {r1, r2, r3}
  75 0044 2046     		mov	r0, r4
  76 0046 FFF7FEFF 		bl	SDIO_Init
 343:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 344:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Identify card operating voltage */
 345:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = SD_PowerON(hsd); 
  77              		.loc 1 345 0
  78 004a 7868     		ldr	r0, [r7, #4]
  79 004c 01F0A0FF 		bl	SD_PowerON
  80 0050 0346     		mov	r3, r0
  81 0052 87F82730 		strb	r3, [r7, #39]
 346:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 347:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(errorState != SD_OK)     
  82              		.loc 1 347 0
  83 0056 97F82730 		ldrb	r3, [r7, #39]
  84 005a DBB2     		uxtb	r3, r3
  85 005c 002B     		cmp	r3, #0
  86 005e 03D0     		beq	.L2
 348:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 349:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
  87              		.loc 1 349 0
  88 0060 97F82730 		ldrb	r3, [r7, #39]
  89 0064 DBB2     		uxtb	r3, r3
  90 0066 38E0     		b	.L6
  91              	.L2:
 350:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 351:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 352:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Initialize the present SDIO card(s) and put them in idle state */
 353:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = SD_Initialize_Cards(hsd);
  92              		.loc 1 353 0
  93 0068 7868     		ldr	r0, [r7, #4]
  94 006a 01F0A3FE 		bl	SD_Initialize_Cards
  95 006e 0346     		mov	r3, r0
  96 0070 87F82730 		strb	r3, [r7, #39]
 354:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 355:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (errorState != SD_OK)
  97              		.loc 1 355 0
  98 0074 97F82730 		ldrb	r3, [r7, #39]
  99 0078 DBB2     		uxtb	r3, r3
 100 007a 002B     		cmp	r3, #0
 101 007c 03D0     		beq	.L4
 356:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 357:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 102              		.loc 1 357 0
 103 007e 97F82730 		ldrb	r3, [r7, #39]
 104 0082 DBB2     		uxtb	r3, r3
 105 0084 29E0     		b	.L6
 106              	.L4:
 358:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 359:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 360:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Read CSD/CID MSD registers */
 361:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = HAL_SD_Get_CardInfo(hsd, SDCardInfo);
 107              		.loc 1 361 0
 108 0086 7868     		ldr	r0, [r7, #4]
 109 0088 3968     		ldr	r1, [r7]
 110 008a FFF7FEFF 		bl	HAL_SD_Get_CardInfo
 111 008e 0346     		mov	r3, r0
 112 0090 87F82730 		strb	r3, [r7, #39]
 362:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 363:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (errorState == SD_OK)
 113              		.loc 1 363 0
 114 0094 97F82730 		ldrb	r3, [r7, #39]
 115 0098 DBB2     		uxtb	r3, r3
 116 009a 002B     		cmp	r3, #0
 117 009c 0CD1     		bne	.L5
 364:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 365:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Select the Card */
 366:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_Select_Deselect(hsd, (uint32_t)(((uint32_t)SDCardInfo->RCA) << 16));
 118              		.loc 1 366 0
 119 009e 3B68     		ldr	r3, [r7]
 120 00a0 B3F85430 		ldrh	r3, [r3, #84]
 121 00a4 1B04     		lsls	r3, r3, #16
 122 00a6 1A46     		mov	r2, r3
 123 00a8 4FF00003 		mov	r3, #0
 124 00ac 7868     		ldr	r0, [r7, #4]
 125 00ae 01F045FF 		bl	SD_Select_Deselect
 126 00b2 0346     		mov	r3, r0
 127 00b4 87F82730 		strb	r3, [r7, #39]
 128              	.L5:
 367:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 368:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 369:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Configure SDIO peripheral interface */
 370:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_Init(hsd->Instance, hsd->Init);   
 129              		.loc 1 370 0
 130 00b8 7B68     		ldr	r3, [r7, #4]
 131 00ba 1D68     		ldr	r5, [r3]
 132 00bc 7B68     		ldr	r3, [r7, #4]
 133 00be 6C46     		mov	r4, sp
 134 00c0 03F11002 		add	r2, r3, #16
 135 00c4 07CA     		ldmia	r2, {r0, r1, r2}
 136 00c6 84E80700 		stmia	r4, {r0, r1, r2}
 137 00ca 0433     		adds	r3, r3, #4
 138 00cc 0ECB     		ldmia	r3, {r1, r2, r3}
 139 00ce 2846     		mov	r0, r5
 140 00d0 FFF7FEFF 		bl	SDIO_Init
 371:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 372:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 141              		.loc 1 372 0
 142 00d4 97F82730 		ldrb	r3, [r7, #39]
 143 00d8 DBB2     		uxtb	r3, r3
 144              	.L6:
 373:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 145              		.loc 1 373 0
 146 00da 1846     		mov	r0, r3
 147 00dc 2837     		adds	r7, r7, #40
 148 00de BD46     		mov	sp, r7
 149              		@ sp needed
 150 00e0 B0BD     		pop	{r4, r5, r7, pc}
 151              		.cfi_endproc
 152              	.LFE55:
 154 00e2 00BF     		.align	2
 155              		.global	HAL_SD_DeInit
 156              		.thumb
 157              		.thumb_func
 159              	HAL_SD_DeInit:
 160              	.LFB56:
 374:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 375:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
 376:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  De-Initializes the SD card.
 377:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
 378:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval HAL status
 379:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
 380:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** HAL_StatusTypeDef HAL_SD_DeInit(SD_HandleTypeDef *hsd)
 381:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 161              		.loc 1 381 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 8
 164              		@ frame_needed = 1, uses_anonymous_args = 0
 165 00e4 80B5     		push	{r7, lr}
 166              		.cfi_def_cfa_offset 8
 167              		.cfi_offset 7, -8
 168              		.cfi_offset 14, -4
 169 00e6 82B0     		sub	sp, sp, #8
 170              		.cfi_def_cfa_offset 16
 171 00e8 00AF     		add	r7, sp, #0
 172              		.cfi_def_cfa_register 7
 173 00ea 7860     		str	r0, [r7, #4]
 382:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 383:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Set SD power state to off */ 
 384:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SD_PowerOFF(hsd);
 174              		.loc 1 384 0
 175 00ec 7868     		ldr	r0, [r7, #4]
 176 00ee 02F035F8 		bl	SD_PowerOFF
 385:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 386:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* De-Initialize the MSP layer */
 387:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_MspDeInit(hsd);
 177              		.loc 1 387 0
 178 00f2 7868     		ldr	r0, [r7, #4]
 179 00f4 FFF7FEFF 		bl	HAL_SD_MspDeInit
 388:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 389:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return HAL_OK;
 180              		.loc 1 389 0
 181 00f8 0023     		movs	r3, #0
 390:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 182              		.loc 1 390 0
 183 00fa 1846     		mov	r0, r3
 184 00fc 0837     		adds	r7, r7, #8
 185 00fe BD46     		mov	sp, r7
 186              		@ sp needed
 187 0100 80BD     		pop	{r7, pc}
 188              		.cfi_endproc
 189              	.LFE56:
 191 0102 00BF     		.align	2
 192              		.weak	HAL_SD_MspInit
 193              		.thumb
 194              		.thumb_func
 196              	HAL_SD_MspInit:
 197              	.LFB57:
 391:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 392:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 393:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
 394:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Initializes the SD MSP.
 395:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
 396:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval None
 397:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
 398:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** __weak void HAL_SD_MspInit(SD_HandleTypeDef *hsd)
 399:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 198              		.loc 1 399 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 8
 201              		@ frame_needed = 1, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 203 0104 80B4     		push	{r7}
 204              		.cfi_def_cfa_offset 4
 205              		.cfi_offset 7, -4
 206 0106 83B0     		sub	sp, sp, #12
 207              		.cfi_def_cfa_offset 16
 208 0108 00AF     		add	r7, sp, #0
 209              		.cfi_def_cfa_register 7
 210 010a 7860     		str	r0, [r7, #4]
 400:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 401:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****             the HAL_SD_MspInit could be implemented in the user file
 402:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****    */
 403:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 211              		.loc 1 403 0
 212 010c 0C37     		adds	r7, r7, #12
 213 010e BD46     		mov	sp, r7
 214              		@ sp needed
 215 0110 5DF8047B 		ldr	r7, [sp], #4
 216 0114 7047     		bx	lr
 217              		.cfi_endproc
 218              	.LFE57:
 220 0116 00BF     		.align	2
 221              		.weak	HAL_SD_MspDeInit
 222              		.thumb
 223              		.thumb_func
 225              	HAL_SD_MspDeInit:
 226              	.LFB58:
 404:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 405:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
 406:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  De-Initialize SD MSP.
 407:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
 408:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval None
 409:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
 410:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** __weak void HAL_SD_MspDeInit(SD_HandleTypeDef *hsd)
 411:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 227              		.loc 1 411 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 8
 230              		@ frame_needed = 1, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 232 0118 80B4     		push	{r7}
 233              		.cfi_def_cfa_offset 4
 234              		.cfi_offset 7, -4
 235 011a 83B0     		sub	sp, sp, #12
 236              		.cfi_def_cfa_offset 16
 237 011c 00AF     		add	r7, sp, #0
 238              		.cfi_def_cfa_register 7
 239 011e 7860     		str	r0, [r7, #4]
 412:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 413:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****             the HAL_SD_MspDeInit could be implemented in the user file
 414:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****    */
 415:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 240              		.loc 1 415 0
 241 0120 0C37     		adds	r7, r7, #12
 242 0122 BD46     		mov	sp, r7
 243              		@ sp needed
 244 0124 5DF8047B 		ldr	r7, [sp], #4
 245 0128 7047     		bx	lr
 246              		.cfi_endproc
 247              	.LFE58:
 249 012a 00BF     		.align	2
 250              		.global	HAL_SD_ReadBlocks
 251              		.thumb
 252              		.thumb_func
 254              	HAL_SD_ReadBlocks:
 255              	.LFB59:
 416:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 417:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
 418:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @}
 419:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
 420:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 421:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /** @defgroup SD_Group2 IO operation functions 
 422:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****  *  @brief   Data transfer functions 
 423:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****  *
 424:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** @verbatim   
 425:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   ==============================================================================
 426:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****                         ##### IO operation functions #####
 427:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   ==============================================================================  
 428:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   [..]
 429:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     This subsection provides a set of functions allowing to manage the data 
 430:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     transfer from/to SD card.
 431:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 432:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** @endverbatim
 433:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @{
 434:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
 435:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 436:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
 437:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Reads block(s) from a specified address in a card. The Data transfer 
 438:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         is managed by polling mode.  
 439:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
 440:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  pReadBuffer: pointer to the buffer that will contain the received data
 441:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  ReadAddr: Address from where data is to be read  
 442:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  BlockSize: SD card Data block size 
 443:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *          This parameter should be 512
 444:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  NumberOfBlocks: Number of SD blocks to read   
 445:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
 446:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
 447:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** HAL_SD_ErrorTypedef HAL_SD_ReadBlocks(SD_HandleTypeDef *hsd, uint32_t *pReadBuffer, uint64_t ReadAd
 448:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 256              		.loc 1 448 0
 257              		.cfi_startproc
 258              		@ args = 8, pretend = 0, frame = 72
 259              		@ frame_needed = 1, uses_anonymous_args = 0
 260 012c B0B5     		push	{r4, r5, r7, lr}
 261              		.cfi_def_cfa_offset 16
 262              		.cfi_offset 4, -16
 263              		.cfi_offset 5, -12
 264              		.cfi_offset 7, -8
 265              		.cfi_offset 14, -4
 266 012e 92B0     		sub	sp, sp, #72
 267              		.cfi_def_cfa_offset 88
 268 0130 00AF     		add	r7, sp, #0
 269              		.cfi_def_cfa_register 7
 270 0132 F860     		str	r0, [r7, #12]
 271 0134 B960     		str	r1, [r7, #8]
 272 0136 C7E90023 		strd	r2, [r7]
 449:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitTypeDef  SDIO_CmdInitStructure;
 450:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitTypeDef SDIO_DataInitStructure;
 451:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 273              		.loc 1 451 0
 274 013a 0023     		movs	r3, #0
 275 013c 87F84730 		strb	r3, [r7, #71]
 452:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t count = 0, *tempbuff = (uint32_t *)pReadBuffer;
 276              		.loc 1 452 0
 277 0140 0023     		movs	r3, #0
 278 0142 3B64     		str	r3, [r7, #64]
 279 0144 BB68     		ldr	r3, [r7, #8]
 280 0146 FB63     		str	r3, [r7, #60]
 453:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 454:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Initialize data control register */
 455:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   hsd->Instance->DCTRL = 0;
 281              		.loc 1 455 0
 282 0148 FB68     		ldr	r3, [r7, #12]
 283 014a 1B68     		ldr	r3, [r3]
 284 014c 0022     		movs	r2, #0
 285 014e DA62     		str	r2, [r3, #44]
 456:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 457:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (hsd->CardType == HIGH_CAPACITY_SD_CARD)
 286              		.loc 1 457 0
 287 0150 FB68     		ldr	r3, [r7, #12]
 288 0152 1B6A     		ldr	r3, [r3, #32]
 289 0154 022B     		cmp	r3, #2
 290 0156 0AD1     		bne	.L12
 458:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 459:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     BlockSize = 512;
 291              		.loc 1 459 0
 292 0158 4FF40073 		mov	r3, #512
 293 015c BB65     		str	r3, [r7, #88]
 460:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     ReadAddr /= 512;
 294              		.loc 1 460 0
 295 015e D7E90023 		ldrd	r2, [r7]
 296 0162 540A     		lsrs	r4, r2, #9
 297 0164 44EAC354 		orr	r4, r4, r3, lsl #23
 298 0168 5D0A     		lsrs	r5, r3, #9
 299 016a C7E90045 		strd	r4, [r7]
 300              	.L12:
 461:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 462:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 463:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Set Block Size for Card */ 
 464:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Argument         = (uint32_t) BlockSize;
 301              		.loc 1 464 0
 302 016e BB6D     		ldr	r3, [r7, #88]
 303 0170 BB62     		str	r3, [r7, #40]
 465:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CmdIndex         = SD_CMD_SET_BLOCKLEN;
 304              		.loc 1 465 0
 305 0172 1023     		movs	r3, #16
 306 0174 FB62     		str	r3, [r7, #44]
 466:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Response         = SDIO_RESPONSE_SHORT;
 307              		.loc 1 466 0
 308 0176 4023     		movs	r3, #64
 309 0178 3B63     		str	r3, [r7, #48]
 467:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 310              		.loc 1 467 0
 311 017a 0023     		movs	r3, #0
 312 017c 7B63     		str	r3, [r7, #52]
 468:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CPSM             = SDIO_CPSM_ENABLE;
 313              		.loc 1 468 0
 314 017e 4FF48063 		mov	r3, #1024
 315 0182 BB63     		str	r3, [r7, #56]
 469:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 316              		.loc 1 469 0
 317 0184 FB68     		ldr	r3, [r7, #12]
 318 0186 1A68     		ldr	r2, [r3]
 319 0188 07F12803 		add	r3, r7, #40
 320 018c 1046     		mov	r0, r2
 321 018e 1946     		mov	r1, r3
 322 0190 FFF7FEFF 		bl	SDIO_SendCommand
 470:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 471:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check for error conditions */
 472:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = SD_CmdResp1Error(hsd, SD_CMD_SET_BLOCKLEN);
 323              		.loc 1 472 0
 324 0194 F868     		ldr	r0, [r7, #12]
 325 0196 1021     		movs	r1, #16
 326 0198 02F0BEF8 		bl	SD_CmdResp1Error
 327 019c 0346     		mov	r3, r0
 328 019e 87F84730 		strb	r3, [r7, #71]
 473:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 474:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (errorState != SD_OK)
 329              		.loc 1 474 0
 330 01a2 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 331 01a6 002B     		cmp	r3, #0
 332 01a8 02D0     		beq	.L13
 475:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 476:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 333              		.loc 1 476 0
 334 01aa 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 335 01ae 1BE1     		b	.L38
 336              	.L13:
 477:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 478:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 479:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Configure the SD DPSM (Data Path State Machine) */
 480:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.DataTimeOut   = SD_DATATIMEOUT;
 337              		.loc 1 480 0
 338 01b0 4FF0FF33 		mov	r3, #-1
 339 01b4 3B61     		str	r3, [r7, #16]
 481:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.DataLength    = NumberOfBlocks * BlockSize;
 340              		.loc 1 481 0
 341 01b6 FB6D     		ldr	r3, [r7, #92]
 342 01b8 BA6D     		ldr	r2, [r7, #88]
 343 01ba 02FB03F3 		mul	r3, r2, r3
 344 01be 7B61     		str	r3, [r7, #20]
 482:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.DataBlockSize = (uint32_t)(9 << 4);
 345              		.loc 1 482 0
 346 01c0 9023     		movs	r3, #144
 347 01c2 BB61     		str	r3, [r7, #24]
 483:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.TransferDir   = SDIO_TRANSFER_DIR_TO_SDIO;
 348              		.loc 1 483 0
 349 01c4 0223     		movs	r3, #2
 350 01c6 FB61     		str	r3, [r7, #28]
 484:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.TransferMode  = SDIO_TRANSFER_MODE_BLOCK;
 351              		.loc 1 484 0
 352 01c8 0023     		movs	r3, #0
 353 01ca 3B62     		str	r3, [r7, #32]
 485:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.DPSM          = SDIO_DPSM_ENABLE;
 354              		.loc 1 485 0
 355 01cc 0123     		movs	r3, #1
 356 01ce 7B62     		str	r3, [r7, #36]
 486:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataConfig(hsd->Instance, &SDIO_DataInitStructure);
 357              		.loc 1 486 0
 358 01d0 FB68     		ldr	r3, [r7, #12]
 359 01d2 1A68     		ldr	r2, [r3]
 360 01d4 07F11003 		add	r3, r7, #16
 361 01d8 1046     		mov	r0, r2
 362 01da 1946     		mov	r1, r3
 363 01dc FFF7FEFF 		bl	SDIO_DataConfig
 487:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 488:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(NumberOfBlocks > 1)
 364              		.loc 1 488 0
 365 01e0 FB6D     		ldr	r3, [r7, #92]
 366 01e2 012B     		cmp	r3, #1
 367 01e4 02D9     		bls	.L15
 489:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 490:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Send CMD18 READ_MULT_BLOCK with argument data address */
 491:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.CmdIndex = SD_CMD_READ_MULT_BLOCK;
 368              		.loc 1 491 0
 369 01e6 1223     		movs	r3, #18
 370 01e8 FB62     		str	r3, [r7, #44]
 371 01ea 01E0     		b	.L16
 372              	.L15:
 492:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 493:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else
 494:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 495:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Send CMD17 READ_SINGLE_BLOCK */
 496:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.CmdIndex = SD_CMD_READ_SINGLE_BLOCK;    
 373              		.loc 1 496 0
 374 01ec 1123     		movs	r3, #17
 375 01ee FB62     		str	r3, [r7, #44]
 376              	.L16:
 497:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 498:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 499:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Argument         = (uint32_t)ReadAddr;
 377              		.loc 1 499 0
 378 01f0 3B68     		ldr	r3, [r7]
 379 01f2 BB62     		str	r3, [r7, #40]
 500:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 380              		.loc 1 500 0
 381 01f4 FB68     		ldr	r3, [r7, #12]
 382 01f6 1A68     		ldr	r2, [r3]
 383 01f8 07F12803 		add	r3, r7, #40
 384 01fc 1046     		mov	r0, r2
 385 01fe 1946     		mov	r1, r3
 386 0200 FFF7FEFF 		bl	SDIO_SendCommand
 501:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 502:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Read block(s) in polling mode */
 503:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(NumberOfBlocks > 1)
 387              		.loc 1 503 0
 388 0204 FB6D     		ldr	r3, [r7, #92]
 389 0206 012B     		cmp	r3, #1
 390 0208 35D9     		bls	.L17
 504:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 505:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Check for error conditions */
 506:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CmdResp1Error(hsd, SD_CMD_READ_MULT_BLOCK);
 391              		.loc 1 506 0
 392 020a F868     		ldr	r0, [r7, #12]
 393 020c 1221     		movs	r1, #18
 394 020e 02F083F8 		bl	SD_CmdResp1Error
 395 0212 0346     		mov	r3, r0
 396 0214 87F84730 		strb	r3, [r7, #71]
 507:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
 508:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     if (errorState != SD_OK)
 397              		.loc 1 508 0
 398 0218 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 399 021c 002B     		cmp	r3, #0
 400 021e 02D0     		beq	.L18
 509:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
 510:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       return errorState;
 401              		.loc 1 510 0
 402 0220 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 403 0224 E0E0     		b	.L38
 404              	.L18:
 511:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
 512:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
 513:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Poll on SDIO flags */
 514:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     while(!__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_RXOVERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_DTIMEOUT 
 405              		.loc 1 514 0
 406 0226 1DE0     		b	.L19
 407              	.L22:
 515:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
 516:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_RXFIFOHF))
 408              		.loc 1 516 0
 409 0228 FB68     		ldr	r3, [r7, #12]
 410 022a 1B68     		ldr	r3, [r3]
 411 022c 5B6B     		ldr	r3, [r3, #52]
 412 022e 03F40043 		and	r3, r3, #32768
 413 0232 002B     		cmp	r3, #0
 414 0234 16D0     		beq	.L19
 517:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       {
 518:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         /* Read data from SDIO Rx FIFO */
 519:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         for (count = 0; count < 8; count++)
 415              		.loc 1 519 0
 416 0236 0023     		movs	r3, #0
 417 0238 3B64     		str	r3, [r7, #64]
 418 023a 0DE0     		b	.L20
 419              	.L21:
 520:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         {
 521:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           *(tempbuff + count) = SDIO_ReadFIFO(hsd->Instance);
 420              		.loc 1 521 0 discriminator 2
 421 023c 3B6C     		ldr	r3, [r7, #64]
 422 023e 9B00     		lsls	r3, r3, #2
 423 0240 FA6B     		ldr	r2, [r7, #60]
 424 0242 D418     		adds	r4, r2, r3
 425 0244 FB68     		ldr	r3, [r7, #12]
 426 0246 1B68     		ldr	r3, [r3]
 427 0248 1846     		mov	r0, r3
 428 024a FFF7FEFF 		bl	SDIO_ReadFIFO
 429 024e 0346     		mov	r3, r0
 430 0250 2360     		str	r3, [r4]
 519:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         {
 431              		.loc 1 519 0 discriminator 2
 432 0252 3B6C     		ldr	r3, [r7, #64]
 433 0254 0133     		adds	r3, r3, #1
 434 0256 3B64     		str	r3, [r7, #64]
 435              	.L20:
 519:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         {
 436              		.loc 1 519 0 is_stmt 0 discriminator 1
 437 0258 3B6C     		ldr	r3, [r7, #64]
 438 025a 072B     		cmp	r3, #7
 439 025c EED9     		bls	.L21
 522:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         }
 523:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         
 524:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         tempbuff += 8;
 440              		.loc 1 524 0 is_stmt 1
 441 025e FB6B     		ldr	r3, [r7, #60]
 442 0260 2033     		adds	r3, r3, #32
 443 0262 FB63     		str	r3, [r7, #60]
 444              	.L19:
 514:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
 445              		.loc 1 514 0 discriminator 1
 446 0264 FB68     		ldr	r3, [r7, #12]
 447 0266 1B68     		ldr	r3, [r3]
 448 0268 5A6B     		ldr	r2, [r3, #52]
 449 026a 40F22A33 		movw	r3, #810
 450 026e 1340     		ands	r3, r3, r2
 451 0270 002B     		cmp	r3, #0
 452 0272 D9D0     		beq	.L22
 453 0274 34E0     		b	.L23
 454              	.L17:
 525:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       }
 526:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }      
 527:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 528:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else
 529:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 530:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Check for error conditions */
 531:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CmdResp1Error(hsd, SD_CMD_READ_SINGLE_BLOCK); 
 455              		.loc 1 531 0
 456 0276 F868     		ldr	r0, [r7, #12]
 457 0278 1121     		movs	r1, #17
 458 027a 02F04DF8 		bl	SD_CmdResp1Error
 459 027e 0346     		mov	r3, r0
 460 0280 87F84730 		strb	r3, [r7, #71]
 532:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
 533:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     if (errorState != SD_OK)
 461              		.loc 1 533 0
 462 0284 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 463 0288 002B     		cmp	r3, #0
 464 028a 02D0     		beq	.L24
 534:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
 535:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       return errorState;
 465              		.loc 1 535 0
 466 028c 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 467 0290 AAE0     		b	.L38
 468              	.L24:
 536:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }    
 537:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
 538:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* In case of single block transfer, no need of stop transfer at all */
 539:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     while(!__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_RXOVERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_DTIMEOUT 
 469              		.loc 1 539 0
 470 0292 1DE0     		b	.L25
 471              	.L28:
 540:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
 541:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_RXFIFOHF))
 472              		.loc 1 541 0
 473 0294 FB68     		ldr	r3, [r7, #12]
 474 0296 1B68     		ldr	r3, [r3]
 475 0298 5B6B     		ldr	r3, [r3, #52]
 476 029a 03F40043 		and	r3, r3, #32768
 477 029e 002B     		cmp	r3, #0
 478 02a0 16D0     		beq	.L25
 542:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       {
 543:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         /* Read data from SDIO Rx FIFO */
 544:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         for (count = 0; count < 8; count++)
 479              		.loc 1 544 0
 480 02a2 0023     		movs	r3, #0
 481 02a4 3B64     		str	r3, [r7, #64]
 482 02a6 0DE0     		b	.L26
 483              	.L27:
 545:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         {
 546:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           *(tempbuff + count) = SDIO_ReadFIFO(hsd->Instance);
 484              		.loc 1 546 0 discriminator 2
 485 02a8 3B6C     		ldr	r3, [r7, #64]
 486 02aa 9B00     		lsls	r3, r3, #2
 487 02ac FA6B     		ldr	r2, [r7, #60]
 488 02ae D418     		adds	r4, r2, r3
 489 02b0 FB68     		ldr	r3, [r7, #12]
 490 02b2 1B68     		ldr	r3, [r3]
 491 02b4 1846     		mov	r0, r3
 492 02b6 FFF7FEFF 		bl	SDIO_ReadFIFO
 493 02ba 0346     		mov	r3, r0
 494 02bc 2360     		str	r3, [r4]
 544:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         {
 495              		.loc 1 544 0 discriminator 2
 496 02be 3B6C     		ldr	r3, [r7, #64]
 497 02c0 0133     		adds	r3, r3, #1
 498 02c2 3B64     		str	r3, [r7, #64]
 499              	.L26:
 544:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         {
 500              		.loc 1 544 0 is_stmt 0 discriminator 1
 501 02c4 3B6C     		ldr	r3, [r7, #64]
 502 02c6 072B     		cmp	r3, #7
 503 02c8 EED9     		bls	.L27
 547:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         }
 548:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         
 549:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         tempbuff += 8;
 504              		.loc 1 549 0 is_stmt 1
 505 02ca FB6B     		ldr	r3, [r7, #60]
 506 02cc 2033     		adds	r3, r3, #32
 507 02ce FB63     		str	r3, [r7, #60]
 508              	.L25:
 539:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
 509              		.loc 1 539 0 discriminator 1
 510 02d0 FB68     		ldr	r3, [r7, #12]
 511 02d2 1B68     		ldr	r3, [r3]
 512 02d4 5A6B     		ldr	r2, [r3, #52]
 513 02d6 40F22A63 		movw	r3, #1578
 514 02da 1340     		ands	r3, r3, r2
 515 02dc 002B     		cmp	r3, #0
 516 02de D9D0     		beq	.L28
 517              	.L23:
 550:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       }
 551:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }   
 552:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 553:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 554:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Send stop transmission command in case of multiblock read */
 555:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_DATAEND) && (NumberOfBlocks > 1))
 518              		.loc 1 555 0
 519 02e0 FB68     		ldr	r3, [r7, #12]
 520 02e2 1B68     		ldr	r3, [r3]
 521 02e4 5B6B     		ldr	r3, [r3, #52]
 522 02e6 03F48073 		and	r3, r3, #256
 523 02ea 002B     		cmp	r3, #0
 524 02ec 14D0     		beq	.L29
 525              		.loc 1 555 0 is_stmt 0 discriminator 1
 526 02ee FB6D     		ldr	r3, [r7, #92]
 527 02f0 012B     		cmp	r3, #1
 528 02f2 11D9     		bls	.L29
 556:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {    
 557:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     if ((hsd->CardType == STD_CAPACITY_SD_CARD_V1_1) ||\
 529              		.loc 1 557 0 is_stmt 1
 530 02f4 FB68     		ldr	r3, [r7, #12]
 531 02f6 1B6A     		ldr	r3, [r3, #32]
 532 02f8 002B     		cmp	r3, #0
 533 02fa 07D0     		beq	.L30
 558:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       (hsd->CardType == STD_CAPACITY_SD_CARD_V2_0) ||\
 534              		.loc 1 558 0 discriminator 1
 535 02fc FB68     		ldr	r3, [r7, #12]
 536 02fe 1B6A     		ldr	r3, [r3, #32]
 557:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       (hsd->CardType == STD_CAPACITY_SD_CARD_V2_0) ||\
 537              		.loc 1 557 0 discriminator 1
 538 0300 012B     		cmp	r3, #1
 539 0302 03D0     		beq	.L30
 559:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         (hsd->CardType == HIGH_CAPACITY_SD_CARD))
 540              		.loc 1 559 0
 541 0304 FB68     		ldr	r3, [r7, #12]
 542 0306 1B6A     		ldr	r3, [r3, #32]
 558:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       (hsd->CardType == STD_CAPACITY_SD_CARD_V2_0) ||\
 543              		.loc 1 558 0
 544 0308 022B     		cmp	r3, #2
 545 030a 05D1     		bne	.L29
 546              	.L30:
 560:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
 561:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       /* Send stop transmission command */
 562:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       errorState = HAL_SD_StopTransfer(hsd);
 547              		.loc 1 562 0
 548 030c F868     		ldr	r0, [r7, #12]
 549 030e FFF7FEFF 		bl	HAL_SD_StopTransfer
 550 0312 0346     		mov	r3, r0
 551 0314 87F84730 		strb	r3, [r7, #71]
 552              	.L29:
 563:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
 564:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 565:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 566:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Get error state */
 567:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_DTIMEOUT))
 553              		.loc 1 567 0
 554 0318 FB68     		ldr	r3, [r7, #12]
 555 031a 1B68     		ldr	r3, [r3]
 556 031c 5B6B     		ldr	r3, [r3, #52]
 557 031e 03F00803 		and	r3, r3, #8
 558 0322 002B     		cmp	r3, #0
 559 0324 09D0     		beq	.L31
 568:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 569:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_DTIMEOUT);
 560              		.loc 1 569 0
 561 0326 FB68     		ldr	r3, [r7, #12]
 562 0328 1B68     		ldr	r3, [r3]
 563 032a 0822     		movs	r2, #8
 564 032c 9A63     		str	r2, [r3, #56]
 570:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
 571:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_DATA_TIMEOUT;
 565              		.loc 1 571 0
 566 032e 0423     		movs	r3, #4
 567 0330 87F84730 		strb	r3, [r7, #71]
 572:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
 573:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 568              		.loc 1 573 0
 569 0334 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 570 0338 56E0     		b	.L38
 571              	.L31:
 574:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 575:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_DCRCFAIL))
 572              		.loc 1 575 0
 573 033a FB68     		ldr	r3, [r7, #12]
 574 033c 1B68     		ldr	r3, [r3]
 575 033e 5B6B     		ldr	r3, [r3, #52]
 576 0340 03F00203 		and	r3, r3, #2
 577 0344 002B     		cmp	r3, #0
 578 0346 09D0     		beq	.L32
 576:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 577:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_DCRCFAIL);
 579              		.loc 1 577 0
 580 0348 FB68     		ldr	r3, [r7, #12]
 581 034a 1B68     		ldr	r3, [r3]
 582 034c 0222     		movs	r2, #2
 583 034e 9A63     		str	r2, [r3, #56]
 578:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
 579:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_DATA_CRC_FAIL;
 584              		.loc 1 579 0
 585 0350 0223     		movs	r3, #2
 586 0352 87F84730 		strb	r3, [r7, #71]
 580:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
 581:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 587              		.loc 1 581 0
 588 0356 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 589 035a 45E0     		b	.L38
 590              	.L32:
 582:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 583:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_RXOVERR))
 591              		.loc 1 583 0
 592 035c FB68     		ldr	r3, [r7, #12]
 593 035e 1B68     		ldr	r3, [r3]
 594 0360 5B6B     		ldr	r3, [r3, #52]
 595 0362 03F02003 		and	r3, r3, #32
 596 0366 002B     		cmp	r3, #0
 597 0368 09D0     		beq	.L33
 584:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 585:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_RXOVERR);
 598              		.loc 1 585 0
 599 036a FB68     		ldr	r3, [r7, #12]
 600 036c 1B68     		ldr	r3, [r3]
 601 036e 2022     		movs	r2, #32
 602 0370 9A63     		str	r2, [r3, #56]
 586:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
 587:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_RX_OVERRUN;
 603              		.loc 1 587 0
 604 0372 0623     		movs	r3, #6
 605 0374 87F84730 		strb	r3, [r7, #71]
 588:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
 589:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 606              		.loc 1 589 0
 607 0378 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 608 037c 34E0     		b	.L38
 609              	.L33:
 590:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 591:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_STBITERR))
 610              		.loc 1 591 0
 611 037e FB68     		ldr	r3, [r7, #12]
 612 0380 1B68     		ldr	r3, [r3]
 613 0382 5B6B     		ldr	r3, [r3, #52]
 614 0384 03F40073 		and	r3, r3, #512
 615 0388 002B     		cmp	r3, #0
 616 038a 0AD0     		beq	.L34
 592:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 593:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_STBITERR);
 617              		.loc 1 593 0
 618 038c FB68     		ldr	r3, [r7, #12]
 619 038e 1B68     		ldr	r3, [r3]
 620 0390 4FF40072 		mov	r2, #512
 621 0394 9A63     		str	r2, [r3, #56]
 594:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
 595:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_START_BIT_ERR;
 622              		.loc 1 595 0
 623 0396 0723     		movs	r3, #7
 624 0398 87F84730 		strb	r3, [r7, #71]
 596:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
 597:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 625              		.loc 1 597 0
 626 039c 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 627 03a0 22E0     		b	.L38
 628              	.L34:
 598:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 599:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 600:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   count = SD_DATATIMEOUT;
 629              		.loc 1 600 0
 630 03a2 4FF0FF33 		mov	r3, #-1
 631 03a6 3B64     		str	r3, [r7, #64]
 601:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 602:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Empty FIFO if there is still any data */
 603:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   while ((__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_RXDAVL)) && (count > 0))
 632              		.loc 1 603 0
 633 03a8 0DE0     		b	.L35
 634              	.L37:
 604:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 605:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     *tempbuff = SDIO_ReadFIFO(hsd->Instance);
 635              		.loc 1 605 0
 636 03aa FB68     		ldr	r3, [r7, #12]
 637 03ac 1B68     		ldr	r3, [r3]
 638 03ae 1846     		mov	r0, r3
 639 03b0 FFF7FEFF 		bl	SDIO_ReadFIFO
 640 03b4 0246     		mov	r2, r0
 641 03b6 FB6B     		ldr	r3, [r7, #60]
 642 03b8 1A60     		str	r2, [r3]
 606:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     tempbuff++;
 643              		.loc 1 606 0
 644 03ba FB6B     		ldr	r3, [r7, #60]
 645 03bc 0433     		adds	r3, r3, #4
 646 03be FB63     		str	r3, [r7, #60]
 607:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     count--;
 647              		.loc 1 607 0
 648 03c0 3B6C     		ldr	r3, [r7, #64]
 649 03c2 013B     		subs	r3, r3, #1
 650 03c4 3B64     		str	r3, [r7, #64]
 651              	.L35:
 603:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 652              		.loc 1 603 0 discriminator 1
 653 03c6 FB68     		ldr	r3, [r7, #12]
 654 03c8 1B68     		ldr	r3, [r3]
 655 03ca 5B6B     		ldr	r3, [r3, #52]
 656 03cc 03F40013 		and	r3, r3, #2097152
 657 03d0 002B     		cmp	r3, #0
 658 03d2 02D0     		beq	.L36
 603:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 659              		.loc 1 603 0 is_stmt 0 discriminator 2
 660 03d4 3B6C     		ldr	r3, [r7, #64]
 661 03d6 002B     		cmp	r3, #0
 662 03d8 E7D1     		bne	.L37
 663              	.L36:
 608:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 609:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 610:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Clear all the static flags */
 611:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 664              		.loc 1 611 0 is_stmt 1
 665 03da FB68     		ldr	r3, [r7, #12]
 666 03dc 1B68     		ldr	r3, [r3]
 667 03de 40F2FF52 		movw	r2, #1535
 668 03e2 9A63     		str	r2, [r3, #56]
 612:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 613:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 669              		.loc 1 613 0
 670 03e4 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 671              	.L38:
 614:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 672              		.loc 1 614 0
 673 03e8 1846     		mov	r0, r3
 674 03ea 4837     		adds	r7, r7, #72
 675 03ec BD46     		mov	sp, r7
 676              		@ sp needed
 677 03ee B0BD     		pop	{r4, r5, r7, pc}
 678              		.cfi_endproc
 679              	.LFE59:
 681              		.align	2
 682              		.global	HAL_SD_WriteBlocks
 683              		.thumb
 684              		.thumb_func
 686              	HAL_SD_WriteBlocks:
 687              	.LFB60:
 615:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 616:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
 617:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Allows to write block(s) to a specified address in a card. The Data
 618:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         transfer is managed by polling mode.  
 619:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
 620:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  pWriteBuffer: pointer to the buffer that will contain the data to transmit
 621:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  WriteAddr: Address from where data is to be written 
 622:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  BlockSize: SD card Data block size 
 623:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *          This parameter should be 512.
 624:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  NumberOfBlocks: Number of SD blocks to write 
 625:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
 626:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
 627:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** HAL_SD_ErrorTypedef HAL_SD_WriteBlocks(SD_HandleTypeDef *hsd, uint32_t *pWriteBuffer, uint64_t Writ
 628:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 688              		.loc 1 628 0
 689              		.cfi_startproc
 690              		@ args = 8, pretend = 0, frame = 88
 691              		@ frame_needed = 1, uses_anonymous_args = 0
 692 03f0 B0B5     		push	{r4, r5, r7, lr}
 693              		.cfi_def_cfa_offset 16
 694              		.cfi_offset 4, -16
 695              		.cfi_offset 5, -12
 696              		.cfi_offset 7, -8
 697              		.cfi_offset 14, -4
 698 03f2 96B0     		sub	sp, sp, #88
 699              		.cfi_def_cfa_offset 104
 700 03f4 00AF     		add	r7, sp, #0
 701              		.cfi_def_cfa_register 7
 702 03f6 F860     		str	r0, [r7, #12]
 703 03f8 B960     		str	r1, [r7, #8]
 704 03fa C7E90023 		strd	r2, [r7]
 629:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitTypeDef SDIO_CmdInitStructure;
 630:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitTypeDef SDIO_DataInitStructure;
 631:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 705              		.loc 1 631 0
 706 03fe 0023     		movs	r3, #0
 707 0400 87F85730 		strb	r3, [r7, #87]
 632:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t TotalNumberOfBytes = 0, bytestransferred = 0, count = 0, restwords = 0;
 708              		.loc 1 632 0
 709 0404 0023     		movs	r3, #0
 710 0406 7B64     		str	r3, [r7, #68]
 711 0408 0023     		movs	r3, #0
 712 040a 3B65     		str	r3, [r7, #80]
 713 040c 0023     		movs	r3, #0
 714 040e FB64     		str	r3, [r7, #76]
 715 0410 0023     		movs	r3, #0
 716 0412 3B64     		str	r3, [r7, #64]
 633:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t *tempbuff = (uint32_t *)pWriteBuffer;
 717              		.loc 1 633 0
 718 0414 BB68     		ldr	r3, [r7, #8]
 719 0416 BB64     		str	r3, [r7, #72]
 634:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint8_t cardstate  = 0;
 720              		.loc 1 634 0
 721 0418 0023     		movs	r3, #0
 722 041a FB74     		strb	r3, [r7, #19]
 635:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 636:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Initialize data control register */
 637:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   hsd->Instance->DCTRL = 0;
 723              		.loc 1 637 0
 724 041c FB68     		ldr	r3, [r7, #12]
 725 041e 1B68     		ldr	r3, [r3]
 726 0420 0022     		movs	r2, #0
 727 0422 DA62     		str	r2, [r3, #44]
 638:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 639:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (hsd->CardType == HIGH_CAPACITY_SD_CARD)
 728              		.loc 1 639 0
 729 0424 FB68     		ldr	r3, [r7, #12]
 730 0426 1B6A     		ldr	r3, [r3, #32]
 731 0428 022B     		cmp	r3, #2
 732 042a 0AD1     		bne	.L40
 640:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 641:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     BlockSize = 512;
 733              		.loc 1 641 0
 734 042c 4FF40073 		mov	r3, #512
 735 0430 BB66     		str	r3, [r7, #104]
 642:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     WriteAddr /= 512;
 736              		.loc 1 642 0
 737 0432 D7E90023 		ldrd	r2, [r7]
 738 0436 540A     		lsrs	r4, r2, #9
 739 0438 44EAC354 		orr	r4, r4, r3, lsl #23
 740 043c 5D0A     		lsrs	r5, r3, #9
 741 043e C7E90045 		strd	r4, [r7]
 742              	.L40:
 643:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 644:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 645:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Set Block Size for Card */ 
 646:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Argument         = (uint32_t)BlockSize;
 743              		.loc 1 646 0
 744 0442 BB6E     		ldr	r3, [r7, #104]
 745 0444 FB62     		str	r3, [r7, #44]
 647:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CmdIndex         = SD_CMD_SET_BLOCKLEN;
 746              		.loc 1 647 0
 747 0446 1023     		movs	r3, #16
 748 0448 3B63     		str	r3, [r7, #48]
 648:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Response         = SDIO_RESPONSE_SHORT;
 749              		.loc 1 648 0
 750 044a 4023     		movs	r3, #64
 751 044c 7B63     		str	r3, [r7, #52]
 649:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 752              		.loc 1 649 0
 753 044e 0023     		movs	r3, #0
 754 0450 BB63     		str	r3, [r7, #56]
 650:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CPSM             = SDIO_CPSM_ENABLE;
 755              		.loc 1 650 0
 756 0452 4FF48063 		mov	r3, #1024
 757 0456 FB63     		str	r3, [r7, #60]
 651:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 758              		.loc 1 651 0
 759 0458 FB68     		ldr	r3, [r7, #12]
 760 045a 1A68     		ldr	r2, [r3]
 761 045c 07F12C03 		add	r3, r7, #44
 762 0460 1046     		mov	r0, r2
 763 0462 1946     		mov	r1, r3
 764 0464 FFF7FEFF 		bl	SDIO_SendCommand
 652:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 653:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check for error conditions */
 654:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = SD_CmdResp1Error(hsd, SD_CMD_SET_BLOCKLEN);
 765              		.loc 1 654 0
 766 0468 F868     		ldr	r0, [r7, #12]
 767 046a 1021     		movs	r1, #16
 768 046c 01F054FF 		bl	SD_CmdResp1Error
 769 0470 0346     		mov	r3, r0
 770 0472 87F85730 		strb	r3, [r7, #87]
 655:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 656:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (errorState != SD_OK)
 771              		.loc 1 656 0
 772 0476 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 773 047a 002B     		cmp	r3, #0
 774 047c 02D0     		beq	.L41
 657:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 658:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 775              		.loc 1 658 0
 776 047e 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 777 0482 7EE1     		b	.L77
 778              	.L41:
 659:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 660:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 661:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(NumberOfBlocks > 1)
 779              		.loc 1 661 0
 780 0484 FB6E     		ldr	r3, [r7, #108]
 781 0486 012B     		cmp	r3, #1
 782 0488 02D9     		bls	.L43
 662:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 663:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Send CMD25 WRITE_MULT_BLOCK with argument data address */
 664:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.CmdIndex = SD_CMD_WRITE_MULT_BLOCK;
 783              		.loc 1 664 0
 784 048a 1923     		movs	r3, #25
 785 048c 3B63     		str	r3, [r7, #48]
 786 048e 01E0     		b	.L44
 787              	.L43:
 665:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 666:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else
 667:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 668:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Send CMD24 WRITE_SINGLE_BLOCK */
 669:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.CmdIndex = SD_CMD_WRITE_SINGLE_BLOCK;
 788              		.loc 1 669 0
 789 0490 1823     		movs	r3, #24
 790 0492 3B63     		str	r3, [r7, #48]
 791              	.L44:
 670:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 671:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 672:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Argument         = (uint32_t)WriteAddr;
 792              		.loc 1 672 0
 793 0494 3B68     		ldr	r3, [r7]
 794 0496 FB62     		str	r3, [r7, #44]
 673:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 795              		.loc 1 673 0
 796 0498 FB68     		ldr	r3, [r7, #12]
 797 049a 1A68     		ldr	r2, [r3]
 798 049c 07F12C03 		add	r3, r7, #44
 799 04a0 1046     		mov	r0, r2
 800 04a2 1946     		mov	r1, r3
 801 04a4 FFF7FEFF 		bl	SDIO_SendCommand
 674:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 675:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check for error conditions */
 676:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(NumberOfBlocks > 1)
 802              		.loc 1 676 0
 803 04a8 FB6E     		ldr	r3, [r7, #108]
 804 04aa 012B     		cmp	r3, #1
 805 04ac 07D9     		bls	.L45
 677:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 678:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CmdResp1Error(hsd, SD_CMD_WRITE_MULT_BLOCK);
 806              		.loc 1 678 0
 807 04ae F868     		ldr	r0, [r7, #12]
 808 04b0 1921     		movs	r1, #25
 809 04b2 01F031FF 		bl	SD_CmdResp1Error
 810 04b6 0346     		mov	r3, r0
 811 04b8 87F85730 		strb	r3, [r7, #87]
 812 04bc 06E0     		b	.L46
 813              	.L45:
 679:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 680:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else
 681:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 682:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CmdResp1Error(hsd, SD_CMD_WRITE_SINGLE_BLOCK);
 814              		.loc 1 682 0
 815 04be F868     		ldr	r0, [r7, #12]
 816 04c0 1821     		movs	r1, #24
 817 04c2 01F029FF 		bl	SD_CmdResp1Error
 818 04c6 0346     		mov	r3, r0
 819 04c8 87F85730 		strb	r3, [r7, #87]
 820              	.L46:
 683:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }  
 684:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 685:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (errorState != SD_OK)
 821              		.loc 1 685 0
 822 04cc 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 823 04d0 002B     		cmp	r3, #0
 824 04d2 02D0     		beq	.L47
 686:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 687:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 825              		.loc 1 687 0
 826 04d4 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 827 04d8 53E1     		b	.L77
 828              	.L47:
 688:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 689:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 690:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Set total number of bytes to write */
 691:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   TotalNumberOfBytes = NumberOfBlocks * BlockSize;
 829              		.loc 1 691 0
 830 04da FB6E     		ldr	r3, [r7, #108]
 831 04dc BA6E     		ldr	r2, [r7, #104]
 832 04de 02FB03F3 		mul	r3, r2, r3
 833 04e2 7B64     		str	r3, [r7, #68]
 692:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 693:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Configure the SD DPSM (Data Path State Machine) */ 
 694:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.DataTimeOut   = SD_DATATIMEOUT;
 834              		.loc 1 694 0
 835 04e4 4FF0FF33 		mov	r3, #-1
 836 04e8 7B61     		str	r3, [r7, #20]
 695:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.DataLength    = NumberOfBlocks * BlockSize;
 837              		.loc 1 695 0
 838 04ea FB6E     		ldr	r3, [r7, #108]
 839 04ec BA6E     		ldr	r2, [r7, #104]
 840 04ee 02FB03F3 		mul	r3, r2, r3
 841 04f2 BB61     		str	r3, [r7, #24]
 696:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.DataBlockSize = SDIO_DATABLOCK_SIZE_512B;
 842              		.loc 1 696 0
 843 04f4 9023     		movs	r3, #144
 844 04f6 FB61     		str	r3, [r7, #28]
 697:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.TransferDir   = SDIO_TRANSFER_DIR_TO_CARD;
 845              		.loc 1 697 0
 846 04f8 0023     		movs	r3, #0
 847 04fa 3B62     		str	r3, [r7, #32]
 698:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.TransferMode  = SDIO_TRANSFER_MODE_BLOCK;
 848              		.loc 1 698 0
 849 04fc 0023     		movs	r3, #0
 850 04fe 7B62     		str	r3, [r7, #36]
 699:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.DPSM          = SDIO_DPSM_ENABLE;
 851              		.loc 1 699 0
 852 0500 0123     		movs	r3, #1
 853 0502 BB62     		str	r3, [r7, #40]
 700:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataConfig(hsd->Instance, &SDIO_DataInitStructure);
 854              		.loc 1 700 0
 855 0504 FB68     		ldr	r3, [r7, #12]
 856 0506 1A68     		ldr	r2, [r3]
 857 0508 07F11403 		add	r3, r7, #20
 858 050c 1046     		mov	r0, r2
 859 050e 1946     		mov	r1, r3
 860 0510 FFF7FEFF 		bl	SDIO_DataConfig
 701:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 702:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Write block(s) in polling mode */
 703:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(NumberOfBlocks > 1)
 861              		.loc 1 703 0
 862 0514 FB6E     		ldr	r3, [r7, #108]
 863 0516 012B     		cmp	r3, #1
 864 0518 57D9     		bls	.L48
 704:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 705:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     while(!__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_TXUNDERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_DTIMEOUT
 865              		.loc 1 705 0
 866 051a 4DE0     		b	.L49
 867              	.L57:
 706:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
 707:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_TXFIFOHE))
 868              		.loc 1 707 0
 869 051c FB68     		ldr	r3, [r7, #12]
 870 051e 1B68     		ldr	r3, [r3]
 871 0520 5B6B     		ldr	r3, [r3, #52]
 872 0522 03F48043 		and	r3, r3, #16384
 873 0526 002B     		cmp	r3, #0
 874 0528 46D0     		beq	.L49
 708:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       {
 709:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         if ((TotalNumberOfBytes - bytestransferred) < 32)
 875              		.loc 1 709 0
 876 052a 7A6C     		ldr	r2, [r7, #68]
 877 052c 3B6D     		ldr	r3, [r7, #80]
 878 052e D31A     		subs	r3, r2, r3
 879 0530 1F2B     		cmp	r3, #31
 880 0532 28D8     		bhi	.L50
 710:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         {
 711:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           restwords = ((TotalNumberOfBytes - bytestransferred) % 4 == 0) ? ((TotalNumberOfBytes - b
 881              		.loc 1 711 0
 882 0534 7A6C     		ldr	r2, [r7, #68]
 883 0536 3B6D     		ldr	r3, [r7, #80]
 884 0538 D31A     		subs	r3, r2, r3
 885 053a 03F00303 		and	r3, r3, #3
 886 053e 002B     		cmp	r3, #0
 887 0540 04D1     		bne	.L51
 888              		.loc 1 711 0 is_stmt 0 discriminator 1
 889 0542 7A6C     		ldr	r2, [r7, #68]
 890 0544 3B6D     		ldr	r3, [r7, #80]
 891 0546 D31A     		subs	r3, r2, r3
 892 0548 9B08     		lsrs	r3, r3, #2
 893 054a 04E0     		b	.L52
 894              	.L51:
 895              		.loc 1 711 0 discriminator 2
 896 054c 7A6C     		ldr	r2, [r7, #68]
 897 054e 3B6D     		ldr	r3, [r7, #80]
 898 0550 D31A     		subs	r3, r2, r3
 899 0552 9B08     		lsrs	r3, r3, #2
 900 0554 0133     		adds	r3, r3, #1
 901              	.L52:
 902              		.loc 1 711 0 discriminator 3
 903 0556 3B64     		str	r3, [r7, #64]
 712:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           
 713:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           /* Write data to SDIO Tx FIFO */
 714:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           for (count = 0; count < restwords; count++)
 904              		.loc 1 714 0 is_stmt 1 discriminator 3
 905 0558 0023     		movs	r3, #0
 906 055a FB64     		str	r3, [r7, #76]
 907 055c 0EE0     		b	.L53
 908              	.L54:
 715:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           {
 716:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****             SDIO_WriteFIFO(hsd->Instance, tempbuff);
 909              		.loc 1 716 0 discriminator 2
 910 055e FB68     		ldr	r3, [r7, #12]
 911 0560 1B68     		ldr	r3, [r3]
 912 0562 1846     		mov	r0, r3
 913 0564 B96C     		ldr	r1, [r7, #72]
 914 0566 FFF7FEFF 		bl	SDIO_WriteFIFO
 717:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****             tempbuff++;
 915              		.loc 1 717 0 discriminator 2
 916 056a BB6C     		ldr	r3, [r7, #72]
 917 056c 0433     		adds	r3, r3, #4
 918 056e BB64     		str	r3, [r7, #72]
 718:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****             bytestransferred += 4;
 919              		.loc 1 718 0 discriminator 2
 920 0570 3B6D     		ldr	r3, [r7, #80]
 921 0572 0433     		adds	r3, r3, #4
 922 0574 3B65     		str	r3, [r7, #80]
 714:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           {
 923              		.loc 1 714 0 discriminator 2
 924 0576 FB6C     		ldr	r3, [r7, #76]
 925 0578 0133     		adds	r3, r3, #1
 926 057a FB64     		str	r3, [r7, #76]
 927              	.L53:
 714:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           {
 928              		.loc 1 714 0 is_stmt 0 discriminator 1
 929 057c FA6C     		ldr	r2, [r7, #76]
 930 057e 3B6C     		ldr	r3, [r7, #64]
 931 0580 9A42     		cmp	r2, r3
 932 0582 ECD3     		bcc	.L54
 933 0584 18E0     		b	.L49
 934              	.L50:
 719:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           }
 720:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         }
 721:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         else
 722:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         {
 723:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           /* Write data to SDIO Tx FIFO */
 724:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           for (count = 0; count < 8; count++)
 935              		.loc 1 724 0 is_stmt 1
 936 0586 0023     		movs	r3, #0
 937 0588 FB64     		str	r3, [r7, #76]
 938 058a 0CE0     		b	.L55
 939              	.L56:
 725:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           {
 726:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****             SDIO_WriteFIFO(hsd->Instance, (tempbuff + count));
 940              		.loc 1 726 0 discriminator 2
 941 058c FB68     		ldr	r3, [r7, #12]
 942 058e 1A68     		ldr	r2, [r3]
 943 0590 FB6C     		ldr	r3, [r7, #76]
 944 0592 9B00     		lsls	r3, r3, #2
 945 0594 B96C     		ldr	r1, [r7, #72]
 946 0596 0B44     		add	r3, r3, r1
 947 0598 1046     		mov	r0, r2
 948 059a 1946     		mov	r1, r3
 949 059c FFF7FEFF 		bl	SDIO_WriteFIFO
 724:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           {
 950              		.loc 1 724 0 discriminator 2
 951 05a0 FB6C     		ldr	r3, [r7, #76]
 952 05a2 0133     		adds	r3, r3, #1
 953 05a4 FB64     		str	r3, [r7, #76]
 954              	.L55:
 724:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           {
 955              		.loc 1 724 0 is_stmt 0 discriminator 1
 956 05a6 FB6C     		ldr	r3, [r7, #76]
 957 05a8 072B     		cmp	r3, #7
 958 05aa EFD9     		bls	.L56
 727:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           }
 728:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           
 729:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           tempbuff += 8;
 959              		.loc 1 729 0 is_stmt 1
 960 05ac BB6C     		ldr	r3, [r7, #72]
 961 05ae 2033     		adds	r3, r3, #32
 962 05b0 BB64     		str	r3, [r7, #72]
 730:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           bytestransferred += 32;
 963              		.loc 1 730 0
 964 05b2 3B6D     		ldr	r3, [r7, #80]
 965 05b4 2033     		adds	r3, r3, #32
 966 05b6 3B65     		str	r3, [r7, #80]
 967              	.L49:
 705:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
 968              		.loc 1 705 0 discriminator 1
 969 05b8 FB68     		ldr	r3, [r7, #12]
 970 05ba 1B68     		ldr	r3, [r3]
 971 05bc 5A6B     		ldr	r2, [r3, #52]
 972 05be 40F21A33 		movw	r3, #794
 973 05c2 1340     		ands	r3, r3, r2
 974 05c4 002B     		cmp	r3, #0
 975 05c6 A9D0     		beq	.L57
 976 05c8 56E0     		b	.L58
 977              	.L48:
 731:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         }
 732:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       }
 733:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }   
 734:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 735:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else
 736:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 737:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* In case of single data block transfer no need of stop command at all */ 
 738:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     while(!__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_TXUNDERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_DTIMEOUT
 978              		.loc 1 738 0
 979 05ca 4DE0     		b	.L59
 980              	.L67:
 739:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
 740:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_TXFIFOHE))
 981              		.loc 1 740 0
 982 05cc FB68     		ldr	r3, [r7, #12]
 983 05ce 1B68     		ldr	r3, [r3]
 984 05d0 5B6B     		ldr	r3, [r3, #52]
 985 05d2 03F48043 		and	r3, r3, #16384
 986 05d6 002B     		cmp	r3, #0
 987 05d8 46D0     		beq	.L59
 741:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       {
 742:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         if ((TotalNumberOfBytes - bytestransferred) < 32)
 988              		.loc 1 742 0
 989 05da 7A6C     		ldr	r2, [r7, #68]
 990 05dc 3B6D     		ldr	r3, [r7, #80]
 991 05de D31A     		subs	r3, r2, r3
 992 05e0 1F2B     		cmp	r3, #31
 993 05e2 28D8     		bhi	.L60
 743:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         {
 744:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           restwords = ((TotalNumberOfBytes - bytestransferred) % 4 == 0) ? ((TotalNumberOfBytes - b
 994              		.loc 1 744 0
 995 05e4 7A6C     		ldr	r2, [r7, #68]
 996 05e6 3B6D     		ldr	r3, [r7, #80]
 997 05e8 D31A     		subs	r3, r2, r3
 998 05ea 03F00303 		and	r3, r3, #3
 999 05ee 002B     		cmp	r3, #0
 1000 05f0 04D1     		bne	.L61
 1001              		.loc 1 744 0 is_stmt 0 discriminator 1
 1002 05f2 7A6C     		ldr	r2, [r7, #68]
 1003 05f4 3B6D     		ldr	r3, [r7, #80]
 1004 05f6 D31A     		subs	r3, r2, r3
 1005 05f8 9B08     		lsrs	r3, r3, #2
 1006 05fa 04E0     		b	.L62
 1007              	.L61:
 1008              		.loc 1 744 0 discriminator 2
 1009 05fc 7A6C     		ldr	r2, [r7, #68]
 1010 05fe 3B6D     		ldr	r3, [r7, #80]
 1011 0600 D31A     		subs	r3, r2, r3
 1012 0602 9B08     		lsrs	r3, r3, #2
 1013 0604 0133     		adds	r3, r3, #1
 1014              	.L62:
 1015              		.loc 1 744 0 discriminator 3
 1016 0606 3B64     		str	r3, [r7, #64]
 745:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           
 746:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           /* Write data to SDIO Tx FIFO */
 747:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           for (count = 0; count < restwords; count++)
 1017              		.loc 1 747 0 is_stmt 1 discriminator 3
 1018 0608 0023     		movs	r3, #0
 1019 060a FB64     		str	r3, [r7, #76]
 1020 060c 0EE0     		b	.L63
 1021              	.L64:
 748:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           {
 749:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****             SDIO_WriteFIFO(hsd->Instance, tempbuff);
 1022              		.loc 1 749 0 discriminator 2
 1023 060e FB68     		ldr	r3, [r7, #12]
 1024 0610 1B68     		ldr	r3, [r3]
 1025 0612 1846     		mov	r0, r3
 1026 0614 B96C     		ldr	r1, [r7, #72]
 1027 0616 FFF7FEFF 		bl	SDIO_WriteFIFO
 750:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****             tempbuff++; 
 1028              		.loc 1 750 0 discriminator 2
 1029 061a BB6C     		ldr	r3, [r7, #72]
 1030 061c 0433     		adds	r3, r3, #4
 1031 061e BB64     		str	r3, [r7, #72]
 751:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****             bytestransferred += 4;
 1032              		.loc 1 751 0 discriminator 2
 1033 0620 3B6D     		ldr	r3, [r7, #80]
 1034 0622 0433     		adds	r3, r3, #4
 1035 0624 3B65     		str	r3, [r7, #80]
 747:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           {
 1036              		.loc 1 747 0 discriminator 2
 1037 0626 FB6C     		ldr	r3, [r7, #76]
 1038 0628 0133     		adds	r3, r3, #1
 1039 062a FB64     		str	r3, [r7, #76]
 1040              	.L63:
 747:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           {
 1041              		.loc 1 747 0 is_stmt 0 discriminator 1
 1042 062c FA6C     		ldr	r2, [r7, #76]
 1043 062e 3B6C     		ldr	r3, [r7, #64]
 1044 0630 9A42     		cmp	r2, r3
 1045 0632 ECD3     		bcc	.L64
 1046 0634 18E0     		b	.L59
 1047              	.L60:
 752:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           }
 753:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         }
 754:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         else
 755:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         {
 756:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           /* Write data to SDIO Tx FIFO */
 757:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           for (count = 0; count < 8; count++)
 1048              		.loc 1 757 0 is_stmt 1
 1049 0636 0023     		movs	r3, #0
 1050 0638 FB64     		str	r3, [r7, #76]
 1051 063a 0CE0     		b	.L65
 1052              	.L66:
 758:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           {
 759:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****             SDIO_WriteFIFO(hsd->Instance, (tempbuff + count));
 1053              		.loc 1 759 0 discriminator 2
 1054 063c FB68     		ldr	r3, [r7, #12]
 1055 063e 1A68     		ldr	r2, [r3]
 1056 0640 FB6C     		ldr	r3, [r7, #76]
 1057 0642 9B00     		lsls	r3, r3, #2
 1058 0644 B96C     		ldr	r1, [r7, #72]
 1059 0646 0B44     		add	r3, r3, r1
 1060 0648 1046     		mov	r0, r2
 1061 064a 1946     		mov	r1, r3
 1062 064c FFF7FEFF 		bl	SDIO_WriteFIFO
 757:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           {
 1063              		.loc 1 757 0 discriminator 2
 1064 0650 FB6C     		ldr	r3, [r7, #76]
 1065 0652 0133     		adds	r3, r3, #1
 1066 0654 FB64     		str	r3, [r7, #76]
 1067              	.L65:
 757:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           {
 1068              		.loc 1 757 0 is_stmt 0 discriminator 1
 1069 0656 FB6C     		ldr	r3, [r7, #76]
 1070 0658 072B     		cmp	r3, #7
 1071 065a EFD9     		bls	.L66
 760:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           }
 761:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           
 762:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           tempbuff += 8;
 1072              		.loc 1 762 0 is_stmt 1
 1073 065c BB6C     		ldr	r3, [r7, #72]
 1074 065e 2033     		adds	r3, r3, #32
 1075 0660 BB64     		str	r3, [r7, #72]
 763:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           bytestransferred += 32;
 1076              		.loc 1 763 0
 1077 0662 3B6D     		ldr	r3, [r7, #80]
 1078 0664 2033     		adds	r3, r3, #32
 1079 0666 3B65     		str	r3, [r7, #80]
 1080              	.L59:
 738:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
 1081              		.loc 1 738 0 discriminator 1
 1082 0668 FB68     		ldr	r3, [r7, #12]
 1083 066a 1B68     		ldr	r3, [r3]
 1084 066c 5A6B     		ldr	r2, [r3, #52]
 1085 066e 40F21A63 		movw	r3, #1562
 1086 0672 1340     		ands	r3, r3, r2
 1087 0674 002B     		cmp	r3, #0
 1088 0676 A9D0     		beq	.L67
 1089              	.L58:
 764:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         }
 765:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       }
 766:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }  
 767:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 768:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 769:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Send stop transmission command in case of multiblock write */
 770:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_DATAEND) && (NumberOfBlocks > 1))
 1090              		.loc 1 770 0
 1091 0678 FB68     		ldr	r3, [r7, #12]
 1092 067a 1B68     		ldr	r3, [r3]
 1093 067c 5B6B     		ldr	r3, [r3, #52]
 1094 067e 03F48073 		and	r3, r3, #256
 1095 0682 002B     		cmp	r3, #0
 1096 0684 14D0     		beq	.L68
 1097              		.loc 1 770 0 is_stmt 0 discriminator 1
 1098 0686 FB6E     		ldr	r3, [r7, #108]
 1099 0688 012B     		cmp	r3, #1
 1100 068a 11D9     		bls	.L68
 771:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {    
 772:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     if ((hsd->CardType == STD_CAPACITY_SD_CARD_V1_1) || (hsd->CardType == STD_CAPACITY_SD_CARD_V2_0
 1101              		.loc 1 772 0 is_stmt 1
 1102 068c FB68     		ldr	r3, [r7, #12]
 1103 068e 1B6A     		ldr	r3, [r3, #32]
 1104 0690 002B     		cmp	r3, #0
 1105 0692 07D0     		beq	.L69
 1106              		.loc 1 772 0 is_stmt 0 discriminator 1
 1107 0694 FB68     		ldr	r3, [r7, #12]
 1108 0696 1B6A     		ldr	r3, [r3, #32]
 1109 0698 012B     		cmp	r3, #1
 1110 069a 03D0     		beq	.L69
 773:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       (hsd->CardType == HIGH_CAPACITY_SD_CARD))
 1111              		.loc 1 773 0 is_stmt 1 discriminator 1
 1112 069c FB68     		ldr	r3, [r7, #12]
 1113 069e 1B6A     		ldr	r3, [r3, #32]
 772:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       (hsd->CardType == HIGH_CAPACITY_SD_CARD))
 1114              		.loc 1 772 0 discriminator 1
 1115 06a0 022B     		cmp	r3, #2
 1116 06a2 05D1     		bne	.L68
 1117              	.L69:
 774:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
 775:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       /* Send stop transmission command */
 776:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       errorState = HAL_SD_StopTransfer(hsd);
 1118              		.loc 1 776 0
 1119 06a4 F868     		ldr	r0, [r7, #12]
 1120 06a6 FFF7FEFF 		bl	HAL_SD_StopTransfer
 1121 06aa 0346     		mov	r3, r0
 1122 06ac 87F85730 		strb	r3, [r7, #87]
 1123              	.L68:
 777:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
 778:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 779:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 780:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Get error state */
 781:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_DTIMEOUT))
 1124              		.loc 1 781 0
 1125 06b0 FB68     		ldr	r3, [r7, #12]
 1126 06b2 1B68     		ldr	r3, [r3]
 1127 06b4 5B6B     		ldr	r3, [r3, #52]
 1128 06b6 03F00803 		and	r3, r3, #8
 1129 06ba 002B     		cmp	r3, #0
 1130 06bc 09D0     		beq	.L70
 782:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 783:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_DTIMEOUT);
 1131              		.loc 1 783 0
 1132 06be FB68     		ldr	r3, [r7, #12]
 1133 06c0 1B68     		ldr	r3, [r3]
 1134 06c2 0822     		movs	r2, #8
 1135 06c4 9A63     		str	r2, [r3, #56]
 784:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
 785:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_DATA_TIMEOUT;
 1136              		.loc 1 785 0
 1137 06c6 0423     		movs	r3, #4
 1138 06c8 87F85730 		strb	r3, [r7, #87]
 786:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
 787:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 1139              		.loc 1 787 0
 1140 06cc 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 1141 06d0 57E0     		b	.L77
 1142              	.L70:
 788:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 789:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_DCRCFAIL))
 1143              		.loc 1 789 0
 1144 06d2 FB68     		ldr	r3, [r7, #12]
 1145 06d4 1B68     		ldr	r3, [r3]
 1146 06d6 5B6B     		ldr	r3, [r3, #52]
 1147 06d8 03F00203 		and	r3, r3, #2
 1148 06dc 002B     		cmp	r3, #0
 1149 06de 09D0     		beq	.L71
 790:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 791:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_DCRCFAIL);
 1150              		.loc 1 791 0
 1151 06e0 FB68     		ldr	r3, [r7, #12]
 1152 06e2 1B68     		ldr	r3, [r3]
 1153 06e4 0222     		movs	r2, #2
 1154 06e6 9A63     		str	r2, [r3, #56]
 792:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
 793:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_DATA_CRC_FAIL;
 1155              		.loc 1 793 0
 1156 06e8 0223     		movs	r3, #2
 1157 06ea 87F85730 		strb	r3, [r7, #87]
 794:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
 795:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 1158              		.loc 1 795 0
 1159 06ee 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 1160 06f2 46E0     		b	.L77
 1161              	.L71:
 796:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 797:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_TXUNDERR))
 1162              		.loc 1 797 0
 1163 06f4 FB68     		ldr	r3, [r7, #12]
 1164 06f6 1B68     		ldr	r3, [r3]
 1165 06f8 5B6B     		ldr	r3, [r3, #52]
 1166 06fa 03F01003 		and	r3, r3, #16
 1167 06fe 002B     		cmp	r3, #0
 1168 0700 09D0     		beq	.L72
 798:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 799:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_TXUNDERR);
 1169              		.loc 1 799 0
 1170 0702 FB68     		ldr	r3, [r7, #12]
 1171 0704 1B68     		ldr	r3, [r3]
 1172 0706 1022     		movs	r2, #16
 1173 0708 9A63     		str	r2, [r3, #56]
 800:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
 801:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_TX_UNDERRUN;
 1174              		.loc 1 801 0
 1175 070a 0523     		movs	r3, #5
 1176 070c 87F85730 		strb	r3, [r7, #87]
 802:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
 803:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 1177              		.loc 1 803 0
 1178 0710 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 1179 0714 35E0     		b	.L77
 1180              	.L72:
 804:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 805:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_STBITERR))
 1181              		.loc 1 805 0
 1182 0716 FB68     		ldr	r3, [r7, #12]
 1183 0718 1B68     		ldr	r3, [r3]
 1184 071a 5B6B     		ldr	r3, [r3, #52]
 1185 071c 03F40073 		and	r3, r3, #512
 1186 0720 002B     		cmp	r3, #0
 1187 0722 0AD0     		beq	.L73
 806:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 807:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_STBITERR);
 1188              		.loc 1 807 0
 1189 0724 FB68     		ldr	r3, [r7, #12]
 1190 0726 1B68     		ldr	r3, [r3]
 1191 0728 4FF40072 		mov	r2, #512
 1192 072c 9A63     		str	r2, [r3, #56]
 808:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
 809:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_START_BIT_ERR;
 1193              		.loc 1 809 0
 1194 072e 0723     		movs	r3, #7
 1195 0730 87F85730 		strb	r3, [r7, #87]
 810:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
 811:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 1196              		.loc 1 811 0
 1197 0734 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 1198 0738 23E0     		b	.L77
 1199              	.L73:
 812:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 813:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 814:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Clear all the static flags */
 815:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 1200              		.loc 1 815 0
 1201 073a FB68     		ldr	r3, [r7, #12]
 1202 073c 1B68     		ldr	r3, [r3]
 1203 073e 40F2FF52 		movw	r2, #1535
 1204 0742 9A63     		str	r2, [r3, #56]
 816:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 817:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Wait till the card is in programming state */
 818:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = SD_IsCardProgramming(hsd, &cardstate);
 1205              		.loc 1 818 0
 1206 0744 07F11303 		add	r3, r7, #19
 1207 0748 F868     		ldr	r0, [r7, #12]
 1208 074a 1946     		mov	r1, r3
 1209 074c 02F084F9 		bl	SD_IsCardProgramming
 1210 0750 0346     		mov	r3, r0
 1211 0752 87F85730 		strb	r3, [r7, #87]
 819:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 820:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   while ((errorState == SD_OK) && ((cardstate == SD_CARD_PROGRAMMING) || (cardstate == SD_CARD_RECE
 1212              		.loc 1 820 0
 1213 0756 08E0     		b	.L74
 1214              	.L76:
 821:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 822:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_IsCardProgramming(hsd, &cardstate);
 1215              		.loc 1 822 0
 1216 0758 07F11303 		add	r3, r7, #19
 1217 075c F868     		ldr	r0, [r7, #12]
 1218 075e 1946     		mov	r1, r3
 1219 0760 02F07AF9 		bl	SD_IsCardProgramming
 1220 0764 0346     		mov	r3, r0
 1221 0766 87F85730 		strb	r3, [r7, #87]
 1222              	.L74:
 820:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 1223              		.loc 1 820 0 discriminator 1
 1224 076a 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 1225 076e 002B     		cmp	r3, #0
 1226 0770 05D1     		bne	.L75
 820:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 1227              		.loc 1 820 0 is_stmt 0 discriminator 2
 1228 0772 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1229 0774 072B     		cmp	r3, #7
 1230 0776 EFD0     		beq	.L76
 820:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 1231              		.loc 1 820 0 discriminator 1
 1232 0778 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1233 077a 062B     		cmp	r3, #6
 1234 077c ECD0     		beq	.L76
 1235              	.L75:
 823:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 824:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 825:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 1236              		.loc 1 825 0 is_stmt 1
 1237 077e 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 1238              	.L77:
 826:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 1239              		.loc 1 826 0
 1240 0782 1846     		mov	r0, r3
 1241 0784 5837     		adds	r7, r7, #88
 1242 0786 BD46     		mov	sp, r7
 1243              		@ sp needed
 1244 0788 B0BD     		pop	{r4, r5, r7, pc}
 1245              		.cfi_endproc
 1246              	.LFE60:
 1248 078a 00BF     		.align	2
 1249              		.global	HAL_SD_ReadBlocks_DMA
 1250              		.thumb
 1251              		.thumb_func
 1253              	HAL_SD_ReadBlocks_DMA:
 1254              	.LFB61:
 827:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 828:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
 829:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Reads block(s) from a specified address in a card. The Data transfer 
 830:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         is managed by DMA mode. 
 831:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @note   This API should be followed by the function HAL_SD_CheckReadOperation()
 832:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         to check the completion of the read process   
 833:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle                 
 834:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  pReadBuffer: Pointer to the buffer that will contain the received data
 835:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  ReadAddr: Address from where data is to be read  
 836:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  BlockSize: SD card Data block size 
 837:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         This paramater should be 512.
 838:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  NumberOfBlocks: Number of blocks to read.
 839:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
 840:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
 841:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** HAL_SD_ErrorTypedef HAL_SD_ReadBlocks_DMA(SD_HandleTypeDef *hsd, uint32_t *pReadBuffer, uint64_t Re
 842:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 1255              		.loc 1 842 0
 1256              		.cfi_startproc
 1257              		@ args = 8, pretend = 0, frame = 64
 1258              		@ frame_needed = 1, uses_anonymous_args = 0
 1259 078c B0B5     		push	{r4, r5, r7, lr}
 1260              		.cfi_def_cfa_offset 16
 1261              		.cfi_offset 4, -16
 1262              		.cfi_offset 5, -12
 1263              		.cfi_offset 7, -8
 1264              		.cfi_offset 14, -4
 1265 078e 90B0     		sub	sp, sp, #64
 1266              		.cfi_def_cfa_offset 80
 1267 0790 00AF     		add	r7, sp, #0
 1268              		.cfi_def_cfa_register 7
 1269 0792 F860     		str	r0, [r7, #12]
 1270 0794 B960     		str	r1, [r7, #8]
 1271 0796 C7E90023 		strd	r2, [r7]
 843:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitTypeDef SDIO_CmdInitStructure;
 844:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitTypeDef SDIO_DataInitStructure;
 845:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 1272              		.loc 1 845 0
 1273 079a 0023     		movs	r3, #0
 1274 079c 87F83F30 		strb	r3, [r7, #63]
 846:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 847:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Initialize data control register */
 848:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   hsd->Instance->DCTRL = 0;
 1275              		.loc 1 848 0
 1276 07a0 FB68     		ldr	r3, [r7, #12]
 1277 07a2 1B68     		ldr	r3, [r3]
 1278 07a4 0022     		movs	r2, #0
 1279 07a6 DA62     		str	r2, [r3, #44]
 849:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 850:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Initialize handle flags */
 851:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   hsd->SdTransferCplt  = 0;
 1280              		.loc 1 851 0
 1281 07a8 FB68     		ldr	r3, [r7, #12]
 1282 07aa 0022     		movs	r2, #0
 1283 07ac 9A64     		str	r2, [r3, #72]
 852:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   hsd->DmaTransferCplt = 0;
 1284              		.loc 1 852 0
 1285 07ae FB68     		ldr	r3, [r7, #12]
 1286 07b0 0022     		movs	r2, #0
 1287 07b2 1A65     		str	r2, [r3, #80]
 853:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   hsd->SdTransferErr   = SD_OK; 
 1288              		.loc 1 853 0
 1289 07b4 FB68     		ldr	r3, [r7, #12]
 1290 07b6 0022     		movs	r2, #0
 1291 07b8 DA64     		str	r2, [r3, #76]
 854:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 855:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Initialize SD Read operation */
 856:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(NumberOfBlocks > 1)
 1292              		.loc 1 856 0
 1293 07ba 7B6D     		ldr	r3, [r7, #84]
 1294 07bc 012B     		cmp	r3, #1
 1295 07be 03D9     		bls	.L79
 857:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 858:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     hsd->SdOperation = SD_READ_MULTIPLE_BLOCK;
 1296              		.loc 1 858 0
 1297 07c0 FB68     		ldr	r3, [r7, #12]
 1298 07c2 0122     		movs	r2, #1
 1299 07c4 5A65     		str	r2, [r3, #84]
 1300 07c6 02E0     		b	.L80
 1301              	.L79:
 859:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 860:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else
 861:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 862:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     hsd->SdOperation = SD_READ_SINGLE_BLOCK;
 1302              		.loc 1 862 0
 1303 07c8 FB68     		ldr	r3, [r7, #12]
 1304 07ca 0022     		movs	r2, #0
 1305 07cc 5A65     		str	r2, [r3, #84]
 1306              	.L80:
 863:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 864:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 865:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Enable transfer interrupts */
 866:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   __HAL_SD_SDIO_ENABLE_IT(hsd, (SDIO_IT_DCRCFAIL |\
 1307              		.loc 1 866 0
 1308 07ce FB68     		ldr	r3, [r7, #12]
 1309 07d0 1A68     		ldr	r2, [r3]
 1310 07d2 FB68     		ldr	r3, [r7, #12]
 1311 07d4 1B68     		ldr	r3, [r3]
 1312 07d6 DB6B     		ldr	r3, [r3, #60]
 1313 07d8 43F44A73 		orr	r3, r3, #808
 1314 07dc 43F00203 		orr	r3, r3, #2
 1315 07e0 D363     		str	r3, [r2, #60]
 867:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****                                 SDIO_IT_DTIMEOUT |\
 868:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****                                 SDIO_IT_DATAEND  |\
 869:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****                                 SDIO_IT_RXOVERR  |\
 870:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****                                 SDIO_IT_STBITERR));
 871:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 872:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Enable SDIO DMA transfer */
 873:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   __HAL_SD_SDIO_DMA_ENABLE();
 1316              		.loc 1 873 0
 1317 07e2 48F28C53 		movw	r3, #34188
 1318 07e6 C4F22523 		movt	r3, 16933
 1319 07ea 0122     		movs	r2, #1
 1320 07ec 1A60     		str	r2, [r3]
 874:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 875:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** //	printf("[SD] I:Enable SDIO DMA transfer....\n");
 876:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 877:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 878:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Configure DMA user callbacks */
 879:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   hsd->hdmarx->XferCpltCallback  = SD_DMA_RxCplt;
 1321              		.loc 1 879 0
 1322 07ee FB68     		ldr	r3, [r7, #12]
 1323 07f0 9A6D     		ldr	r2, [r3, #88]
 1324 07f2 40F20003 		movw	r3, #:lower16:SD_DMA_RxCplt
 1325 07f6 C0F20003 		movt	r3, #:upper16:SD_DMA_RxCplt
 1326 07fa D363     		str	r3, [r2, #60]
 880:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   hsd->hdmarx->XferErrorCallback = SD_DMA_RxError;
 1327              		.loc 1 880 0
 1328 07fc FB68     		ldr	r3, [r7, #12]
 1329 07fe 9A6D     		ldr	r2, [r3, #88]
 1330 0800 40F20003 		movw	r3, #:lower16:SD_DMA_RxError
 1331 0804 C0F20003 		movt	r3, #:upper16:SD_DMA_RxError
 1332 0808 9364     		str	r3, [r2, #72]
 881:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 882:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Enable the DMA Stream */
 883:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_DMA_Start_IT(hsd->hdmarx, (uint32_t)SDIO_FIFO_ADDRESS, (uint32_t)pReadBuffer, (uint32_t)(Bloc
 1333              		.loc 1 883 0
 1334 080a FB68     		ldr	r3, [r7, #12]
 1335 080c 996D     		ldr	r1, [r3, #88]
 1336 080e BA68     		ldr	r2, [r7, #8]
 1337 0810 3B6D     		ldr	r3, [r7, #80]
 1338 0812 786D     		ldr	r0, [r7, #84]
 1339 0814 00FB03F3 		mul	r3, r0, r3
 1340 0818 0846     		mov	r0, r1
 1341 081a 4FF43251 		mov	r1, #11392
 1342 081e C4F20101 		movt	r1, 16385
 1343 0822 FFF7FEFF 		bl	HAL_DMA_Start_IT
 884:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 885:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (hsd->CardType == HIGH_CAPACITY_SD_CARD)
 1344              		.loc 1 885 0
 1345 0826 FB68     		ldr	r3, [r7, #12]
 1346 0828 1B6A     		ldr	r3, [r3, #32]
 1347 082a 022B     		cmp	r3, #2
 1348 082c 0AD1     		bne	.L81
 886:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 887:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     BlockSize = 512;
 1349              		.loc 1 887 0
 1350 082e 4FF40073 		mov	r3, #512
 1351 0832 3B65     		str	r3, [r7, #80]
 888:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     ReadAddr /= 512;
 1352              		.loc 1 888 0
 1353 0834 D7E90023 		ldrd	r2, [r7]
 1354 0838 540A     		lsrs	r4, r2, #9
 1355 083a 44EAC354 		orr	r4, r4, r3, lsl #23
 1356 083e 5D0A     		lsrs	r5, r3, #9
 1357 0840 C7E90045 		strd	r4, [r7]
 1358              	.L81:
 889:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 890:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 891:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** //	printf("[SD] I:Enable the DMA Stream....\n");
 892:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 893:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 894:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Set Block Size for Card */ 
 895:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Argument         = (uint32_t)BlockSize;
 1359              		.loc 1 895 0
 1360 0844 3B6D     		ldr	r3, [r7, #80]
 1361 0846 BB62     		str	r3, [r7, #40]
 896:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CmdIndex         = SD_CMD_SET_BLOCKLEN;
 1362              		.loc 1 896 0
 1363 0848 1023     		movs	r3, #16
 1364 084a FB62     		str	r3, [r7, #44]
 897:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Response         = SDIO_RESPONSE_SHORT;
 1365              		.loc 1 897 0
 1366 084c 4023     		movs	r3, #64
 1367 084e 3B63     		str	r3, [r7, #48]
 898:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 1368              		.loc 1 898 0
 1369 0850 0023     		movs	r3, #0
 1370 0852 7B63     		str	r3, [r7, #52]
 899:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CPSM             = SDIO_CPSM_ENABLE;
 1371              		.loc 1 899 0
 1372 0854 4FF48063 		mov	r3, #1024
 1373 0858 BB63     		str	r3, [r7, #56]
 900:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 1374              		.loc 1 900 0
 1375 085a FB68     		ldr	r3, [r7, #12]
 1376 085c 1A68     		ldr	r2, [r3]
 1377 085e 07F12803 		add	r3, r7, #40
 1378 0862 1046     		mov	r0, r2
 1379 0864 1946     		mov	r1, r3
 1380 0866 FFF7FEFF 		bl	SDIO_SendCommand
 901:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 902:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check for error conditions */
 903:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = SD_CmdResp1Error(hsd, SD_CMD_SET_BLOCKLEN);
 1381              		.loc 1 903 0
 1382 086a F868     		ldr	r0, [r7, #12]
 1383 086c 1021     		movs	r1, #16
 1384 086e 01F053FD 		bl	SD_CmdResp1Error
 1385 0872 0346     		mov	r3, r0
 1386 0874 87F83F30 		strb	r3, [r7, #63]
 904:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 905:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** //  printf("[SD] I:SD_CMD_SET_BLOCKLEN. %d \n",errorState);
 906:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 907:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (errorState != SD_OK)
 1387              		.loc 1 907 0
 1388 0878 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 1389 087c 002B     		cmp	r3, #0
 1390 087e 02D0     		beq	.L82
 908:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 909:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 1391              		.loc 1 909 0
 1392 0880 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 1393 0884 41E0     		b	.L88
 1394              	.L82:
 910:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 911:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 912:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Configure the SD DPSM (Data Path State Machine) */ 
 913:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.DataTimeOut   = SD_DATATIMEOUT;
 1395              		.loc 1 913 0
 1396 0886 4FF0FF33 		mov	r3, #-1
 1397 088a 3B61     		str	r3, [r7, #16]
 914:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.DataLength    = BlockSize * NumberOfBlocks;
 1398              		.loc 1 914 0
 1399 088c 3B6D     		ldr	r3, [r7, #80]
 1400 088e 7A6D     		ldr	r2, [r7, #84]
 1401 0890 02FB03F3 		mul	r3, r2, r3
 1402 0894 7B61     		str	r3, [r7, #20]
 915:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.DataBlockSize = SDIO_DATABLOCK_SIZE_512B;
 1403              		.loc 1 915 0
 1404 0896 9023     		movs	r3, #144
 1405 0898 BB61     		str	r3, [r7, #24]
 916:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.TransferDir   = SDIO_TRANSFER_DIR_TO_SDIO;
 1406              		.loc 1 916 0
 1407 089a 0223     		movs	r3, #2
 1408 089c FB61     		str	r3, [r7, #28]
 917:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.TransferMode  = SDIO_TRANSFER_MODE_BLOCK;
 1409              		.loc 1 917 0
 1410 089e 0023     		movs	r3, #0
 1411 08a0 3B62     		str	r3, [r7, #32]
 918:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.DPSM          = SDIO_DPSM_ENABLE;
 1412              		.loc 1 918 0
 1413 08a2 0123     		movs	r3, #1
 1414 08a4 7B62     		str	r3, [r7, #36]
 919:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataConfig(hsd->Instance, &SDIO_DataInitStructure);
 1415              		.loc 1 919 0
 1416 08a6 FB68     		ldr	r3, [r7, #12]
 1417 08a8 1A68     		ldr	r2, [r3]
 1418 08aa 07F11003 		add	r3, r7, #16
 1419 08ae 1046     		mov	r0, r2
 1420 08b0 1946     		mov	r1, r3
 1421 08b2 FFF7FEFF 		bl	SDIO_DataConfig
 920:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 921:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check number of blocks command */
 922:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(NumberOfBlocks > 1)
 1422              		.loc 1 922 0
 1423 08b6 7B6D     		ldr	r3, [r7, #84]
 1424 08b8 012B     		cmp	r3, #1
 1425 08ba 02D9     		bls	.L84
 923:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 924:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Send CMD18 READ_MULT_BLOCK with argument data address */
 925:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.CmdIndex = SD_CMD_READ_MULT_BLOCK;
 1426              		.loc 1 925 0
 1427 08bc 1223     		movs	r3, #18
 1428 08be FB62     		str	r3, [r7, #44]
 1429 08c0 01E0     		b	.L85
 1430              	.L84:
 926:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 927:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else
 928:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 929:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Send CMD17 READ_SINGLE_BLOCK */
 930:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.CmdIndex = SD_CMD_READ_SINGLE_BLOCK;
 1431              		.loc 1 930 0
 1432 08c2 1123     		movs	r3, #17
 1433 08c4 FB62     		str	r3, [r7, #44]
 1434              	.L85:
 931:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 932:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 933:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Argument         = (uint32_t)ReadAddr;
 1435              		.loc 1 933 0
 1436 08c6 3B68     		ldr	r3, [r7]
 1437 08c8 BB62     		str	r3, [r7, #40]
 934:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 1438              		.loc 1 934 0
 1439 08ca FB68     		ldr	r3, [r7, #12]
 1440 08cc 1A68     		ldr	r2, [r3]
 1441 08ce 07F12803 		add	r3, r7, #40
 1442 08d2 1046     		mov	r0, r2
 1443 08d4 1946     		mov	r1, r3
 1444 08d6 FFF7FEFF 		bl	SDIO_SendCommand
 935:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 936:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check for error conditions */
 937:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(NumberOfBlocks > 1)
 1445              		.loc 1 937 0
 1446 08da 7B6D     		ldr	r3, [r7, #84]
 1447 08dc 012B     		cmp	r3, #1
 1448 08de 07D9     		bls	.L86
 938:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 939:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CmdResp1Error(hsd, SD_CMD_READ_MULT_BLOCK);
 1449              		.loc 1 939 0
 1450 08e0 F868     		ldr	r0, [r7, #12]
 1451 08e2 1221     		movs	r1, #18
 1452 08e4 01F018FD 		bl	SD_CmdResp1Error
 1453 08e8 0346     		mov	r3, r0
 1454 08ea 87F83F30 		strb	r3, [r7, #63]
 1455 08ee 06E0     		b	.L87
 1456              	.L86:
 940:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** //    printf("[SD] I:SD_CMD_READ_MULT_BLOCK. %d \n",errorState);
 941:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 942:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 943:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else
 944:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 945:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CmdResp1Error(hsd, SD_CMD_READ_SINGLE_BLOCK);
 1457              		.loc 1 945 0
 1458 08f0 F868     		ldr	r0, [r7, #12]
 1459 08f2 1121     		movs	r1, #17
 1460 08f4 01F010FD 		bl	SD_CmdResp1Error
 1461 08f8 0346     		mov	r3, r0
 1462 08fa 87F83F30 		strb	r3, [r7, #63]
 1463              	.L87:
 946:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** //    printf("[SD] I:SD_CMD_READ_SINGLE_BLOCK. %d \n",errorState);
 947:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 948:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 949:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 950:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Update the SD transfer error in SD handle */
 951:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   hsd->SdTransferErr = errorState;
 1464              		.loc 1 951 0
 1465 08fe 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 1466 0902 FB68     		ldr	r3, [r7, #12]
 1467 0904 DA64     		str	r2, [r3, #76]
 952:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 953:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 1468              		.loc 1 953 0
 1469 0906 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 1470              	.L88:
 954:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 1471              		.loc 1 954 0
 1472 090a 1846     		mov	r0, r3
 1473 090c 4037     		adds	r7, r7, #64
 1474 090e BD46     		mov	sp, r7
 1475              		@ sp needed
 1476 0910 B0BD     		pop	{r4, r5, r7, pc}
 1477              		.cfi_endproc
 1478              	.LFE61:
 1480 0912 00BF     		.align	2
 1481              		.global	HAL_SD_WriteBlocks_DMA
 1482              		.thumb
 1483              		.thumb_func
 1485              	HAL_SD_WriteBlocks_DMA:
 1486              	.LFB62:
 955:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 956:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 957:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
 958:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Writes block(s) to a specified address in a card. The Data transfer 
 959:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         is managed by DMA mode. 
 960:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @note   This API should be followed by the function HAL_SD_CheckWriteOperation()
 961:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         to check the completion of the write process (by SD current status polling).  
 962:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
 963:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  pWriteBuffer: pointer to the buffer that will contain the data to transmit
 964:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  WriteAddr: Address from where data is to be read   
 965:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  BlockSize: the SD card Data block size 
 966:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *          This parameter should be 512.
 967:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  NumberOfBlocks: Number of blocks to write
 968:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
 969:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
 970:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** HAL_SD_ErrorTypedef HAL_SD_WriteBlocks_DMA(SD_HandleTypeDef *hsd, uint32_t *pWriteBuffer, uint64_t 
 971:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 1487              		.loc 1 971 0
 1488              		.cfi_startproc
 1489              		@ args = 8, pretend = 0, frame = 64
 1490              		@ frame_needed = 1, uses_anonymous_args = 0
 1491 0914 B0B5     		push	{r4, r5, r7, lr}
 1492              		.cfi_def_cfa_offset 16
 1493              		.cfi_offset 4, -16
 1494              		.cfi_offset 5, -12
 1495              		.cfi_offset 7, -8
 1496              		.cfi_offset 14, -4
 1497 0916 90B0     		sub	sp, sp, #64
 1498              		.cfi_def_cfa_offset 80
 1499 0918 00AF     		add	r7, sp, #0
 1500              		.cfi_def_cfa_register 7
 1501 091a F860     		str	r0, [r7, #12]
 1502 091c B960     		str	r1, [r7, #8]
 1503 091e C7E90023 		strd	r2, [r7]
 972:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitTypeDef SDIO_CmdInitStructure;
 973:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitTypeDef SDIO_DataInitStructure;
 974:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 1504              		.loc 1 974 0
 1505 0922 0023     		movs	r3, #0
 1506 0924 87F83F30 		strb	r3, [r7, #63]
 975:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 976:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****  // printf("[HALSD] I:HAL_SD_WriteBlocks_DMA -  go HAL_SD_WriteBlocks_DMA..  \n");
 977:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 978:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 979:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Initialize data control register */
 980:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   hsd->Instance->DCTRL = 0;
 1507              		.loc 1 980 0
 1508 0928 FB68     		ldr	r3, [r7, #12]
 1509 092a 1B68     		ldr	r3, [r3]
 1510 092c 0022     		movs	r2, #0
 1511 092e DA62     		str	r2, [r3, #44]
 981:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 982:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Initialize handle flags */
 983:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   hsd->SdTransferCplt  = 0;
 1512              		.loc 1 983 0
 1513 0930 FB68     		ldr	r3, [r7, #12]
 1514 0932 0022     		movs	r2, #0
 1515 0934 9A64     		str	r2, [r3, #72]
 984:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   hsd->DmaTransferCplt = 0;
 1516              		.loc 1 984 0
 1517 0936 FB68     		ldr	r3, [r7, #12]
 1518 0938 0022     		movs	r2, #0
 1519 093a 1A65     		str	r2, [r3, #80]
 985:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   hsd->SdTransferErr   = SD_OK;
 1520              		.loc 1 985 0
 1521 093c FB68     		ldr	r3, [r7, #12]
 1522 093e 0022     		movs	r2, #0
 1523 0940 DA64     		str	r2, [r3, #76]
 986:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 987:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** //  printf("[HALSD] I:HAL_SD_WriteBlocks_DMA -  Initialize SD Write operation NumberOfBlocks= %d  \
 988:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
 989:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Initialize SD Write operation */
 990:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(NumberOfBlocks > 1)
 1524              		.loc 1 990 0
 1525 0942 7B6D     		ldr	r3, [r7, #84]
 1526 0944 012B     		cmp	r3, #1
 1527 0946 03D9     		bls	.L90
 991:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 992:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     hsd->SdOperation = SD_WRITE_MULTIPLE_BLOCK;
 1528              		.loc 1 992 0
 1529 0948 FB68     		ldr	r3, [r7, #12]
 1530 094a 0322     		movs	r2, #3
 1531 094c 5A65     		str	r2, [r3, #84]
 1532 094e 02E0     		b	.L91
 1533              	.L90:
 993:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
 994:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else
 995:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 996:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     hsd->SdOperation = SD_WRITE_SINGLE_BLOCK;
 1534              		.loc 1 996 0
 1535 0950 FB68     		ldr	r3, [r7, #12]
 1536 0952 0222     		movs	r2, #2
 1537 0954 5A65     		str	r2, [r3, #84]
 1538              	.L91:
 997:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }  
 998:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
 999:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** //  printf("[HALSD] I:HAL_SD_WriteBlocks_DMA -  Enable transfer interrupts..  \n");
1000:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Enable transfer interrupts */
1001:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   __HAL_SD_SDIO_ENABLE_IT(hsd, (SDIO_IT_DCRCFAIL |\
 1539              		.loc 1 1001 0
 1540 0956 FB68     		ldr	r3, [r7, #12]
 1541 0958 1A68     		ldr	r2, [r3]
 1542 095a FB68     		ldr	r3, [r7, #12]
 1543 095c 1B68     		ldr	r3, [r3]
 1544 095e DB6B     		ldr	r3, [r3, #60]
 1545 0960 43F44673 		orr	r3, r3, #792
 1546 0964 43F00203 		orr	r3, r3, #2
 1547 0968 D363     		str	r3, [r2, #60]
1002:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****                                 SDIO_IT_DTIMEOUT |\
1003:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****                                 SDIO_IT_DATAEND  |\
1004:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****                                 SDIO_IT_TXUNDERR |\
1005:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****                                 SDIO_IT_STBITERR)); 
1006:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1007:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** //  printf("[HALSD] I:HAL_SD_WriteBlocks_DMA -  Configure DMA user callbacks..  \n");
1008:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1009:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Configure DMA user callbacks */
1010:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   hsd->hdmatx->XferCpltCallback  = SD_DMA_TxCplt;
 1548              		.loc 1 1010 0
 1549 096a FB68     		ldr	r3, [r7, #12]
 1550 096c DA6D     		ldr	r2, [r3, #92]
 1551 096e 40F20003 		movw	r3, #:lower16:SD_DMA_TxCplt
 1552 0972 C0F20003 		movt	r3, #:upper16:SD_DMA_TxCplt
 1553 0976 D363     		str	r3, [r2, #60]
1011:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   hsd->hdmatx->XferErrorCallback = SD_DMA_TxError;
 1554              		.loc 1 1011 0
 1555 0978 FB68     		ldr	r3, [r7, #12]
 1556 097a DA6D     		ldr	r2, [r3, #92]
 1557 097c 40F20003 		movw	r3, #:lower16:SD_DMA_TxError
 1558 0980 C0F20003 		movt	r3, #:upper16:SD_DMA_TxError
 1559 0984 9364     		str	r3, [r2, #72]
1012:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1013:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** //  printf("[HALSD] I:HAL_SD_WriteBlocks_DMA -  Enable the DMA Stream..  \n");
1014:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1015:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Enable the DMA Stream */
1016:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_DMA_Start_IT(hsd->hdmatx, (uint32_t)pWriteBuffer, (uint32_t)SDIO_FIFO_ADDRESS, (uint32_t)(Blo
 1560              		.loc 1 1016 0
 1561 0986 FB68     		ldr	r3, [r7, #12]
 1562 0988 D96D     		ldr	r1, [r3, #92]
 1563 098a BA68     		ldr	r2, [r7, #8]
 1564 098c 3B6D     		ldr	r3, [r7, #80]
 1565 098e 786D     		ldr	r0, [r7, #84]
 1566 0990 00FB03F3 		mul	r3, r0, r3
 1567 0994 0846     		mov	r0, r1
 1568 0996 1146     		mov	r1, r2
 1569 0998 4FF43252 		mov	r2, #11392
 1570 099c C4F20102 		movt	r2, 16385
 1571 09a0 FFF7FEFF 		bl	HAL_DMA_Start_IT
1017:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1018:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** //  printf("[HALSD] I:HAL_SD_WriteBlocks_DMA -  Enable SDIO DMA transfer..  \n");
1019:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Enable SDIO DMA transfer */
1020:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   __HAL_SD_SDIO_DMA_ENABLE();
 1572              		.loc 1 1020 0
 1573 09a4 48F28C53 		movw	r3, #34188
 1574 09a8 C4F22523 		movt	r3, 16933
 1575 09ac 0122     		movs	r2, #1
 1576 09ae 1A60     		str	r2, [r3]
1021:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1022:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (hsd->CardType == HIGH_CAPACITY_SD_CARD)
 1577              		.loc 1 1022 0
 1578 09b0 FB68     		ldr	r3, [r7, #12]
 1579 09b2 1B6A     		ldr	r3, [r3, #32]
 1580 09b4 022B     		cmp	r3, #2
 1581 09b6 0AD1     		bne	.L92
1023:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1024:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     BlockSize = 512;
 1582              		.loc 1 1024 0
 1583 09b8 4FF40073 		mov	r3, #512
 1584 09bc 3B65     		str	r3, [r7, #80]
1025:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     WriteAddr /= 512;
 1585              		.loc 1 1025 0
 1586 09be D7E90023 		ldrd	r2, [r7]
 1587 09c2 540A     		lsrs	r4, r2, #9
 1588 09c4 44EAC354 		orr	r4, r4, r3, lsl #23
 1589 09c8 5D0A     		lsrs	r5, r3, #9
 1590 09ca C7E90045 		strd	r4, [r7]
 1591              	.L92:
1026:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1027:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1028:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** //  printf("[HALSD] I:HAL_SD_WriteBlocks_DMA -  Set Block Size for Card.. %d  \n",BlockSize);
1029:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1030:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Set Block Size for Card */ 
1031:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Argument         = (uint32_t)BlockSize;
 1592              		.loc 1 1031 0
 1593 09ce 3B6D     		ldr	r3, [r7, #80]
 1594 09d0 BB62     		str	r3, [r7, #40]
1032:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CmdIndex         = SD_CMD_SET_BLOCKLEN;
 1595              		.loc 1 1032 0
 1596 09d2 1023     		movs	r3, #16
 1597 09d4 FB62     		str	r3, [r7, #44]
1033:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Response         = SDIO_RESPONSE_SHORT;
 1598              		.loc 1 1033 0
 1599 09d6 4023     		movs	r3, #64
 1600 09d8 3B63     		str	r3, [r7, #48]
1034:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 1601              		.loc 1 1034 0
 1602 09da 0023     		movs	r3, #0
 1603 09dc 7B63     		str	r3, [r7, #52]
1035:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CPSM             = SDIO_CPSM_ENABLE;
 1604              		.loc 1 1035 0
 1605 09de 4FF48063 		mov	r3, #1024
 1606 09e2 BB63     		str	r3, [r7, #56]
1036:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 1607              		.loc 1 1036 0
 1608 09e4 FB68     		ldr	r3, [r7, #12]
 1609 09e6 1A68     		ldr	r2, [r3]
 1610 09e8 07F12803 		add	r3, r7, #40
 1611 09ec 1046     		mov	r0, r2
 1612 09ee 1946     		mov	r1, r3
 1613 09f0 FFF7FEFF 		bl	SDIO_SendCommand
1037:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1038:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** //  printf("[HALSD] I:HAL_SD_WriteBlocks_DMA -  Start Check for error conditions..   \n");
1039:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1040:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check for error conditions */
1041:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = SD_CmdResp1Error(hsd, SD_CMD_SET_BLOCKLEN);
 1614              		.loc 1 1041 0
 1615 09f4 F868     		ldr	r0, [r7, #12]
 1616 09f6 1021     		movs	r1, #16
 1617 09f8 01F08EFC 		bl	SD_CmdResp1Error
 1618 09fc 0346     		mov	r3, r0
 1619 09fe 87F83F30 		strb	r3, [r7, #63]
1042:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1043:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (errorState != SD_OK)
 1620              		.loc 1 1043 0
 1621 0a02 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 1622 0a06 002B     		cmp	r3, #0
 1623 0a08 02D0     		beq	.L93
1044:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1045:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** //	  printf("[HALSD] I:HAL_SD_WriteBlocks_DMA -  Check for error conditions.. error  \n");
1046:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 	  return errorState;
 1624              		.loc 1 1046 0
 1625 0a0a 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 1626 0a0e 48E0     		b	.L100
 1627              	.L93:
1047:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   } else
1048:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** //	  printf("[HALSD] I:HAL_SD_WriteBlocks_DMA -  Check for error conditions.. no error  \n");
1049:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1050:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1051:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check number of blocks command */
1052:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(NumberOfBlocks <= 1)
 1628              		.loc 1 1052 0
 1629 0a10 7B6D     		ldr	r3, [r7, #84]
 1630 0a12 012B     		cmp	r3, #1
 1631 0a14 02D8     		bhi	.L95
1053:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1054:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Send CMD24 WRITE_SINGLE_BLOCK */
1055:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.CmdIndex = SD_CMD_WRITE_SINGLE_BLOCK;
 1632              		.loc 1 1055 0
 1633 0a16 1823     		movs	r3, #24
 1634 0a18 FB62     		str	r3, [r7, #44]
 1635 0a1a 01E0     		b	.L96
 1636              	.L95:
1056:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1057:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else
1058:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1059:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Send CMD25 WRITE_MULT_BLOCK with argument data address */
1060:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.CmdIndex = SD_CMD_WRITE_MULT_BLOCK;
 1637              		.loc 1 1060 0
 1638 0a1c 1923     		movs	r3, #25
 1639 0a1e FB62     		str	r3, [r7, #44]
 1640              	.L96:
1061:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1062:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1063:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Argument         = (uint32_t)WriteAddr;
 1641              		.loc 1 1063 0
 1642 0a20 3B68     		ldr	r3, [r7]
 1643 0a22 BB62     		str	r3, [r7, #40]
1064:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 1644              		.loc 1 1064 0
 1645 0a24 FB68     		ldr	r3, [r7, #12]
 1646 0a26 1A68     		ldr	r2, [r3]
 1647 0a28 07F12803 		add	r3, r7, #40
 1648 0a2c 1046     		mov	r0, r2
 1649 0a2e 1946     		mov	r1, r3
 1650 0a30 FFF7FEFF 		bl	SDIO_SendCommand
1065:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1066:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check for error conditions */
1067:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(NumberOfBlocks > 1)
 1651              		.loc 1 1067 0
 1652 0a34 7B6D     		ldr	r3, [r7, #84]
 1653 0a36 012B     		cmp	r3, #1
 1654 0a38 07D9     		bls	.L97
1068:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1069:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CmdResp1Error(hsd, SD_CMD_WRITE_MULT_BLOCK);
 1655              		.loc 1 1069 0
 1656 0a3a F868     		ldr	r0, [r7, #12]
 1657 0a3c 1921     		movs	r1, #25
 1658 0a3e 01F06BFC 		bl	SD_CmdResp1Error
 1659 0a42 0346     		mov	r3, r0
 1660 0a44 87F83F30 		strb	r3, [r7, #63]
 1661 0a48 06E0     		b	.L98
 1662              	.L97:
1070:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1071:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else
1072:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1073:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CmdResp1Error(hsd, SD_CMD_WRITE_SINGLE_BLOCK);
 1663              		.loc 1 1073 0
 1664 0a4a F868     		ldr	r0, [r7, #12]
 1665 0a4c 1821     		movs	r1, #24
 1666 0a4e 01F063FC 		bl	SD_CmdResp1Error
 1667 0a52 0346     		mov	r3, r0
 1668 0a54 87F83F30 		strb	r3, [r7, #63]
 1669              	.L98:
1074:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1075:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1076:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (errorState != SD_OK)
 1670              		.loc 1 1076 0
 1671 0a58 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 1672 0a5c 002B     		cmp	r3, #0
 1673 0a5e 02D0     		beq	.L99
1077:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1078:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 1674              		.loc 1 1078 0
 1675 0a60 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 1676 0a64 1DE0     		b	.L100
 1677              	.L99:
1079:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1080:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   //else 	  printf("[HALSD] I:HAL_SD_WriteBlocks_DMA -  Check for error conditions 2.. no error  \n
1081:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1082:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1083:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Configure the SD DPSM (Data Path State Machine) */ 
1084:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.DataTimeOut   = SD_DATATIMEOUT;
 1678              		.loc 1 1084 0
 1679 0a66 4FF0FF33 		mov	r3, #-1
 1680 0a6a 3B61     		str	r3, [r7, #16]
1085:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.DataLength    = BlockSize * NumberOfBlocks;
 1681              		.loc 1 1085 0
 1682 0a6c 3B6D     		ldr	r3, [r7, #80]
 1683 0a6e 7A6D     		ldr	r2, [r7, #84]
 1684 0a70 02FB03F3 		mul	r3, r2, r3
 1685 0a74 7B61     		str	r3, [r7, #20]
1086:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.DataBlockSize = SDIO_DATABLOCK_SIZE_512B;
 1686              		.loc 1 1086 0
 1687 0a76 9023     		movs	r3, #144
 1688 0a78 BB61     		str	r3, [r7, #24]
1087:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.TransferDir   = SDIO_TRANSFER_DIR_TO_CARD;
 1689              		.loc 1 1087 0
 1690 0a7a 0023     		movs	r3, #0
 1691 0a7c FB61     		str	r3, [r7, #28]
1088:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.TransferMode  = SDIO_TRANSFER_MODE_BLOCK;
 1692              		.loc 1 1088 0
 1693 0a7e 0023     		movs	r3, #0
 1694 0a80 3B62     		str	r3, [r7, #32]
1089:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.DPSM          = SDIO_DPSM_ENABLE;
 1695              		.loc 1 1089 0
 1696 0a82 0123     		movs	r3, #1
 1697 0a84 7B62     		str	r3, [r7, #36]
1090:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataConfig(hsd->Instance, &SDIO_DataInitStructure);
 1698              		.loc 1 1090 0
 1699 0a86 FB68     		ldr	r3, [r7, #12]
 1700 0a88 1A68     		ldr	r2, [r3]
 1701 0a8a 07F11003 		add	r3, r7, #16
 1702 0a8e 1046     		mov	r0, r2
 1703 0a90 1946     		mov	r1, r3
 1704 0a92 FFF7FEFF 		bl	SDIO_DataConfig
1091:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1092:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   hsd->SdTransferErr = errorState;
 1705              		.loc 1 1092 0
 1706 0a96 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 1707 0a9a FB68     		ldr	r3, [r7, #12]
 1708 0a9c DA64     		str	r2, [r3, #76]
1093:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1094:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 1709              		.loc 1 1094 0
 1710 0a9e 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 1711              	.L100:
1095:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 1712              		.loc 1 1095 0
 1713 0aa2 1846     		mov	r0, r3
 1714 0aa4 4037     		adds	r7, r7, #64
 1715 0aa6 BD46     		mov	sp, r7
 1716              		@ sp needed
 1717 0aa8 B0BD     		pop	{r4, r5, r7, pc}
 1718              		.cfi_endproc
 1719              	.LFE62:
 1721 0aaa 00BF     		.align	2
 1722              		.global	HAL_SD_CheckReadOperation
 1723              		.thumb
 1724              		.thumb_func
 1726              	HAL_SD_CheckReadOperation:
 1727              	.LFB63:
1096:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1097:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
1098:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  This function waits until the SD DMA data read transfer is finished. 
1099:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         This API should be called after HAL_SD_ReadBlocks_DMA() function
1100:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         to insure that all data sent by the card is already transferred by the 
1101:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         DMA controller.
1102:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
1103:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  Timeout: Timeout duration  
1104:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
1105:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
1106:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** HAL_SD_ErrorTypedef HAL_SD_CheckReadOperation(SD_HandleTypeDef *hsd, uint32_t Timeout)
1107:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 1728              		.loc 1 1107 0
 1729              		.cfi_startproc
 1730              		@ args = 0, pretend = 0, frame = 32
 1731              		@ frame_needed = 1, uses_anonymous_args = 0
 1732 0aac 80B5     		push	{r7, lr}
 1733              		.cfi_def_cfa_offset 8
 1734              		.cfi_offset 7, -8
 1735              		.cfi_offset 14, -4
 1736 0aae 88B0     		sub	sp, sp, #32
 1737              		.cfi_def_cfa_offset 40
 1738 0ab0 00AF     		add	r7, sp, #0
 1739              		.cfi_def_cfa_register 7
 1740 0ab2 7860     		str	r0, [r7, #4]
 1741 0ab4 3960     		str	r1, [r7]
1108:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 1742              		.loc 1 1108 0
 1743 0ab6 0023     		movs	r3, #0
 1744 0ab8 FB77     		strb	r3, [r7, #31]
1109:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t timeout = Timeout;
 1745              		.loc 1 1109 0
 1746 0aba 3B68     		ldr	r3, [r7]
 1747 0abc BB61     		str	r3, [r7, #24]
1110:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t tmp1, tmp2;
1111:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef tmp3;
1112:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1113:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1114:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Wait for DMA/SD transfer end or SD error variables to be in SD handle */
1115:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp1 = hsd->DmaTransferCplt; 
 1748              		.loc 1 1115 0
 1749 0abe 7B68     		ldr	r3, [r7, #4]
 1750 0ac0 1B6D     		ldr	r3, [r3, #80]
 1751 0ac2 7B61     		str	r3, [r7, #20]
1116:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp2 = hsd->SdTransferCplt;
 1752              		.loc 1 1116 0
 1753 0ac4 7B68     		ldr	r3, [r7, #4]
 1754 0ac6 9B6C     		ldr	r3, [r3, #72]
 1755 0ac8 3B61     		str	r3, [r7, #16]
1117:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp3 = (HAL_SD_ErrorTypedef)hsd->SdTransferErr;
 1756              		.loc 1 1117 0
 1757 0aca 7B68     		ldr	r3, [r7, #4]
 1758 0acc DB6C     		ldr	r3, [r3, #76]
 1759 0ace FB73     		strb	r3, [r7, #15]
1118:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1119:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   while ((tmp1 == 0) && (tmp2 == 0) && (tmp3 == SD_OK) && (timeout > 0))
 1760              		.loc 1 1119 0
 1761 0ad0 0BE0     		b	.L102
 1762              	.L104:
1120:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1121:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     tmp1 = hsd->DmaTransferCplt; 
 1763              		.loc 1 1121 0
 1764 0ad2 7B68     		ldr	r3, [r7, #4]
 1765 0ad4 1B6D     		ldr	r3, [r3, #80]
 1766 0ad6 7B61     		str	r3, [r7, #20]
1122:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     tmp2 = hsd->SdTransferCplt;
 1767              		.loc 1 1122 0
 1768 0ad8 7B68     		ldr	r3, [r7, #4]
 1769 0ada 9B6C     		ldr	r3, [r3, #72]
 1770 0adc 3B61     		str	r3, [r7, #16]
1123:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     tmp3 = (HAL_SD_ErrorTypedef)hsd->SdTransferErr;    
 1771              		.loc 1 1123 0
 1772 0ade 7B68     		ldr	r3, [r7, #4]
 1773 0ae0 DB6C     		ldr	r3, [r3, #76]
 1774 0ae2 FB73     		strb	r3, [r7, #15]
1124:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     timeout--;
 1775              		.loc 1 1124 0
 1776 0ae4 BB69     		ldr	r3, [r7, #24]
 1777 0ae6 013B     		subs	r3, r3, #1
 1778 0ae8 BB61     		str	r3, [r7, #24]
 1779              	.L102:
1119:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 1780              		.loc 1 1119 0 discriminator 1
 1781 0aea 7B69     		ldr	r3, [r7, #20]
 1782 0aec 002B     		cmp	r3, #0
 1783 0aee 08D1     		bne	.L103
1119:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 1784              		.loc 1 1119 0 is_stmt 0 discriminator 2
 1785 0af0 3B69     		ldr	r3, [r7, #16]
 1786 0af2 002B     		cmp	r3, #0
 1787 0af4 05D1     		bne	.L103
1119:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 1788              		.loc 1 1119 0 discriminator 1
 1789 0af6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1790 0af8 002B     		cmp	r3, #0
 1791 0afa 02D1     		bne	.L103
 1792 0afc BB69     		ldr	r3, [r7, #24]
 1793 0afe 002B     		cmp	r3, #0
 1794 0b00 E7D1     		bne	.L104
 1795              	.L103:
1125:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** //	printf("[HAL SD] I: tmp1:%d tmp2:%d tmp3:%d timeout:%d.%d \n",tmp1,tmp2,tmp3,(uint16_t)(timeout>
1126:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1127:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1128:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1129:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   timeout = Timeout;
 1796              		.loc 1 1129 0 is_stmt 1
 1797 0b02 3B68     		ldr	r3, [r7]
 1798 0b04 BB61     		str	r3, [r7, #24]
1130:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1131:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** //	printf("[HAL SD] I: Wait until the Rx transfer....\n");
1132:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1133:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Wait until the Rx transfer is no longer active */
1134:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   while((__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_RXACT)) && (timeout > 0))
 1799              		.loc 1 1134 0
 1800 0b06 02E0     		b	.L105
 1801              	.L107:
1135:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1136:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     timeout--;  
 1802              		.loc 1 1136 0
 1803 0b08 BB69     		ldr	r3, [r7, #24]
 1804 0b0a 013B     		subs	r3, r3, #1
 1805 0b0c BB61     		str	r3, [r7, #24]
 1806              	.L105:
1134:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 1807              		.loc 1 1134 0 discriminator 1
 1808 0b0e 7B68     		ldr	r3, [r7, #4]
 1809 0b10 1B68     		ldr	r3, [r3]
 1810 0b12 5B6B     		ldr	r3, [r3, #52]
 1811 0b14 03F40053 		and	r3, r3, #8192
 1812 0b18 002B     		cmp	r3, #0
 1813 0b1a 02D0     		beq	.L106
1134:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 1814              		.loc 1 1134 0 is_stmt 0 discriminator 2
 1815 0b1c BB69     		ldr	r3, [r7, #24]
 1816 0b1e 002B     		cmp	r3, #0
 1817 0b20 F2D1     		bne	.L107
 1818              	.L106:
1137:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1138:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1139:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Send stop command in multiblock read */
1140:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (hsd->SdOperation == SD_READ_MULTIPLE_BLOCK)
 1819              		.loc 1 1140 0 is_stmt 1
 1820 0b22 7B68     		ldr	r3, [r7, #4]
 1821 0b24 5B6D     		ldr	r3, [r3, #84]
 1822 0b26 012B     		cmp	r3, #1
 1823 0b28 04D1     		bne	.L108
1141:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1142:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = HAL_SD_StopTransfer(hsd);
 1824              		.loc 1 1142 0
 1825 0b2a 7868     		ldr	r0, [r7, #4]
 1826 0b2c FFF7FEFF 		bl	HAL_SD_StopTransfer
 1827 0b30 0346     		mov	r3, r0
 1828 0b32 FB77     		strb	r3, [r7, #31]
 1829              	.L108:
1143:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1144:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1145:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if ((timeout == 0) && (errorState == SD_OK))
 1830              		.loc 1 1145 0
 1831 0b34 BB69     		ldr	r3, [r7, #24]
 1832 0b36 002B     		cmp	r3, #0
 1833 0b38 04D1     		bne	.L109
 1834              		.loc 1 1145 0 is_stmt 0 discriminator 1
 1835 0b3a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1836 0b3c 002B     		cmp	r3, #0
 1837 0b3e 01D1     		bne	.L109
1146:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1147:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_DATA_TIMEOUT;
 1838              		.loc 1 1147 0 is_stmt 1
 1839 0b40 0423     		movs	r3, #4
 1840 0b42 FB77     		strb	r3, [r7, #31]
 1841              	.L109:
1148:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1149:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1150:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Clear all the static flags */
1151:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 1842              		.loc 1 1151 0
 1843 0b44 7B68     		ldr	r3, [r7, #4]
 1844 0b46 1B68     		ldr	r3, [r3]
 1845 0b48 40F2FF52 		movw	r2, #1535
 1846 0b4c 9A63     		str	r2, [r3, #56]
1152:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1153:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Return error state */
1154:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (hsd->SdTransferErr != SD_OK)
 1847              		.loc 1 1154 0
 1848 0b4e 7B68     		ldr	r3, [r7, #4]
 1849 0b50 DB6C     		ldr	r3, [r3, #76]
 1850 0b52 002B     		cmp	r3, #0
 1851 0b54 03D0     		beq	.L110
1155:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1156:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return (HAL_SD_ErrorTypedef)(hsd->SdTransferErr);
 1852              		.loc 1 1156 0
 1853 0b56 7B68     		ldr	r3, [r7, #4]
 1854 0b58 DB6C     		ldr	r3, [r3, #76]
 1855 0b5a DBB2     		uxtb	r3, r3
 1856 0b5c 00E0     		b	.L111
 1857              	.L110:
1157:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1158:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1159:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 1858              		.loc 1 1159 0
 1859 0b5e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1860              	.L111:
1160:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 1861              		.loc 1 1160 0
 1862 0b60 1846     		mov	r0, r3
 1863 0b62 2037     		adds	r7, r7, #32
 1864 0b64 BD46     		mov	sp, r7
 1865              		@ sp needed
 1866 0b66 80BD     		pop	{r7, pc}
 1867              		.cfi_endproc
 1868              	.LFE63:
 1870              		.align	2
 1871              		.global	HAL_SD_CheckWriteOperation
 1872              		.thumb
 1873              		.thumb_func
 1875              	HAL_SD_CheckWriteOperation:
 1876              	.LFB64:
1161:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1162:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
1163:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  This function waits until the SD DMA data write transfer is finished. 
1164:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         This API should be called after HAL_SD_WriteBlocks_DMA() function
1165:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         to insure that all data sent by the card is already transferred by the 
1166:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         DMA controller.
1167:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
1168:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  Timeout: Timeout duration  
1169:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
1170:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
1171:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** HAL_SD_ErrorTypedef HAL_SD_CheckWriteOperation(SD_HandleTypeDef *hsd, uint32_t Timeout)
1172:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 1877              		.loc 1 1172 0
 1878              		.cfi_startproc
 1879              		@ args = 0, pretend = 0, frame = 32
 1880              		@ frame_needed = 1, uses_anonymous_args = 0
 1881 0b68 80B5     		push	{r7, lr}
 1882              		.cfi_def_cfa_offset 8
 1883              		.cfi_offset 7, -8
 1884              		.cfi_offset 14, -4
 1885 0b6a 88B0     		sub	sp, sp, #32
 1886              		.cfi_def_cfa_offset 40
 1887 0b6c 00AF     		add	r7, sp, #0
 1888              		.cfi_def_cfa_register 7
 1889 0b6e 7860     		str	r0, [r7, #4]
 1890 0b70 3960     		str	r1, [r7]
1173:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 1891              		.loc 1 1173 0
 1892 0b72 0023     		movs	r3, #0
 1893 0b74 FB77     		strb	r3, [r7, #31]
1174:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t timeout = Timeout;
 1894              		.loc 1 1174 0
 1895 0b76 3B68     		ldr	r3, [r7]
 1896 0b78 BB61     		str	r3, [r7, #24]
1175:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t tmp1, tmp2;
1176:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef tmp3;
1177:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1178:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Wait for DMA/SD transfer end or SD error variables to be in SD handle */
1179:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp1 = hsd->DmaTransferCplt; 
 1897              		.loc 1 1179 0
 1898 0b7a 7B68     		ldr	r3, [r7, #4]
 1899 0b7c 1B6D     		ldr	r3, [r3, #80]
 1900 0b7e 7B61     		str	r3, [r7, #20]
1180:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp2 = hsd->SdTransferCplt;
 1901              		.loc 1 1180 0
 1902 0b80 7B68     		ldr	r3, [r7, #4]
 1903 0b82 9B6C     		ldr	r3, [r3, #72]
 1904 0b84 3B61     		str	r3, [r7, #16]
1181:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp3 = (HAL_SD_ErrorTypedef)hsd->SdTransferErr;
 1905              		.loc 1 1181 0
 1906 0b86 7B68     		ldr	r3, [r7, #4]
 1907 0b88 DB6C     		ldr	r3, [r3, #76]
 1908 0b8a FB73     		strb	r3, [r7, #15]
1182:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1183:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   while ((tmp1 == 0) && (tmp2 == 0) && (tmp3 == SD_OK) && (timeout > 0))
 1909              		.loc 1 1183 0
 1910 0b8c 0BE0     		b	.L113
 1911              	.L115:
1184:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1185:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     tmp1 = hsd->DmaTransferCplt; 
 1912              		.loc 1 1185 0
 1913 0b8e 7B68     		ldr	r3, [r7, #4]
 1914 0b90 1B6D     		ldr	r3, [r3, #80]
 1915 0b92 7B61     		str	r3, [r7, #20]
1186:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     tmp2 = hsd->SdTransferCplt;
 1916              		.loc 1 1186 0
 1917 0b94 7B68     		ldr	r3, [r7, #4]
 1918 0b96 9B6C     		ldr	r3, [r3, #72]
 1919 0b98 3B61     		str	r3, [r7, #16]
1187:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     tmp3 = (HAL_SD_ErrorTypedef)hsd->SdTransferErr;
 1920              		.loc 1 1187 0
 1921 0b9a 7B68     		ldr	r3, [r7, #4]
 1922 0b9c DB6C     		ldr	r3, [r3, #76]
 1923 0b9e FB73     		strb	r3, [r7, #15]
1188:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     timeout--;
 1924              		.loc 1 1188 0
 1925 0ba0 BB69     		ldr	r3, [r7, #24]
 1926 0ba2 013B     		subs	r3, r3, #1
 1927 0ba4 BB61     		str	r3, [r7, #24]
 1928              	.L113:
1183:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 1929              		.loc 1 1183 0 discriminator 1
 1930 0ba6 7B69     		ldr	r3, [r7, #20]
 1931 0ba8 002B     		cmp	r3, #0
 1932 0baa 08D1     		bne	.L114
1183:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 1933              		.loc 1 1183 0 is_stmt 0 discriminator 2
 1934 0bac 3B69     		ldr	r3, [r7, #16]
 1935 0bae 002B     		cmp	r3, #0
 1936 0bb0 05D1     		bne	.L114
1183:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 1937              		.loc 1 1183 0 discriminator 1
 1938 0bb2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1939 0bb4 002B     		cmp	r3, #0
 1940 0bb6 02D1     		bne	.L114
 1941 0bb8 BB69     		ldr	r3, [r7, #24]
 1942 0bba 002B     		cmp	r3, #0
 1943 0bbc E7D1     		bne	.L115
 1944              	.L114:
1189:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1190:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1191:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   timeout = Timeout;
 1945              		.loc 1 1191 0 is_stmt 1
 1946 0bbe 3B68     		ldr	r3, [r7]
 1947 0bc0 BB61     		str	r3, [r7, #24]
1192:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1193:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Wait until the Tx transfer is no longer active */
1194:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   while((__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_TXACT))  && (timeout > 0))
 1948              		.loc 1 1194 0
 1949 0bc2 02E0     		b	.L116
 1950              	.L118:
1195:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1196:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     timeout--;  
 1951              		.loc 1 1196 0
 1952 0bc4 BB69     		ldr	r3, [r7, #24]
 1953 0bc6 013B     		subs	r3, r3, #1
 1954 0bc8 BB61     		str	r3, [r7, #24]
 1955              	.L116:
1194:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 1956              		.loc 1 1194 0 discriminator 1
 1957 0bca 7B68     		ldr	r3, [r7, #4]
 1958 0bcc 1B68     		ldr	r3, [r3]
 1959 0bce 5B6B     		ldr	r3, [r3, #52]
 1960 0bd0 03F48053 		and	r3, r3, #4096
 1961 0bd4 002B     		cmp	r3, #0
 1962 0bd6 02D0     		beq	.L117
1194:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 1963              		.loc 1 1194 0 is_stmt 0 discriminator 2
 1964 0bd8 BB69     		ldr	r3, [r7, #24]
 1965 0bda 002B     		cmp	r3, #0
 1966 0bdc F2D1     		bne	.L118
 1967              	.L117:
1197:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1198:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1199:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Send stop command in multiblock write */
1200:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (hsd->SdOperation == SD_WRITE_MULTIPLE_BLOCK)
 1968              		.loc 1 1200 0 is_stmt 1
 1969 0bde 7B68     		ldr	r3, [r7, #4]
 1970 0be0 5B6D     		ldr	r3, [r3, #84]
 1971 0be2 032B     		cmp	r3, #3
 1972 0be4 04D1     		bne	.L119
1201:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1202:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = HAL_SD_StopTransfer(hsd);
 1973              		.loc 1 1202 0
 1974 0be6 7868     		ldr	r0, [r7, #4]
 1975 0be8 FFF7FEFF 		bl	HAL_SD_StopTransfer
 1976 0bec 0346     		mov	r3, r0
 1977 0bee FB77     		strb	r3, [r7, #31]
 1978              	.L119:
1203:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1204:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1205:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if ((timeout == 0) && (errorState == SD_OK))
 1979              		.loc 1 1205 0
 1980 0bf0 BB69     		ldr	r3, [r7, #24]
 1981 0bf2 002B     		cmp	r3, #0
 1982 0bf4 04D1     		bne	.L120
 1983              		.loc 1 1205 0 is_stmt 0 discriminator 1
 1984 0bf6 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1985 0bf8 002B     		cmp	r3, #0
 1986 0bfa 01D1     		bne	.L120
1206:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1207:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_DATA_TIMEOUT;
 1987              		.loc 1 1207 0 is_stmt 1
 1988 0bfc 0423     		movs	r3, #4
 1989 0bfe FB77     		strb	r3, [r7, #31]
 1990              	.L120:
1208:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1209:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1210:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Clear all the static flags */
1211:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 1991              		.loc 1 1211 0
 1992 0c00 7B68     		ldr	r3, [r7, #4]
 1993 0c02 1B68     		ldr	r3, [r3]
 1994 0c04 40F2FF52 		movw	r2, #1535
 1995 0c08 9A63     		str	r2, [r3, #56]
1212:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1213:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Return error state */
1214:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (hsd->SdTransferErr != SD_OK)
 1996              		.loc 1 1214 0
 1997 0c0a 7B68     		ldr	r3, [r7, #4]
 1998 0c0c DB6C     		ldr	r3, [r3, #76]
 1999 0c0e 002B     		cmp	r3, #0
 2000 0c10 03D0     		beq	.L121
1215:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1216:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return (HAL_SD_ErrorTypedef)(hsd->SdTransferErr);
 2001              		.loc 1 1216 0
 2002 0c12 7B68     		ldr	r3, [r7, #4]
 2003 0c14 DB6C     		ldr	r3, [r3, #76]
 2004 0c16 DBB2     		uxtb	r3, r3
 2005 0c18 07E0     		b	.L122
 2006              	.L121:
1217:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1218:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1219:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Wait until write is complete */
1220:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   while(HAL_SD_GetStatus(hsd) != SD_TRANSFER_OK)
 2007              		.loc 1 1220 0
 2008 0c1a 00BF     		nop
 2009              	.L123:
 2010              		.loc 1 1220 0 is_stmt 0 discriminator 1
 2011 0c1c 7868     		ldr	r0, [r7, #4]
 2012 0c1e FFF7FEFF 		bl	HAL_SD_GetStatus
 2013 0c22 0346     		mov	r3, r0
 2014 0c24 002B     		cmp	r3, #0
 2015 0c26 F9D1     		bne	.L123
1221:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {    
1222:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1223:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1224:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState; 
 2016              		.loc 1 1224 0 is_stmt 1
 2017 0c28 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2018              	.L122:
1225:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 2019              		.loc 1 1225 0
 2020 0c2a 1846     		mov	r0, r3
 2021 0c2c 2037     		adds	r7, r7, #32
 2022 0c2e BD46     		mov	sp, r7
 2023              		@ sp needed
 2024 0c30 80BD     		pop	{r7, pc}
 2025              		.cfi_endproc
 2026              	.LFE64:
 2028 0c32 00BF     		.align	2
 2029              		.global	HAL_SD_Erase
 2030              		.thumb
 2031              		.thumb_func
 2033              	HAL_SD_Erase:
 2034              	.LFB65:
1226:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1227:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
1228:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Erases the specified memory area of the given SD card.
1229:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle 
1230:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  startaddr: Start byte address
1231:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  endaddr: End byte address
1232:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
1233:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
1234:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** HAL_SD_ErrorTypedef HAL_SD_Erase(SD_HandleTypeDef *hsd, uint64_t startaddr, uint64_t endaddr)
1235:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 2035              		.loc 1 1235 0
 2036              		.cfi_startproc
 2037              		@ args = 8, pretend = 0, frame = 56
 2038              		@ frame_needed = 1, uses_anonymous_args = 0
 2039 0c34 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 2040              		.cfi_def_cfa_offset 24
 2041              		.cfi_offset 4, -24
 2042              		.cfi_offset 5, -20
 2043              		.cfi_offset 7, -16
 2044              		.cfi_offset 8, -12
 2045              		.cfi_offset 9, -8
 2046              		.cfi_offset 14, -4
 2047 0c38 8EB0     		sub	sp, sp, #56
 2048              		.cfi_def_cfa_offset 80
 2049 0c3a 00AF     		add	r7, sp, #0
 2050              		.cfi_def_cfa_register 7
 2051 0c3c F860     		str	r0, [r7, #12]
 2052 0c3e C7E90023 		strd	r2, [r7]
1236:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 2053              		.loc 1 1236 0
 2054 0c42 0023     		movs	r3, #0
 2055 0c44 87F83730 		strb	r3, [r7, #55]
1237:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitTypeDef SDIO_CmdInitStructure;
1238:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1239:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t delay         = 0;
 2056              		.loc 1 1239 0
 2057 0c48 0023     		movs	r3, #0
 2058 0c4a 3B63     		str	r3, [r7, #48]
1240:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   __IO uint32_t maxdelay = 0;
 2059              		.loc 1 1240 0
 2060 0c4c 0023     		movs	r3, #0
 2061 0c4e BB61     		str	r3, [r7, #24]
1241:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint8_t cardstate      = 0;
 2062              		.loc 1 1241 0
 2063 0c50 0023     		movs	r3, #0
 2064 0c52 FB75     		strb	r3, [r7, #23]
1242:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1243:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check if the card command class supports erase command */
1244:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (((hsd->CSD[1] >> 20) & SD_CCCC_ERASE) == 0)
 2065              		.loc 1 1244 0
 2066 0c54 FB68     		ldr	r3, [r7, #12]
 2067 0c56 DB6A     		ldr	r3, [r3, #44]
 2068 0c58 1B0D     		lsrs	r3, r3, #20
 2069 0c5a 03F02003 		and	r3, r3, #32
 2070 0c5e 002B     		cmp	r3, #0
 2071 0c60 05D1     		bne	.L125
1245:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1246:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_REQUEST_NOT_APPLICABLE;
 2072              		.loc 1 1246 0
 2073 0c62 2523     		movs	r3, #37
 2074 0c64 87F83730 		strb	r3, [r7, #55]
1247:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1248:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 2075              		.loc 1 1248 0
 2076 0c68 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 2077 0c6c C0E0     		b	.L138
 2078              	.L125:
1249:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1250:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1251:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Get max delay value */
1252:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   maxdelay = 120000 / (((hsd->Instance->CLKCR) & 0xFF) + 2);
 2079              		.loc 1 1252 0
 2080 0c6e FB68     		ldr	r3, [r7, #12]
 2081 0c70 1B68     		ldr	r3, [r3]
 2082 0c72 5B68     		ldr	r3, [r3, #4]
 2083 0c74 DBB2     		uxtb	r3, r3
 2084 0c76 9A1C     		adds	r2, r3, #2
 2085 0c78 4DF2C043 		movw	r3, #54464
 2086 0c7c C0F20103 		movt	r3, 1
 2087 0c80 B3FBF2F3 		udiv	r3, r3, r2
 2088 0c84 BB61     		str	r3, [r7, #24]
1253:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1254:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((SDIO_GetResponse(SDIO_RESP1) & SD_CARD_LOCKED) == SD_CARD_LOCKED)
 2089              		.loc 1 1254 0
 2090 0c86 0020     		movs	r0, #0
 2091 0c88 FFF7FEFF 		bl	SDIO_GetResponse
 2092 0c8c 0346     		mov	r3, r0
 2093 0c8e 03F00073 		and	r3, r3, #33554432
 2094 0c92 002B     		cmp	r3, #0
 2095 0c94 05D0     		beq	.L127
1255:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1256:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_LOCK_UNLOCK_FAILED;
 2096              		.loc 1 1256 0
 2097 0c96 0E23     		movs	r3, #14
 2098 0c98 87F83730 		strb	r3, [r7, #55]
1257:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1258:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 2099              		.loc 1 1258 0
 2100 0c9c 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 2101 0ca0 A6E0     		b	.L138
 2102              	.L127:
1259:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1260:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1261:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Get start and end block for high capacity cards */
1262:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (hsd->CardType == HIGH_CAPACITY_SD_CARD)
 2103              		.loc 1 1262 0
 2104 0ca2 FB68     		ldr	r3, [r7, #12]
 2105 0ca4 1B6A     		ldr	r3, [r3, #32]
 2106 0ca6 022B     		cmp	r3, #2
 2107 0ca8 11D1     		bne	.L128
1263:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1264:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     startaddr /= 512;
 2108              		.loc 1 1264 0
 2109 0caa D7E90023 		ldrd	r2, [r7]
 2110 0cae 4FEA5228 		lsr	r8, r2, #9
 2111 0cb2 48EAC358 		orr	r8, r8, r3, lsl #23
 2112 0cb6 4FEA5329 		lsr	r9, r3, #9
 2113 0cba C7E90089 		strd	r8, [r7]
1265:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     endaddr   /= 512;
 2114              		.loc 1 1265 0
 2115 0cbe D7E91423 		ldrd	r2, [r7, #80]
 2116 0cc2 540A     		lsrs	r4, r2, #9
 2117 0cc4 44EAC354 		orr	r4, r4, r3, lsl #23
 2118 0cc8 5D0A     		lsrs	r5, r3, #9
 2119 0cca C7E91445 		strd	r4, [r7, #80]
 2120              	.L128:
1266:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1267:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1268:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* According to sd-card spec 1.0 ERASE_GROUP_START (CMD32) and erase_group_end(CMD33) */
1269:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if ((hsd->CardType == STD_CAPACITY_SD_CARD_V1_1) || (hsd->CardType == STD_CAPACITY_SD_CARD_V2_0) 
 2121              		.loc 1 1269 0
 2122 0cce FB68     		ldr	r3, [r7, #12]
 2123 0cd0 1B6A     		ldr	r3, [r3, #32]
 2124 0cd2 002B     		cmp	r3, #0
 2125 0cd4 07D0     		beq	.L129
 2126              		.loc 1 1269 0 is_stmt 0 discriminator 1
 2127 0cd6 FB68     		ldr	r3, [r7, #12]
 2128 0cd8 1B6A     		ldr	r3, [r3, #32]
 2129 0cda 012B     		cmp	r3, #1
 2130 0cdc 03D0     		beq	.L129
1270:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (hsd->CardType == HIGH_CAPACITY_SD_CARD))
 2131              		.loc 1 1270 0 is_stmt 1 discriminator 1
 2132 0cde FB68     		ldr	r3, [r7, #12]
 2133 0ce0 1B6A     		ldr	r3, [r3, #32]
1269:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (hsd->CardType == HIGH_CAPACITY_SD_CARD))
 2134              		.loc 1 1269 0 discriminator 1
 2135 0ce2 022B     		cmp	r3, #2
 2136 0ce4 3AD1     		bne	.L130
 2137              	.L129:
1271:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1272:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Send CMD32 SD_ERASE_GRP_START with argument as addr  */
1273:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.Argument         =(uint32_t)startaddr;
 2138              		.loc 1 1273 0
 2139 0ce6 3B68     		ldr	r3, [r7]
 2140 0ce8 FB61     		str	r3, [r7, #28]
1274:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.CmdIndex         = SD_CMD_SD_ERASE_GRP_START;
 2141              		.loc 1 1274 0
 2142 0cea 2023     		movs	r3, #32
 2143 0cec 3B62     		str	r3, [r7, #32]
1275:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.Response         = SDIO_RESPONSE_SHORT;
 2144              		.loc 1 1275 0
 2145 0cee 4023     		movs	r3, #64
 2146 0cf0 7B62     		str	r3, [r7, #36]
1276:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 2147              		.loc 1 1276 0
 2148 0cf2 0023     		movs	r3, #0
 2149 0cf4 BB62     		str	r3, [r7, #40]
1277:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.CPSM             = SDIO_CPSM_ENABLE;
 2150              		.loc 1 1277 0
 2151 0cf6 4FF48063 		mov	r3, #1024
 2152 0cfa FB62     		str	r3, [r7, #44]
1278:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 2153              		.loc 1 1278 0
 2154 0cfc FB68     		ldr	r3, [r7, #12]
 2155 0cfe 1A68     		ldr	r2, [r3]
 2156 0d00 07F11C03 		add	r3, r7, #28
 2157 0d04 1046     		mov	r0, r2
 2158 0d06 1946     		mov	r1, r3
 2159 0d08 FFF7FEFF 		bl	SDIO_SendCommand
1279:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1280:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Check for error conditions */
1281:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CmdResp1Error(hsd, SD_CMD_SD_ERASE_GRP_START);
 2160              		.loc 1 1281 0
 2161 0d0c F868     		ldr	r0, [r7, #12]
 2162 0d0e 2021     		movs	r1, #32
 2163 0d10 01F002FB 		bl	SD_CmdResp1Error
 2164 0d14 0346     		mov	r3, r0
 2165 0d16 87F83730 		strb	r3, [r7, #55]
1282:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1283:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     if (errorState != SD_OK)
 2166              		.loc 1 1283 0
 2167 0d1a 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 2168 0d1e 002B     		cmp	r3, #0
 2169 0d20 02D0     		beq	.L131
1284:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
1285:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       return errorState;
 2170              		.loc 1 1285 0
 2171 0d22 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 2172 0d26 63E0     		b	.L138
 2173              	.L131:
1286:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
1287:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1288:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Send CMD33 SD_ERASE_GRP_END with argument as addr  */
1289:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.Argument         = (uint32_t)endaddr;
 2174              		.loc 1 1289 0
 2175 0d28 3B6D     		ldr	r3, [r7, #80]
 2176 0d2a FB61     		str	r3, [r7, #28]
1290:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.CmdIndex         = SD_CMD_SD_ERASE_GRP_END;
 2177              		.loc 1 1290 0
 2178 0d2c 2123     		movs	r3, #33
 2179 0d2e 3B62     		str	r3, [r7, #32]
1291:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 2180              		.loc 1 1291 0
 2181 0d30 FB68     		ldr	r3, [r7, #12]
 2182 0d32 1A68     		ldr	r2, [r3]
 2183 0d34 07F11C03 		add	r3, r7, #28
 2184 0d38 1046     		mov	r0, r2
 2185 0d3a 1946     		mov	r1, r3
 2186 0d3c FFF7FEFF 		bl	SDIO_SendCommand
1292:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1293:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Check for error conditions */
1294:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CmdResp1Error(hsd, SD_CMD_SD_ERASE_GRP_END);
 2187              		.loc 1 1294 0
 2188 0d40 F868     		ldr	r0, [r7, #12]
 2189 0d42 2121     		movs	r1, #33
 2190 0d44 01F0E8FA 		bl	SD_CmdResp1Error
 2191 0d48 0346     		mov	r3, r0
 2192 0d4a 87F83730 		strb	r3, [r7, #55]
1295:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1296:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     if (errorState != SD_OK)
 2193              		.loc 1 1296 0
 2194 0d4e 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 2195 0d52 002B     		cmp	r3, #0
 2196 0d54 02D0     		beq	.L130
1297:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
1298:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       return errorState;
 2197              		.loc 1 1298 0
 2198 0d56 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 2199 0d5a 49E0     		b	.L138
 2200              	.L130:
1299:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
1300:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1301:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1302:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Send CMD38 ERASE */
1303:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Argument         = 0;
 2201              		.loc 1 1303 0
 2202 0d5c 0023     		movs	r3, #0
 2203 0d5e FB61     		str	r3, [r7, #28]
1304:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CmdIndex         = SD_CMD_ERASE;
 2204              		.loc 1 1304 0
 2205 0d60 2623     		movs	r3, #38
 2206 0d62 3B62     		str	r3, [r7, #32]
1305:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 2207              		.loc 1 1305 0
 2208 0d64 FB68     		ldr	r3, [r7, #12]
 2209 0d66 1A68     		ldr	r2, [r3]
 2210 0d68 07F11C03 		add	r3, r7, #28
 2211 0d6c 1046     		mov	r0, r2
 2212 0d6e 1946     		mov	r1, r3
 2213 0d70 FFF7FEFF 		bl	SDIO_SendCommand
1306:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1307:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check for error conditions */
1308:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = SD_CmdResp1Error(hsd, SD_CMD_ERASE);
 2214              		.loc 1 1308 0
 2215 0d74 F868     		ldr	r0, [r7, #12]
 2216 0d76 2621     		movs	r1, #38
 2217 0d78 01F0CEFA 		bl	SD_CmdResp1Error
 2218 0d7c 0346     		mov	r3, r0
 2219 0d7e 87F83730 		strb	r3, [r7, #55]
1309:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1310:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (errorState != SD_OK)
 2220              		.loc 1 1310 0
 2221 0d82 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 2222 0d86 002B     		cmp	r3, #0
 2223 0d88 02D0     		beq	.L132
1311:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1312:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 2224              		.loc 1 1312 0
 2225 0d8a 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 2226 0d8e 2FE0     		b	.L138
 2227              	.L132:
1313:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1314:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1315:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   for (; delay < maxdelay; delay++)
 2228              		.loc 1 1315 0
 2229 0d90 02E0     		b	.L133
 2230              	.L134:
 2231              		.loc 1 1315 0 is_stmt 0 discriminator 2
 2232 0d92 3B6B     		ldr	r3, [r7, #48]
 2233 0d94 0133     		adds	r3, r3, #1
 2234 0d96 3B63     		str	r3, [r7, #48]
 2235              	.L133:
 2236              		.loc 1 1315 0 discriminator 1
 2237 0d98 BB69     		ldr	r3, [r7, #24]
 2238 0d9a 3A6B     		ldr	r2, [r7, #48]
 2239 0d9c 9A42     		cmp	r2, r3
 2240 0d9e F8D3     		bcc	.L134
1316:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1317:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1318:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1319:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Wait untill the card is in programming state */
1320:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = SD_IsCardProgramming(hsd, &cardstate);
 2241              		.loc 1 1320 0 is_stmt 1
 2242 0da0 07F11703 		add	r3, r7, #23
 2243 0da4 F868     		ldr	r0, [r7, #12]
 2244 0da6 1946     		mov	r1, r3
 2245 0da8 01F056FE 		bl	SD_IsCardProgramming
 2246 0dac 0346     		mov	r3, r0
 2247 0dae 87F83730 		strb	r3, [r7, #55]
1321:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1322:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   delay = SD_DATATIMEOUT;
 2248              		.loc 1 1322 0
 2249 0db2 4FF0FF33 		mov	r3, #-1
 2250 0db6 3B63     		str	r3, [r7, #48]
1323:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1324:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   while ((delay > 0) && (errorState == SD_OK) && ((cardstate == SD_CARD_PROGRAMMING) || (cardstate 
 2251              		.loc 1 1324 0
 2252 0db8 0BE0     		b	.L135
 2253              	.L137:
1325:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1326:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_IsCardProgramming(hsd, &cardstate);
 2254              		.loc 1 1326 0
 2255 0dba 07F11703 		add	r3, r7, #23
 2256 0dbe F868     		ldr	r0, [r7, #12]
 2257 0dc0 1946     		mov	r1, r3
 2258 0dc2 01F049FE 		bl	SD_IsCardProgramming
 2259 0dc6 0346     		mov	r3, r0
 2260 0dc8 87F83730 		strb	r3, [r7, #55]
1327:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     delay--;
 2261              		.loc 1 1327 0
 2262 0dcc 3B6B     		ldr	r3, [r7, #48]
 2263 0dce 013B     		subs	r3, r3, #1
 2264 0dd0 3B63     		str	r3, [r7, #48]
 2265              	.L135:
1324:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 2266              		.loc 1 1324 0 discriminator 1
 2267 0dd2 3B6B     		ldr	r3, [r7, #48]
 2268 0dd4 002B     		cmp	r3, #0
 2269 0dd6 09D0     		beq	.L136
1324:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 2270              		.loc 1 1324 0 is_stmt 0 discriminator 2
 2271 0dd8 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 2272 0ddc 002B     		cmp	r3, #0
 2273 0dde 05D1     		bne	.L136
1324:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 2274              		.loc 1 1324 0 discriminator 1
 2275 0de0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2276 0de2 072B     		cmp	r3, #7
 2277 0de4 E9D0     		beq	.L137
 2278 0de6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2279 0de8 062B     		cmp	r3, #6
 2280 0dea E6D0     		beq	.L137
 2281              	.L136:
1328:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1329:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1330:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 2282              		.loc 1 1330 0 is_stmt 1
 2283 0dec 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 2284              	.L138:
1331:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 2285              		.loc 1 1331 0
 2286 0df0 1846     		mov	r0, r3
 2287 0df2 3837     		adds	r7, r7, #56
 2288 0df4 BD46     		mov	sp, r7
 2289              		@ sp needed
 2290 0df6 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 2291              		.cfi_endproc
 2292              	.LFE65:
 2294 0dfa 00BF     		.align	2
 2295              		.global	HAL_SD_IRQHandler
 2296              		.thumb
 2297              		.thumb_func
 2299              	HAL_SD_IRQHandler:
 2300              	.LFB66:
1332:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1333:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
1334:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  This function handles SD card interrupt request.
1335:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
1336:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval None
1337:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
1338:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** void HAL_SD_IRQHandler(SD_HandleTypeDef *hsd)
1339:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {  
 2301              		.loc 1 1339 0
 2302              		.cfi_startproc
 2303              		@ args = 0, pretend = 0, frame = 8
 2304              		@ frame_needed = 1, uses_anonymous_args = 0
 2305 0dfc 80B5     		push	{r7, lr}
 2306              		.cfi_def_cfa_offset 8
 2307              		.cfi_offset 7, -8
 2308              		.cfi_offset 14, -4
 2309 0dfe 82B0     		sub	sp, sp, #8
 2310              		.cfi_def_cfa_offset 16
 2311 0e00 00AF     		add	r7, sp, #0
 2312              		.cfi_def_cfa_register 7
 2313 0e02 7860     		str	r0, [r7, #4]
1340:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check for SDIO interrupt flags */
1341:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_IT_DATAEND))
 2314              		.loc 1 1341 0
 2315 0e04 7B68     		ldr	r3, [r7, #4]
 2316 0e06 1B68     		ldr	r3, [r3]
 2317 0e08 5B6B     		ldr	r3, [r3, #52]
 2318 0e0a 03F48073 		and	r3, r3, #256
 2319 0e0e 002B     		cmp	r3, #0
 2320 0e10 0ED0     		beq	.L140
1342:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1343:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_IT_DATAEND);  
 2321              		.loc 1 1343 0
 2322 0e12 7B68     		ldr	r3, [r7, #4]
 2323 0e14 1B68     		ldr	r3, [r3]
 2324 0e16 4FF48072 		mov	r2, #256
 2325 0e1a 9A63     		str	r2, [r3, #56]
1344:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
1345:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* SD transfer is complete */
1346:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     hsd->SdTransferCplt = 1;
 2326              		.loc 1 1346 0
 2327 0e1c 7B68     		ldr	r3, [r7, #4]
 2328 0e1e 0122     		movs	r2, #1
 2329 0e20 9A64     		str	r2, [r3, #72]
1347:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1348:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* No transfer error */ 
1349:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     hsd->SdTransferErr  = SD_OK;
 2330              		.loc 1 1349 0
 2331 0e22 7B68     		ldr	r3, [r7, #4]
 2332 0e24 0022     		movs	r2, #0
 2333 0e26 DA64     		str	r2, [r3, #76]
1350:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1351:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     HAL_SD_XferCpltCallback(hsd);  
 2334              		.loc 1 1351 0
 2335 0e28 7868     		ldr	r0, [r7, #4]
 2336 0e2a FFF7FEFF 		bl	HAL_SD_XferCpltCallback
 2337 0e2e 59E0     		b	.L141
 2338              	.L140:
1352:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }  
1353:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_IT_DCRCFAIL))
 2339              		.loc 1 1353 0
 2340 0e30 7B68     		ldr	r3, [r7, #4]
 2341 0e32 1B68     		ldr	r3, [r3]
 2342 0e34 5B6B     		ldr	r3, [r3, #52]
 2343 0e36 03F00203 		and	r3, r3, #2
 2344 0e3a 002B     		cmp	r3, #0
 2345 0e3c 0AD0     		beq	.L142
1354:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1355:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_DCRCFAIL);
 2346              		.loc 1 1355 0
 2347 0e3e 7B68     		ldr	r3, [r7, #4]
 2348 0e40 1B68     		ldr	r3, [r3]
 2349 0e42 0222     		movs	r2, #2
 2350 0e44 9A63     		str	r2, [r3, #56]
1356:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1357:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     hsd->SdTransferErr = SD_DATA_CRC_FAIL;
 2351              		.loc 1 1357 0
 2352 0e46 7B68     		ldr	r3, [r7, #4]
 2353 0e48 0222     		movs	r2, #2
 2354 0e4a DA64     		str	r2, [r3, #76]
1358:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1359:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     HAL_SD_XferErrorCallback(hsd);
 2355              		.loc 1 1359 0
 2356 0e4c 7868     		ldr	r0, [r7, #4]
 2357 0e4e FFF7FEFF 		bl	HAL_SD_XferErrorCallback
 2358 0e52 47E0     		b	.L141
 2359              	.L142:
1360:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1361:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1362:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_IT_DTIMEOUT))
 2360              		.loc 1 1362 0
 2361 0e54 7B68     		ldr	r3, [r7, #4]
 2362 0e56 1B68     		ldr	r3, [r3]
 2363 0e58 5B6B     		ldr	r3, [r3, #52]
 2364 0e5a 03F00803 		and	r3, r3, #8
 2365 0e5e 002B     		cmp	r3, #0
 2366 0e60 0AD0     		beq	.L143
1363:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1364:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_DTIMEOUT);
 2367              		.loc 1 1364 0
 2368 0e62 7B68     		ldr	r3, [r7, #4]
 2369 0e64 1B68     		ldr	r3, [r3]
 2370 0e66 0822     		movs	r2, #8
 2371 0e68 9A63     		str	r2, [r3, #56]
1365:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1366:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     hsd->SdTransferErr = SD_DATA_TIMEOUT;
 2372              		.loc 1 1366 0
 2373 0e6a 7B68     		ldr	r3, [r7, #4]
 2374 0e6c 0422     		movs	r2, #4
 2375 0e6e DA64     		str	r2, [r3, #76]
1367:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1368:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     HAL_SD_XferErrorCallback(hsd);
 2376              		.loc 1 1368 0
 2377 0e70 7868     		ldr	r0, [r7, #4]
 2378 0e72 FFF7FEFF 		bl	HAL_SD_XferErrorCallback
 2379 0e76 35E0     		b	.L141
 2380              	.L143:
1369:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1370:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_IT_RXOVERR))
 2381              		.loc 1 1370 0
 2382 0e78 7B68     		ldr	r3, [r7, #4]
 2383 0e7a 1B68     		ldr	r3, [r3]
 2384 0e7c 5B6B     		ldr	r3, [r3, #52]
 2385 0e7e 03F02003 		and	r3, r3, #32
 2386 0e82 002B     		cmp	r3, #0
 2387 0e84 0AD0     		beq	.L144
1371:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1372:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_RXOVERR);
 2388              		.loc 1 1372 0
 2389 0e86 7B68     		ldr	r3, [r7, #4]
 2390 0e88 1B68     		ldr	r3, [r3]
 2391 0e8a 2022     		movs	r2, #32
 2392 0e8c 9A63     		str	r2, [r3, #56]
1373:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1374:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     hsd->SdTransferErr = SD_RX_OVERRUN;
 2393              		.loc 1 1374 0
 2394 0e8e 7B68     		ldr	r3, [r7, #4]
 2395 0e90 0622     		movs	r2, #6
 2396 0e92 DA64     		str	r2, [r3, #76]
1375:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1376:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     HAL_SD_XferErrorCallback(hsd);
 2397              		.loc 1 1376 0
 2398 0e94 7868     		ldr	r0, [r7, #4]
 2399 0e96 FFF7FEFF 		bl	HAL_SD_XferErrorCallback
 2400 0e9a 23E0     		b	.L141
 2401              	.L144:
1377:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1378:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_IT_TXUNDERR))
 2402              		.loc 1 1378 0
 2403 0e9c 7B68     		ldr	r3, [r7, #4]
 2404 0e9e 1B68     		ldr	r3, [r3]
 2405 0ea0 5B6B     		ldr	r3, [r3, #52]
 2406 0ea2 03F01003 		and	r3, r3, #16
 2407 0ea6 002B     		cmp	r3, #0
 2408 0ea8 0AD0     		beq	.L145
1379:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1380:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_TXUNDERR);
 2409              		.loc 1 1380 0
 2410 0eaa 7B68     		ldr	r3, [r7, #4]
 2411 0eac 1B68     		ldr	r3, [r3]
 2412 0eae 1022     		movs	r2, #16
 2413 0eb0 9A63     		str	r2, [r3, #56]
1381:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1382:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     hsd->SdTransferErr = SD_TX_UNDERRUN;
 2414              		.loc 1 1382 0
 2415 0eb2 7B68     		ldr	r3, [r7, #4]
 2416 0eb4 0522     		movs	r2, #5
 2417 0eb6 DA64     		str	r2, [r3, #76]
1383:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1384:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     HAL_SD_XferErrorCallback(hsd);
 2418              		.loc 1 1384 0
 2419 0eb8 7868     		ldr	r0, [r7, #4]
 2420 0eba FFF7FEFF 		bl	HAL_SD_XferErrorCallback
 2421 0ebe 11E0     		b	.L141
 2422              	.L145:
1385:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1386:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_IT_STBITERR))
 2423              		.loc 1 1386 0
 2424 0ec0 7B68     		ldr	r3, [r7, #4]
 2425 0ec2 1B68     		ldr	r3, [r3]
 2426 0ec4 5B6B     		ldr	r3, [r3, #52]
 2427 0ec6 03F40073 		and	r3, r3, #512
 2428 0eca 002B     		cmp	r3, #0
 2429 0ecc 0AD0     		beq	.L141
1387:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1388:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_STBITERR);
 2430              		.loc 1 1388 0
 2431 0ece 7B68     		ldr	r3, [r7, #4]
 2432 0ed0 1B68     		ldr	r3, [r3]
 2433 0ed2 4FF40072 		mov	r2, #512
 2434 0ed6 9A63     		str	r2, [r3, #56]
1389:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1390:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     hsd->SdTransferErr = SD_START_BIT_ERR;
 2435              		.loc 1 1390 0
 2436 0ed8 7B68     		ldr	r3, [r7, #4]
 2437 0eda 0722     		movs	r2, #7
 2438 0edc DA64     		str	r2, [r3, #76]
1391:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1392:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     HAL_SD_XferErrorCallback(hsd);
 2439              		.loc 1 1392 0
 2440 0ede 7868     		ldr	r0, [r7, #4]
 2441 0ee0 FFF7FEFF 		bl	HAL_SD_XferErrorCallback
 2442              	.L141:
1393:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1394:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1395:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Disable all SDIO peripheral interrupt sources */
1396:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   __HAL_SD_SDIO_DISABLE_IT(hsd, SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_DATAEND  |\
 2443              		.loc 1 1396 0
 2444 0ee4 7B68     		ldr	r3, [r7, #4]
 2445 0ee6 1A68     		ldr	r2, [r3]
 2446 0ee8 7B68     		ldr	r3, [r7, #4]
 2447 0eea 1B68     		ldr	r3, [r3]
 2448 0eec DB6B     		ldr	r3, [r3, #60]
 2449 0eee 23F44343 		bic	r3, r3, #49920
 2450 0ef2 23F03A03 		bic	r3, r3, #58
 2451 0ef6 D363     		str	r3, [r2, #60]
1397:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****                                 SDIO_IT_TXFIFOHE | SDIO_IT_RXFIFOHF | SDIO_IT_TXUNDERR |\
1398:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****                                 SDIO_IT_RXOVERR  | SDIO_IT_STBITERR);                              
1399:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 2452              		.loc 1 1399 0
 2453 0ef8 0837     		adds	r7, r7, #8
 2454 0efa BD46     		mov	sp, r7
 2455              		@ sp needed
 2456 0efc 80BD     		pop	{r7, pc}
 2457              		.cfi_endproc
 2458              	.LFE66:
 2460 0efe 00BF     		.align	2
 2461              		.weak	HAL_SD_XferCpltCallback
 2462              		.thumb
 2463              		.thumb_func
 2465              	HAL_SD_XferCpltCallback:
 2466              	.LFB67:
1400:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1401:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1402:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
1403:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  SD end of transfer callback.
1404:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle 
1405:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval None
1406:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
1407:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** __weak void HAL_SD_XferCpltCallback(SD_HandleTypeDef *hsd)
1408:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 2467              		.loc 1 1408 0
 2468              		.cfi_startproc
 2469              		@ args = 0, pretend = 0, frame = 8
 2470              		@ frame_needed = 1, uses_anonymous_args = 0
 2471              		@ link register save eliminated.
 2472 0f00 80B4     		push	{r7}
 2473              		.cfi_def_cfa_offset 4
 2474              		.cfi_offset 7, -4
 2475 0f02 83B0     		sub	sp, sp, #12
 2476              		.cfi_def_cfa_offset 16
 2477 0f04 00AF     		add	r7, sp, #0
 2478              		.cfi_def_cfa_register 7
 2479 0f06 7860     		str	r0, [r7, #4]
1409:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1410:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****             the HAL_SD_XferCpltCallback could be implemented in the user file
1411:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****    */ 
1412:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 2480              		.loc 1 1412 0
 2481 0f08 0C37     		adds	r7, r7, #12
 2482 0f0a BD46     		mov	sp, r7
 2483              		@ sp needed
 2484 0f0c 5DF8047B 		ldr	r7, [sp], #4
 2485 0f10 7047     		bx	lr
 2486              		.cfi_endproc
 2487              	.LFE67:
 2489 0f12 00BF     		.align	2
 2490              		.weak	HAL_SD_XferErrorCallback
 2491              		.thumb
 2492              		.thumb_func
 2494              	HAL_SD_XferErrorCallback:
 2495              	.LFB68:
1413:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1414:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
1415:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  SD Transfer Error callback.
1416:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
1417:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval None
1418:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
1419:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** __weak void HAL_SD_XferErrorCallback(SD_HandleTypeDef *hsd)
1420:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 2496              		.loc 1 1420 0
 2497              		.cfi_startproc
 2498              		@ args = 0, pretend = 0, frame = 8
 2499              		@ frame_needed = 1, uses_anonymous_args = 0
 2500              		@ link register save eliminated.
 2501 0f14 80B4     		push	{r7}
 2502              		.cfi_def_cfa_offset 4
 2503              		.cfi_offset 7, -4
 2504 0f16 83B0     		sub	sp, sp, #12
 2505              		.cfi_def_cfa_offset 16
 2506 0f18 00AF     		add	r7, sp, #0
 2507              		.cfi_def_cfa_register 7
 2508 0f1a 7860     		str	r0, [r7, #4]
1421:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1422:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****             the HAL_SD_XferErrorCallback could be implemented in the user file
1423:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****    */ 
1424:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 2509              		.loc 1 1424 0
 2510 0f1c 0C37     		adds	r7, r7, #12
 2511 0f1e BD46     		mov	sp, r7
 2512              		@ sp needed
 2513 0f20 5DF8047B 		ldr	r7, [sp], #4
 2514 0f24 7047     		bx	lr
 2515              		.cfi_endproc
 2516              	.LFE68:
 2518 0f26 00BF     		.align	2
 2519              		.weak	HAL_SD_DMA_RxCpltCallback
 2520              		.thumb
 2521              		.thumb_func
 2523              	HAL_SD_DMA_RxCpltCallback:
 2524              	.LFB69:
1425:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1426:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
1427:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  SD Transfer complete Rx callback in non blocking mode.
1428:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hdma: DMA handle 
1429:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval None
1430:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
1431:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** __weak void HAL_SD_DMA_RxCpltCallback(DMA_HandleTypeDef *hdma)
1432:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 2525              		.loc 1 1432 0
 2526              		.cfi_startproc
 2527              		@ args = 0, pretend = 0, frame = 8
 2528              		@ frame_needed = 1, uses_anonymous_args = 0
 2529              		@ link register save eliminated.
 2530 0f28 80B4     		push	{r7}
 2531              		.cfi_def_cfa_offset 4
 2532              		.cfi_offset 7, -4
 2533 0f2a 83B0     		sub	sp, sp, #12
 2534              		.cfi_def_cfa_offset 16
 2535 0f2c 00AF     		add	r7, sp, #0
 2536              		.cfi_def_cfa_register 7
 2537 0f2e 7860     		str	r0, [r7, #4]
1433:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1434:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****             the HAL_SD_DMA_RxCpltCallback could be implemented in the user file
1435:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****    */ 
1436:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }  
 2538              		.loc 1 1436 0
 2539 0f30 0C37     		adds	r7, r7, #12
 2540 0f32 BD46     		mov	sp, r7
 2541              		@ sp needed
 2542 0f34 5DF8047B 		ldr	r7, [sp], #4
 2543 0f38 7047     		bx	lr
 2544              		.cfi_endproc
 2545              	.LFE69:
 2547 0f3a 00BF     		.align	2
 2548              		.weak	HAL_SD_DMA_RxErrorCallback
 2549              		.thumb
 2550              		.thumb_func
 2552              	HAL_SD_DMA_RxErrorCallback:
 2553              	.LFB70:
1437:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1438:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
1439:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  SD DMA transfer complete Rx error callback.
1440:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hdma: DMA handle 
1441:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval None
1442:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
1443:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** __weak void HAL_SD_DMA_RxErrorCallback(DMA_HandleTypeDef *hdma)
1444:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 2554              		.loc 1 1444 0
 2555              		.cfi_startproc
 2556              		@ args = 0, pretend = 0, frame = 8
 2557              		@ frame_needed = 1, uses_anonymous_args = 0
 2558              		@ link register save eliminated.
 2559 0f3c 80B4     		push	{r7}
 2560              		.cfi_def_cfa_offset 4
 2561              		.cfi_offset 7, -4
 2562 0f3e 83B0     		sub	sp, sp, #12
 2563              		.cfi_def_cfa_offset 16
 2564 0f40 00AF     		add	r7, sp, #0
 2565              		.cfi_def_cfa_register 7
 2566 0f42 7860     		str	r0, [r7, #4]
1445:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1446:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****             the HAL_SD_DMA_RxErrorCallback could be implemented in the user file
1447:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****    */ 
1448:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 2567              		.loc 1 1448 0
 2568 0f44 0C37     		adds	r7, r7, #12
 2569 0f46 BD46     		mov	sp, r7
 2570              		@ sp needed
 2571 0f48 5DF8047B 		ldr	r7, [sp], #4
 2572 0f4c 7047     		bx	lr
 2573              		.cfi_endproc
 2574              	.LFE70:
 2576 0f4e 00BF     		.align	2
 2577              		.weak	HAL_SD_DMA_TxCpltCallback
 2578              		.thumb
 2579              		.thumb_func
 2581              	HAL_SD_DMA_TxCpltCallback:
 2582              	.LFB71:
1449:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1450:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
1451:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  SD Transfer complete Tx callback in non blocking mode.
1452:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hdma: DMA handle 
1453:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval None
1454:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
1455:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** __weak void HAL_SD_DMA_TxCpltCallback(DMA_HandleTypeDef *hdma)
1456:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 2583              		.loc 1 1456 0
 2584              		.cfi_startproc
 2585              		@ args = 0, pretend = 0, frame = 8
 2586              		@ frame_needed = 1, uses_anonymous_args = 0
 2587              		@ link register save eliminated.
 2588 0f50 80B4     		push	{r7}
 2589              		.cfi_def_cfa_offset 4
 2590              		.cfi_offset 7, -4
 2591 0f52 83B0     		sub	sp, sp, #12
 2592              		.cfi_def_cfa_offset 16
 2593 0f54 00AF     		add	r7, sp, #0
 2594              		.cfi_def_cfa_register 7
 2595 0f56 7860     		str	r0, [r7, #4]
1457:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1458:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****             the HAL_SD_DMA_TxCpltCallback could be implemented in the user file
1459:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****    */ 
1460:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }  
 2596              		.loc 1 1460 0
 2597 0f58 0C37     		adds	r7, r7, #12
 2598 0f5a BD46     		mov	sp, r7
 2599              		@ sp needed
 2600 0f5c 5DF8047B 		ldr	r7, [sp], #4
 2601 0f60 7047     		bx	lr
 2602              		.cfi_endproc
 2603              	.LFE71:
 2605 0f62 00BF     		.align	2
 2606              		.weak	HAL_SD_DMA_TxErrorCallback
 2607              		.thumb
 2608              		.thumb_func
 2610              	HAL_SD_DMA_TxErrorCallback:
 2611              	.LFB72:
1461:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1462:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
1463:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  SD DMA transfer complete error Tx callback.
1464:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hdma: DMA handle 
1465:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval None
1466:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
1467:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** __weak void HAL_SD_DMA_TxErrorCallback(DMA_HandleTypeDef *hdma)
1468:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 2612              		.loc 1 1468 0
 2613              		.cfi_startproc
 2614              		@ args = 0, pretend = 0, frame = 8
 2615              		@ frame_needed = 1, uses_anonymous_args = 0
 2616              		@ link register save eliminated.
 2617 0f64 80B4     		push	{r7}
 2618              		.cfi_def_cfa_offset 4
 2619              		.cfi_offset 7, -4
 2620 0f66 83B0     		sub	sp, sp, #12
 2621              		.cfi_def_cfa_offset 16
 2622 0f68 00AF     		add	r7, sp, #0
 2623              		.cfi_def_cfa_register 7
 2624 0f6a 7860     		str	r0, [r7, #4]
1469:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1470:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****             the HAL_SD_DMA_TxErrorCallback could be implemented in the user file
1471:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****    */ 
1472:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 2625              		.loc 1 1472 0
 2626 0f6c 0C37     		adds	r7, r7, #12
 2627 0f6e BD46     		mov	sp, r7
 2628              		@ sp needed
 2629 0f70 5DF8047B 		ldr	r7, [sp], #4
 2630 0f74 7047     		bx	lr
 2631              		.cfi_endproc
 2632              	.LFE72:
 2634 0f76 00BF     		.align	2
 2635              		.global	HAL_SD_Get_CardInfo
 2636              		.thumb
 2637              		.thumb_func
 2639              	HAL_SD_Get_CardInfo:
 2640              	.LFB73:
1473:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1474:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
1475:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @}
1476:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
1477:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1478:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /** @defgroup SD_Group3 Peripheral Control functions 
1479:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****  *  @brief   management functions 
1480:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****  *
1481:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** @verbatim   
1482:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   ==============================================================================
1483:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****                       ##### Peripheral Control functions #####
1484:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   ==============================================================================  
1485:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   [..]
1486:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     This subsection provides a set of functions allowing to control the SD card 
1487:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     operations.
1488:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1489:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** @endverbatim
1490:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @{
1491:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
1492:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1493:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
1494:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Returns information about specific card.
1495:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
1496:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  pCardInfo: Pointer to a HAL_SD_CardInfoTypedef structure that  
1497:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         contains all SD cardinformation  
1498:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
1499:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
1500:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** HAL_SD_ErrorTypedef HAL_SD_Get_CardInfo(SD_HandleTypeDef *hsd, HAL_SD_CardInfoTypedef *pCardInfo)
1501:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 2641              		.loc 1 1501 0
 2642              		.cfi_startproc
 2643              		@ args = 0, pretend = 0, frame = 16
 2644              		@ frame_needed = 1, uses_anonymous_args = 0
 2645              		@ link register save eliminated.
 2646 0f78 B0B4     		push	{r4, r5, r7}
 2647              		.cfi_def_cfa_offset 12
 2648              		.cfi_offset 4, -12
 2649              		.cfi_offset 5, -8
 2650              		.cfi_offset 7, -4
 2651 0f7a 85B0     		sub	sp, sp, #20
 2652              		.cfi_def_cfa_offset 32
 2653 0f7c 00AF     		add	r7, sp, #0
 2654              		.cfi_def_cfa_register 7
 2655 0f7e 7860     		str	r0, [r7, #4]
 2656 0f80 3960     		str	r1, [r7]
1502:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 2657              		.loc 1 1502 0
 2658 0f82 0023     		movs	r3, #0
 2659 0f84 FB72     		strb	r3, [r7, #11]
1503:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t tmp = 0;
 2660              		.loc 1 1503 0
 2661 0f86 0023     		movs	r3, #0
 2662 0f88 FB60     		str	r3, [r7, #12]
1504:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1505:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->CardType = (uint8_t)(hsd->CardType);
 2663              		.loc 1 1505 0
 2664 0f8a 7B68     		ldr	r3, [r7, #4]
 2665 0f8c 1B6A     		ldr	r3, [r3, #32]
 2666 0f8e DAB2     		uxtb	r2, r3
 2667 0f90 3B68     		ldr	r3, [r7]
 2668 0f92 83F85620 		strb	r2, [r3, #86]
1506:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->RCA      = (uint16_t)(hsd->RCA);
 2669              		.loc 1 1506 0
 2670 0f96 7B68     		ldr	r3, [r7, #4]
 2671 0f98 5B6A     		ldr	r3, [r3, #36]
 2672 0f9a 9AB2     		uxth	r2, r3
 2673 0f9c 3B68     		ldr	r3, [r7]
 2674 0f9e A3F85420 		strh	r2, [r3, #84]	@ movhi
1507:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1508:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 0 */
1509:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (hsd->CSD[0] & 0xFF000000) >> 24;
 2675              		.loc 1 1509 0
 2676 0fa2 7B68     		ldr	r3, [r7, #4]
 2677 0fa4 9B6A     		ldr	r3, [r3, #40]
 2678 0fa6 1B0E     		lsrs	r3, r3, #24
 2679 0fa8 FB60     		str	r3, [r7, #12]
1510:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.CSDStruct      = (uint8_t)((tmp & 0xC0) >> 6);
 2680              		.loc 1 1510 0
 2681 0faa FB68     		ldr	r3, [r7, #12]
 2682 0fac 03F0C003 		and	r3, r3, #192
 2683 0fb0 9B09     		lsrs	r3, r3, #6
 2684 0fb2 DAB2     		uxtb	r2, r3
 2685 0fb4 3B68     		ldr	r3, [r7]
 2686 0fb6 1A70     		strb	r2, [r3]
1511:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.SysSpecVersion = (uint8_t)((tmp & 0x3C) >> 2);
 2687              		.loc 1 1511 0
 2688 0fb8 FB68     		ldr	r3, [r7, #12]
 2689 0fba 03F03C03 		and	r3, r3, #60
 2690 0fbe 9B08     		lsrs	r3, r3, #2
 2691 0fc0 DAB2     		uxtb	r2, r3
 2692 0fc2 3B68     		ldr	r3, [r7]
 2693 0fc4 5A70     		strb	r2, [r3, #1]
1512:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.Reserved1      = tmp & 0x03;
 2694              		.loc 1 1512 0
 2695 0fc6 FB68     		ldr	r3, [r7, #12]
 2696 0fc8 DBB2     		uxtb	r3, r3
 2697 0fca 03F00303 		and	r3, r3, #3
 2698 0fce DAB2     		uxtb	r2, r3
 2699 0fd0 3B68     		ldr	r3, [r7]
 2700 0fd2 9A70     		strb	r2, [r3, #2]
1513:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1514:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 1 */
1515:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (hsd->CSD[0] & 0x00FF0000) >> 16;
 2701              		.loc 1 1515 0
 2702 0fd4 7B68     		ldr	r3, [r7, #4]
 2703 0fd6 9B6A     		ldr	r3, [r3, #40]
 2704 0fd8 03F47F03 		and	r3, r3, #16711680
 2705 0fdc 1B0C     		lsrs	r3, r3, #16
 2706 0fde FB60     		str	r3, [r7, #12]
1516:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.TAAC = (uint8_t)tmp;
 2707              		.loc 1 1516 0
 2708 0fe0 FB68     		ldr	r3, [r7, #12]
 2709 0fe2 DAB2     		uxtb	r2, r3
 2710 0fe4 3B68     		ldr	r3, [r7]
 2711 0fe6 DA70     		strb	r2, [r3, #3]
1517:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1518:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 2 */
1519:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (hsd->CSD[0] & 0x0000FF00) >> 8;
 2712              		.loc 1 1519 0
 2713 0fe8 7B68     		ldr	r3, [r7, #4]
 2714 0fea 9B6A     		ldr	r3, [r3, #40]
 2715 0fec 03F47F43 		and	r3, r3, #65280
 2716 0ff0 1B0A     		lsrs	r3, r3, #8
 2717 0ff2 FB60     		str	r3, [r7, #12]
1520:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.NSAC = (uint8_t)tmp;
 2718              		.loc 1 1520 0
 2719 0ff4 FB68     		ldr	r3, [r7, #12]
 2720 0ff6 DAB2     		uxtb	r2, r3
 2721 0ff8 3B68     		ldr	r3, [r7]
 2722 0ffa 1A71     		strb	r2, [r3, #4]
1521:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1522:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 3 */
1523:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = hsd->CSD[0] & 0x000000FF;
 2723              		.loc 1 1523 0
 2724 0ffc 7B68     		ldr	r3, [r7, #4]
 2725 0ffe 9B6A     		ldr	r3, [r3, #40]
 2726 1000 DBB2     		uxtb	r3, r3
 2727 1002 FB60     		str	r3, [r7, #12]
1524:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.MaxBusClkFrec = (uint8_t)tmp;
 2728              		.loc 1 1524 0
 2729 1004 FB68     		ldr	r3, [r7, #12]
 2730 1006 DAB2     		uxtb	r2, r3
 2731 1008 3B68     		ldr	r3, [r7]
 2732 100a 5A71     		strb	r2, [r3, #5]
1525:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1526:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 4 */
1527:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (hsd->CSD[1] & 0xFF000000) >> 24;
 2733              		.loc 1 1527 0
 2734 100c 7B68     		ldr	r3, [r7, #4]
 2735 100e DB6A     		ldr	r3, [r3, #44]
 2736 1010 1B0E     		lsrs	r3, r3, #24
 2737 1012 FB60     		str	r3, [r7, #12]
1528:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.CardComdClasses = (uint16_t)(tmp << 4);
 2738              		.loc 1 1528 0
 2739 1014 FB68     		ldr	r3, [r7, #12]
 2740 1016 9BB2     		uxth	r3, r3
 2741 1018 1B01     		lsls	r3, r3, #4
 2742 101a 9AB2     		uxth	r2, r3
 2743 101c 3B68     		ldr	r3, [r7]
 2744 101e DA80     		strh	r2, [r3, #6]	@ movhi
1529:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1530:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 5 */
1531:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (hsd->CSD[1] & 0x00FF0000) >> 16;
 2745              		.loc 1 1531 0
 2746 1020 7B68     		ldr	r3, [r7, #4]
 2747 1022 DB6A     		ldr	r3, [r3, #44]
 2748 1024 03F47F03 		and	r3, r3, #16711680
 2749 1028 1B0C     		lsrs	r3, r3, #16
 2750 102a FB60     		str	r3, [r7, #12]
1532:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.CardComdClasses |= (uint16_t)((tmp & 0xF0) >> 4);
 2751              		.loc 1 1532 0
 2752 102c 3B68     		ldr	r3, [r7]
 2753 102e DB88     		ldrh	r3, [r3, #6]	@ movhi
 2754 1030 9AB2     		uxth	r2, r3
 2755 1032 FB68     		ldr	r3, [r7, #12]
 2756 1034 03F0F003 		and	r3, r3, #240
 2757 1038 1B09     		lsrs	r3, r3, #4
 2758 103a 9BB2     		uxth	r3, r3
 2759 103c 1343     		orrs	r3, r3, r2
 2760 103e 9AB2     		uxth	r2, r3
 2761 1040 3B68     		ldr	r3, [r7]
 2762 1042 DA80     		strh	r2, [r3, #6]	@ movhi
1533:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.RdBlockLen       = (uint8_t)(tmp & 0x0F);
 2763              		.loc 1 1533 0
 2764 1044 FB68     		ldr	r3, [r7, #12]
 2765 1046 DBB2     		uxtb	r3, r3
 2766 1048 03F00F03 		and	r3, r3, #15
 2767 104c DAB2     		uxtb	r2, r3
 2768 104e 3B68     		ldr	r3, [r7]
 2769 1050 1A72     		strb	r2, [r3, #8]
1534:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1535:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 6 */
1536:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (hsd->CSD[1] & 0x0000FF00) >> 8;
 2770              		.loc 1 1536 0
 2771 1052 7B68     		ldr	r3, [r7, #4]
 2772 1054 DB6A     		ldr	r3, [r3, #44]
 2773 1056 03F47F43 		and	r3, r3, #65280
 2774 105a 1B0A     		lsrs	r3, r3, #8
 2775 105c FB60     		str	r3, [r7, #12]
1537:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.PartBlockRead   = (uint8_t)((tmp & 0x80) >> 7);
 2776              		.loc 1 1537 0
 2777 105e FB68     		ldr	r3, [r7, #12]
 2778 1060 03F08003 		and	r3, r3, #128
 2779 1064 DB09     		lsrs	r3, r3, #7
 2780 1066 DAB2     		uxtb	r2, r3
 2781 1068 3B68     		ldr	r3, [r7]
 2782 106a 5A72     		strb	r2, [r3, #9]
1538:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.WrBlockMisalign = (uint8_t)((tmp & 0x40) >> 6);
 2783              		.loc 1 1538 0
 2784 106c FB68     		ldr	r3, [r7, #12]
 2785 106e 03F04003 		and	r3, r3, #64
 2786 1072 9B09     		lsrs	r3, r3, #6
 2787 1074 DAB2     		uxtb	r2, r3
 2788 1076 3B68     		ldr	r3, [r7]
 2789 1078 9A72     		strb	r2, [r3, #10]
1539:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.RdBlockMisalign = (uint8_t)((tmp & 0x20) >> 5);
 2790              		.loc 1 1539 0
 2791 107a FB68     		ldr	r3, [r7, #12]
 2792 107c 03F02003 		and	r3, r3, #32
 2793 1080 5B09     		lsrs	r3, r3, #5
 2794 1082 DAB2     		uxtb	r2, r3
 2795 1084 3B68     		ldr	r3, [r7]
 2796 1086 DA72     		strb	r2, [r3, #11]
1540:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.DSRImpl         = (uint8_t)((tmp & 0x10) >> 4);
 2797              		.loc 1 1540 0
 2798 1088 FB68     		ldr	r3, [r7, #12]
 2799 108a 03F01003 		and	r3, r3, #16
 2800 108e 1B09     		lsrs	r3, r3, #4
 2801 1090 DAB2     		uxtb	r2, r3
 2802 1092 3B68     		ldr	r3, [r7]
 2803 1094 1A73     		strb	r2, [r3, #12]
1541:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.Reserved2       = 0; /*!< Reserved */
 2804              		.loc 1 1541 0
 2805 1096 3B68     		ldr	r3, [r7]
 2806 1098 0022     		movs	r2, #0
 2807 109a 5A73     		strb	r2, [r3, #13]
1542:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1543:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if ((hsd->CardType == STD_CAPACITY_SD_CARD_V1_1) || (hsd->CardType == STD_CAPACITY_SD_CARD_V2_0))
 2808              		.loc 1 1543 0
 2809 109c 7B68     		ldr	r3, [r7, #4]
 2810 109e 1B6A     		ldr	r3, [r3, #32]
 2811 10a0 002B     		cmp	r3, #0
 2812 10a2 04D0     		beq	.L153
 2813              		.loc 1 1543 0 is_stmt 0 discriminator 1
 2814 10a4 7B68     		ldr	r3, [r7, #4]
 2815 10a6 1B6A     		ldr	r3, [r3, #32]
 2816 10a8 012B     		cmp	r3, #1
 2817 10aa 40F09E80 		bne	.L154
 2818              	.L153:
1544:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1545:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     pCardInfo->SD_csd.DeviceSize = (tmp & 0x03) << 10;
 2819              		.loc 1 1545 0 is_stmt 1
 2820 10ae FB68     		ldr	r3, [r7, #12]
 2821 10b0 03F00303 		and	r3, r3, #3
 2822 10b4 9A02     		lsls	r2, r3, #10
 2823 10b6 3B68     		ldr	r3, [r7]
 2824 10b8 1A61     		str	r2, [r3, #16]
1546:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1547:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Byte 7 */
1548:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     tmp = (uint8_t)(hsd->CSD[1] & 0x000000FF);
 2825              		.loc 1 1548 0
 2826 10ba 7B68     		ldr	r3, [r7, #4]
 2827 10bc DB6A     		ldr	r3, [r3, #44]
 2828 10be DBB2     		uxtb	r3, r3
 2829 10c0 FB60     		str	r3, [r7, #12]
1549:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     pCardInfo->SD_csd.DeviceSize |= (tmp) << 2;
 2830              		.loc 1 1549 0
 2831 10c2 3B68     		ldr	r3, [r7]
 2832 10c4 1A69     		ldr	r2, [r3, #16]
 2833 10c6 FB68     		ldr	r3, [r7, #12]
 2834 10c8 9B00     		lsls	r3, r3, #2
 2835 10ca 1A43     		orrs	r2, r2, r3
 2836 10cc 3B68     		ldr	r3, [r7]
 2837 10ce 1A61     		str	r2, [r3, #16]
1550:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1551:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Byte 8 */
1552:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     tmp = (uint8_t)((hsd->CSD[2] & 0xFF000000) >> 24);
 2838              		.loc 1 1552 0
 2839 10d0 7B68     		ldr	r3, [r7, #4]
 2840 10d2 1B6B     		ldr	r3, [r3, #48]
 2841 10d4 1B0E     		lsrs	r3, r3, #24
 2842 10d6 DBB2     		uxtb	r3, r3
 2843 10d8 FB60     		str	r3, [r7, #12]
1553:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     pCardInfo->SD_csd.DeviceSize |= (tmp & 0xC0) >> 6;
 2844              		.loc 1 1553 0
 2845 10da 3B68     		ldr	r3, [r7]
 2846 10dc 1A69     		ldr	r2, [r3, #16]
 2847 10de FB68     		ldr	r3, [r7, #12]
 2848 10e0 03F0C003 		and	r3, r3, #192
 2849 10e4 9B09     		lsrs	r3, r3, #6
 2850 10e6 1A43     		orrs	r2, r2, r3
 2851 10e8 3B68     		ldr	r3, [r7]
 2852 10ea 1A61     		str	r2, [r3, #16]
1554:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1555:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     pCardInfo->SD_csd.MaxRdCurrentVDDMin = (tmp & 0x38) >> 3;
 2853              		.loc 1 1555 0
 2854 10ec FB68     		ldr	r3, [r7, #12]
 2855 10ee 03F03803 		and	r3, r3, #56
 2856 10f2 DB08     		lsrs	r3, r3, #3
 2857 10f4 DAB2     		uxtb	r2, r3
 2858 10f6 3B68     		ldr	r3, [r7]
 2859 10f8 1A75     		strb	r2, [r3, #20]
1556:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     pCardInfo->SD_csd.MaxRdCurrentVDDMax = (tmp & 0x07);
 2860              		.loc 1 1556 0
 2861 10fa FB68     		ldr	r3, [r7, #12]
 2862 10fc DBB2     		uxtb	r3, r3
 2863 10fe 03F00703 		and	r3, r3, #7
 2864 1102 DAB2     		uxtb	r2, r3
 2865 1104 3B68     		ldr	r3, [r7]
 2866 1106 5A75     		strb	r2, [r3, #21]
1557:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1558:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Byte 9 */
1559:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     tmp = (uint8_t)((hsd->CSD[2] & 0x00FF0000) >> 16);
 2867              		.loc 1 1559 0
 2868 1108 7B68     		ldr	r3, [r7, #4]
 2869 110a 1B6B     		ldr	r3, [r3, #48]
 2870 110c 03F47F03 		and	r3, r3, #16711680
 2871 1110 1B0C     		lsrs	r3, r3, #16
 2872 1112 DBB2     		uxtb	r3, r3
 2873 1114 FB60     		str	r3, [r7, #12]
1560:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     pCardInfo->SD_csd.MaxWrCurrentVDDMin = (tmp & 0xE0) >> 5;
 2874              		.loc 1 1560 0
 2875 1116 FB68     		ldr	r3, [r7, #12]
 2876 1118 03F0E003 		and	r3, r3, #224
 2877 111c 5B09     		lsrs	r3, r3, #5
 2878 111e DAB2     		uxtb	r2, r3
 2879 1120 3B68     		ldr	r3, [r7]
 2880 1122 9A75     		strb	r2, [r3, #22]
1561:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     pCardInfo->SD_csd.MaxWrCurrentVDDMax = (tmp & 0x1C) >> 2;
 2881              		.loc 1 1561 0
 2882 1124 FB68     		ldr	r3, [r7, #12]
 2883 1126 03F01C03 		and	r3, r3, #28
 2884 112a 9B08     		lsrs	r3, r3, #2
 2885 112c DAB2     		uxtb	r2, r3
 2886 112e 3B68     		ldr	r3, [r7]
 2887 1130 DA75     		strb	r2, [r3, #23]
1562:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     pCardInfo->SD_csd.DeviceSizeMul      = (tmp & 0x03) << 1;
 2888              		.loc 1 1562 0
 2889 1132 FB68     		ldr	r3, [r7, #12]
 2890 1134 DBB2     		uxtb	r3, r3
 2891 1136 03F00303 		and	r3, r3, #3
 2892 113a DBB2     		uxtb	r3, r3
 2893 113c 5B00     		lsls	r3, r3, #1
 2894 113e DAB2     		uxtb	r2, r3
 2895 1140 3B68     		ldr	r3, [r7]
 2896 1142 1A76     		strb	r2, [r3, #24]
1563:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Byte 10 */
1564:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     tmp = (uint8_t)((hsd->CSD[2] & 0x0000FF00) >> 8);
 2897              		.loc 1 1564 0
 2898 1144 7B68     		ldr	r3, [r7, #4]
 2899 1146 1B6B     		ldr	r3, [r3, #48]
 2900 1148 03F47F43 		and	r3, r3, #65280
 2901 114c 1B0A     		lsrs	r3, r3, #8
 2902 114e DBB2     		uxtb	r3, r3
 2903 1150 FB60     		str	r3, [r7, #12]
1565:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     pCardInfo->SD_csd.DeviceSizeMul |= (tmp & 0x80) >> 7;
 2904              		.loc 1 1565 0
 2905 1152 3B68     		ldr	r3, [r7]
 2906 1154 1B7E     		ldrb	r3, [r3, #24]
 2907 1156 DAB2     		uxtb	r2, r3
 2908 1158 FB68     		ldr	r3, [r7, #12]
 2909 115a 03F08003 		and	r3, r3, #128
 2910 115e DB09     		lsrs	r3, r3, #7
 2911 1160 DBB2     		uxtb	r3, r3
 2912 1162 1343     		orrs	r3, r3, r2
 2913 1164 DAB2     		uxtb	r2, r3
 2914 1166 3B68     		ldr	r3, [r7]
 2915 1168 1A76     		strb	r2, [r3, #24]
1566:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1567:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     pCardInfo->CardCapacity  = (pCardInfo->SD_csd.DeviceSize + 1) ;
 2916              		.loc 1 1567 0
 2917 116a 3B68     		ldr	r3, [r7]
 2918 116c 1B69     		ldr	r3, [r3, #16]
 2919 116e 0133     		adds	r3, r3, #1
 2920 1170 1A46     		mov	r2, r3
 2921 1172 4FF00003 		mov	r3, #0
 2922 1176 3968     		ldr	r1, [r7]
 2923 1178 C1E91223 		strd	r2, [r1, #72]
1568:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     pCardInfo->CardCapacity *= (1 << (pCardInfo->SD_csd.DeviceSizeMul + 2));
 2924              		.loc 1 1568 0
 2925 117c 3B68     		ldr	r3, [r7]
 2926 117e D3E91201 		ldrd	r0, [r3, #72]
 2927 1182 3B68     		ldr	r3, [r7]
 2928 1184 1B7E     		ldrb	r3, [r3, #24]
 2929 1186 DBB2     		uxtb	r3, r3
 2930 1188 0233     		adds	r3, r3, #2
 2931 118a 0122     		movs	r2, #1
 2932 118c 02FA03F3 		lsl	r3, r2, r3
 2933 1190 1A46     		mov	r2, r3
 2934 1192 4FEAE273 		asr	r3, r2, #31
 2935 1196 02FB01F5 		mul	r5, r2, r1
 2936 119a 00FB03F4 		mul	r4, r0, r3
 2937 119e 2C44     		add	r4, r4, r5
 2938 11a0 A0FB0223 		umull	r2, r3, r0, r2
 2939 11a4 E118     		adds	r1, r4, r3
 2940 11a6 0B46     		mov	r3, r1
 2941 11a8 3968     		ldr	r1, [r7]
 2942 11aa C1E91223 		strd	r2, [r1, #72]
1569:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     pCardInfo->CardBlockSize = 1 << (pCardInfo->SD_csd.RdBlockLen);
 2943              		.loc 1 1569 0
 2944 11ae 3B68     		ldr	r3, [r7]
 2945 11b0 1B7A     		ldrb	r3, [r3, #8]
 2946 11b2 DBB2     		uxtb	r3, r3
 2947 11b4 0122     		movs	r2, #1
 2948 11b6 02FA03F3 		lsl	r3, r2, r3
 2949 11ba 1A46     		mov	r2, r3
 2950 11bc 3B68     		ldr	r3, [r7]
 2951 11be 1A65     		str	r2, [r3, #80]
1570:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     pCardInfo->CardCapacity *= pCardInfo->CardBlockSize;
 2952              		.loc 1 1570 0
 2953 11c0 3B68     		ldr	r3, [r7]
 2954 11c2 D3E91201 		ldrd	r0, [r3, #72]
 2955 11c6 3B68     		ldr	r3, [r7]
 2956 11c8 1B6D     		ldr	r3, [r3, #80]
 2957 11ca 1A46     		mov	r2, r3
 2958 11cc 4FF00003 		mov	r3, #0
 2959 11d0 02FB01F5 		mul	r5, r2, r1
 2960 11d4 00FB03F4 		mul	r4, r0, r3
 2961 11d8 2C44     		add	r4, r4, r5
 2962 11da A0FB0223 		umull	r2, r3, r0, r2
 2963 11de E118     		adds	r1, r4, r3
 2964 11e0 0B46     		mov	r3, r1
 2965 11e2 3968     		ldr	r1, [r7]
 2966 11e4 C1E91223 		strd	r2, [r1, #72]
 2967 11e8 3BE0     		b	.L155
 2968              	.L154:
1571:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1572:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else if (hsd->CardType == HIGH_CAPACITY_SD_CARD)
 2969              		.loc 1 1572 0
 2970 11ea 7B68     		ldr	r3, [r7, #4]
 2971 11ec 1B6A     		ldr	r3, [r3, #32]
 2972 11ee 022B     		cmp	r3, #2
 2973 11f0 37D1     		bne	.L155
1573:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1574:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Byte 7 */
1575:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     tmp = (uint8_t)(hsd->CSD[1] & 0x000000FF);
 2974              		.loc 1 1575 0
 2975 11f2 7B68     		ldr	r3, [r7, #4]
 2976 11f4 DB6A     		ldr	r3, [r3, #44]
 2977 11f6 DBB2     		uxtb	r3, r3
 2978 11f8 FB60     		str	r3, [r7, #12]
1576:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     pCardInfo->SD_csd.DeviceSize = (tmp & 0x3F) << 16;
 2979              		.loc 1 1576 0
 2980 11fa FB68     		ldr	r3, [r7, #12]
 2981 11fc 03F03F03 		and	r3, r3, #63
 2982 1200 1A04     		lsls	r2, r3, #16
 2983 1202 3B68     		ldr	r3, [r7]
 2984 1204 1A61     		str	r2, [r3, #16]
1577:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1578:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Byte 8 */
1579:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     tmp = (uint8_t)((hsd->CSD[2] & 0xFF000000) >> 24);
 2985              		.loc 1 1579 0
 2986 1206 7B68     		ldr	r3, [r7, #4]
 2987 1208 1B6B     		ldr	r3, [r3, #48]
 2988 120a 1B0E     		lsrs	r3, r3, #24
 2989 120c DBB2     		uxtb	r3, r3
 2990 120e FB60     		str	r3, [r7, #12]
1580:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1581:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     pCardInfo->SD_csd.DeviceSize |= (tmp << 8);
 2991              		.loc 1 1581 0
 2992 1210 3B68     		ldr	r3, [r7]
 2993 1212 1A69     		ldr	r2, [r3, #16]
 2994 1214 FB68     		ldr	r3, [r7, #12]
 2995 1216 1B02     		lsls	r3, r3, #8
 2996 1218 1A43     		orrs	r2, r2, r3
 2997 121a 3B68     		ldr	r3, [r7]
 2998 121c 1A61     		str	r2, [r3, #16]
1582:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1583:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Byte 9 */
1584:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     tmp = (uint8_t)((hsd->CSD[2] & 0x00FF0000) >> 16);
 2999              		.loc 1 1584 0
 3000 121e 7B68     		ldr	r3, [r7, #4]
 3001 1220 1B6B     		ldr	r3, [r3, #48]
 3002 1222 03F47F03 		and	r3, r3, #16711680
 3003 1226 1B0C     		lsrs	r3, r3, #16
 3004 1228 DBB2     		uxtb	r3, r3
 3005 122a FB60     		str	r3, [r7, #12]
1585:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1586:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     pCardInfo->SD_csd.DeviceSize |= (tmp);
 3006              		.loc 1 1586 0
 3007 122c 3B68     		ldr	r3, [r7]
 3008 122e 1A69     		ldr	r2, [r3, #16]
 3009 1230 FB68     		ldr	r3, [r7, #12]
 3010 1232 1A43     		orrs	r2, r2, r3
 3011 1234 3B68     		ldr	r3, [r7]
 3012 1236 1A61     		str	r2, [r3, #16]
1587:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1588:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Byte 10 */
1589:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     tmp = (uint8_t)((hsd->CSD[2] & 0x0000FF00) >> 8);
 3013              		.loc 1 1589 0
 3014 1238 7B68     		ldr	r3, [r7, #4]
 3015 123a 1B6B     		ldr	r3, [r3, #48]
 3016 123c 03F47F43 		and	r3, r3, #65280
 3017 1240 1B0A     		lsrs	r3, r3, #8
 3018 1242 DBB2     		uxtb	r3, r3
 3019 1244 FB60     		str	r3, [r7, #12]
1590:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1591:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     pCardInfo->CardCapacity  = ((pCardInfo->SD_csd.DeviceSize + 1)) * 512 * 1024;
 3020              		.loc 1 1591 0
 3021 1246 3B68     		ldr	r3, [r7]
 3022 1248 1B69     		ldr	r3, [r3, #16]
 3023 124a 0133     		adds	r3, r3, #1
 3024 124c DB04     		lsls	r3, r3, #19
 3025 124e 1A46     		mov	r2, r3
 3026 1250 4FF00003 		mov	r3, #0
 3027 1254 3968     		ldr	r1, [r7]
 3028 1256 C1E91223 		strd	r2, [r1, #72]
1592:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     pCardInfo->CardBlockSize = 512;    
 3029              		.loc 1 1592 0
 3030 125a 3B68     		ldr	r3, [r7]
 3031 125c 4FF40072 		mov	r2, #512
 3032 1260 1A65     		str	r2, [r3, #80]
 3033              	.L155:
1593:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1594:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1595:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.EraseGrSize = (tmp & 0x40) >> 6;
 3034              		.loc 1 1595 0
 3035 1262 FB68     		ldr	r3, [r7, #12]
 3036 1264 03F04003 		and	r3, r3, #64
 3037 1268 9B09     		lsrs	r3, r3, #6
 3038 126a DAB2     		uxtb	r2, r3
 3039 126c 3B68     		ldr	r3, [r7]
 3040 126e 5A76     		strb	r2, [r3, #25]
1596:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.EraseGrMul  = (tmp & 0x3F) << 1;
 3041              		.loc 1 1596 0
 3042 1270 FB68     		ldr	r3, [r7, #12]
 3043 1272 DBB2     		uxtb	r3, r3
 3044 1274 03F03F03 		and	r3, r3, #63
 3045 1278 DBB2     		uxtb	r3, r3
 3046 127a 5B00     		lsls	r3, r3, #1
 3047 127c DAB2     		uxtb	r2, r3
 3048 127e 3B68     		ldr	r3, [r7]
 3049 1280 9A76     		strb	r2, [r3, #26]
1597:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1598:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 11 */
1599:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (uint8_t)(hsd->CSD[2] & 0x000000FF);
 3050              		.loc 1 1599 0
 3051 1282 7B68     		ldr	r3, [r7, #4]
 3052 1284 1B6B     		ldr	r3, [r3, #48]
 3053 1286 DBB2     		uxtb	r3, r3
 3054 1288 FB60     		str	r3, [r7, #12]
1600:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.EraseGrMul     |= (tmp & 0x80) >> 7;
 3055              		.loc 1 1600 0
 3056 128a 3B68     		ldr	r3, [r7]
 3057 128c 9B7E     		ldrb	r3, [r3, #26]
 3058 128e DAB2     		uxtb	r2, r3
 3059 1290 FB68     		ldr	r3, [r7, #12]
 3060 1292 03F08003 		and	r3, r3, #128
 3061 1296 DB09     		lsrs	r3, r3, #7
 3062 1298 DBB2     		uxtb	r3, r3
 3063 129a 1343     		orrs	r3, r3, r2
 3064 129c DAB2     		uxtb	r2, r3
 3065 129e 3B68     		ldr	r3, [r7]
 3066 12a0 9A76     		strb	r2, [r3, #26]
1601:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.WrProtectGrSize = (tmp & 0x7F);
 3067              		.loc 1 1601 0
 3068 12a2 FB68     		ldr	r3, [r7, #12]
 3069 12a4 DBB2     		uxtb	r3, r3
 3070 12a6 03F07F03 		and	r3, r3, #127
 3071 12aa DAB2     		uxtb	r2, r3
 3072 12ac 3B68     		ldr	r3, [r7]
 3073 12ae DA76     		strb	r2, [r3, #27]
1602:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1603:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 12 */
1604:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (uint8_t)((hsd->CSD[3] & 0xFF000000) >> 24);
 3074              		.loc 1 1604 0
 3075 12b0 7B68     		ldr	r3, [r7, #4]
 3076 12b2 5B6B     		ldr	r3, [r3, #52]
 3077 12b4 1B0E     		lsrs	r3, r3, #24
 3078 12b6 DBB2     		uxtb	r3, r3
 3079 12b8 FB60     		str	r3, [r7, #12]
1605:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.WrProtectGrEnable = (tmp & 0x80) >> 7;
 3080              		.loc 1 1605 0
 3081 12ba FB68     		ldr	r3, [r7, #12]
 3082 12bc 03F08003 		and	r3, r3, #128
 3083 12c0 DB09     		lsrs	r3, r3, #7
 3084 12c2 DAB2     		uxtb	r2, r3
 3085 12c4 3B68     		ldr	r3, [r7]
 3086 12c6 1A77     		strb	r2, [r3, #28]
1606:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.ManDeflECC        = (tmp & 0x60) >> 5;
 3087              		.loc 1 1606 0
 3088 12c8 FB68     		ldr	r3, [r7, #12]
 3089 12ca 03F06003 		and	r3, r3, #96
 3090 12ce 5B09     		lsrs	r3, r3, #5
 3091 12d0 DAB2     		uxtb	r2, r3
 3092 12d2 3B68     		ldr	r3, [r7]
 3093 12d4 5A77     		strb	r2, [r3, #29]
1607:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.WrSpeedFact       = (tmp & 0x1C) >> 2;
 3094              		.loc 1 1607 0
 3095 12d6 FB68     		ldr	r3, [r7, #12]
 3096 12d8 03F01C03 		and	r3, r3, #28
 3097 12dc 9B08     		lsrs	r3, r3, #2
 3098 12de DAB2     		uxtb	r2, r3
 3099 12e0 3B68     		ldr	r3, [r7]
 3100 12e2 9A77     		strb	r2, [r3, #30]
1608:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.MaxWrBlockLen     = (tmp & 0x03) << 2;
 3101              		.loc 1 1608 0
 3102 12e4 FB68     		ldr	r3, [r7, #12]
 3103 12e6 DBB2     		uxtb	r3, r3
 3104 12e8 03F00303 		and	r3, r3, #3
 3105 12ec DBB2     		uxtb	r3, r3
 3106 12ee 9B00     		lsls	r3, r3, #2
 3107 12f0 DAB2     		uxtb	r2, r3
 3108 12f2 3B68     		ldr	r3, [r7]
 3109 12f4 DA77     		strb	r2, [r3, #31]
1609:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1610:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 13 */
1611:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (uint8_t)((hsd->CSD[3] & 0x00FF0000) >> 16);
 3110              		.loc 1 1611 0
 3111 12f6 7B68     		ldr	r3, [r7, #4]
 3112 12f8 5B6B     		ldr	r3, [r3, #52]
 3113 12fa 03F47F03 		and	r3, r3, #16711680
 3114 12fe 1B0C     		lsrs	r3, r3, #16
 3115 1300 DBB2     		uxtb	r3, r3
 3116 1302 FB60     		str	r3, [r7, #12]
1612:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.MaxWrBlockLen      |= (tmp & 0xC0) >> 6;
 3117              		.loc 1 1612 0
 3118 1304 3B68     		ldr	r3, [r7]
 3119 1306 DB7F     		ldrb	r3, [r3, #31]
 3120 1308 DAB2     		uxtb	r2, r3
 3121 130a FB68     		ldr	r3, [r7, #12]
 3122 130c 03F0C003 		and	r3, r3, #192
 3123 1310 9B09     		lsrs	r3, r3, #6
 3124 1312 DBB2     		uxtb	r3, r3
 3125 1314 1343     		orrs	r3, r3, r2
 3126 1316 DAB2     		uxtb	r2, r3
 3127 1318 3B68     		ldr	r3, [r7]
 3128 131a DA77     		strb	r2, [r3, #31]
1613:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.WriteBlockPaPartial = (tmp & 0x20) >> 5;
 3129              		.loc 1 1613 0
 3130 131c FB68     		ldr	r3, [r7, #12]
 3131 131e 03F02003 		and	r3, r3, #32
 3132 1322 5B09     		lsrs	r3, r3, #5
 3133 1324 DAB2     		uxtb	r2, r3
 3134 1326 3B68     		ldr	r3, [r7]
 3135 1328 83F82020 		strb	r2, [r3, #32]
1614:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.Reserved3           = 0;
 3136              		.loc 1 1614 0
 3137 132c 3B68     		ldr	r3, [r7]
 3138 132e 0022     		movs	r2, #0
 3139 1330 83F82120 		strb	r2, [r3, #33]
1615:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.ContentProtectAppli = (tmp & 0x01);
 3140              		.loc 1 1615 0
 3141 1334 FB68     		ldr	r3, [r7, #12]
 3142 1336 DBB2     		uxtb	r3, r3
 3143 1338 03F00103 		and	r3, r3, #1
 3144 133c DAB2     		uxtb	r2, r3
 3145 133e 3B68     		ldr	r3, [r7]
 3146 1340 83F82220 		strb	r2, [r3, #34]
1616:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1617:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 14 */
1618:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (uint8_t)((hsd->CSD[3] & 0x0000FF00) >> 8);
 3147              		.loc 1 1618 0
 3148 1344 7B68     		ldr	r3, [r7, #4]
 3149 1346 5B6B     		ldr	r3, [r3, #52]
 3150 1348 03F47F43 		and	r3, r3, #65280
 3151 134c 1B0A     		lsrs	r3, r3, #8
 3152 134e DBB2     		uxtb	r3, r3
 3153 1350 FB60     		str	r3, [r7, #12]
1619:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.FileFormatGrouop = (tmp & 0x80) >> 7;
 3154              		.loc 1 1619 0
 3155 1352 FB68     		ldr	r3, [r7, #12]
 3156 1354 03F08003 		and	r3, r3, #128
 3157 1358 DB09     		lsrs	r3, r3, #7
 3158 135a DAB2     		uxtb	r2, r3
 3159 135c 3B68     		ldr	r3, [r7]
 3160 135e 83F82320 		strb	r2, [r3, #35]
1620:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.CopyFlag         = (tmp & 0x40) >> 6;
 3161              		.loc 1 1620 0
 3162 1362 FB68     		ldr	r3, [r7, #12]
 3163 1364 03F04003 		and	r3, r3, #64
 3164 1368 9B09     		lsrs	r3, r3, #6
 3165 136a DAB2     		uxtb	r2, r3
 3166 136c 3B68     		ldr	r3, [r7]
 3167 136e 83F82420 		strb	r2, [r3, #36]
1621:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.PermWrProtect    = (tmp & 0x20) >> 5;
 3168              		.loc 1 1621 0
 3169 1372 FB68     		ldr	r3, [r7, #12]
 3170 1374 03F02003 		and	r3, r3, #32
 3171 1378 5B09     		lsrs	r3, r3, #5
 3172 137a DAB2     		uxtb	r2, r3
 3173 137c 3B68     		ldr	r3, [r7]
 3174 137e 83F82520 		strb	r2, [r3, #37]
1622:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.TempWrProtect    = (tmp & 0x10) >> 4;
 3175              		.loc 1 1622 0
 3176 1382 FB68     		ldr	r3, [r7, #12]
 3177 1384 03F01003 		and	r3, r3, #16
 3178 1388 1B09     		lsrs	r3, r3, #4
 3179 138a DAB2     		uxtb	r2, r3
 3180 138c 3B68     		ldr	r3, [r7]
 3181 138e 83F82620 		strb	r2, [r3, #38]
1623:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.FileFormat       = (tmp & 0x0C) >> 2;
 3182              		.loc 1 1623 0
 3183 1392 FB68     		ldr	r3, [r7, #12]
 3184 1394 03F00C03 		and	r3, r3, #12
 3185 1398 9B08     		lsrs	r3, r3, #2
 3186 139a DAB2     		uxtb	r2, r3
 3187 139c 3B68     		ldr	r3, [r7]
 3188 139e 83F82720 		strb	r2, [r3, #39]
1624:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.ECC              = (tmp & 0x03);
 3189              		.loc 1 1624 0
 3190 13a2 FB68     		ldr	r3, [r7, #12]
 3191 13a4 DBB2     		uxtb	r3, r3
 3192 13a6 03F00303 		and	r3, r3, #3
 3193 13aa DAB2     		uxtb	r2, r3
 3194 13ac 3B68     		ldr	r3, [r7]
 3195 13ae 83F82820 		strb	r2, [r3, #40]
1625:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1626:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 15 */
1627:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (uint8_t)(hsd->CSD[3] & 0x000000FF);
 3196              		.loc 1 1627 0
 3197 13b2 7B68     		ldr	r3, [r7, #4]
 3198 13b4 5B6B     		ldr	r3, [r3, #52]
 3199 13b6 DBB2     		uxtb	r3, r3
 3200 13b8 FB60     		str	r3, [r7, #12]
1628:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.CSD_CRC   = (tmp & 0xFE) >> 1;
 3201              		.loc 1 1628 0
 3202 13ba FB68     		ldr	r3, [r7, #12]
 3203 13bc 03F0FE03 		and	r3, r3, #254
 3204 13c0 5B08     		lsrs	r3, r3, #1
 3205 13c2 DAB2     		uxtb	r2, r3
 3206 13c4 3B68     		ldr	r3, [r7]
 3207 13c6 83F82920 		strb	r2, [r3, #41]
1629:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_csd.Reserved4 = 1;
 3208              		.loc 1 1629 0
 3209 13ca 3B68     		ldr	r3, [r7]
 3210 13cc 0122     		movs	r2, #1
 3211 13ce 83F82A20 		strb	r2, [r3, #42]
1630:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1631:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 0 */
1632:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (uint8_t)((hsd->CID[0] & 0xFF000000) >> 24);
 3212              		.loc 1 1632 0
 3213 13d2 7B68     		ldr	r3, [r7, #4]
 3214 13d4 9B6B     		ldr	r3, [r3, #56]
 3215 13d6 1B0E     		lsrs	r3, r3, #24
 3216 13d8 DBB2     		uxtb	r3, r3
 3217 13da FB60     		str	r3, [r7, #12]
1633:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_cid.ManufacturerID = tmp;
 3218              		.loc 1 1633 0
 3219 13dc FB68     		ldr	r3, [r7, #12]
 3220 13de DAB2     		uxtb	r2, r3
 3221 13e0 3B68     		ldr	r3, [r7]
 3222 13e2 83F82C20 		strb	r2, [r3, #44]
1634:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1635:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 1 */
1636:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (uint8_t)((hsd->CID[0] & 0x00FF0000) >> 16);
 3223              		.loc 1 1636 0
 3224 13e6 7B68     		ldr	r3, [r7, #4]
 3225 13e8 9B6B     		ldr	r3, [r3, #56]
 3226 13ea 03F47F03 		and	r3, r3, #16711680
 3227 13ee 1B0C     		lsrs	r3, r3, #16
 3228 13f0 DBB2     		uxtb	r3, r3
 3229 13f2 FB60     		str	r3, [r7, #12]
1637:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_cid.OEM_AppliID = tmp << 8;
 3230              		.loc 1 1637 0
 3231 13f4 FB68     		ldr	r3, [r7, #12]
 3232 13f6 9BB2     		uxth	r3, r3
 3233 13f8 1B02     		lsls	r3, r3, #8
 3234 13fa 9AB2     		uxth	r2, r3
 3235 13fc 3B68     		ldr	r3, [r7]
 3236 13fe DA85     		strh	r2, [r3, #46]	@ movhi
1638:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1639:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 2 */
1640:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (uint8_t)((hsd->CID[0] & 0x000000FF00) >> 8);
 3237              		.loc 1 1640 0
 3238 1400 7B68     		ldr	r3, [r7, #4]
 3239 1402 9B6B     		ldr	r3, [r3, #56]
 3240 1404 03F47F43 		and	r3, r3, #65280
 3241 1408 1B0A     		lsrs	r3, r3, #8
 3242 140a DBB2     		uxtb	r3, r3
 3243 140c FB60     		str	r3, [r7, #12]
1641:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_cid.OEM_AppliID |= tmp;
 3244              		.loc 1 1641 0
 3245 140e 3B68     		ldr	r3, [r7]
 3246 1410 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 3247 1412 9AB2     		uxth	r2, r3
 3248 1414 FB68     		ldr	r3, [r7, #12]
 3249 1416 9BB2     		uxth	r3, r3
 3250 1418 1343     		orrs	r3, r3, r2
 3251 141a 9AB2     		uxth	r2, r3
 3252 141c 3B68     		ldr	r3, [r7]
 3253 141e DA85     		strh	r2, [r3, #46]	@ movhi
1642:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1643:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 3 */
1644:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (uint8_t)(hsd->CID[0] & 0x000000FF);
 3254              		.loc 1 1644 0
 3255 1420 7B68     		ldr	r3, [r7, #4]
 3256 1422 9B6B     		ldr	r3, [r3, #56]
 3257 1424 DBB2     		uxtb	r3, r3
 3258 1426 FB60     		str	r3, [r7, #12]
1645:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_cid.ProdName1 = tmp << 24;
 3259              		.loc 1 1645 0
 3260 1428 FB68     		ldr	r3, [r7, #12]
 3261 142a 1A06     		lsls	r2, r3, #24
 3262 142c 3B68     		ldr	r3, [r7]
 3263 142e 1A63     		str	r2, [r3, #48]
1646:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1647:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 4 */
1648:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (uint8_t)((hsd->CID[1] & 0xFF000000) >> 24);
 3264              		.loc 1 1648 0
 3265 1430 7B68     		ldr	r3, [r7, #4]
 3266 1432 DB6B     		ldr	r3, [r3, #60]
 3267 1434 1B0E     		lsrs	r3, r3, #24
 3268 1436 DBB2     		uxtb	r3, r3
 3269 1438 FB60     		str	r3, [r7, #12]
1649:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_cid.ProdName1 |= tmp << 16;
 3270              		.loc 1 1649 0
 3271 143a 3B68     		ldr	r3, [r7]
 3272 143c 1A6B     		ldr	r2, [r3, #48]
 3273 143e FB68     		ldr	r3, [r7, #12]
 3274 1440 1B04     		lsls	r3, r3, #16
 3275 1442 1A43     		orrs	r2, r2, r3
 3276 1444 3B68     		ldr	r3, [r7]
 3277 1446 1A63     		str	r2, [r3, #48]
1650:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1651:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 5 */
1652:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (uint8_t)((hsd->CID[1] & 0x00FF0000) >> 16);
 3278              		.loc 1 1652 0
 3279 1448 7B68     		ldr	r3, [r7, #4]
 3280 144a DB6B     		ldr	r3, [r3, #60]
 3281 144c 03F47F03 		and	r3, r3, #16711680
 3282 1450 1B0C     		lsrs	r3, r3, #16
 3283 1452 DBB2     		uxtb	r3, r3
 3284 1454 FB60     		str	r3, [r7, #12]
1653:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_cid.ProdName1 |= tmp << 8;
 3285              		.loc 1 1653 0
 3286 1456 3B68     		ldr	r3, [r7]
 3287 1458 1A6B     		ldr	r2, [r3, #48]
 3288 145a FB68     		ldr	r3, [r7, #12]
 3289 145c 1B02     		lsls	r3, r3, #8
 3290 145e 1A43     		orrs	r2, r2, r3
 3291 1460 3B68     		ldr	r3, [r7]
 3292 1462 1A63     		str	r2, [r3, #48]
1654:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1655:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 6 */
1656:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (uint8_t)((hsd->CID[1] & 0x0000FF00) >> 8);
 3293              		.loc 1 1656 0
 3294 1464 7B68     		ldr	r3, [r7, #4]
 3295 1466 DB6B     		ldr	r3, [r3, #60]
 3296 1468 03F47F43 		and	r3, r3, #65280
 3297 146c 1B0A     		lsrs	r3, r3, #8
 3298 146e DBB2     		uxtb	r3, r3
 3299 1470 FB60     		str	r3, [r7, #12]
1657:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_cid.ProdName1 |= tmp;
 3300              		.loc 1 1657 0
 3301 1472 3B68     		ldr	r3, [r7]
 3302 1474 1A6B     		ldr	r2, [r3, #48]
 3303 1476 FB68     		ldr	r3, [r7, #12]
 3304 1478 1A43     		orrs	r2, r2, r3
 3305 147a 3B68     		ldr	r3, [r7]
 3306 147c 1A63     		str	r2, [r3, #48]
1658:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1659:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 7 */
1660:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (uint8_t)(hsd->CID[1] & 0x000000FF);
 3307              		.loc 1 1660 0
 3308 147e 7B68     		ldr	r3, [r7, #4]
 3309 1480 DB6B     		ldr	r3, [r3, #60]
 3310 1482 DBB2     		uxtb	r3, r3
 3311 1484 FB60     		str	r3, [r7, #12]
1661:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_cid.ProdName2 = tmp;
 3312              		.loc 1 1661 0
 3313 1486 FB68     		ldr	r3, [r7, #12]
 3314 1488 DAB2     		uxtb	r2, r3
 3315 148a 3B68     		ldr	r3, [r7]
 3316 148c 83F83420 		strb	r2, [r3, #52]
1662:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1663:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 8 */
1664:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (uint8_t)((hsd->CID[2] & 0xFF000000) >> 24);
 3317              		.loc 1 1664 0
 3318 1490 7B68     		ldr	r3, [r7, #4]
 3319 1492 1B6C     		ldr	r3, [r3, #64]
 3320 1494 1B0E     		lsrs	r3, r3, #24
 3321 1496 DBB2     		uxtb	r3, r3
 3322 1498 FB60     		str	r3, [r7, #12]
1665:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_cid.ProdRev = tmp;
 3323              		.loc 1 1665 0
 3324 149a FB68     		ldr	r3, [r7, #12]
 3325 149c DAB2     		uxtb	r2, r3
 3326 149e 3B68     		ldr	r3, [r7]
 3327 14a0 83F83520 		strb	r2, [r3, #53]
1666:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1667:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 9 */
1668:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (uint8_t)((hsd->CID[2] & 0x00FF0000) >> 16);
 3328              		.loc 1 1668 0
 3329 14a4 7B68     		ldr	r3, [r7, #4]
 3330 14a6 1B6C     		ldr	r3, [r3, #64]
 3331 14a8 03F47F03 		and	r3, r3, #16711680
 3332 14ac 1B0C     		lsrs	r3, r3, #16
 3333 14ae DBB2     		uxtb	r3, r3
 3334 14b0 FB60     		str	r3, [r7, #12]
1669:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_cid.ProdSN = tmp << 24;
 3335              		.loc 1 1669 0
 3336 14b2 FB68     		ldr	r3, [r7, #12]
 3337 14b4 1A06     		lsls	r2, r3, #24
 3338 14b6 3B68     		ldr	r3, [r7]
 3339 14b8 9A63     		str	r2, [r3, #56]
1670:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1671:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 10 */
1672:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (uint8_t)((hsd->CID[2] & 0x0000FF00) >> 8);
 3340              		.loc 1 1672 0
 3341 14ba 7B68     		ldr	r3, [r7, #4]
 3342 14bc 1B6C     		ldr	r3, [r3, #64]
 3343 14be 03F47F43 		and	r3, r3, #65280
 3344 14c2 1B0A     		lsrs	r3, r3, #8
 3345 14c4 DBB2     		uxtb	r3, r3
 3346 14c6 FB60     		str	r3, [r7, #12]
1673:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_cid.ProdSN |= tmp << 16;
 3347              		.loc 1 1673 0
 3348 14c8 3B68     		ldr	r3, [r7]
 3349 14ca 9A6B     		ldr	r2, [r3, #56]
 3350 14cc FB68     		ldr	r3, [r7, #12]
 3351 14ce 1B04     		lsls	r3, r3, #16
 3352 14d0 1A43     		orrs	r2, r2, r3
 3353 14d2 3B68     		ldr	r3, [r7]
 3354 14d4 9A63     		str	r2, [r3, #56]
1674:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1675:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 11 */
1676:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (uint8_t)(hsd->CID[2] & 0x000000FF);
 3355              		.loc 1 1676 0
 3356 14d6 7B68     		ldr	r3, [r7, #4]
 3357 14d8 1B6C     		ldr	r3, [r3, #64]
 3358 14da DBB2     		uxtb	r3, r3
 3359 14dc FB60     		str	r3, [r7, #12]
1677:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_cid.ProdSN |= tmp << 8;
 3360              		.loc 1 1677 0
 3361 14de 3B68     		ldr	r3, [r7]
 3362 14e0 9A6B     		ldr	r2, [r3, #56]
 3363 14e2 FB68     		ldr	r3, [r7, #12]
 3364 14e4 1B02     		lsls	r3, r3, #8
 3365 14e6 1A43     		orrs	r2, r2, r3
 3366 14e8 3B68     		ldr	r3, [r7]
 3367 14ea 9A63     		str	r2, [r3, #56]
1678:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1679:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 12 */
1680:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (uint8_t)((hsd->CID[3] & 0xFF000000) >> 24);
 3368              		.loc 1 1680 0
 3369 14ec 7B68     		ldr	r3, [r7, #4]
 3370 14ee 5B6C     		ldr	r3, [r3, #68]
 3371 14f0 1B0E     		lsrs	r3, r3, #24
 3372 14f2 DBB2     		uxtb	r3, r3
 3373 14f4 FB60     		str	r3, [r7, #12]
1681:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_cid.ProdSN |= tmp;
 3374              		.loc 1 1681 0
 3375 14f6 3B68     		ldr	r3, [r7]
 3376 14f8 9A6B     		ldr	r2, [r3, #56]
 3377 14fa FB68     		ldr	r3, [r7, #12]
 3378 14fc 1A43     		orrs	r2, r2, r3
 3379 14fe 3B68     		ldr	r3, [r7]
 3380 1500 9A63     		str	r2, [r3, #56]
1682:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1683:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 13 */
1684:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (uint8_t)((hsd->CID[3] & 0x00FF0000) >> 16);
 3381              		.loc 1 1684 0
 3382 1502 7B68     		ldr	r3, [r7, #4]
 3383 1504 5B6C     		ldr	r3, [r3, #68]
 3384 1506 03F47F03 		and	r3, r3, #16711680
 3385 150a 1B0C     		lsrs	r3, r3, #16
 3386 150c DBB2     		uxtb	r3, r3
 3387 150e FB60     		str	r3, [r7, #12]
1685:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_cid.Reserved1   |= (tmp & 0xF0) >> 4;
 3388              		.loc 1 1685 0
 3389 1510 3B68     		ldr	r3, [r7]
 3390 1512 93F83C30 		ldrb	r3, [r3, #60]
 3391 1516 DAB2     		uxtb	r2, r3
 3392 1518 FB68     		ldr	r3, [r7, #12]
 3393 151a 03F0F003 		and	r3, r3, #240
 3394 151e 1B09     		lsrs	r3, r3, #4
 3395 1520 DBB2     		uxtb	r3, r3
 3396 1522 1343     		orrs	r3, r3, r2
 3397 1524 DAB2     		uxtb	r2, r3
 3398 1526 3B68     		ldr	r3, [r7]
 3399 1528 83F83C20 		strb	r2, [r3, #60]
1686:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_cid.ManufactDate = (tmp & 0x0F) << 8;
 3400              		.loc 1 1686 0
 3401 152c FB68     		ldr	r3, [r7, #12]
 3402 152e 9BB2     		uxth	r3, r3
 3403 1530 03F00F03 		and	r3, r3, #15
 3404 1534 9BB2     		uxth	r3, r3
 3405 1536 1B02     		lsls	r3, r3, #8
 3406 1538 9AB2     		uxth	r2, r3
 3407 153a 3B68     		ldr	r3, [r7]
 3408 153c DA87     		strh	r2, [r3, #62]	@ movhi
1687:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1688:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 14 */
1689:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (uint8_t)((hsd->CID[3] & 0x0000FF00) >> 8);
 3409              		.loc 1 1689 0
 3410 153e 7B68     		ldr	r3, [r7, #4]
 3411 1540 5B6C     		ldr	r3, [r3, #68]
 3412 1542 03F47F43 		and	r3, r3, #65280
 3413 1546 1B0A     		lsrs	r3, r3, #8
 3414 1548 DBB2     		uxtb	r3, r3
 3415 154a FB60     		str	r3, [r7, #12]
1690:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_cid.ManufactDate |= tmp;
 3416              		.loc 1 1690 0
 3417 154c 3B68     		ldr	r3, [r7]
 3418 154e DB8F     		ldrh	r3, [r3, #62]	@ movhi
 3419 1550 9AB2     		uxth	r2, r3
 3420 1552 FB68     		ldr	r3, [r7, #12]
 3421 1554 9BB2     		uxth	r3, r3
 3422 1556 1343     		orrs	r3, r3, r2
 3423 1558 9AB2     		uxth	r2, r3
 3424 155a 3B68     		ldr	r3, [r7]
 3425 155c DA87     		strh	r2, [r3, #62]	@ movhi
1691:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1692:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 15 */
1693:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (uint8_t)(hsd->CID[3] & 0x000000FF);
 3426              		.loc 1 1693 0
 3427 155e 7B68     		ldr	r3, [r7, #4]
 3428 1560 5B6C     		ldr	r3, [r3, #68]
 3429 1562 DBB2     		uxtb	r3, r3
 3430 1564 FB60     		str	r3, [r7, #12]
1694:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_cid.CID_CRC   = (tmp & 0xFE) >> 1;
 3431              		.loc 1 1694 0
 3432 1566 FB68     		ldr	r3, [r7, #12]
 3433 1568 03F0FE03 		and	r3, r3, #254
 3434 156c 5B08     		lsrs	r3, r3, #1
 3435 156e DAB2     		uxtb	r2, r3
 3436 1570 3B68     		ldr	r3, [r7]
 3437 1572 83F84020 		strb	r2, [r3, #64]
1695:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardInfo->SD_cid.Reserved2 = 1;
 3438              		.loc 1 1695 0
 3439 1576 3B68     		ldr	r3, [r7]
 3440 1578 0122     		movs	r2, #1
 3441 157a 83F84120 		strb	r2, [r3, #65]
1696:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1697:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 3442              		.loc 1 1697 0
 3443 157e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
1698:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 3444              		.loc 1 1698 0
 3445 1580 1846     		mov	r0, r3
 3446 1582 1437     		adds	r7, r7, #20
 3447 1584 BD46     		mov	sp, r7
 3448              		@ sp needed
 3449 1586 B0BC     		pop	{r4, r5, r7}
 3450 1588 7047     		bx	lr
 3451              		.cfi_endproc
 3452              	.LFE73:
 3454 158a 00BF     		.align	2
 3455              		.global	HAL_SD_WideBusOperation_Config
 3456              		.thumb
 3457              		.thumb_func
 3459              	HAL_SD_WideBusOperation_Config:
 3460              	.LFB74:
1699:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1700:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
1701:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Enables wide bus operation for the requested card if supported by 
1702:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         card.
1703:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle       
1704:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  WideMode: Specifies the SD card wide bus mode 
1705:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *          This parameter can be one of the following values:
1706:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *            @arg SDIO_BUS_WIDE_8B: 8-bit data transfer (Only for MMC)
1707:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *            @arg SDIO_BUS_WIDE_4B: 4-bit data transfer
1708:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *            @arg SDIO_BUS_WIDE_1B: 1-bit data transfer
1709:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
1710:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
1711:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** HAL_SD_ErrorTypedef HAL_SD_WideBusOperation_Config(SD_HandleTypeDef *hsd, uint32_t WideMode)
1712:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 3461              		.loc 1 1712 0
 3462              		.cfi_startproc
 3463              		@ args = 0, pretend = 0, frame = 40
 3464              		@ frame_needed = 1, uses_anonymous_args = 0
 3465 158c 90B5     		push	{r4, r7, lr}
 3466              		.cfi_def_cfa_offset 12
 3467              		.cfi_offset 4, -12
 3468              		.cfi_offset 7, -8
 3469              		.cfi_offset 14, -4
 3470 158e 8FB0     		sub	sp, sp, #60
 3471              		.cfi_def_cfa_offset 72
 3472 1590 04AF     		add	r7, sp, #16
 3473              		.cfi_def_cfa 7, 56
 3474 1592 7860     		str	r0, [r7, #4]
 3475 1594 3960     		str	r1, [r7]
1713:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 3476              		.loc 1 1713 0
 3477 1596 0023     		movs	r3, #0
 3478 1598 87F82730 		strb	r3, [r7, #39]
1714:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_InitTypeDef Init;
1715:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1716:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* MMC Card does not support this feature */
1717:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (hsd->CardType == MULTIMEDIA_CARD)
 3479              		.loc 1 1717 0
 3480 159c 7B68     		ldr	r3, [r7, #4]
 3481 159e 1B6A     		ldr	r3, [r3, #32]
 3482 15a0 032B     		cmp	r3, #3
 3483 15a2 05D1     		bne	.L158
1718:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1719:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_UNSUPPORTED_FEATURE;
 3484              		.loc 1 1719 0
 3485 15a4 2723     		movs	r3, #39
 3486 15a6 87F82730 		strb	r3, [r7, #39]
1720:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1721:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 3487              		.loc 1 1721 0
 3488 15aa 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3489 15ae 65E0     		b	.L165
 3490              	.L158:
1722:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1723:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else if ((hsd->CardType == STD_CAPACITY_SD_CARD_V1_1) || (hsd->CardType == STD_CAPACITY_SD_CARD_V
 3491              		.loc 1 1723 0
 3492 15b0 7B68     		ldr	r3, [r7, #4]
 3493 15b2 1B6A     		ldr	r3, [r3, #32]
 3494 15b4 002B     		cmp	r3, #0
 3495 15b6 07D0     		beq	.L160
 3496              		.loc 1 1723 0 is_stmt 0 discriminator 1
 3497 15b8 7B68     		ldr	r3, [r7, #4]
 3498 15ba 1B6A     		ldr	r3, [r3, #32]
 3499 15bc 012B     		cmp	r3, #1
 3500 15be 03D0     		beq	.L160
1724:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (hsd->CardType == HIGH_CAPACITY_SD_CARD))
 3501              		.loc 1 1724 0 is_stmt 1 discriminator 1
 3502 15c0 7B68     		ldr	r3, [r7, #4]
 3503 15c2 1B6A     		ldr	r3, [r3, #32]
1723:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     (hsd->CardType == HIGH_CAPACITY_SD_CARD))
 3504              		.loc 1 1723 0 discriminator 1
 3505 15c4 022B     		cmp	r3, #2
 3506 15c6 57D1     		bne	.L161
 3507              	.L160:
1725:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1726:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     if (WideMode == SDIO_BUS_WIDE_8B)
 3508              		.loc 1 1726 0
 3509 15c8 3B68     		ldr	r3, [r7]
 3510 15ca B3F5805F 		cmp	r3, #4096
 3511 15ce 05D1     		bne	.L162
1727:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
1728:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       errorState = SD_UNSUPPORTED_FEATURE;
 3512              		.loc 1 1728 0
 3513 15d0 2723     		movs	r3, #39
 3514 15d2 87F82730 		strb	r3, [r7, #39]
1729:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
1730:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       return errorState;
 3515              		.loc 1 1730 0
 3516 15d6 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3517 15da 4FE0     		b	.L165
 3518              	.L162:
1731:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
1732:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     else if (WideMode == SDIO_BUS_WIDE_4B)
 3519              		.loc 1 1732 0
 3520 15dc 3B68     		ldr	r3, [r7]
 3521 15de B3F5006F 		cmp	r3, #2048
 3522 15e2 25D1     		bne	.L163
1733:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
1734:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       errorState = SD_WideBus_Enable(hsd);
 3523              		.loc 1 1734 0
 3524 15e4 7868     		ldr	r0, [r7, #4]
 3525 15e6 01F03BF8 		bl	SD_WideBus_Enable
 3526 15ea 0346     		mov	r3, r0
 3527 15ec 87F82730 		strb	r3, [r7, #39]
1735:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
1736:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       if (errorState == SD_OK)
 3528              		.loc 1 1736 0
 3529 15f0 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3530 15f4 002B     		cmp	r3, #0
 3531 15f6 3FD1     		bne	.L161
1737:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       {
1738:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         /* Configure the SDIO peripheral */
1739:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         Init.ClockEdge           = SDIO_CLOCK_EDGE_RISING;
 3532              		.loc 1 1739 0
 3533 15f8 0023     		movs	r3, #0
 3534 15fa FB60     		str	r3, [r7, #12]
1740:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         Init.ClockBypass         = SDIO_CLOCK_BYPASS_DISABLE;
 3535              		.loc 1 1740 0
 3536 15fc 0023     		movs	r3, #0
 3537 15fe 3B61     		str	r3, [r7, #16]
1741:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         Init.ClockPowerSave      = SDIO_CLOCK_POWER_SAVE_DISABLE;
 3538              		.loc 1 1741 0
 3539 1600 0023     		movs	r3, #0
 3540 1602 7B61     		str	r3, [r7, #20]
1742:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         Init.BusWide             = SDIO_BUS_WIDE_4B;
 3541              		.loc 1 1742 0
 3542 1604 4FF40063 		mov	r3, #2048
 3543 1608 BB61     		str	r3, [r7, #24]
1743:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
 3544              		.loc 1 1743 0
 3545 160a 0023     		movs	r3, #0
 3546 160c FB61     		str	r3, [r7, #28]
1744:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         Init.ClockDiv            = SDIO_TRANSFER_CLK_DIV;
 3547              		.loc 1 1744 0
 3548 160e 0023     		movs	r3, #0
 3549 1610 3B62     		str	r3, [r7, #32]
1745:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         
1746:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         /* Configure SDIO peripheral interface */
1747:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         SDIO_Init(hsd->Instance, Init);
 3550              		.loc 1 1747 0
 3551 1612 7B68     		ldr	r3, [r7, #4]
 3552 1614 1C68     		ldr	r4, [r3]
 3553 1616 6B46     		mov	r3, sp
 3554 1618 07F11802 		add	r2, r7, #24
 3555 161c 07CA     		ldmia	r2, {r0, r1, r2}
 3556 161e 83E80700 		stmia	r3, {r0, r1, r2}
 3557 1622 07F10C03 		add	r3, r7, #12
 3558 1626 0ECB     		ldmia	r3, {r1, r2, r3}
 3559 1628 2046     		mov	r0, r4
 3560 162a FFF7FEFF 		bl	SDIO_Init
 3561 162e 23E0     		b	.L161
 3562              	.L163:
1748:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       }
1749:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
1750:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     else
1751:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
1752:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       errorState = SD_WideBus_Disable(hsd);
 3563              		.loc 1 1752 0
 3564 1630 7868     		ldr	r0, [r7, #4]
 3565 1632 01F08DF8 		bl	SD_WideBus_Disable
 3566 1636 0346     		mov	r3, r0
 3567 1638 87F82730 		strb	r3, [r7, #39]
1753:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
1754:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       if (errorState == SD_OK)
 3568              		.loc 1 1754 0
 3569 163c 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3570 1640 002B     		cmp	r3, #0
 3571 1642 19D1     		bne	.L161
1755:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       {
1756:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         /* Configure the SDIO peripheral */
1757:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         Init.ClockEdge           = SDIO_CLOCK_EDGE_RISING;
 3572              		.loc 1 1757 0
 3573 1644 0023     		movs	r3, #0
 3574 1646 FB60     		str	r3, [r7, #12]
1758:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         Init.ClockBypass         = SDIO_CLOCK_BYPASS_DISABLE;
 3575              		.loc 1 1758 0
 3576 1648 0023     		movs	r3, #0
 3577 164a 3B61     		str	r3, [r7, #16]
1759:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         Init.ClockPowerSave      = SDIO_CLOCK_POWER_SAVE_DISABLE;
 3578              		.loc 1 1759 0
 3579 164c 0023     		movs	r3, #0
 3580 164e 7B61     		str	r3, [r7, #20]
1760:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         Init.BusWide             = SDIO_BUS_WIDE_1B;
 3581              		.loc 1 1760 0
 3582 1650 0023     		movs	r3, #0
 3583 1652 BB61     		str	r3, [r7, #24]
1761:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
 3584              		.loc 1 1761 0
 3585 1654 0023     		movs	r3, #0
 3586 1656 FB61     		str	r3, [r7, #28]
1762:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         Init.ClockDiv            = SDIO_TRANSFER_CLK_DIV;
 3587              		.loc 1 1762 0
 3588 1658 0023     		movs	r3, #0
 3589 165a 3B62     		str	r3, [r7, #32]
1763:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         
1764:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         /* Configure SDIO peripheral interface */
1765:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         SDIO_Init(hsd->Instance, Init);
 3590              		.loc 1 1765 0
 3591 165c 7B68     		ldr	r3, [r7, #4]
 3592 165e 1C68     		ldr	r4, [r3]
 3593 1660 6B46     		mov	r3, sp
 3594 1662 07F11802 		add	r2, r7, #24
 3595 1666 07CA     		ldmia	r2, {r0, r1, r2}
 3596 1668 83E80700 		stmia	r3, {r0, r1, r2}
 3597 166c 07F10C03 		add	r3, r7, #12
 3598 1670 0ECB     		ldmia	r3, {r1, r2, r3}
 3599 1672 2046     		mov	r0, r4
 3600 1674 FFF7FEFF 		bl	SDIO_Init
 3601              	.L161:
1766:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       }
1767:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
1768:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1769:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1770:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 3602              		.loc 1 1770 0
 3603 1678 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3604              	.L165:
1771:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 3605              		.loc 1 1771 0
 3606 167c 1846     		mov	r0, r3
 3607 167e 2C37     		adds	r7, r7, #44
 3608 1680 BD46     		mov	sp, r7
 3609              		@ sp needed
 3610 1682 90BD     		pop	{r4, r7, pc}
 3611              		.cfi_endproc
 3612              	.LFE74:
 3614              		.align	2
 3615              		.global	HAL_SD_StopTransfer
 3616              		.thumb
 3617              		.thumb_func
 3619              	HAL_SD_StopTransfer:
 3620              	.LFB75:
1772:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1773:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
1774:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Aborts an ongoing data transfer.
1775:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
1776:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
1777:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
1778:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** HAL_SD_ErrorTypedef HAL_SD_StopTransfer(SD_HandleTypeDef *hsd)
1779:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 3621              		.loc 1 1779 0
 3622              		.cfi_startproc
 3623              		@ args = 0, pretend = 0, frame = 32
 3624              		@ frame_needed = 1, uses_anonymous_args = 0
 3625 1684 80B5     		push	{r7, lr}
 3626              		.cfi_def_cfa_offset 8
 3627              		.cfi_offset 7, -8
 3628              		.cfi_offset 14, -4
 3629 1686 88B0     		sub	sp, sp, #32
 3630              		.cfi_def_cfa_offset 40
 3631 1688 00AF     		add	r7, sp, #0
 3632              		.cfi_def_cfa_register 7
 3633 168a 7860     		str	r0, [r7, #4]
1780:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitTypeDef SDIO_CmdInitStructure;
1781:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 3634              		.loc 1 1781 0
 3635 168c 0023     		movs	r3, #0
 3636 168e FB77     		strb	r3, [r7, #31]
1782:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1783:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Send CMD12 STOP_TRANSMISSION  */
1784:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Argument         = 0;
 3637              		.loc 1 1784 0
 3638 1690 0023     		movs	r3, #0
 3639 1692 BB60     		str	r3, [r7, #8]
1785:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CmdIndex         = SD_CMD_STOP_TRANSMISSION;
 3640              		.loc 1 1785 0
 3641 1694 0C23     		movs	r3, #12
 3642 1696 FB60     		str	r3, [r7, #12]
1786:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Response         = SDIO_RESPONSE_SHORT;
 3643              		.loc 1 1786 0
 3644 1698 4023     		movs	r3, #64
 3645 169a 3B61     		str	r3, [r7, #16]
1787:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 3646              		.loc 1 1787 0
 3647 169c 0023     		movs	r3, #0
 3648 169e 7B61     		str	r3, [r7, #20]
1788:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CPSM             = SDIO_CPSM_ENABLE;
 3649              		.loc 1 1788 0
 3650 16a0 4FF48063 		mov	r3, #1024
 3651 16a4 BB61     		str	r3, [r7, #24]
1789:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 3652              		.loc 1 1789 0
 3653 16a6 7B68     		ldr	r3, [r7, #4]
 3654 16a8 1A68     		ldr	r2, [r3]
 3655 16aa 07F10803 		add	r3, r7, #8
 3656 16ae 1046     		mov	r0, r2
 3657 16b0 1946     		mov	r1, r3
 3658 16b2 FFF7FEFF 		bl	SDIO_SendCommand
1790:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1791:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check for error conditions */
1792:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = SD_CmdResp1Error(hsd, SD_CMD_STOP_TRANSMISSION);
 3659              		.loc 1 1792 0
 3660 16b6 7868     		ldr	r0, [r7, #4]
 3661 16b8 0C21     		movs	r1, #12
 3662 16ba 00F02DFE 		bl	SD_CmdResp1Error
 3663 16be 0346     		mov	r3, r0
 3664 16c0 FB77     		strb	r3, [r7, #31]
1793:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1794:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 3665              		.loc 1 1794 0
 3666 16c2 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
1795:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 3667              		.loc 1 1795 0
 3668 16c4 1846     		mov	r0, r3
 3669 16c6 2037     		adds	r7, r7, #32
 3670 16c8 BD46     		mov	sp, r7
 3671              		@ sp needed
 3672 16ca 80BD     		pop	{r7, pc}
 3673              		.cfi_endproc
 3674              	.LFE75:
 3676              		.align	2
 3677              		.global	HAL_SD_HighSpeed
 3678              		.thumb
 3679              		.thumb_func
 3681              	HAL_SD_HighSpeed:
 3682              	.LFB76:
1796:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1797:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
1798:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Switches the SD card to High Speed mode.
1799:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         This API must be used after "Transfer State"
1800:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @note   This operation should be followed by the configuration 
1801:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         of PLL to have SDIOCK clock between 67 and 75 MHz
1802:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
1803:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
1804:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
1805:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** HAL_SD_ErrorTypedef HAL_SD_HighSpeed (SD_HandleTypeDef *hsd)
1806:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 3683              		.loc 1 1806 0
 3684              		.cfi_startproc
 3685              		@ args = 0, pretend = 0, frame = 144
 3686              		@ frame_needed = 1, uses_anonymous_args = 0
 3687 16cc 90B5     		push	{r4, r7, lr}
 3688              		.cfi_def_cfa_offset 12
 3689              		.cfi_offset 4, -12
 3690              		.cfi_offset 7, -8
 3691              		.cfi_offset 14, -4
 3692 16ce A5B0     		sub	sp, sp, #148
 3693              		.cfi_def_cfa_offset 160
 3694 16d0 00AF     		add	r7, sp, #0
 3695              		.cfi_def_cfa_register 7
 3696 16d2 7860     		str	r0, [r7, #4]
1807:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 3697              		.loc 1 1807 0
 3698 16d4 0023     		movs	r3, #0
 3699 16d6 87F88F30 		strb	r3, [r7, #143]
1808:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitTypeDef SDIO_CmdInitStructure;
1809:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitTypeDef SDIO_DataInitStructure;
1810:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1811:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint8_t SD_hs[64]  = {0};
 3700              		.loc 1 1811 0
 3701 16da 07F11402 		add	r2, r7, #20
 3702 16de 4023     		movs	r3, #64
 3703 16e0 1046     		mov	r0, r2
 3704 16e2 0021     		movs	r1, #0
 3705 16e4 1A46     		mov	r2, r3
 3706 16e6 FFF7FEFF 		bl	memset
1812:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t SD_scr[2] = {0, 0};
 3707              		.loc 1 1812 0
 3708 16ea 0023     		movs	r3, #0
 3709 16ec FB60     		str	r3, [r7, #12]
 3710 16ee 0023     		movs	r3, #0
 3711 16f0 3B61     		str	r3, [r7, #16]
1813:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t SD_SPEC   = 0 ;
 3712              		.loc 1 1813 0
 3713 16f2 0023     		movs	r3, #0
 3714 16f4 C7F88030 		str	r3, [r7, #128]
1814:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t count = 0, *tempbuff = (uint32_t *)SD_hs;
 3715              		.loc 1 1814 0
 3716 16f8 0023     		movs	r3, #0
 3717 16fa C7F88830 		str	r3, [r7, #136]
 3718 16fe 07F11403 		add	r3, r7, #20
 3719 1702 C7F88430 		str	r3, [r7, #132]
1815:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1816:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Initialize the Data control register */
1817:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   hsd->Instance->DCTRL = 0;
 3720              		.loc 1 1817 0
 3721 1706 7B68     		ldr	r3, [r7, #4]
 3722 1708 1B68     		ldr	r3, [r3]
 3723 170a 0022     		movs	r2, #0
 3724 170c DA62     		str	r2, [r3, #44]
1818:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1819:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Get SCR Register */
1820:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = SD_FindSCR(hsd, SD_scr);
 3725              		.loc 1 1820 0
 3726 170e 07F10C03 		add	r3, r7, #12
 3727 1712 7868     		ldr	r0, [r7, #4]
 3728 1714 1946     		mov	r1, r3
 3729 1716 01F093F8 		bl	SD_FindSCR
 3730 171a 0346     		mov	r3, r0
 3731 171c 87F88F30 		strb	r3, [r7, #143]
1821:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1822:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (errorState != SD_OK)
 3732              		.loc 1 1822 0
 3733 1720 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 3734 1724 002B     		cmp	r3, #0
 3735 1726 02D0     		beq	.L169
1823:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1824:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 3736              		.loc 1 1824 0
 3737 1728 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 3738 172c 03E1     		b	.L185
 3739              	.L169:
1825:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1826:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1827:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Test the Version supported by the card*/ 
1828:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SD_SPEC = (SD_scr[1]  & 0x01000000) | (SD_scr[1]  & 0x02000000);
 3740              		.loc 1 1828 0
 3741 172e 3B69     		ldr	r3, [r7, #16]
 3742 1730 03F04073 		and	r3, r3, #50331648
 3743 1734 C7F88030 		str	r3, [r7, #128]
1829:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1830:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (SD_SPEC != SD_ALLZERO)
 3744              		.loc 1 1830 0
 3745 1738 D7F88030 		ldr	r3, [r7, #128]
 3746 173c 002B     		cmp	r3, #0
 3747 173e 00F0F880 		beq	.L171
1831:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1832:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Set Block Size for Card */
1833:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.Argument         = (uint32_t)64;
 3748              		.loc 1 1833 0
 3749 1742 4023     		movs	r3, #64
 3750 1744 FB66     		str	r3, [r7, #108]
1834:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.CmdIndex         = SD_CMD_SET_BLOCKLEN;
 3751              		.loc 1 1834 0
 3752 1746 1023     		movs	r3, #16
 3753 1748 3B67     		str	r3, [r7, #112]
1835:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.Response         = SDIO_RESPONSE_SHORT;
 3754              		.loc 1 1835 0
 3755 174a 4023     		movs	r3, #64
 3756 174c 7B67     		str	r3, [r7, #116]
1836:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 3757              		.loc 1 1836 0
 3758 174e 0023     		movs	r3, #0
 3759 1750 BB67     		str	r3, [r7, #120]
1837:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.CPSM             = SDIO_CPSM_ENABLE;
 3760              		.loc 1 1837 0
 3761 1752 4FF48063 		mov	r3, #1024
 3762 1756 FB67     		str	r3, [r7, #124]
1838:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 3763              		.loc 1 1838 0
 3764 1758 7B68     		ldr	r3, [r7, #4]
 3765 175a 1A68     		ldr	r2, [r3]
 3766 175c 07F16C03 		add	r3, r7, #108
 3767 1760 1046     		mov	r0, r2
 3768 1762 1946     		mov	r1, r3
 3769 1764 FFF7FEFF 		bl	SDIO_SendCommand
1839:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1840:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Check for error conditions */
1841:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CmdResp1Error(hsd, SD_CMD_SET_BLOCKLEN);
 3770              		.loc 1 1841 0
 3771 1768 7868     		ldr	r0, [r7, #4]
 3772 176a 1021     		movs	r1, #16
 3773 176c 00F0D4FD 		bl	SD_CmdResp1Error
 3774 1770 0346     		mov	r3, r0
 3775 1772 87F88F30 		strb	r3, [r7, #143]
1842:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1843:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     if (errorState != SD_OK)
 3776              		.loc 1 1843 0
 3777 1776 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 3778 177a 002B     		cmp	r3, #0
 3779 177c 02D0     		beq	.L172
1844:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
1845:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       return errorState;
 3780              		.loc 1 1845 0
 3781 177e 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 3782 1782 D8E0     		b	.L185
 3783              	.L172:
1846:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
1847:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1848:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Configure the SD DPSM (Data Path State Machine) */
1849:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_DataInitStructure.DataTimeOut   = SD_DATATIMEOUT;
 3784              		.loc 1 1849 0
 3785 1784 4FF0FF33 		mov	r3, #-1
 3786 1788 7B65     		str	r3, [r7, #84]
1850:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_DataInitStructure.DataLength    = 64;
 3787              		.loc 1 1850 0
 3788 178a 4023     		movs	r3, #64
 3789 178c BB65     		str	r3, [r7, #88]
1851:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_DataInitStructure.DataBlockSize = SDIO_DATABLOCK_SIZE_64B ;
 3790              		.loc 1 1851 0
 3791 178e 6023     		movs	r3, #96
 3792 1790 FB65     		str	r3, [r7, #92]
1852:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_DataInitStructure.TransferDir   = SDIO_TRANSFER_DIR_TO_SDIO;
 3793              		.loc 1 1852 0
 3794 1792 0223     		movs	r3, #2
 3795 1794 3B66     		str	r3, [r7, #96]
1853:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_DataInitStructure.TransferMode  = SDIO_TRANSFER_MODE_BLOCK;
 3796              		.loc 1 1853 0
 3797 1796 0023     		movs	r3, #0
 3798 1798 7B66     		str	r3, [r7, #100]
1854:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_DataInitStructure.DPSM          = SDIO_DPSM_ENABLE;
 3799              		.loc 1 1854 0
 3800 179a 0123     		movs	r3, #1
 3801 179c BB66     		str	r3, [r7, #104]
1855:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_DataConfig(hsd->Instance, &SDIO_DataInitStructure);
 3802              		.loc 1 1855 0
 3803 179e 7B68     		ldr	r3, [r7, #4]
 3804 17a0 1A68     		ldr	r2, [r3]
 3805 17a2 07F15403 		add	r3, r7, #84
 3806 17a6 1046     		mov	r0, r2
 3807 17a8 1946     		mov	r1, r3
 3808 17aa FFF7FEFF 		bl	SDIO_DataConfig
1856:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1857:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Send CMD6 switch mode */
1858:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.Argument         = 0x80FFFF01;
 3809              		.loc 1 1858 0
 3810 17ae 4FF60173 		movw	r3, #65281
 3811 17b2 C8F2FF03 		movt	r3, 33023
 3812 17b6 FB66     		str	r3, [r7, #108]
1859:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.CmdIndex         = SD_CMD_HS_SWITCH;
 3813              		.loc 1 1859 0
 3814 17b8 0623     		movs	r3, #6
 3815 17ba 3B67     		str	r3, [r7, #112]
1860:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure); 
 3816              		.loc 1 1860 0
 3817 17bc 7B68     		ldr	r3, [r7, #4]
 3818 17be 1A68     		ldr	r2, [r3]
 3819 17c0 07F16C03 		add	r3, r7, #108
 3820 17c4 1046     		mov	r0, r2
 3821 17c6 1946     		mov	r1, r3
 3822 17c8 FFF7FEFF 		bl	SDIO_SendCommand
1861:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1862:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Check for error conditions */
1863:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CmdResp1Error(hsd, SD_CMD_HS_SWITCH);
 3823              		.loc 1 1863 0
 3824 17cc 7868     		ldr	r0, [r7, #4]
 3825 17ce 0621     		movs	r1, #6
 3826 17d0 00F0A2FD 		bl	SD_CmdResp1Error
 3827 17d4 0346     		mov	r3, r0
 3828 17d6 87F88F30 		strb	r3, [r7, #143]
1864:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1865:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     if (errorState != SD_OK)
 3829              		.loc 1 1865 0
 3830 17da 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 3831 17de 002B     		cmp	r3, #0
 3832 17e0 02D0     		beq	.L173
1866:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
1867:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       return errorState;
 3833              		.loc 1 1867 0
 3834 17e2 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 3835 17e6 A6E0     		b	.L185
 3836              	.L173:
1868:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
1869:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         
1870:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     while(!__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_RXOVERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_DTIMEOUT 
 3837              		.loc 1 1870 0
 3838 17e8 25E0     		b	.L174
 3839              	.L177:
1871:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
1872:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_RXFIFOHF))
 3840              		.loc 1 1872 0
 3841 17ea 7B68     		ldr	r3, [r7, #4]
 3842 17ec 1B68     		ldr	r3, [r3]
 3843 17ee 5B6B     		ldr	r3, [r3, #52]
 3844 17f0 03F40043 		and	r3, r3, #32768
 3845 17f4 002B     		cmp	r3, #0
 3846 17f6 1ED0     		beq	.L174
1873:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       {
1874:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         for (count = 0; count < 8; count++)
 3847              		.loc 1 1874 0
 3848 17f8 0023     		movs	r3, #0
 3849 17fa C7F88830 		str	r3, [r7, #136]
 3850 17fe 11E0     		b	.L175
 3851              	.L176:
1875:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         {
1876:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****           *(tempbuff + count) = SDIO_ReadFIFO(hsd->Instance);
 3852              		.loc 1 1876 0 discriminator 2
 3853 1800 D7F88830 		ldr	r3, [r7, #136]
 3854 1804 9B00     		lsls	r3, r3, #2
 3855 1806 D7F88420 		ldr	r2, [r7, #132]
 3856 180a D418     		adds	r4, r2, r3
 3857 180c 7B68     		ldr	r3, [r7, #4]
 3858 180e 1B68     		ldr	r3, [r3]
 3859 1810 1846     		mov	r0, r3
 3860 1812 FFF7FEFF 		bl	SDIO_ReadFIFO
 3861 1816 0346     		mov	r3, r0
 3862 1818 2360     		str	r3, [r4]
1874:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         {
 3863              		.loc 1 1874 0 discriminator 2
 3864 181a D7F88830 		ldr	r3, [r7, #136]
 3865 181e 0133     		adds	r3, r3, #1
 3866 1820 C7F88830 		str	r3, [r7, #136]
 3867              	.L175:
1874:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         {
 3868              		.loc 1 1874 0 is_stmt 0 discriminator 1
 3869 1824 D7F88830 		ldr	r3, [r7, #136]
 3870 1828 072B     		cmp	r3, #7
 3871 182a E9D9     		bls	.L176
1877:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         }
1878:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         
1879:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         tempbuff += 8;
 3872              		.loc 1 1879 0 is_stmt 1
 3873 182c D7F88430 		ldr	r3, [r7, #132]
 3874 1830 2033     		adds	r3, r3, #32
 3875 1832 C7F88430 		str	r3, [r7, #132]
 3876              	.L174:
1870:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
 3877              		.loc 1 1870 0 discriminator 1
 3878 1836 7B68     		ldr	r3, [r7, #4]
 3879 1838 1B68     		ldr	r3, [r3]
 3880 183a 5A6B     		ldr	r2, [r3, #52]
 3881 183c 40F22A63 		movw	r3, #1578
 3882 1840 1340     		ands	r3, r3, r2
 3883 1842 002B     		cmp	r3, #0
 3884 1844 D1D0     		beq	.L177
1880:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       }
1881:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
1882:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1883:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_DTIMEOUT))
 3885              		.loc 1 1883 0
 3886 1846 7B68     		ldr	r3, [r7, #4]
 3887 1848 1B68     		ldr	r3, [r3]
 3888 184a 5B6B     		ldr	r3, [r3, #52]
 3889 184c 03F00803 		and	r3, r3, #8
 3890 1850 002B     		cmp	r3, #0
 3891 1852 09D0     		beq	.L178
1884:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
1885:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_DTIMEOUT);
 3892              		.loc 1 1885 0
 3893 1854 7B68     		ldr	r3, [r7, #4]
 3894 1856 1B68     		ldr	r3, [r3]
 3895 1858 0822     		movs	r2, #8
 3896 185a 9A63     		str	r2, [r3, #56]
1886:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
1887:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       errorState = SD_DATA_TIMEOUT;
 3897              		.loc 1 1887 0
 3898 185c 0423     		movs	r3, #4
 3899 185e 87F88F30 		strb	r3, [r7, #143]
1888:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
1889:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       return errorState;
 3900              		.loc 1 1889 0
 3901 1862 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 3902 1866 66E0     		b	.L185
 3903              	.L178:
1890:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
1891:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     else if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_DCRCFAIL))
 3904              		.loc 1 1891 0
 3905 1868 7B68     		ldr	r3, [r7, #4]
 3906 186a 1B68     		ldr	r3, [r3]
 3907 186c 5B6B     		ldr	r3, [r3, #52]
 3908 186e 03F00203 		and	r3, r3, #2
 3909 1872 002B     		cmp	r3, #0
 3910 1874 09D0     		beq	.L179
1892:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
1893:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_DCRCFAIL);
 3911              		.loc 1 1893 0
 3912 1876 7B68     		ldr	r3, [r7, #4]
 3913 1878 1B68     		ldr	r3, [r3]
 3914 187a 0222     		movs	r2, #2
 3915 187c 9A63     		str	r2, [r3, #56]
1894:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
1895:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       errorState = SD_DATA_CRC_FAIL;
 3916              		.loc 1 1895 0
 3917 187e 0223     		movs	r3, #2
 3918 1880 87F88F30 		strb	r3, [r7, #143]
1896:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
1897:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       return errorState;
 3919              		.loc 1 1897 0
 3920 1884 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 3921 1888 55E0     		b	.L185
 3922              	.L179:
1898:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
1899:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     else if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_RXOVERR))
 3923              		.loc 1 1899 0
 3924 188a 7B68     		ldr	r3, [r7, #4]
 3925 188c 1B68     		ldr	r3, [r3]
 3926 188e 5B6B     		ldr	r3, [r3, #52]
 3927 1890 03F02003 		and	r3, r3, #32
 3928 1894 002B     		cmp	r3, #0
 3929 1896 09D0     		beq	.L180
1900:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
1901:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_RXOVERR);
 3930              		.loc 1 1901 0
 3931 1898 7B68     		ldr	r3, [r7, #4]
 3932 189a 1B68     		ldr	r3, [r3]
 3933 189c 2022     		movs	r2, #32
 3934 189e 9A63     		str	r2, [r3, #56]
1902:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
1903:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       errorState = SD_RX_OVERRUN;
 3935              		.loc 1 1903 0
 3936 18a0 0623     		movs	r3, #6
 3937 18a2 87F88F30 		strb	r3, [r7, #143]
1904:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
1905:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       return errorState;
 3938              		.loc 1 1905 0
 3939 18a6 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 3940 18aa 44E0     		b	.L185
 3941              	.L180:
1906:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
1907:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     else if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_STBITERR))
 3942              		.loc 1 1907 0
 3943 18ac 7B68     		ldr	r3, [r7, #4]
 3944 18ae 1B68     		ldr	r3, [r3]
 3945 18b0 5B6B     		ldr	r3, [r3, #52]
 3946 18b2 03F40073 		and	r3, r3, #512
 3947 18b6 002B     		cmp	r3, #0
 3948 18b8 0AD0     		beq	.L181
1908:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
1909:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_STBITERR);
 3949              		.loc 1 1909 0
 3950 18ba 7B68     		ldr	r3, [r7, #4]
 3951 18bc 1B68     		ldr	r3, [r3]
 3952 18be 4FF40072 		mov	r2, #512
 3953 18c2 9A63     		str	r2, [r3, #56]
1910:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
1911:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       errorState = SD_START_BIT_ERR;
 3954              		.loc 1 1911 0
 3955 18c4 0723     		movs	r3, #7
 3956 18c6 87F88F30 		strb	r3, [r7, #143]
1912:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
1913:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       return errorState;
 3957              		.loc 1 1913 0
 3958 18ca 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 3959 18ce 32E0     		b	.L185
 3960              	.L181:
1914:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
1915:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1916:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     count = SD_DATATIMEOUT;
 3961              		.loc 1 1916 0
 3962 18d0 4FF0FF33 		mov	r3, #-1
 3963 18d4 C7F88830 		str	r3, [r7, #136]
1917:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1918:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     while ((__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_RXDAVL)) && (count > 0))
 3964              		.loc 1 1918 0
 3965 18d8 12E0     		b	.L182
 3966              	.L184:
1919:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
1920:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       *tempbuff = SDIO_ReadFIFO(hsd->Instance);
 3967              		.loc 1 1920 0
 3968 18da 7B68     		ldr	r3, [r7, #4]
 3969 18dc 1B68     		ldr	r3, [r3]
 3970 18de 1846     		mov	r0, r3
 3971 18e0 FFF7FEFF 		bl	SDIO_ReadFIFO
 3972 18e4 0246     		mov	r2, r0
 3973 18e6 D7F88430 		ldr	r3, [r7, #132]
 3974 18ea 1A60     		str	r2, [r3]
1921:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       tempbuff++;
 3975              		.loc 1 1921 0
 3976 18ec D7F88430 		ldr	r3, [r7, #132]
 3977 18f0 0433     		adds	r3, r3, #4
 3978 18f2 C7F88430 		str	r3, [r7, #132]
1922:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       count--;
 3979              		.loc 1 1922 0
 3980 18f6 D7F88830 		ldr	r3, [r7, #136]
 3981 18fa 013B     		subs	r3, r3, #1
 3982 18fc C7F88830 		str	r3, [r7, #136]
 3983              	.L182:
1918:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
 3984              		.loc 1 1918 0 discriminator 1
 3985 1900 7B68     		ldr	r3, [r7, #4]
 3986 1902 1B68     		ldr	r3, [r3]
 3987 1904 5B6B     		ldr	r3, [r3, #52]
 3988 1906 03F40013 		and	r3, r3, #2097152
 3989 190a 002B     		cmp	r3, #0
 3990 190c 03D0     		beq	.L183
1918:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
 3991              		.loc 1 1918 0 is_stmt 0 discriminator 2
 3992 190e D7F88830 		ldr	r3, [r7, #136]
 3993 1912 002B     		cmp	r3, #0
 3994 1914 E1D1     		bne	.L184
 3995              	.L183:
1923:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
1924:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1925:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Clear all the static flags */
1926:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 3996              		.loc 1 1926 0 is_stmt 1
 3997 1916 7B68     		ldr	r3, [r7, #4]
 3998 1918 1B68     		ldr	r3, [r3]
 3999 191a 40F2FF52 		movw	r2, #1535
 4000 191e 9A63     		str	r2, [r3, #56]
1927:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1928:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Test if the switch mode HS is ok */
1929:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     if ((SD_hs[13]& 2) != 2)
 4001              		.loc 1 1929 0
 4002 1920 97F82130 		ldrb	r3, [r7, #33]	@ zero_extendqisi2
 4003 1924 03F00203 		and	r3, r3, #2
 4004 1928 002B     		cmp	r3, #0
 4005 192a 02D1     		bne	.L171
1930:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
1931:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       errorState = SD_UNSUPPORTED_FEATURE;
 4006              		.loc 1 1931 0
 4007 192c 2723     		movs	r3, #39
 4008 192e 87F88F30 		strb	r3, [r7, #143]
 4009              	.L171:
1932:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     } 
1933:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1934:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1935:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 4010              		.loc 1 1935 0
 4011 1932 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 4012              	.L185:
1936:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 4013              		.loc 1 1936 0
 4014 1936 1846     		mov	r0, r3
 4015 1938 9437     		adds	r7, r7, #148
 4016 193a BD46     		mov	sp, r7
 4017              		@ sp needed
 4018 193c 90BD     		pop	{r4, r7, pc}
 4019              		.cfi_endproc
 4020              	.LFE76:
 4022 193e 00BF     		.align	2
 4023              		.global	HAL_SD_SendSDStatus
 4024              		.thumb
 4025              		.thumb_func
 4027              	HAL_SD_SendSDStatus:
 4028              	.LFB77:
1937:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1938:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
1939:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @}
1940:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
1941:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1942:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /** @defgroup SD_Group4 Peripheral State functions 
1943:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****  *  @brief   Peripheral State functions 
1944:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****  *
1945:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** @verbatim   
1946:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   ==============================================================================
1947:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****                       ##### Peripheral State functions #####
1948:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   ==============================================================================  
1949:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   [..]
1950:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     This subsection permits to get in runtime the status of the peripheral 
1951:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     and the data flow.
1952:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1953:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** @endverbatim
1954:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @{
1955:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
1956:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
1957:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
1958:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Returns the current SD card's status.
1959:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
1960:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  pSDstatus: Pointer to the buffer that will contain the SD card status 
1961:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         SD Status register)
1962:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
1963:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
1964:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** HAL_SD_ErrorTypedef HAL_SD_SendSDStatus(SD_HandleTypeDef *hsd, uint32_t *pSDstatus)
1965:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 4029              		.loc 1 1965 0
 4030              		.cfi_startproc
 4031              		@ args = 0, pretend = 0, frame = 64
 4032              		@ frame_needed = 1, uses_anonymous_args = 0
 4033 1940 90B5     		push	{r4, r7, lr}
 4034              		.cfi_def_cfa_offset 12
 4035              		.cfi_offset 4, -12
 4036              		.cfi_offset 7, -8
 4037              		.cfi_offset 14, -4
 4038 1942 91B0     		sub	sp, sp, #68
 4039              		.cfi_def_cfa_offset 80
 4040 1944 00AF     		add	r7, sp, #0
 4041              		.cfi_def_cfa_register 7
 4042 1946 7860     		str	r0, [r7, #4]
 4043 1948 3960     		str	r1, [r7]
1966:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitTypeDef  SDIO_CmdInitStructure;
1967:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitTypeDef SDIO_DataInitStructure;
1968:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 4044              		.loc 1 1968 0
 4045 194a 0023     		movs	r3, #0
 4046 194c 87F83B30 		strb	r3, [r7, #59]
1969:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t count = 0;
 4047              		.loc 1 1969 0
 4048 1950 0023     		movs	r3, #0
 4049 1952 FB63     		str	r3, [r7, #60]
1970:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1971:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check SD response */
1972:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if ((SDIO_GetResponse(SDIO_RESP1) & SD_CARD_LOCKED) == SD_CARD_LOCKED)
 4050              		.loc 1 1972 0
 4051 1954 0020     		movs	r0, #0
 4052 1956 FFF7FEFF 		bl	SDIO_GetResponse
 4053 195a 0346     		mov	r3, r0
 4054 195c 03F00073 		and	r3, r3, #33554432
 4055 1960 002B     		cmp	r3, #0
 4056 1962 05D0     		beq	.L187
1973:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1974:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_LOCK_UNLOCK_FAILED;
 4057              		.loc 1 1974 0
 4058 1964 0E23     		movs	r3, #14
 4059 1966 87F83B30 		strb	r3, [r7, #59]
1975:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
1976:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 4060              		.loc 1 1976 0
 4061 196a 97F83B30 		ldrb	r3, [r7, #59]	@ zero_extendqisi2
 4062 196e FAE0     		b	.L203
 4063              	.L187:
1977:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1978:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1979:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Set block size for card if it is not equal to current block size for card */
1980:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Argument         = 64;
 4064              		.loc 1 1980 0
 4065 1970 4023     		movs	r3, #64
 4066 1972 7B62     		str	r3, [r7, #36]
1981:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CmdIndex         = SD_CMD_SET_BLOCKLEN;
 4067              		.loc 1 1981 0
 4068 1974 1023     		movs	r3, #16
 4069 1976 BB62     		str	r3, [r7, #40]
1982:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Response         = SDIO_RESPONSE_SHORT;
 4070              		.loc 1 1982 0
 4071 1978 4023     		movs	r3, #64
 4072 197a FB62     		str	r3, [r7, #44]
1983:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 4073              		.loc 1 1983 0
 4074 197c 0023     		movs	r3, #0
 4075 197e 3B63     		str	r3, [r7, #48]
1984:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CPSM             = SDIO_CPSM_ENABLE;
 4076              		.loc 1 1984 0
 4077 1980 4FF48063 		mov	r3, #1024
 4078 1984 7B63     		str	r3, [r7, #52]
1985:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 4079              		.loc 1 1985 0
 4080 1986 7B68     		ldr	r3, [r7, #4]
 4081 1988 1A68     		ldr	r2, [r3]
 4082 198a 07F12403 		add	r3, r7, #36
 4083 198e 1046     		mov	r0, r2
 4084 1990 1946     		mov	r1, r3
 4085 1992 FFF7FEFF 		bl	SDIO_SendCommand
1986:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1987:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check for error conditions */
1988:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = SD_CmdResp1Error(hsd, SD_CMD_SET_BLOCKLEN);
 4086              		.loc 1 1988 0
 4087 1996 7868     		ldr	r0, [r7, #4]
 4088 1998 1021     		movs	r1, #16
 4089 199a 00F0BDFC 		bl	SD_CmdResp1Error
 4090 199e 0346     		mov	r3, r0
 4091 19a0 87F83B30 		strb	r3, [r7, #59]
1989:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1990:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (errorState != SD_OK)
 4092              		.loc 1 1990 0
 4093 19a4 97F83B30 		ldrb	r3, [r7, #59]	@ zero_extendqisi2
 4094 19a8 002B     		cmp	r3, #0
 4095 19aa 02D0     		beq	.L189
1991:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
1992:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 4096              		.loc 1 1992 0
 4097 19ac 97F83B30 		ldrb	r3, [r7, #59]	@ zero_extendqisi2
 4098 19b0 D9E0     		b	.L203
 4099              	.L189:
1993:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
1994:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
1995:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Send CMD55 */
1996:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Argument         = (uint32_t)(hsd->RCA << 16);
 4100              		.loc 1 1996 0
 4101 19b2 7B68     		ldr	r3, [r7, #4]
 4102 19b4 5B6A     		ldr	r3, [r3, #36]
 4103 19b6 1B04     		lsls	r3, r3, #16
 4104 19b8 7B62     		str	r3, [r7, #36]
1997:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CmdIndex         = SD_CMD_APP_CMD;
 4105              		.loc 1 1997 0
 4106 19ba 3723     		movs	r3, #55
 4107 19bc BB62     		str	r3, [r7, #40]
1998:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 4108              		.loc 1 1998 0
 4109 19be 7B68     		ldr	r3, [r7, #4]
 4110 19c0 1A68     		ldr	r2, [r3]
 4111 19c2 07F12403 		add	r3, r7, #36
 4112 19c6 1046     		mov	r0, r2
 4113 19c8 1946     		mov	r1, r3
 4114 19ca FFF7FEFF 		bl	SDIO_SendCommand
1999:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2000:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check for error conditions */
2001:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = SD_CmdResp1Error(hsd, SD_CMD_APP_CMD);
 4115              		.loc 1 2001 0
 4116 19ce 7868     		ldr	r0, [r7, #4]
 4117 19d0 3721     		movs	r1, #55
 4118 19d2 00F0A1FC 		bl	SD_CmdResp1Error
 4119 19d6 0346     		mov	r3, r0
 4120 19d8 87F83B30 		strb	r3, [r7, #59]
2002:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2003:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (errorState != SD_OK)
 4121              		.loc 1 2003 0
 4122 19dc 97F83B30 		ldrb	r3, [r7, #59]	@ zero_extendqisi2
 4123 19e0 002B     		cmp	r3, #0
 4124 19e2 02D0     		beq	.L190
2004:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2005:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 4125              		.loc 1 2005 0
 4126 19e4 97F83B30 		ldrb	r3, [r7, #59]	@ zero_extendqisi2
 4127 19e8 BDE0     		b	.L203
 4128              	.L190:
2006:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2007:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2008:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Configure the SD DPSM (Data Path State Machine) */ 
2009:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.DataTimeOut   = SD_DATATIMEOUT;
 4129              		.loc 1 2009 0
 4130 19ea 4FF0FF33 		mov	r3, #-1
 4131 19ee FB60     		str	r3, [r7, #12]
2010:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.DataLength    = 64;
 4132              		.loc 1 2010 0
 4133 19f0 4023     		movs	r3, #64
 4134 19f2 3B61     		str	r3, [r7, #16]
2011:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.DataBlockSize = SDIO_DATABLOCK_SIZE_64B;
 4135              		.loc 1 2011 0
 4136 19f4 6023     		movs	r3, #96
 4137 19f6 7B61     		str	r3, [r7, #20]
2012:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.TransferDir   = SDIO_TRANSFER_DIR_TO_SDIO;
 4138              		.loc 1 2012 0
 4139 19f8 0223     		movs	r3, #2
 4140 19fa BB61     		str	r3, [r7, #24]
2013:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.TransferMode  = SDIO_TRANSFER_MODE_BLOCK;
 4141              		.loc 1 2013 0
 4142 19fc 0023     		movs	r3, #0
 4143 19fe FB61     		str	r3, [r7, #28]
2014:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.DPSM          = SDIO_DPSM_ENABLE;
 4144              		.loc 1 2014 0
 4145 1a00 0123     		movs	r3, #1
 4146 1a02 3B62     		str	r3, [r7, #32]
2015:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataConfig(hsd->Instance, &SDIO_DataInitStructure);
 4147              		.loc 1 2015 0
 4148 1a04 7B68     		ldr	r3, [r7, #4]
 4149 1a06 1A68     		ldr	r2, [r3]
 4150 1a08 07F10C03 		add	r3, r7, #12
 4151 1a0c 1046     		mov	r0, r2
 4152 1a0e 1946     		mov	r1, r3
 4153 1a10 FFF7FEFF 		bl	SDIO_DataConfig
2016:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2017:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Send ACMD13 (SD_APP_STAUS)  with argument as card's RCA */
2018:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Argument         = 0;
 4154              		.loc 1 2018 0
 4155 1a14 0023     		movs	r3, #0
 4156 1a16 7B62     		str	r3, [r7, #36]
2019:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CmdIndex         = SD_CMD_SD_APP_STAUS;
 4157              		.loc 1 2019 0
 4158 1a18 0D23     		movs	r3, #13
 4159 1a1a BB62     		str	r3, [r7, #40]
2020:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 4160              		.loc 1 2020 0
 4161 1a1c 7B68     		ldr	r3, [r7, #4]
 4162 1a1e 1A68     		ldr	r2, [r3]
 4163 1a20 07F12403 		add	r3, r7, #36
 4164 1a24 1046     		mov	r0, r2
 4165 1a26 1946     		mov	r1, r3
 4166 1a28 FFF7FEFF 		bl	SDIO_SendCommand
2021:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2022:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check for error conditions */
2023:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = SD_CmdResp1Error(hsd, SD_CMD_SD_APP_STAUS);
 4167              		.loc 1 2023 0
 4168 1a2c 7868     		ldr	r0, [r7, #4]
 4169 1a2e 0D21     		movs	r1, #13
 4170 1a30 00F072FC 		bl	SD_CmdResp1Error
 4171 1a34 0346     		mov	r3, r0
 4172 1a36 87F83B30 		strb	r3, [r7, #59]
2024:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2025:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (errorState != SD_OK)
 4173              		.loc 1 2025 0
 4174 1a3a 97F83B30 		ldrb	r3, [r7, #59]	@ zero_extendqisi2
 4175 1a3e 002B     		cmp	r3, #0
 4176 1a40 02D0     		beq	.L191
2026:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2027:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 4177              		.loc 1 2027 0
 4178 1a42 97F83B30 		ldrb	r3, [r7, #59]	@ zero_extendqisi2
 4179 1a46 8EE0     		b	.L203
 4180              	.L191:
2028:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2029:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2030:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Get status data */
2031:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   while(!__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_RXOVERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_DTIMEOUT | 
 4181              		.loc 1 2031 0
 4182 1a48 1DE0     		b	.L192
 4183              	.L195:
2032:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2033:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_RXFIFOHF))
 4184              		.loc 1 2033 0
 4185 1a4a 7B68     		ldr	r3, [r7, #4]
 4186 1a4c 1B68     		ldr	r3, [r3]
 4187 1a4e 5B6B     		ldr	r3, [r3, #52]
 4188 1a50 03F40043 		and	r3, r3, #32768
 4189 1a54 002B     		cmp	r3, #0
 4190 1a56 16D0     		beq	.L192
2034:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
2035:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       for (count = 0; count < 8; count++)
 4191              		.loc 1 2035 0
 4192 1a58 0023     		movs	r3, #0
 4193 1a5a FB63     		str	r3, [r7, #60]
 4194 1a5c 0DE0     		b	.L193
 4195              	.L194:
2036:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       {
2037:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         *(pSDstatus + count) = SDIO_ReadFIFO(hsd->Instance);
 4196              		.loc 1 2037 0 discriminator 2
 4197 1a5e FB6B     		ldr	r3, [r7, #60]
 4198 1a60 9B00     		lsls	r3, r3, #2
 4199 1a62 3A68     		ldr	r2, [r7]
 4200 1a64 D418     		adds	r4, r2, r3
 4201 1a66 7B68     		ldr	r3, [r7, #4]
 4202 1a68 1B68     		ldr	r3, [r3]
 4203 1a6a 1846     		mov	r0, r3
 4204 1a6c FFF7FEFF 		bl	SDIO_ReadFIFO
 4205 1a70 0346     		mov	r3, r0
 4206 1a72 2360     		str	r3, [r4]
2035:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       {
 4207              		.loc 1 2035 0 discriminator 2
 4208 1a74 FB6B     		ldr	r3, [r7, #60]
 4209 1a76 0133     		adds	r3, r3, #1
 4210 1a78 FB63     		str	r3, [r7, #60]
 4211              	.L193:
2035:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       {
 4212              		.loc 1 2035 0 is_stmt 0 discriminator 1
 4213 1a7a FB6B     		ldr	r3, [r7, #60]
 4214 1a7c 072B     		cmp	r3, #7
 4215 1a7e EED9     		bls	.L194
2038:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       }
2039:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
2040:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       pSDstatus += 8;
 4216              		.loc 1 2040 0 is_stmt 1
 4217 1a80 3B68     		ldr	r3, [r7]
 4218 1a82 2033     		adds	r3, r3, #32
 4219 1a84 3B60     		str	r3, [r7]
 4220              	.L192:
2031:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 4221              		.loc 1 2031 0 discriminator 1
 4222 1a86 7B68     		ldr	r3, [r7, #4]
 4223 1a88 1B68     		ldr	r3, [r3]
 4224 1a8a 5A6B     		ldr	r2, [r3, #52]
 4225 1a8c 40F22A63 		movw	r3, #1578
 4226 1a90 1340     		ands	r3, r3, r2
 4227 1a92 002B     		cmp	r3, #0
 4228 1a94 D9D0     		beq	.L195
2041:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
2042:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2043:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2044:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_DTIMEOUT))
 4229              		.loc 1 2044 0
 4230 1a96 7B68     		ldr	r3, [r7, #4]
 4231 1a98 1B68     		ldr	r3, [r3]
 4232 1a9a 5B6B     		ldr	r3, [r3, #52]
 4233 1a9c 03F00803 		and	r3, r3, #8
 4234 1aa0 002B     		cmp	r3, #0
 4235 1aa2 09D0     		beq	.L196
2045:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2046:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_DTIMEOUT);
 4236              		.loc 1 2046 0
 4237 1aa4 7B68     		ldr	r3, [r7, #4]
 4238 1aa6 1B68     		ldr	r3, [r3]
 4239 1aa8 0822     		movs	r2, #8
 4240 1aaa 9A63     		str	r2, [r3, #56]
2047:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2048:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_DATA_TIMEOUT;
 4241              		.loc 1 2048 0
 4242 1aac 0423     		movs	r3, #4
 4243 1aae 87F83B30 		strb	r3, [r7, #59]
2049:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2050:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 4244              		.loc 1 2050 0
 4245 1ab2 97F83B30 		ldrb	r3, [r7, #59]	@ zero_extendqisi2
 4246 1ab6 56E0     		b	.L203
 4247              	.L196:
2051:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2052:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_DCRCFAIL))
 4248              		.loc 1 2052 0
 4249 1ab8 7B68     		ldr	r3, [r7, #4]
 4250 1aba 1B68     		ldr	r3, [r3]
 4251 1abc 5B6B     		ldr	r3, [r3, #52]
 4252 1abe 03F00203 		and	r3, r3, #2
 4253 1ac2 002B     		cmp	r3, #0
 4254 1ac4 09D0     		beq	.L197
2053:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2054:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_DCRCFAIL);
 4255              		.loc 1 2054 0
 4256 1ac6 7B68     		ldr	r3, [r7, #4]
 4257 1ac8 1B68     		ldr	r3, [r3]
 4258 1aca 0222     		movs	r2, #2
 4259 1acc 9A63     		str	r2, [r3, #56]
2055:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2056:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_DATA_CRC_FAIL;
 4260              		.loc 1 2056 0
 4261 1ace 0223     		movs	r3, #2
 4262 1ad0 87F83B30 		strb	r3, [r7, #59]
2057:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2058:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 4263              		.loc 1 2058 0
 4264 1ad4 97F83B30 		ldrb	r3, [r7, #59]	@ zero_extendqisi2
 4265 1ad8 45E0     		b	.L203
 4266              	.L197:
2059:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2060:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_RXOVERR))
 4267              		.loc 1 2060 0
 4268 1ada 7B68     		ldr	r3, [r7, #4]
 4269 1adc 1B68     		ldr	r3, [r3]
 4270 1ade 5B6B     		ldr	r3, [r3, #52]
 4271 1ae0 03F02003 		and	r3, r3, #32
 4272 1ae4 002B     		cmp	r3, #0
 4273 1ae6 09D0     		beq	.L198
2061:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2062:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_RXOVERR);
 4274              		.loc 1 2062 0
 4275 1ae8 7B68     		ldr	r3, [r7, #4]
 4276 1aea 1B68     		ldr	r3, [r3]
 4277 1aec 2022     		movs	r2, #32
 4278 1aee 9A63     		str	r2, [r3, #56]
2063:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2064:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_RX_OVERRUN;
 4279              		.loc 1 2064 0
 4280 1af0 0623     		movs	r3, #6
 4281 1af2 87F83B30 		strb	r3, [r7, #59]
2065:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2066:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 4282              		.loc 1 2066 0
 4283 1af6 97F83B30 		ldrb	r3, [r7, #59]	@ zero_extendqisi2
 4284 1afa 34E0     		b	.L203
 4285              	.L198:
2067:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2068:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_STBITERR))
 4286              		.loc 1 2068 0
 4287 1afc 7B68     		ldr	r3, [r7, #4]
 4288 1afe 1B68     		ldr	r3, [r3]
 4289 1b00 5B6B     		ldr	r3, [r3, #52]
 4290 1b02 03F40073 		and	r3, r3, #512
 4291 1b06 002B     		cmp	r3, #0
 4292 1b08 0AD0     		beq	.L199
2069:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2070:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_STBITERR);
 4293              		.loc 1 2070 0
 4294 1b0a 7B68     		ldr	r3, [r7, #4]
 4295 1b0c 1B68     		ldr	r3, [r3]
 4296 1b0e 4FF40072 		mov	r2, #512
 4297 1b12 9A63     		str	r2, [r3, #56]
2071:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2072:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_START_BIT_ERR;
 4298              		.loc 1 2072 0
 4299 1b14 0723     		movs	r3, #7
 4300 1b16 87F83B30 		strb	r3, [r7, #59]
2073:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2074:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 4301              		.loc 1 2074 0
 4302 1b1a 97F83B30 		ldrb	r3, [r7, #59]	@ zero_extendqisi2
 4303 1b1e 22E0     		b	.L203
 4304              	.L199:
2075:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2076:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2077:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   count = SD_DATATIMEOUT;
 4305              		.loc 1 2077 0
 4306 1b20 4FF0FF33 		mov	r3, #-1
 4307 1b24 FB63     		str	r3, [r7, #60]
2078:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   while ((__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_RXDAVL)) && (count > 0))
 4308              		.loc 1 2078 0
 4309 1b26 0DE0     		b	.L200
 4310              	.L202:
2079:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2080:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     *pSDstatus = SDIO_ReadFIFO(hsd->Instance);
 4311              		.loc 1 2080 0
 4312 1b28 7B68     		ldr	r3, [r7, #4]
 4313 1b2a 1B68     		ldr	r3, [r3]
 4314 1b2c 1846     		mov	r0, r3
 4315 1b2e FFF7FEFF 		bl	SDIO_ReadFIFO
 4316 1b32 0246     		mov	r2, r0
 4317 1b34 3B68     		ldr	r3, [r7]
 4318 1b36 1A60     		str	r2, [r3]
2081:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     pSDstatus++;
 4319              		.loc 1 2081 0
 4320 1b38 3B68     		ldr	r3, [r7]
 4321 1b3a 0433     		adds	r3, r3, #4
 4322 1b3c 3B60     		str	r3, [r7]
2082:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     count--;
 4323              		.loc 1 2082 0
 4324 1b3e FB6B     		ldr	r3, [r7, #60]
 4325 1b40 013B     		subs	r3, r3, #1
 4326 1b42 FB63     		str	r3, [r7, #60]
 4327              	.L200:
2078:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 4328              		.loc 1 2078 0 discriminator 1
 4329 1b44 7B68     		ldr	r3, [r7, #4]
 4330 1b46 1B68     		ldr	r3, [r3]
 4331 1b48 5B6B     		ldr	r3, [r3, #52]
 4332 1b4a 03F40013 		and	r3, r3, #2097152
 4333 1b4e 002B     		cmp	r3, #0
 4334 1b50 02D0     		beq	.L201
2078:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 4335              		.loc 1 2078 0 is_stmt 0 discriminator 2
 4336 1b52 FB6B     		ldr	r3, [r7, #60]
 4337 1b54 002B     		cmp	r3, #0
 4338 1b56 E7D1     		bne	.L202
 4339              	.L201:
2083:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2084:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2085:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Clear all the static status flags*/
2086:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 4340              		.loc 1 2086 0 is_stmt 1
 4341 1b58 7B68     		ldr	r3, [r7, #4]
 4342 1b5a 1B68     		ldr	r3, [r3]
 4343 1b5c 40F2FF52 		movw	r2, #1535
 4344 1b60 9A63     		str	r2, [r3, #56]
2087:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2088:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 4345              		.loc 1 2088 0
 4346 1b62 97F83B30 		ldrb	r3, [r7, #59]	@ zero_extendqisi2
 4347              	.L203:
2089:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 4348              		.loc 1 2089 0
 4349 1b66 1846     		mov	r0, r3
 4350 1b68 4437     		adds	r7, r7, #68
 4351 1b6a BD46     		mov	sp, r7
 4352              		@ sp needed
 4353 1b6c 90BD     		pop	{r4, r7, pc}
 4354              		.cfi_endproc
 4355              	.LFE77:
 4357 1b6e 00BF     		.align	2
 4358              		.global	HAL_SD_GetStatus
 4359              		.thumb
 4360              		.thumb_func
 4362              	HAL_SD_GetStatus:
 4363              	.LFB78:
2090:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
2091:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
2092:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Gets the current sd card data status.
2093:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
2094:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval Data Transfer state
2095:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
2096:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** HAL_SD_TransferStateTypedef HAL_SD_GetStatus(SD_HandleTypeDef *hsd)
2097:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 4364              		.loc 1 2097 0
 4365              		.cfi_startproc
 4366              		@ args = 0, pretend = 0, frame = 16
 4367              		@ frame_needed = 1, uses_anonymous_args = 0
 4368 1b70 80B5     		push	{r7, lr}
 4369              		.cfi_def_cfa_offset 8
 4370              		.cfi_offset 7, -8
 4371              		.cfi_offset 14, -4
 4372 1b72 84B0     		sub	sp, sp, #16
 4373              		.cfi_def_cfa_offset 24
 4374 1b74 00AF     		add	r7, sp, #0
 4375              		.cfi_def_cfa_register 7
 4376 1b76 7860     		str	r0, [r7, #4]
2098:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_CardStateTypedef cardstate =  SD_CARD_TRANSFER;
 4377              		.loc 1 2098 0
 4378 1b78 0423     		movs	r3, #4
 4379 1b7a FB73     		strb	r3, [r7, #15]
2099:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
2100:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Get SD card state */
2101:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   cardstate = SD_GetState(hsd);
 4380              		.loc 1 2101 0
 4381 1b7c 7868     		ldr	r0, [r7, #4]
 4382 1b7e 00F0FDF8 		bl	SD_GetState
 4383 1b82 0346     		mov	r3, r0
 4384 1b84 FB73     		strb	r3, [r7, #15]
2102:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2103:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Find SD status according to card state*/
2104:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (cardstate == SD_CARD_TRANSFER)
 4385              		.loc 1 2104 0
 4386 1b86 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4387 1b88 042B     		cmp	r3, #4
 4388 1b8a 01D1     		bne	.L205
2105:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2106:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return SD_TRANSFER_OK;
 4389              		.loc 1 2106 0
 4390 1b8c 0023     		movs	r3, #0
 4391 1b8e 05E0     		b	.L206
 4392              	.L205:
2107:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2108:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else if(cardstate == SD_CARD_ERROR)
 4393              		.loc 1 2108 0
 4394 1b90 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4395 1b92 FF2B     		cmp	r3, #255
 4396 1b94 01D1     		bne	.L207
2109:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2110:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return SD_TRANSFER_ERROR;
 4397              		.loc 1 2110 0
 4398 1b96 0223     		movs	r3, #2
 4399 1b98 00E0     		b	.L206
 4400              	.L207:
2111:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2112:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else
2113:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2114:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return SD_TRANSFER_BUSY;
 4401              		.loc 1 2114 0
 4402 1b9a 0123     		movs	r3, #1
 4403              	.L206:
2115:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2116:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 4404              		.loc 1 2116 0
 4405 1b9c 1846     		mov	r0, r3
 4406 1b9e 1037     		adds	r7, r7, #16
 4407 1ba0 BD46     		mov	sp, r7
 4408              		@ sp needed
 4409 1ba2 80BD     		pop	{r7, pc}
 4410              		.cfi_endproc
 4411              	.LFE78:
 4413              		.align	2
 4414              		.global	HAL_SD_GetCardStatus
 4415              		.thumb
 4416              		.thumb_func
 4418              	HAL_SD_GetCardStatus:
 4419              	.LFB79:
2117:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
2118:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
2119:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Gets the SD card status.
2120:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle      
2121:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  pCardStatus: Pointer to the HAL_SD_CardStatusTypedef structure that 
2122:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         will contain the SD card status information 
2123:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
2124:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
2125:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** HAL_SD_ErrorTypedef HAL_SD_GetCardStatus(SD_HandleTypeDef *hsd, HAL_SD_CardStatusTypedef *pCardStat
2126:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 4420              		.loc 1 2126 0
 4421              		.cfi_startproc
 4422              		@ args = 0, pretend = 0, frame = 80
 4423              		@ frame_needed = 1, uses_anonymous_args = 0
 4424 1ba4 80B5     		push	{r7, lr}
 4425              		.cfi_def_cfa_offset 8
 4426              		.cfi_offset 7, -8
 4427              		.cfi_offset 14, -4
 4428 1ba6 94B0     		sub	sp, sp, #80
 4429              		.cfi_def_cfa_offset 88
 4430 1ba8 00AF     		add	r7, sp, #0
 4431              		.cfi_def_cfa_register 7
 4432 1baa 7860     		str	r0, [r7, #4]
 4433 1bac 3960     		str	r1, [r7]
2127:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 4434              		.loc 1 2127 0
 4435 1bae 0023     		movs	r3, #0
 4436 1bb0 87F84F30 		strb	r3, [r7, #79]
2128:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t tmp = 0;
 4437              		.loc 1 2128 0
 4438 1bb4 0023     		movs	r3, #0
 4439 1bb6 BB64     		str	r3, [r7, #72]
2129:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t SD_STATUS[16];
2130:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2131:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = HAL_SD_SendSDStatus(hsd, SD_STATUS);
 4440              		.loc 1 2131 0
 4441 1bb8 07F10803 		add	r3, r7, #8
 4442 1bbc 7868     		ldr	r0, [r7, #4]
 4443 1bbe 1946     		mov	r1, r3
 4444 1bc0 FFF7FEFF 		bl	HAL_SD_SendSDStatus
 4445 1bc4 0346     		mov	r3, r0
 4446 1bc6 87F84F30 		strb	r3, [r7, #79]
2132:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2133:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (errorState  != SD_OK)
 4447              		.loc 1 2133 0
 4448 1bca 97F84F30 		ldrb	r3, [r7, #79]	@ zero_extendqisi2
 4449 1bce 002B     		cmp	r3, #0
 4450 1bd0 02D0     		beq	.L209
2134:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2135:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 4451              		.loc 1 2135 0
 4452 1bd2 97F84F30 		ldrb	r3, [r7, #79]	@ zero_extendqisi2
 4453 1bd6 7DE0     		b	.L211
 4454              	.L209:
2136:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2137:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2138:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 0 */
2139:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (SD_STATUS[0] & 0xC0) >> 6;
 4455              		.loc 1 2139 0
 4456 1bd8 BB68     		ldr	r3, [r7, #8]
 4457 1bda 03F0C003 		and	r3, r3, #192
 4458 1bde 9B09     		lsrs	r3, r3, #6
 4459 1be0 BB64     		str	r3, [r7, #72]
2140:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardStatus->DAT_BUS_WIDTH = (uint8_t)tmp;
 4460              		.loc 1 2140 0
 4461 1be2 BB6C     		ldr	r3, [r7, #72]
 4462 1be4 DAB2     		uxtb	r2, r3
 4463 1be6 3B68     		ldr	r3, [r7]
 4464 1be8 1A70     		strb	r2, [r3]
2141:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2142:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 0 */
2143:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (SD_STATUS[0] & 0x20) >> 5;
 4465              		.loc 1 2143 0
 4466 1bea BB68     		ldr	r3, [r7, #8]
 4467 1bec 03F02003 		and	r3, r3, #32
 4468 1bf0 5B09     		lsrs	r3, r3, #5
 4469 1bf2 BB64     		str	r3, [r7, #72]
2144:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardStatus->SECURED_MODE = (uint8_t)tmp;
 4470              		.loc 1 2144 0
 4471 1bf4 BB6C     		ldr	r3, [r7, #72]
 4472 1bf6 DAB2     		uxtb	r2, r3
 4473 1bf8 3B68     		ldr	r3, [r7]
 4474 1bfa 5A70     		strb	r2, [r3, #1]
2145:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2146:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 2 */
2147:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (SD_STATUS[2] & 0xFF);
 4475              		.loc 1 2147 0
 4476 1bfc 3B69     		ldr	r3, [r7, #16]
 4477 1bfe DBB2     		uxtb	r3, r3
 4478 1c00 BB64     		str	r3, [r7, #72]
2148:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardStatus->SD_CARD_TYPE = (uint8_t)(tmp << 8);
 4479              		.loc 1 2148 0
 4480 1c02 3B68     		ldr	r3, [r7]
 4481 1c04 0022     		movs	r2, #0
 4482 1c06 5A80     		strh	r2, [r3, #2]	@ movhi
2149:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2150:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 3 */
2151:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (SD_STATUS[3] & 0xFF);
 4483              		.loc 1 2151 0
 4484 1c08 7B69     		ldr	r3, [r7, #20]
 4485 1c0a DBB2     		uxtb	r3, r3
 4486 1c0c BB64     		str	r3, [r7, #72]
2152:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardStatus->SD_CARD_TYPE |= (uint8_t)tmp;
 4487              		.loc 1 2152 0
 4488 1c0e 3B68     		ldr	r3, [r7]
 4489 1c10 5B88     		ldrh	r3, [r3, #2]	@ movhi
 4490 1c12 9AB2     		uxth	r2, r3
 4491 1c14 BB6C     		ldr	r3, [r7, #72]
 4492 1c16 DBB2     		uxtb	r3, r3
 4493 1c18 1343     		orrs	r3, r3, r2
 4494 1c1a 9AB2     		uxth	r2, r3
 4495 1c1c 3B68     		ldr	r3, [r7]
 4496 1c1e 5A80     		strh	r2, [r3, #2]	@ movhi
2153:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2154:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 4 */
2155:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (SD_STATUS[4] & 0xFF);
 4497              		.loc 1 2155 0
 4498 1c20 BB69     		ldr	r3, [r7, #24]
 4499 1c22 DBB2     		uxtb	r3, r3
 4500 1c24 BB64     		str	r3, [r7, #72]
2156:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardStatus->SIZE_OF_PROTECTED_AREA = (uint8_t)(tmp << 24);
 4501              		.loc 1 2156 0
 4502 1c26 3B68     		ldr	r3, [r7]
 4503 1c28 0022     		movs	r2, #0
 4504 1c2a 5A60     		str	r2, [r3, #4]
2157:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2158:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 5 */
2159:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (SD_STATUS[5] & 0xFF);
 4505              		.loc 1 2159 0
 4506 1c2c FB69     		ldr	r3, [r7, #28]
 4507 1c2e DBB2     		uxtb	r3, r3
 4508 1c30 BB64     		str	r3, [r7, #72]
2160:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardStatus->SIZE_OF_PROTECTED_AREA |= (uint8_t)(tmp << 16);
 4509              		.loc 1 2160 0
 4510 1c32 3B68     		ldr	r3, [r7]
 4511 1c34 5A68     		ldr	r2, [r3, #4]
 4512 1c36 3B68     		ldr	r3, [r7]
 4513 1c38 5A60     		str	r2, [r3, #4]
2161:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2162:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 6 */
2163:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (SD_STATUS[6] & 0xFF);
 4514              		.loc 1 2163 0
 4515 1c3a 3B6A     		ldr	r3, [r7, #32]
 4516 1c3c DBB2     		uxtb	r3, r3
 4517 1c3e BB64     		str	r3, [r7, #72]
2164:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardStatus->SIZE_OF_PROTECTED_AREA |= (uint8_t)(tmp << 8);
 4518              		.loc 1 2164 0
 4519 1c40 3B68     		ldr	r3, [r7]
 4520 1c42 5A68     		ldr	r2, [r3, #4]
 4521 1c44 3B68     		ldr	r3, [r7]
 4522 1c46 5A60     		str	r2, [r3, #4]
2165:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2166:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 7 */
2167:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (SD_STATUS[7] & 0xFF);
 4523              		.loc 1 2167 0
 4524 1c48 7B6A     		ldr	r3, [r7, #36]
 4525 1c4a DBB2     		uxtb	r3, r3
 4526 1c4c BB64     		str	r3, [r7, #72]
2168:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardStatus->SIZE_OF_PROTECTED_AREA |= (uint8_t)tmp;
 4527              		.loc 1 2168 0
 4528 1c4e 3B68     		ldr	r3, [r7]
 4529 1c50 5A68     		ldr	r2, [r3, #4]
 4530 1c52 BB6C     		ldr	r3, [r7, #72]
 4531 1c54 DBB2     		uxtb	r3, r3
 4532 1c56 1A43     		orrs	r2, r2, r3
 4533 1c58 3B68     		ldr	r3, [r7]
 4534 1c5a 5A60     		str	r2, [r3, #4]
2169:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2170:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 8 */
2171:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (SD_STATUS[8] & 0xFF);
 4535              		.loc 1 2171 0
 4536 1c5c BB6A     		ldr	r3, [r7, #40]
 4537 1c5e DBB2     		uxtb	r3, r3
 4538 1c60 BB64     		str	r3, [r7, #72]
2172:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardStatus->SPEED_CLASS = (uint8_t)tmp;
 4539              		.loc 1 2172 0
 4540 1c62 BB6C     		ldr	r3, [r7, #72]
 4541 1c64 DAB2     		uxtb	r2, r3
 4542 1c66 3B68     		ldr	r3, [r7]
 4543 1c68 1A72     		strb	r2, [r3, #8]
2173:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2174:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 9 */
2175:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (SD_STATUS[9] & 0xFF);
 4544              		.loc 1 2175 0
 4545 1c6a FB6A     		ldr	r3, [r7, #44]
 4546 1c6c DBB2     		uxtb	r3, r3
 4547 1c6e BB64     		str	r3, [r7, #72]
2176:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardStatus->PERFORMANCE_MOVE = (uint8_t)tmp;
 4548              		.loc 1 2176 0
 4549 1c70 BB6C     		ldr	r3, [r7, #72]
 4550 1c72 DAB2     		uxtb	r2, r3
 4551 1c74 3B68     		ldr	r3, [r7]
 4552 1c76 5A72     		strb	r2, [r3, #9]
2177:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2178:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 10 */
2179:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (SD_STATUS[10] & 0xF0) >> 4;
 4553              		.loc 1 2179 0
 4554 1c78 3B6B     		ldr	r3, [r7, #48]
 4555 1c7a 03F0F003 		and	r3, r3, #240
 4556 1c7e 1B09     		lsrs	r3, r3, #4
 4557 1c80 BB64     		str	r3, [r7, #72]
2180:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardStatus->AU_SIZE = (uint8_t)tmp;
 4558              		.loc 1 2180 0
 4559 1c82 BB6C     		ldr	r3, [r7, #72]
 4560 1c84 DAB2     		uxtb	r2, r3
 4561 1c86 3B68     		ldr	r3, [r7]
 4562 1c88 9A72     		strb	r2, [r3, #10]
2181:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2182:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 11 */
2183:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (SD_STATUS[11] & 0xFF);
 4563              		.loc 1 2183 0
 4564 1c8a 7B6B     		ldr	r3, [r7, #52]
 4565 1c8c DBB2     		uxtb	r3, r3
 4566 1c8e BB64     		str	r3, [r7, #72]
2184:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardStatus->ERASE_SIZE = (uint8_t)(tmp << 8);
 4567              		.loc 1 2184 0
 4568 1c90 3B68     		ldr	r3, [r7]
 4569 1c92 0022     		movs	r2, #0
 4570 1c94 9A81     		strh	r2, [r3, #12]	@ movhi
2185:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2186:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 12 */
2187:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (SD_STATUS[12] & 0xFF);
 4571              		.loc 1 2187 0
 4572 1c96 BB6B     		ldr	r3, [r7, #56]
 4573 1c98 DBB2     		uxtb	r3, r3
 4574 1c9a BB64     		str	r3, [r7, #72]
2188:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardStatus->ERASE_SIZE |= (uint8_t)tmp;
 4575              		.loc 1 2188 0
 4576 1c9c 3B68     		ldr	r3, [r7]
 4577 1c9e 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4578 1ca0 9AB2     		uxth	r2, r3
 4579 1ca2 BB6C     		ldr	r3, [r7, #72]
 4580 1ca4 DBB2     		uxtb	r3, r3
 4581 1ca6 1343     		orrs	r3, r3, r2
 4582 1ca8 9AB2     		uxth	r2, r3
 4583 1caa 3B68     		ldr	r3, [r7]
 4584 1cac 9A81     		strh	r2, [r3, #12]	@ movhi
2189:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2190:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 13 */
2191:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (SD_STATUS[13] & 0xFC) >> 2;
 4585              		.loc 1 2191 0
 4586 1cae FB6B     		ldr	r3, [r7, #60]
 4587 1cb0 03F0FC03 		and	r3, r3, #252
 4588 1cb4 9B08     		lsrs	r3, r3, #2
 4589 1cb6 BB64     		str	r3, [r7, #72]
2192:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardStatus->ERASE_TIMEOUT = (uint8_t)tmp;
 4590              		.loc 1 2192 0
 4591 1cb8 BB6C     		ldr	r3, [r7, #72]
 4592 1cba DAB2     		uxtb	r2, r3
 4593 1cbc 3B68     		ldr	r3, [r7]
 4594 1cbe 9A73     		strb	r2, [r3, #14]
2193:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2194:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Byte 13 */
2195:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = (SD_STATUS[13] & 0x3);
 4595              		.loc 1 2195 0
 4596 1cc0 FB6B     		ldr	r3, [r7, #60]
 4597 1cc2 03F00303 		and	r3, r3, #3
 4598 1cc6 BB64     		str	r3, [r7, #72]
2196:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   pCardStatus->ERASE_OFFSET = (uint8_t)tmp;
 4599              		.loc 1 2196 0
 4600 1cc8 BB6C     		ldr	r3, [r7, #72]
 4601 1cca DAB2     		uxtb	r2, r3
 4602 1ccc 3B68     		ldr	r3, [r7]
 4603 1cce DA73     		strb	r2, [r3, #15]
2197:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2198:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 4604              		.loc 1 2198 0
 4605 1cd0 97F84F30 		ldrb	r3, [r7, #79]	@ zero_extendqisi2
 4606              	.L211:
2199:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 4607              		.loc 1 2199 0
 4608 1cd4 1846     		mov	r0, r3
 4609 1cd6 5037     		adds	r7, r7, #80
 4610 1cd8 BD46     		mov	sp, r7
 4611              		@ sp needed
 4612 1cda 80BD     		pop	{r7, pc}
 4613              		.cfi_endproc
 4614              	.LFE79:
 4616              		.align	2
 4617              		.thumb
 4618              		.thumb_func
 4620              	SD_DMA_RxCplt:
 4621              	.LFB80:
2200:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****          
2201:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
2202:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @}
2203:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
2204:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
2205:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
2206:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  SD DMA transfer complete Rx callback.
2207:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hdma: DMA handle 
2208:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval None
2209:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
2210:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static void SD_DMA_RxCplt(DMA_HandleTypeDef *hdma)
2211:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 4622              		.loc 1 2211 0
 4623              		.cfi_startproc
 4624              		@ args = 0, pretend = 0, frame = 16
 4625              		@ frame_needed = 1, uses_anonymous_args = 0
 4626 1cdc 80B5     		push	{r7, lr}
 4627              		.cfi_def_cfa_offset 8
 4628              		.cfi_offset 7, -8
 4629              		.cfi_offset 14, -4
 4630 1cde 84B0     		sub	sp, sp, #16
 4631              		.cfi_def_cfa_offset 24
 4632 1ce0 00AF     		add	r7, sp, #0
 4633              		.cfi_def_cfa_register 7
 4634 1ce2 7860     		str	r0, [r7, #4]
2212:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SD_HandleTypeDef *hsd = (SD_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 4635              		.loc 1 2212 0
 4636 1ce4 7B68     		ldr	r3, [r7, #4]
 4637 1ce6 9B6B     		ldr	r3, [r3, #56]
 4638 1ce8 FB60     		str	r3, [r7, #12]
2213:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2214:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* DMA transfer is complete */
2215:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   hsd->DmaTransferCplt = 1;
 4639              		.loc 1 2215 0
 4640 1cea FB68     		ldr	r3, [r7, #12]
 4641 1cec 0122     		movs	r2, #1
 4642 1cee 1A65     		str	r2, [r3, #80]
2216:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2217:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Wait until SD transfer is complete */
2218:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   while(hsd->SdTransferCplt == 0)
 4643              		.loc 1 2218 0
 4644 1cf0 00BF     		nop
 4645              	.L213:
 4646              		.loc 1 2218 0 is_stmt 0 discriminator 1
 4647 1cf2 FB68     		ldr	r3, [r7, #12]
 4648 1cf4 9B6C     		ldr	r3, [r3, #72]
 4649 1cf6 002B     		cmp	r3, #0
 4650 1cf8 FBD0     		beq	.L213
2219:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2220:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2221:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2222:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Transfer complete user callback */
2223:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_DMA_RxCpltCallback(hsd->hdmarx);   
 4651              		.loc 1 2223 0 is_stmt 1
 4652 1cfa FB68     		ldr	r3, [r7, #12]
 4653 1cfc 9B6D     		ldr	r3, [r3, #88]
 4654 1cfe 1846     		mov	r0, r3
 4655 1d00 FFF7FEFF 		bl	HAL_SD_DMA_RxCpltCallback
2224:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 4656              		.loc 1 2224 0
 4657 1d04 1037     		adds	r7, r7, #16
 4658 1d06 BD46     		mov	sp, r7
 4659              		@ sp needed
 4660 1d08 80BD     		pop	{r7, pc}
 4661              		.cfi_endproc
 4662              	.LFE80:
 4664 1d0a 00BF     		.align	2
 4665              		.thumb
 4666              		.thumb_func
 4668              	SD_DMA_RxError:
 4669              	.LFB81:
2225:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
2226:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
2227:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  SD DMA transfer Error Rx callback.
2228:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hdma: DMA handle 
2229:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval None
2230:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
2231:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static void SD_DMA_RxError(DMA_HandleTypeDef *hdma)
2232:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 4670              		.loc 1 2232 0
 4671              		.cfi_startproc
 4672              		@ args = 0, pretend = 0, frame = 16
 4673              		@ frame_needed = 1, uses_anonymous_args = 0
 4674 1d0c 80B5     		push	{r7, lr}
 4675              		.cfi_def_cfa_offset 8
 4676              		.cfi_offset 7, -8
 4677              		.cfi_offset 14, -4
 4678 1d0e 84B0     		sub	sp, sp, #16
 4679              		.cfi_def_cfa_offset 24
 4680 1d10 00AF     		add	r7, sp, #0
 4681              		.cfi_def_cfa_register 7
 4682 1d12 7860     		str	r0, [r7, #4]
2233:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SD_HandleTypeDef *hsd = (SD_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 4683              		.loc 1 2233 0
 4684 1d14 7B68     		ldr	r3, [r7, #4]
 4685 1d16 9B6B     		ldr	r3, [r3, #56]
 4686 1d18 FB60     		str	r3, [r7, #12]
2234:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2235:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Transfer complete user callback */
2236:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_DMA_RxErrorCallback(hsd->hdmarx);
 4687              		.loc 1 2236 0
 4688 1d1a FB68     		ldr	r3, [r7, #12]
 4689 1d1c 9B6D     		ldr	r3, [r3, #88]
 4690 1d1e 1846     		mov	r0, r3
 4691 1d20 FFF7FEFF 		bl	HAL_SD_DMA_RxErrorCallback
2237:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 4692              		.loc 1 2237 0
 4693 1d24 1037     		adds	r7, r7, #16
 4694 1d26 BD46     		mov	sp, r7
 4695              		@ sp needed
 4696 1d28 80BD     		pop	{r7, pc}
 4697              		.cfi_endproc
 4698              	.LFE81:
 4700 1d2a 00BF     		.align	2
 4701              		.thumb
 4702              		.thumb_func
 4704              	SD_DMA_TxCplt:
 4705              	.LFB82:
2238:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
2239:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
2240:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  SD DMA transfer complete Tx callback.
2241:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hdma: DMA handle 
2242:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval None
2243:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
2244:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static void SD_DMA_TxCplt(DMA_HandleTypeDef *hdma)
2245:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 4706              		.loc 1 2245 0
 4707              		.cfi_startproc
 4708              		@ args = 0, pretend = 0, frame = 16
 4709              		@ frame_needed = 1, uses_anonymous_args = 0
 4710 1d2c 80B5     		push	{r7, lr}
 4711              		.cfi_def_cfa_offset 8
 4712              		.cfi_offset 7, -8
 4713              		.cfi_offset 14, -4
 4714 1d2e 84B0     		sub	sp, sp, #16
 4715              		.cfi_def_cfa_offset 24
 4716 1d30 00AF     		add	r7, sp, #0
 4717              		.cfi_def_cfa_register 7
 4718 1d32 7860     		str	r0, [r7, #4]
2246:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SD_HandleTypeDef *hsd = (SD_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 4719              		.loc 1 2246 0
 4720 1d34 7B68     		ldr	r3, [r7, #4]
 4721 1d36 9B6B     		ldr	r3, [r3, #56]
 4722 1d38 FB60     		str	r3, [r7, #12]
2247:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2248:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* DMA transfer is complete */
2249:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   hsd->DmaTransferCplt = 1;
 4723              		.loc 1 2249 0
 4724 1d3a FB68     		ldr	r3, [r7, #12]
 4725 1d3c 0122     		movs	r2, #1
 4726 1d3e 1A65     		str	r2, [r3, #80]
2250:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2251:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Wait until SD transfer is complete */
2252:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   while(hsd->SdTransferCplt == 0)
 4727              		.loc 1 2252 0
 4728 1d40 00BF     		nop
 4729              	.L216:
 4730              		.loc 1 2252 0 is_stmt 0 discriminator 1
 4731 1d42 FB68     		ldr	r3, [r7, #12]
 4732 1d44 9B6C     		ldr	r3, [r3, #72]
 4733 1d46 002B     		cmp	r3, #0
 4734 1d48 FBD0     		beq	.L216
2253:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2254:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2255:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2256:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Transfer complete user callback */
2257:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_DMA_TxCpltCallback(hsd->hdmatx);  
 4735              		.loc 1 2257 0 is_stmt 1
 4736 1d4a FB68     		ldr	r3, [r7, #12]
 4737 1d4c DB6D     		ldr	r3, [r3, #92]
 4738 1d4e 1846     		mov	r0, r3
 4739 1d50 FFF7FEFF 		bl	HAL_SD_DMA_TxCpltCallback
2258:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 4740              		.loc 1 2258 0
 4741 1d54 1037     		adds	r7, r7, #16
 4742 1d56 BD46     		mov	sp, r7
 4743              		@ sp needed
 4744 1d58 80BD     		pop	{r7, pc}
 4745              		.cfi_endproc
 4746              	.LFE82:
 4748 1d5a 00BF     		.align	2
 4749              		.thumb
 4750              		.thumb_func
 4752              	SD_DMA_TxError:
 4753              	.LFB83:
2259:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
2260:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
2261:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  SD DMA transfer Error Tx callback.
2262:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hdma: DMA handle 
2263:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval None
2264:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
2265:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static void SD_DMA_TxError(DMA_HandleTypeDef *hdma)
2266:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 4754              		.loc 1 2266 0
 4755              		.cfi_startproc
 4756              		@ args = 0, pretend = 0, frame = 16
 4757              		@ frame_needed = 1, uses_anonymous_args = 0
 4758 1d5c 80B5     		push	{r7, lr}
 4759              		.cfi_def_cfa_offset 8
 4760              		.cfi_offset 7, -8
 4761              		.cfi_offset 14, -4
 4762 1d5e 84B0     		sub	sp, sp, #16
 4763              		.cfi_def_cfa_offset 24
 4764 1d60 00AF     		add	r7, sp, #0
 4765              		.cfi_def_cfa_register 7
 4766 1d62 7860     		str	r0, [r7, #4]
2267:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SD_HandleTypeDef *hsd = ( SD_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4767              		.loc 1 2267 0
 4768 1d64 7B68     		ldr	r3, [r7, #4]
 4769 1d66 9B6B     		ldr	r3, [r3, #56]
 4770 1d68 FB60     		str	r3, [r7, #12]
2268:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2269:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Transfer complete user callback */
2270:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_DMA_TxErrorCallback(hsd->hdmatx);
 4771              		.loc 1 2270 0
 4772 1d6a FB68     		ldr	r3, [r7, #12]
 4773 1d6c DB6D     		ldr	r3, [r3, #92]
 4774 1d6e 1846     		mov	r0, r3
 4775 1d70 FFF7FEFF 		bl	HAL_SD_DMA_TxErrorCallback
2271:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 4776              		.loc 1 2271 0
 4777 1d74 1037     		adds	r7, r7, #16
 4778 1d76 BD46     		mov	sp, r7
 4779              		@ sp needed
 4780 1d78 80BD     		pop	{r7, pc}
 4781              		.cfi_endproc
 4782              	.LFE83:
 4784 1d7a 00BF     		.align	2
 4785              		.thumb
 4786              		.thumb_func
 4788              	SD_GetState:
 4789              	.LFB84:
2272:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
2273:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
2274:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Returns the SD current state.
2275:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
2276:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD card current state
2277:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
2278:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_CardStateTypedef SD_GetState(SD_HandleTypeDef *hsd)
2279:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 4790              		.loc 1 2279 0
 4791              		.cfi_startproc
 4792              		@ args = 0, pretend = 0, frame = 16
 4793              		@ frame_needed = 1, uses_anonymous_args = 0
 4794 1d7c 80B5     		push	{r7, lr}
 4795              		.cfi_def_cfa_offset 8
 4796              		.cfi_offset 7, -8
 4797              		.cfi_offset 14, -4
 4798 1d7e 84B0     		sub	sp, sp, #16
 4799              		.cfi_def_cfa_offset 24
 4800 1d80 00AF     		add	r7, sp, #0
 4801              		.cfi_def_cfa_register 7
 4802 1d82 7860     		str	r0, [r7, #4]
2280:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t resp1 = 0;
 4803              		.loc 1 2280 0
 4804 1d84 0023     		movs	r3, #0
 4805 1d86 FB60     		str	r3, [r7, #12]
2281:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
2282:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (SD_SendStatus(hsd, &resp1) != SD_OK)
 4806              		.loc 1 2282 0
 4807 1d88 07F10C03 		add	r3, r7, #12
 4808 1d8c 7868     		ldr	r0, [r7, #4]
 4809 1d8e 1946     		mov	r1, r3
 4810 1d90 00F0F4F9 		bl	SD_SendStatus
 4811 1d94 0346     		mov	r3, r0
 4812 1d96 002B     		cmp	r3, #0
 4813 1d98 01D0     		beq	.L219
2283:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2284:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return SD_CARD_ERROR;
 4814              		.loc 1 2284 0
 4815 1d9a FF23     		movs	r3, #255
 4816 1d9c 05E0     		b	.L221
 4817              	.L219:
2285:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2286:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else
2287:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2288:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return (HAL_SD_CardStateTypedef)((resp1 >> 9) & 0x0F);
 4818              		.loc 1 2288 0
 4819 1d9e FB68     		ldr	r3, [r7, #12]
 4820 1da0 5B0A     		lsrs	r3, r3, #9
 4821 1da2 DBB2     		uxtb	r3, r3
 4822 1da4 03F00F03 		and	r3, r3, #15
 4823 1da8 DBB2     		uxtb	r3, r3
 4824              	.L221:
2289:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2290:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 4825              		.loc 1 2290 0
 4826 1daa 1846     		mov	r0, r3
 4827 1dac 1037     		adds	r7, r7, #16
 4828 1dae BD46     		mov	sp, r7
 4829              		@ sp needed
 4830 1db0 80BD     		pop	{r7, pc}
 4831              		.cfi_endproc
 4832              	.LFE84:
 4834 1db2 00BF     		.align	2
 4835              		.thumb
 4836              		.thumb_func
 4838              	SD_Initialize_Cards:
 4839              	.LFB85:
2291:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
2292:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
2293:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Initializes all cards or single card as the case may be Card(s) come 
2294:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         into standby state.
2295:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
2296:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
2297:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
2298:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_Initialize_Cards(SD_HandleTypeDef *hsd)
2299:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 4840              		.loc 1 2299 0
 4841              		.cfi_startproc
 4842              		@ args = 0, pretend = 0, frame = 40
 4843              		@ frame_needed = 1, uses_anonymous_args = 0
 4844 1db4 80B5     		push	{r7, lr}
 4845              		.cfi_def_cfa_offset 8
 4846              		.cfi_offset 7, -8
 4847              		.cfi_offset 14, -4
 4848 1db6 8AB0     		sub	sp, sp, #40
 4849              		.cfi_def_cfa_offset 48
 4850 1db8 00AF     		add	r7, sp, #0
 4851              		.cfi_def_cfa_register 7
 4852 1dba 7860     		str	r0, [r7, #4]
2300:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitTypeDef SDIO_CmdInitStructure; 
2301:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 4853              		.loc 1 2301 0
 4854 1dbc 0023     		movs	r3, #0
 4855 1dbe 87F82730 		strb	r3, [r7, #39]
2302:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint16_t sd_rca = 1;
 4856              		.loc 1 2302 0
 4857 1dc2 0123     		movs	r3, #1
 4858 1dc4 FB81     		strh	r3, [r7, #14]	@ movhi
2303:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2304:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(SDIO_GetPowerState(hsd->Instance) == 0) /* Power off */
 4859              		.loc 1 2304 0
 4860 1dc6 7B68     		ldr	r3, [r7, #4]
 4861 1dc8 1B68     		ldr	r3, [r3]
 4862 1dca 1846     		mov	r0, r3
 4863 1dcc FFF7FEFF 		bl	SDIO_GetPowerState
 4864 1dd0 0346     		mov	r3, r0
 4865 1dd2 002B     		cmp	r3, #0
 4866 1dd4 05D1     		bne	.L223
2305:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2306:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_REQUEST_NOT_APPLICABLE;
 4867              		.loc 1 2306 0
 4868 1dd6 2523     		movs	r3, #37
 4869 1dd8 87F82730 		strb	r3, [r7, #39]
2307:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2308:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 4870              		.loc 1 2308 0
 4871 1ddc 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4872 1de0 A7E0     		b	.L231
 4873              	.L223:
2309:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2310:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2311:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(hsd->CardType != SECURE_DIGITAL_IO_CARD)
 4874              		.loc 1 2311 0
 4875 1de2 7B68     		ldr	r3, [r7, #4]
 4876 1de4 1B6A     		ldr	r3, [r3, #32]
 4877 1de6 042B     		cmp	r3, #4
 4878 1de8 37D0     		beq	.L225
2312:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2313:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Send CMD2 ALL_SEND_CID */
2314:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.Argument         = 0;
 4879              		.loc 1 2314 0
 4880 1dea 0023     		movs	r3, #0
 4881 1dec 3B61     		str	r3, [r7, #16]
2315:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.CmdIndex         = SD_CMD_ALL_SEND_CID;
 4882              		.loc 1 2315 0
 4883 1dee 0223     		movs	r3, #2
 4884 1df0 7B61     		str	r3, [r7, #20]
2316:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.Response         = SDIO_RESPONSE_LONG;
 4885              		.loc 1 2316 0
 4886 1df2 C023     		movs	r3, #192
 4887 1df4 BB61     		str	r3, [r7, #24]
2317:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 4888              		.loc 1 2317 0
 4889 1df6 0023     		movs	r3, #0
 4890 1df8 FB61     		str	r3, [r7, #28]
2318:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.CPSM             = SDIO_CPSM_ENABLE;
 4891              		.loc 1 2318 0
 4892 1dfa 4FF48063 		mov	r3, #1024
 4893 1dfe 3B62     		str	r3, [r7, #32]
2319:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 4894              		.loc 1 2319 0
 4895 1e00 7B68     		ldr	r3, [r7, #4]
 4896 1e02 1A68     		ldr	r2, [r3]
 4897 1e04 07F11003 		add	r3, r7, #16
 4898 1e08 1046     		mov	r0, r2
 4899 1e0a 1946     		mov	r1, r3
 4900 1e0c FFF7FEFF 		bl	SDIO_SendCommand
2320:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2321:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Check for error conditions */
2322:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CmdResp2Error(hsd);
 4901              		.loc 1 2322 0
 4902 1e10 7868     		ldr	r0, [r7, #4]
 4903 1e12 00F081FB 		bl	SD_CmdResp2Error
 4904 1e16 0346     		mov	r3, r0
 4905 1e18 87F82730 		strb	r3, [r7, #39]
2323:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2324:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     if(errorState != SD_OK)
 4906              		.loc 1 2324 0
 4907 1e1c 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4908 1e20 002B     		cmp	r3, #0
 4909 1e22 02D0     		beq	.L226
2325:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
2326:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       return errorState;
 4910              		.loc 1 2326 0
 4911 1e24 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4912 1e28 83E0     		b	.L231
 4913              	.L226:
2327:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
2328:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2329:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Get Card identification number data */
2330:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     hsd->CID[0] = SDIO_GetResponse(SDIO_RESP1);
 4914              		.loc 1 2330 0
 4915 1e2a 0020     		movs	r0, #0
 4916 1e2c FFF7FEFF 		bl	SDIO_GetResponse
 4917 1e30 0246     		mov	r2, r0
 4918 1e32 7B68     		ldr	r3, [r7, #4]
 4919 1e34 9A63     		str	r2, [r3, #56]
2331:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     hsd->CID[1] = SDIO_GetResponse(SDIO_RESP2);
 4920              		.loc 1 2331 0
 4921 1e36 0420     		movs	r0, #4
 4922 1e38 FFF7FEFF 		bl	SDIO_GetResponse
 4923 1e3c 0246     		mov	r2, r0
 4924 1e3e 7B68     		ldr	r3, [r7, #4]
 4925 1e40 DA63     		str	r2, [r3, #60]
2332:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     hsd->CID[2] = SDIO_GetResponse(SDIO_RESP3);
 4926              		.loc 1 2332 0
 4927 1e42 0820     		movs	r0, #8
 4928 1e44 FFF7FEFF 		bl	SDIO_GetResponse
 4929 1e48 0246     		mov	r2, r0
 4930 1e4a 7B68     		ldr	r3, [r7, #4]
 4931 1e4c 1A64     		str	r2, [r3, #64]
2333:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     hsd->CID[3] = SDIO_GetResponse(SDIO_RESP4);
 4932              		.loc 1 2333 0
 4933 1e4e 0C20     		movs	r0, #12
 4934 1e50 FFF7FEFF 		bl	SDIO_GetResponse
 4935 1e54 0246     		mov	r2, r0
 4936 1e56 7B68     		ldr	r3, [r7, #4]
 4937 1e58 5A64     		str	r2, [r3, #68]
 4938              	.L225:
2334:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2335:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2336:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((hsd->CardType == STD_CAPACITY_SD_CARD_V1_1)    || (hsd->CardType == STD_CAPACITY_SD_CARD_V2_0
 4939              		.loc 1 2336 0
 4940 1e5a 7B68     		ldr	r3, [r7, #4]
 4941 1e5c 1B6A     		ldr	r3, [r3, #32]
 4942 1e5e 002B     		cmp	r3, #0
 4943 1e60 0BD0     		beq	.L227
 4944              		.loc 1 2336 0 is_stmt 0 discriminator 1
 4945 1e62 7B68     		ldr	r3, [r7, #4]
 4946 1e64 1B6A     		ldr	r3, [r3, #32]
 4947 1e66 012B     		cmp	r3, #1
 4948 1e68 07D0     		beq	.L227
2337:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****      (hsd->CardType == SECURE_DIGITAL_IO_COMBO_CARD) || (hsd->CardType == HIGH_CAPACITY_SD_CARD))
 4949              		.loc 1 2337 0 is_stmt 1 discriminator 1
 4950 1e6a 7B68     		ldr	r3, [r7, #4]
 4951 1e6c 1B6A     		ldr	r3, [r3, #32]
2336:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****      (hsd->CardType == SECURE_DIGITAL_IO_COMBO_CARD) || (hsd->CardType == HIGH_CAPACITY_SD_CARD))
 4952              		.loc 1 2336 0 discriminator 1
 4953 1e6e 062B     		cmp	r3, #6
 4954 1e70 03D0     		beq	.L227
 4955              		.loc 1 2337 0
 4956 1e72 7B68     		ldr	r3, [r7, #4]
 4957 1e74 1B6A     		ldr	r3, [r3, #32]
 4958 1e76 022B     		cmp	r3, #2
 4959 1e78 1CD1     		bne	.L228
 4960              	.L227:
2338:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2339:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Send CMD3 SET_REL_ADDR with argument 0 */
2340:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* SD Card publishes its RCA. */
2341:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.CmdIndex         = SD_CMD_SET_REL_ADDR;
 4961              		.loc 1 2341 0
 4962 1e7a 0323     		movs	r3, #3
 4963 1e7c 7B61     		str	r3, [r7, #20]
2342:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.Response         = SDIO_RESPONSE_SHORT;
 4964              		.loc 1 2342 0
 4965 1e7e 4023     		movs	r3, #64
 4966 1e80 BB61     		str	r3, [r7, #24]
2343:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 4967              		.loc 1 2343 0
 4968 1e82 7B68     		ldr	r3, [r7, #4]
 4969 1e84 1A68     		ldr	r2, [r3]
 4970 1e86 07F11003 		add	r3, r7, #16
 4971 1e8a 1046     		mov	r0, r2
 4972 1e8c 1946     		mov	r1, r3
 4973 1e8e FFF7FEFF 		bl	SDIO_SendCommand
2344:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2345:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Check for error conditions */
2346:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CmdResp6Error(hsd, SD_CMD_SET_REL_ADDR, &sd_rca);
 4974              		.loc 1 2346 0
 4975 1e92 07F10E03 		add	r3, r7, #14
 4976 1e96 7868     		ldr	r0, [r7, #4]
 4977 1e98 0321     		movs	r1, #3
 4978 1e9a 1A46     		mov	r2, r3
 4979 1e9c 00F074FB 		bl	SD_CmdResp6Error
 4980 1ea0 0346     		mov	r3, r0
 4981 1ea2 87F82730 		strb	r3, [r7, #39]
2347:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2348:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     if(errorState != SD_OK)
 4982              		.loc 1 2348 0
 4983 1ea6 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4984 1eaa 002B     		cmp	r3, #0
 4985 1eac 02D0     		beq	.L228
2349:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
2350:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       return errorState;
 4986              		.loc 1 2350 0
 4987 1eae 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4988 1eb2 3EE0     		b	.L231
 4989              	.L228:
2351:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
2352:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2353:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2354:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (hsd->CardType != SECURE_DIGITAL_IO_CARD)
 4990              		.loc 1 2354 0
 4991 1eb4 7B68     		ldr	r3, [r7, #4]
 4992 1eb6 1B6A     		ldr	r3, [r3, #32]
 4993 1eb8 042B     		cmp	r3, #4
 4994 1eba 38D0     		beq	.L229
2355:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2356:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Get the SD card RCA */
2357:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     hsd->RCA = sd_rca;
 4995              		.loc 1 2357 0
 4996 1ebc FB89     		ldrh	r3, [r7, #14]
 4997 1ebe 1A46     		mov	r2, r3
 4998 1ec0 7B68     		ldr	r3, [r7, #4]
 4999 1ec2 5A62     		str	r2, [r3, #36]
2358:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2359:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Send CMD9 SEND_CSD with argument as card's RCA */
2360:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.Argument         = (uint32_t)(hsd->RCA << 16);
 5000              		.loc 1 2360 0
 5001 1ec4 7B68     		ldr	r3, [r7, #4]
 5002 1ec6 5B6A     		ldr	r3, [r3, #36]
 5003 1ec8 1B04     		lsls	r3, r3, #16
 5004 1eca 3B61     		str	r3, [r7, #16]
2361:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.CmdIndex         = SD_CMD_SEND_CSD;
 5005              		.loc 1 2361 0
 5006 1ecc 0923     		movs	r3, #9
 5007 1ece 7B61     		str	r3, [r7, #20]
2362:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.Response         = SDIO_RESPONSE_LONG;
 5008              		.loc 1 2362 0
 5009 1ed0 C023     		movs	r3, #192
 5010 1ed2 BB61     		str	r3, [r7, #24]
2363:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 5011              		.loc 1 2363 0
 5012 1ed4 7B68     		ldr	r3, [r7, #4]
 5013 1ed6 1A68     		ldr	r2, [r3]
 5014 1ed8 07F11003 		add	r3, r7, #16
 5015 1edc 1046     		mov	r0, r2
 5016 1ede 1946     		mov	r1, r3
 5017 1ee0 FFF7FEFF 		bl	SDIO_SendCommand
2364:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2365:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Check for error conditions */
2366:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CmdResp2Error(hsd);
 5018              		.loc 1 2366 0
 5019 1ee4 7868     		ldr	r0, [r7, #4]
 5020 1ee6 00F017FB 		bl	SD_CmdResp2Error
 5021 1eea 0346     		mov	r3, r0
 5022 1eec 87F82730 		strb	r3, [r7, #39]
2367:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2368:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     if(errorState != SD_OK)
 5023              		.loc 1 2368 0
 5024 1ef0 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5025 1ef4 002B     		cmp	r3, #0
 5026 1ef6 02D0     		beq	.L230
2369:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
2370:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       return errorState;
 5027              		.loc 1 2370 0
 5028 1ef8 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5029 1efc 19E0     		b	.L231
 5030              	.L230:
2371:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
2372:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2373:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Get Card Specific Data */
2374:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     hsd->CSD[0] = SDIO_GetResponse(SDIO_RESP1);
 5031              		.loc 1 2374 0
 5032 1efe 0020     		movs	r0, #0
 5033 1f00 FFF7FEFF 		bl	SDIO_GetResponse
 5034 1f04 0246     		mov	r2, r0
 5035 1f06 7B68     		ldr	r3, [r7, #4]
 5036 1f08 9A62     		str	r2, [r3, #40]
2375:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     hsd->CSD[1] = SDIO_GetResponse(SDIO_RESP2);
 5037              		.loc 1 2375 0
 5038 1f0a 0420     		movs	r0, #4
 5039 1f0c FFF7FEFF 		bl	SDIO_GetResponse
 5040 1f10 0246     		mov	r2, r0
 5041 1f12 7B68     		ldr	r3, [r7, #4]
 5042 1f14 DA62     		str	r2, [r3, #44]
2376:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     hsd->CSD[2] = SDIO_GetResponse(SDIO_RESP3);
 5043              		.loc 1 2376 0
 5044 1f16 0820     		movs	r0, #8
 5045 1f18 FFF7FEFF 		bl	SDIO_GetResponse
 5046 1f1c 0246     		mov	r2, r0
 5047 1f1e 7B68     		ldr	r3, [r7, #4]
 5048 1f20 1A63     		str	r2, [r3, #48]
2377:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     hsd->CSD[3] = SDIO_GetResponse(SDIO_RESP4);
 5049              		.loc 1 2377 0
 5050 1f22 0C20     		movs	r0, #12
 5051 1f24 FFF7FEFF 		bl	SDIO_GetResponse
 5052 1f28 0246     		mov	r2, r0
 5053 1f2a 7B68     		ldr	r3, [r7, #4]
 5054 1f2c 5A63     		str	r2, [r3, #52]
 5055              	.L229:
2378:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2379:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2380:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* All cards are initialized */
2381:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 5056              		.loc 1 2381 0
 5057 1f2e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5058              	.L231:
2382:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 5059              		.loc 1 2382 0
 5060 1f32 1846     		mov	r0, r3
 5061 1f34 2837     		adds	r7, r7, #40
 5062 1f36 BD46     		mov	sp, r7
 5063              		@ sp needed
 5064 1f38 80BD     		pop	{r7, pc}
 5065              		.cfi_endproc
 5066              	.LFE85:
 5068 1f3a 00BF     		.align	2
 5069              		.thumb
 5070              		.thumb_func
 5072              	SD_Select_Deselect:
 5073              	.LFB86:
2383:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
2384:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
2385:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Selects od Deselects the corresponding card.
2386:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
2387:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  addr: Address of the card to be selected  
2388:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
2389:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
2390:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_Select_Deselect(SD_HandleTypeDef *hsd, uint64_t addr)
2391:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 5074              		.loc 1 2391 0
 5075              		.cfi_startproc
 5076              		@ args = 0, pretend = 0, frame = 40
 5077              		@ frame_needed = 1, uses_anonymous_args = 0
 5078 1f3c 80B5     		push	{r7, lr}
 5079              		.cfi_def_cfa_offset 8
 5080              		.cfi_offset 7, -8
 5081              		.cfi_offset 14, -4
 5082 1f3e 8AB0     		sub	sp, sp, #40
 5083              		.cfi_def_cfa_offset 48
 5084 1f40 00AF     		add	r7, sp, #0
 5085              		.cfi_def_cfa_register 7
 5086 1f42 F860     		str	r0, [r7, #12]
 5087 1f44 C7E90023 		strd	r2, [r7]
2392:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitTypeDef SDIO_CmdInitStructure;
2393:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 5088              		.loc 1 2393 0
 5089 1f48 0023     		movs	r3, #0
 5090 1f4a 87F82730 		strb	r3, [r7, #39]
2394:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2395:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Send CMD7 SDIO_SEL_DESEL_CARD */
2396:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Argument         = (uint32_t)addr;
 5091              		.loc 1 2396 0
 5092 1f4e 3B68     		ldr	r3, [r7]
 5093 1f50 3B61     		str	r3, [r7, #16]
2397:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CmdIndex         = SD_CMD_SEL_DESEL_CARD;
 5094              		.loc 1 2397 0
 5095 1f52 0723     		movs	r3, #7
 5096 1f54 7B61     		str	r3, [r7, #20]
2398:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Response         = SDIO_RESPONSE_SHORT;
 5097              		.loc 1 2398 0
 5098 1f56 4023     		movs	r3, #64
 5099 1f58 BB61     		str	r3, [r7, #24]
2399:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 5100              		.loc 1 2399 0
 5101 1f5a 0023     		movs	r3, #0
 5102 1f5c FB61     		str	r3, [r7, #28]
2400:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CPSM             = SDIO_CPSM_ENABLE;
 5103              		.loc 1 2400 0
 5104 1f5e 4FF48063 		mov	r3, #1024
 5105 1f62 3B62     		str	r3, [r7, #32]
2401:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 5106              		.loc 1 2401 0
 5107 1f64 FB68     		ldr	r3, [r7, #12]
 5108 1f66 1A68     		ldr	r2, [r3]
 5109 1f68 07F11003 		add	r3, r7, #16
 5110 1f6c 1046     		mov	r0, r2
 5111 1f6e 1946     		mov	r1, r3
 5112 1f70 FFF7FEFF 		bl	SDIO_SendCommand
2402:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2403:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check for error conditions */
2404:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = SD_CmdResp1Error(hsd, SD_CMD_SEL_DESEL_CARD);
 5113              		.loc 1 2404 0
 5114 1f74 F868     		ldr	r0, [r7, #12]
 5115 1f76 0721     		movs	r1, #7
 5116 1f78 00F0CEF9 		bl	SD_CmdResp1Error
 5117 1f7c 0346     		mov	r3, r0
 5118 1f7e 87F82730 		strb	r3, [r7, #39]
2405:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2406:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 5119              		.loc 1 2406 0
 5120 1f82 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
2407:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 5121              		.loc 1 2407 0
 5122 1f86 1846     		mov	r0, r3
 5123 1f88 2837     		adds	r7, r7, #40
 5124 1f8a BD46     		mov	sp, r7
 5125              		@ sp needed
 5126 1f8c 80BD     		pop	{r7, pc}
 5127              		.cfi_endproc
 5128              	.LFE86:
 5130 1f8e 00BF     		.align	2
 5131              		.thumb
 5132              		.thumb_func
 5134              	SD_PowerON:
 5135              	.LFB87:
2408:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
2409:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
2410:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Enquires cards about their operating voltage and configures clock
2411:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         controls and stores SD information that will be needed in future
2412:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         in the SD handle.
2413:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
2414:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
2415:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
2416:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_PowerON(SD_HandleTypeDef *hsd)
2417:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 5136              		.loc 1 2417 0
 5137              		.cfi_startproc
 5138              		@ args = 0, pretend = 0, frame = 48
 5139              		@ frame_needed = 1, uses_anonymous_args = 0
 5140 1f90 80B5     		push	{r7, lr}
 5141              		.cfi_def_cfa_offset 8
 5142              		.cfi_offset 7, -8
 5143              		.cfi_offset 14, -4
 5144 1f92 8CB0     		sub	sp, sp, #48
 5145              		.cfi_def_cfa_offset 56
 5146 1f94 00AF     		add	r7, sp, #0
 5147              		.cfi_def_cfa_register 7
 5148 1f96 7860     		str	r0, [r7, #4]
2418:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitTypeDef SDIO_CmdInitStructure; 
2419:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   __IO HAL_SD_ErrorTypedef errorState = SD_OK; 
 5149              		.loc 1 2419 0
 5150 1f98 0023     		movs	r3, #0
 5151 1f9a FB72     		strb	r3, [r7, #11]
2420:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t response = 0, count = 0, validvoltage = 0;
 5152              		.loc 1 2420 0
 5153 1f9c 0023     		movs	r3, #0
 5154 1f9e FB62     		str	r3, [r7, #44]
 5155 1fa0 0023     		movs	r3, #0
 5156 1fa2 BB62     		str	r3, [r7, #40]
 5157 1fa4 0023     		movs	r3, #0
 5158 1fa6 7B62     		str	r3, [r7, #36]
2421:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t SDType = SD_STD_CAPACITY;
 5159              		.loc 1 2421 0
 5160 1fa8 0023     		movs	r3, #0
 5161 1faa 3B62     		str	r3, [r7, #32]
2422:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2423:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Power ON Sequence -------------------------------------------------------*/
2424:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Disable SDIO Clock */
2425:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   __HAL_SD_SDIO_DISABLE(); 
 5162              		.loc 1 2425 0
 5163 1fac 48F2A003 		movw	r3, #32928
 5164 1fb0 C4F22523 		movt	r3, 16933
 5165 1fb4 0022     		movs	r2, #0
 5166 1fb6 1A60     		str	r2, [r3]
2426:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2427:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Set Power State to ON */
2428:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_PowerState_ON(hsd->Instance);
 5167              		.loc 1 2428 0
 5168 1fb8 7B68     		ldr	r3, [r7, #4]
 5169 1fba 1B68     		ldr	r3, [r3]
 5170 1fbc 1846     		mov	r0, r3
 5171 1fbe FFF7FEFF 		bl	SDIO_PowerState_ON
2429:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2430:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Enable SDIO Clock */
2431:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   __HAL_SD_SDIO_ENABLE();
 5172              		.loc 1 2431 0
 5173 1fc2 48F2A003 		movw	r3, #32928
 5174 1fc6 C4F22523 		movt	r3, 16933
 5175 1fca 0122     		movs	r2, #1
 5176 1fcc 1A60     		str	r2, [r3]
2432:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2433:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* CMD0: GO_IDLE_STATE -----------------------------------------------------*/
2434:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* No CMD response required */
2435:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Argument         = 0;
 5177              		.loc 1 2435 0
 5178 1fce 0023     		movs	r3, #0
 5179 1fd0 FB60     		str	r3, [r7, #12]
2436:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CmdIndex         = SD_CMD_GO_IDLE_STATE;
 5180              		.loc 1 2436 0
 5181 1fd2 0023     		movs	r3, #0
 5182 1fd4 3B61     		str	r3, [r7, #16]
2437:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Response         = SDIO_RESPONSE_NO;
 5183              		.loc 1 2437 0
 5184 1fd6 0023     		movs	r3, #0
 5185 1fd8 7B61     		str	r3, [r7, #20]
2438:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 5186              		.loc 1 2438 0
 5187 1fda 0023     		movs	r3, #0
 5188 1fdc BB61     		str	r3, [r7, #24]
2439:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CPSM             = SDIO_CPSM_ENABLE;
 5189              		.loc 1 2439 0
 5190 1fde 4FF48063 		mov	r3, #1024
 5191 1fe2 FB61     		str	r3, [r7, #28]
2440:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 5192              		.loc 1 2440 0
 5193 1fe4 7B68     		ldr	r3, [r7, #4]
 5194 1fe6 1A68     		ldr	r2, [r3]
 5195 1fe8 07F10C03 		add	r3, r7, #12
 5196 1fec 1046     		mov	r0, r2
 5197 1fee 1946     		mov	r1, r3
 5198 1ff0 FFF7FEFF 		bl	SDIO_SendCommand
2441:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2442:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check for error conditions */
2443:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = SD_CmdError(hsd);
 5199              		.loc 1 2443 0
 5200 1ff4 7868     		ldr	r0, [r7, #4]
 5201 1ff6 00F0FBF8 		bl	SD_CmdError
 5202 1ffa 0346     		mov	r3, r0
 5203 1ffc FB72     		strb	r3, [r7, #11]
2444:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2445:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(errorState != SD_OK)
 5204              		.loc 1 2445 0
 5205 1ffe FB7A     		ldrb	r3, [r7, #11]
 5206 2000 DBB2     		uxtb	r3, r3
 5207 2002 002B     		cmp	r3, #0
 5208 2004 02D0     		beq	.L235
2446:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2447:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* CMD Response TimeOut (wait for CMDSENT flag) */
2448:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 5209              		.loc 1 2448 0
 5210 2006 FB7A     		ldrb	r3, [r7, #11]
 5211 2008 DBB2     		uxtb	r3, r3
 5212 200a A2E0     		b	.L245
 5213              	.L235:
2449:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2450:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2451:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* CMD8: SEND_IF_COND ------------------------------------------------------*/
2452:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Send CMD8 to verify SD card interface operating condition */
2453:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Argument: - [31:12]: Reserved (shall be set to '0')
2454:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   - [11:8]: Supply Voltage (VHS) 0x1 (Range: 2.7-3.6 V)
2455:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   - [7:0]: Check Pattern (recommended 0xAA) */
2456:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* CMD Response: R7 */
2457:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Argument         = SD_CHECK_PATTERN;
 5214              		.loc 1 2457 0
 5215 200c 4FF4D573 		mov	r3, #426
 5216 2010 FB60     		str	r3, [r7, #12]
2458:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CmdIndex         = SD_SDIO_SEND_IF_COND;
 5217              		.loc 1 2458 0
 5218 2012 0823     		movs	r3, #8
 5219 2014 3B61     		str	r3, [r7, #16]
2459:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Response         = SDIO_RESPONSE_SHORT;
 5220              		.loc 1 2459 0
 5221 2016 4023     		movs	r3, #64
 5222 2018 7B61     		str	r3, [r7, #20]
2460:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 5223              		.loc 1 2460 0
 5224 201a 7B68     		ldr	r3, [r7, #4]
 5225 201c 1A68     		ldr	r2, [r3]
 5226 201e 07F10C03 		add	r3, r7, #12
 5227 2022 1046     		mov	r0, r2
 5228 2024 1946     		mov	r1, r3
 5229 2026 FFF7FEFF 		bl	SDIO_SendCommand
2461:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2462:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check for error conditions */ 
2463:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = SD_CmdResp7Error(hsd);
 5230              		.loc 1 2463 0
 5231 202a 7868     		ldr	r0, [r7, #4]
 5232 202c 00F01CF9 		bl	SD_CmdResp7Error
 5233 2030 0346     		mov	r3, r0
 5234 2032 FB72     		strb	r3, [r7, #11]
2464:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2465:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (errorState == SD_OK)
 5235              		.loc 1 2465 0
 5236 2034 FB7A     		ldrb	r3, [r7, #11]
 5237 2036 DBB2     		uxtb	r3, r3
 5238 2038 002B     		cmp	r3, #0
 5239 203a 05D1     		bne	.L237
2466:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2467:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* SD Card 2.0 */
2468:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     hsd->CardType = STD_CAPACITY_SD_CARD_V2_0; 
 5240              		.loc 1 2468 0
 5241 203c 7B68     		ldr	r3, [r7, #4]
 5242 203e 0122     		movs	r2, #1
 5243 2040 1A62     		str	r2, [r3, #32]
2469:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDType        = SD_HIGH_CAPACITY;
 5244              		.loc 1 2469 0
 5245 2042 4FF08043 		mov	r3, #1073741824
 5246 2046 3B62     		str	r3, [r7, #32]
 5247              	.L237:
2470:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2471:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2472:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Send CMD55 */
2473:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Argument         = 0;
 5248              		.loc 1 2473 0
 5249 2048 0023     		movs	r3, #0
 5250 204a FB60     		str	r3, [r7, #12]
2474:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CmdIndex         = SD_CMD_APP_CMD;
 5251              		.loc 1 2474 0
 5252 204c 3723     		movs	r3, #55
 5253 204e 3B61     		str	r3, [r7, #16]
2475:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 5254              		.loc 1 2475 0
 5255 2050 7B68     		ldr	r3, [r7, #4]
 5256 2052 1A68     		ldr	r2, [r3]
 5257 2054 07F10C03 		add	r3, r7, #12
 5258 2058 1046     		mov	r0, r2
 5259 205a 1946     		mov	r1, r3
 5260 205c FFF7FEFF 		bl	SDIO_SendCommand
2476:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2477:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check for error conditions */
2478:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = SD_CmdResp1Error(hsd, SD_CMD_APP_CMD);
 5261              		.loc 1 2478 0
 5262 2060 7868     		ldr	r0, [r7, #4]
 5263 2062 3721     		movs	r1, #55
 5264 2064 00F058F9 		bl	SD_CmdResp1Error
 5265 2068 0346     		mov	r3, r0
 5266 206a FB72     		strb	r3, [r7, #11]
2479:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2480:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* If errorState is Command TimeOut, it is a MMC card */
2481:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* If errorState is SD_OK it is a SD card: SD card 2.0 (voltage range mismatch)
2482:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****      or SD card 1.x */
2483:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(errorState == SD_OK)
 5267              		.loc 1 2483 0
 5268 206c FB7A     		ldrb	r3, [r7, #11]
 5269 206e DBB2     		uxtb	r3, r3
 5270 2070 002B     		cmp	r3, #0
 5271 2072 6CD1     		bne	.L238
2484:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2485:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* SD CARD */
2486:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Send ACMD41 SD_APP_OP_COND with Argument 0x80100000 */
2487:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     while((!validvoltage) && (count < SD_MAX_VOLT_TRIAL))
 5272              		.loc 1 2487 0
 5273 2074 51E0     		b	.L239
 5274              	.L243:
2488:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
2489:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
2490:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       /* SEND CMD55 APP_CMD with RCA as 0 */
2491:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       SDIO_CmdInitStructure.Argument         = 0;
 5275              		.loc 1 2491 0
 5276 2076 0023     		movs	r3, #0
 5277 2078 FB60     		str	r3, [r7, #12]
2492:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       SDIO_CmdInitStructure.CmdIndex         = SD_CMD_APP_CMD;
 5278              		.loc 1 2492 0
 5279 207a 3723     		movs	r3, #55
 5280 207c 3B61     		str	r3, [r7, #16]
2493:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       SDIO_CmdInitStructure.Response         = SDIO_RESPONSE_SHORT;
 5281              		.loc 1 2493 0
 5282 207e 4023     		movs	r3, #64
 5283 2080 7B61     		str	r3, [r7, #20]
2494:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 5284              		.loc 1 2494 0
 5285 2082 0023     		movs	r3, #0
 5286 2084 BB61     		str	r3, [r7, #24]
2495:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       SDIO_CmdInitStructure.CPSM             = SDIO_CPSM_ENABLE;
 5287              		.loc 1 2495 0
 5288 2086 4FF48063 		mov	r3, #1024
 5289 208a FB61     		str	r3, [r7, #28]
2496:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 5290              		.loc 1 2496 0
 5291 208c 7B68     		ldr	r3, [r7, #4]
 5292 208e 1A68     		ldr	r2, [r3]
 5293 2090 07F10C03 		add	r3, r7, #12
 5294 2094 1046     		mov	r0, r2
 5295 2096 1946     		mov	r1, r3
 5296 2098 FFF7FEFF 		bl	SDIO_SendCommand
2497:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
2498:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       /* Check for error conditions */
2499:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       errorState = SD_CmdResp1Error(hsd, SD_CMD_APP_CMD);
 5297              		.loc 1 2499 0
 5298 209c 7868     		ldr	r0, [r7, #4]
 5299 209e 3721     		movs	r1, #55
 5300 20a0 00F03AF9 		bl	SD_CmdResp1Error
 5301 20a4 0346     		mov	r3, r0
 5302 20a6 FB72     		strb	r3, [r7, #11]
2500:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
2501:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       if(errorState != SD_OK)
 5303              		.loc 1 2501 0
 5304 20a8 FB7A     		ldrb	r3, [r7, #11]
 5305 20aa DBB2     		uxtb	r3, r3
 5306 20ac 002B     		cmp	r3, #0
 5307 20ae 02D0     		beq	.L240
2502:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       {
2503:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         return errorState;
 5308              		.loc 1 2503 0
 5309 20b0 FB7A     		ldrb	r3, [r7, #11]
 5310 20b2 DBB2     		uxtb	r3, r3
 5311 20b4 4DE0     		b	.L245
 5312              	.L240:
2504:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       }
2505:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
2506:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       /* Send CMD41 */
2507:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       SDIO_CmdInitStructure.Argument         = SD_VOLTAGE_WINDOW_SD | SDType;
 5313              		.loc 1 2507 0
 5314 20b6 3B6A     		ldr	r3, [r7, #32]
 5315 20b8 43F00043 		orr	r3, r3, #-2147483648
 5316 20bc 43F48013 		orr	r3, r3, #1048576
 5317 20c0 FB60     		str	r3, [r7, #12]
2508:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       SDIO_CmdInitStructure.CmdIndex         = SD_CMD_SD_APP_OP_COND;
 5318              		.loc 1 2508 0
 5319 20c2 2923     		movs	r3, #41
 5320 20c4 3B61     		str	r3, [r7, #16]
2509:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       SDIO_CmdInitStructure.Response         = SDIO_RESPONSE_SHORT;
 5321              		.loc 1 2509 0
 5322 20c6 4023     		movs	r3, #64
 5323 20c8 7B61     		str	r3, [r7, #20]
2510:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 5324              		.loc 1 2510 0
 5325 20ca 0023     		movs	r3, #0
 5326 20cc BB61     		str	r3, [r7, #24]
2511:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       SDIO_CmdInitStructure.CPSM             = SDIO_CPSM_ENABLE;
 5327              		.loc 1 2511 0
 5328 20ce 4FF48063 		mov	r3, #1024
 5329 20d2 FB61     		str	r3, [r7, #28]
2512:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 5330              		.loc 1 2512 0
 5331 20d4 7B68     		ldr	r3, [r7, #4]
 5332 20d6 1A68     		ldr	r2, [r3]
 5333 20d8 07F10C03 		add	r3, r7, #12
 5334 20dc 1046     		mov	r0, r2
 5335 20de 1946     		mov	r1, r3
 5336 20e0 FFF7FEFF 		bl	SDIO_SendCommand
2513:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
2514:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       /* Check for error conditions */
2515:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       errorState = SD_CmdResp3Error(hsd);
 5337              		.loc 1 2515 0
 5338 20e4 7868     		ldr	r0, [r7, #4]
 5339 20e6 00F0EDF9 		bl	SD_CmdResp3Error
 5340 20ea 0346     		mov	r3, r0
 5341 20ec FB72     		strb	r3, [r7, #11]
2516:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
2517:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       if(errorState != SD_OK)
 5342              		.loc 1 2517 0
 5343 20ee FB7A     		ldrb	r3, [r7, #11]
 5344 20f0 DBB2     		uxtb	r3, r3
 5345 20f2 002B     		cmp	r3, #0
 5346 20f4 02D0     		beq	.L241
2518:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       {
2519:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****         return errorState;
 5347              		.loc 1 2519 0
 5348 20f6 FB7A     		ldrb	r3, [r7, #11]
 5349 20f8 DBB2     		uxtb	r3, r3
 5350 20fa 2AE0     		b	.L245
 5351              	.L241:
2520:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       }
2521:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
2522:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       /* Get command response */
2523:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       response = SDIO_GetResponse(SDIO_RESP1);
 5352              		.loc 1 2523 0
 5353 20fc 0020     		movs	r0, #0
 5354 20fe FFF7FEFF 		bl	SDIO_GetResponse
 5355 2102 F862     		str	r0, [r7, #44]
2524:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
2525:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       /* Get operating voltage*/
2526:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       validvoltage = (((response >> 31) == 1) ? 1 : 0);
 5356              		.loc 1 2526 0
 5357 2104 FB6A     		ldr	r3, [r7, #44]
 5358 2106 DB0F     		lsrs	r3, r3, #31
 5359 2108 012B     		cmp	r3, #1
 5360 210a 14BF     		ite	ne
 5361 210c 0023     		movne	r3, #0
 5362 210e 0123     		moveq	r3, #1
 5363 2110 DBB2     		uxtb	r3, r3
 5364 2112 7B62     		str	r3, [r7, #36]
2527:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
2528:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       count++;
 5365              		.loc 1 2528 0
 5366 2114 BB6A     		ldr	r3, [r7, #40]
 5367 2116 0133     		adds	r3, r3, #1
 5368 2118 BB62     		str	r3, [r7, #40]
 5369              	.L239:
2487:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
 5370              		.loc 1 2487 0 discriminator 1
 5371 211a 7B6A     		ldr	r3, [r7, #36]
 5372 211c 002B     		cmp	r3, #0
 5373 211e 04D1     		bne	.L242
2487:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
 5374              		.loc 1 2487 0 is_stmt 0 discriminator 2
 5375 2120 BA6A     		ldr	r2, [r7, #40]
 5376 2122 4FF6FE73 		movw	r3, #65534
 5377 2126 9A42     		cmp	r2, r3
 5378 2128 A5D9     		bls	.L243
 5379              	.L242:
2529:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
2530:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2531:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     if(count >= SD_MAX_VOLT_TRIAL)
 5380              		.loc 1 2531 0 is_stmt 1
 5381 212a BA6A     		ldr	r2, [r7, #40]
 5382 212c 4FF6FE73 		movw	r3, #65534
 5383 2130 9A42     		cmp	r2, r3
 5384 2132 04D9     		bls	.L244
2532:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
2533:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       errorState = SD_INVALID_VOLTRANGE;
 5385              		.loc 1 2533 0
 5386 2134 1B23     		movs	r3, #27
 5387 2136 FB72     		strb	r3, [r7, #11]
2534:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       
2535:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       return errorState;
 5388              		.loc 1 2535 0
 5389 2138 FB7A     		ldrb	r3, [r7, #11]
 5390 213a DBB2     		uxtb	r3, r3
 5391 213c 09E0     		b	.L245
 5392              	.L244:
2536:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
2537:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2538:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     if((response & SD_HIGH_CAPACITY) == SD_HIGH_CAPACITY) /* (response &= SD_HIGH_CAPACITY) */
 5393              		.loc 1 2538 0
 5394 213e FB6A     		ldr	r3, [r7, #44]
 5395 2140 03F08043 		and	r3, r3, #1073741824
 5396 2144 002B     		cmp	r3, #0
 5397 2146 02D0     		beq	.L238
2539:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
2540:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       hsd->CardType = HIGH_CAPACITY_SD_CARD;
 5398              		.loc 1 2540 0
 5399 2148 7B68     		ldr	r3, [r7, #4]
 5400 214a 0222     		movs	r2, #2
 5401 214c 1A62     		str	r2, [r3, #32]
 5402              	.L238:
2541:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
2542:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2543:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   } /* else MMC Card */
2544:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2545:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 5403              		.loc 1 2545 0
 5404 214e FB7A     		ldrb	r3, [r7, #11]
 5405 2150 DBB2     		uxtb	r3, r3
 5406              	.L245:
2546:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 5407              		.loc 1 2546 0
 5408 2152 1846     		mov	r0, r3
 5409 2154 3037     		adds	r7, r7, #48
 5410 2156 BD46     		mov	sp, r7
 5411              		@ sp needed
 5412 2158 80BD     		pop	{r7, pc}
 5413              		.cfi_endproc
 5414              	.LFE87:
 5416 215a 00BF     		.align	2
 5417              		.thumb
 5418              		.thumb_func
 5420              	SD_PowerOFF:
 5421              	.LFB88:
2547:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
2548:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
2549:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Turns the SDIO output signals off.
2550:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
2551:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
2552:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
2553:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_PowerOFF(SD_HandleTypeDef *hsd)
2554:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 5422              		.loc 1 2554 0
 5423              		.cfi_startproc
 5424              		@ args = 0, pretend = 0, frame = 16
 5425              		@ frame_needed = 1, uses_anonymous_args = 0
 5426 215c 80B5     		push	{r7, lr}
 5427              		.cfi_def_cfa_offset 8
 5428              		.cfi_offset 7, -8
 5429              		.cfi_offset 14, -4
 5430 215e 84B0     		sub	sp, sp, #16
 5431              		.cfi_def_cfa_offset 24
 5432 2160 00AF     		add	r7, sp, #0
 5433              		.cfi_def_cfa_register 7
 5434 2162 7860     		str	r0, [r7, #4]
2555:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 5435              		.loc 1 2555 0
 5436 2164 0023     		movs	r3, #0
 5437 2166 FB73     		strb	r3, [r7, #15]
2556:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2557:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Set Power State to OFF */
2558:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_PowerState_OFF(hsd->Instance);
 5438              		.loc 1 2558 0
 5439 2168 7B68     		ldr	r3, [r7, #4]
 5440 216a 1B68     		ldr	r3, [r3]
 5441 216c 1846     		mov	r0, r3
 5442 216e FFF7FEFF 		bl	SDIO_PowerState_OFF
2559:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2560:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 5443              		.loc 1 2560 0
 5444 2172 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2561:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 5445              		.loc 1 2561 0
 5446 2174 1846     		mov	r0, r3
 5447 2176 1037     		adds	r7, r7, #16
 5448 2178 BD46     		mov	sp, r7
 5449              		@ sp needed
 5450 217a 80BD     		pop	{r7, pc}
 5451              		.cfi_endproc
 5452              	.LFE88:
 5454              		.align	2
 5455              		.thumb
 5456              		.thumb_func
 5458              	SD_SendStatus:
 5459              	.LFB89:
2562:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
2563:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
2564:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Returns the current card's status.
2565:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
2566:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  pCardStatus: pointer to the buffer that will contain the SD card 
2567:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         status (Card Status register)  
2568:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
2569:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
2570:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_SendStatus(SD_HandleTypeDef *hsd, uint32_t *pCardStatus)
2571:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 5460              		.loc 1 2571 0
 5461              		.cfi_startproc
 5462              		@ args = 0, pretend = 0, frame = 32
 5463              		@ frame_needed = 1, uses_anonymous_args = 0
 5464 217c 80B5     		push	{r7, lr}
 5465              		.cfi_def_cfa_offset 8
 5466              		.cfi_offset 7, -8
 5467              		.cfi_offset 14, -4
 5468 217e 88B0     		sub	sp, sp, #32
 5469              		.cfi_def_cfa_offset 40
 5470 2180 00AF     		add	r7, sp, #0
 5471              		.cfi_def_cfa_register 7
 5472 2182 7860     		str	r0, [r7, #4]
 5473 2184 3960     		str	r1, [r7]
2572:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitTypeDef SDIO_CmdInitStructure;
2573:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 5474              		.loc 1 2573 0
 5475 2186 0023     		movs	r3, #0
 5476 2188 FB77     		strb	r3, [r7, #31]
2574:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2575:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(pCardStatus == NULL)
 5477              		.loc 1 2575 0
 5478 218a 3B68     		ldr	r3, [r7]
 5479 218c 002B     		cmp	r3, #0
 5480 218e 03D1     		bne	.L249
2576:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2577:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_INVALID_PARAMETER;
 5481              		.loc 1 2577 0
 5482 2190 2623     		movs	r3, #38
 5483 2192 FB77     		strb	r3, [r7, #31]
2578:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2579:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 5484              		.loc 1 2579 0
 5485 2194 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 5486 2196 26E0     		b	.L252
 5487              	.L249:
2580:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2581:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2582:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Send Status command */
2583:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Argument         = (uint32_t)(hsd->RCA << 16);
 5488              		.loc 1 2583 0
 5489 2198 7B68     		ldr	r3, [r7, #4]
 5490 219a 5B6A     		ldr	r3, [r3, #36]
 5491 219c 1B04     		lsls	r3, r3, #16
 5492 219e BB60     		str	r3, [r7, #8]
2584:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CmdIndex         = SD_CMD_SEND_STATUS;
 5493              		.loc 1 2584 0
 5494 21a0 0D23     		movs	r3, #13
 5495 21a2 FB60     		str	r3, [r7, #12]
2585:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Response         = SDIO_RESPONSE_SHORT;
 5496              		.loc 1 2585 0
 5497 21a4 4023     		movs	r3, #64
 5498 21a6 3B61     		str	r3, [r7, #16]
2586:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 5499              		.loc 1 2586 0
 5500 21a8 0023     		movs	r3, #0
 5501 21aa 7B61     		str	r3, [r7, #20]
2587:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CPSM             = SDIO_CPSM_ENABLE;
 5502              		.loc 1 2587 0
 5503 21ac 4FF48063 		mov	r3, #1024
 5504 21b0 BB61     		str	r3, [r7, #24]
2588:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 5505              		.loc 1 2588 0
 5506 21b2 7B68     		ldr	r3, [r7, #4]
 5507 21b4 1A68     		ldr	r2, [r3]
 5508 21b6 07F10803 		add	r3, r7, #8
 5509 21ba 1046     		mov	r0, r2
 5510 21bc 1946     		mov	r1, r3
 5511 21be FFF7FEFF 		bl	SDIO_SendCommand
2589:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2590:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check for error conditions */
2591:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = SD_CmdResp1Error(hsd, SD_CMD_SEND_STATUS);
 5512              		.loc 1 2591 0
 5513 21c2 7868     		ldr	r0, [r7, #4]
 5514 21c4 0D21     		movs	r1, #13
 5515 21c6 00F0A7F8 		bl	SD_CmdResp1Error
 5516 21ca 0346     		mov	r3, r0
 5517 21cc FB77     		strb	r3, [r7, #31]
2592:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2593:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(errorState != SD_OK)
 5518              		.loc 1 2593 0
 5519 21ce FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 5520 21d0 002B     		cmp	r3, #0
 5521 21d2 01D0     		beq	.L251
2594:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2595:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 5522              		.loc 1 2595 0
 5523 21d4 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 5524 21d6 06E0     		b	.L252
 5525              	.L251:
2596:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2597:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2598:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Get SD card status */
2599:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *pCardStatus = SDIO_GetResponse(SDIO_RESP1);
 5526              		.loc 1 2599 0
 5527 21d8 0020     		movs	r0, #0
 5528 21da FFF7FEFF 		bl	SDIO_GetResponse
 5529 21de 0246     		mov	r2, r0
 5530 21e0 3B68     		ldr	r3, [r7]
 5531 21e2 1A60     		str	r2, [r3]
2600:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2601:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 5532              		.loc 1 2601 0
 5533 21e4 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 5534              	.L252:
2602:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 5535              		.loc 1 2602 0
 5536 21e6 1846     		mov	r0, r3
 5537 21e8 2037     		adds	r7, r7, #32
 5538 21ea BD46     		mov	sp, r7
 5539              		@ sp needed
 5540 21ec 80BD     		pop	{r7, pc}
 5541              		.cfi_endproc
 5542              	.LFE89:
 5544 21ee 00BF     		.align	2
 5545              		.thumb
 5546              		.thumb_func
 5548              	SD_CmdError:
 5549              	.LFB90:
2603:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
2604:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
2605:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Checks for error conditions for CMD0.
2606:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
2607:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
2608:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
2609:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_CmdError(SD_HandleTypeDef *hsd)
2610:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 5550              		.loc 1 2610 0
 5551              		.cfi_startproc
 5552              		@ args = 0, pretend = 0, frame = 24
 5553              		@ frame_needed = 1, uses_anonymous_args = 0
 5554              		@ link register save eliminated.
 5555 21f0 80B4     		push	{r7}
 5556              		.cfi_def_cfa_offset 4
 5557              		.cfi_offset 7, -4
 5558 21f2 87B0     		sub	sp, sp, #28
 5559              		.cfi_def_cfa_offset 32
 5560 21f4 00AF     		add	r7, sp, #0
 5561              		.cfi_def_cfa_register 7
 5562 21f6 7860     		str	r0, [r7, #4]
2611:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 5563              		.loc 1 2611 0
 5564 21f8 0023     		movs	r3, #0
 5565 21fa FB73     		strb	r3, [r7, #15]
2612:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t timeout, tmp;
2613:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2614:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   timeout = SDIO_CMD0TIMEOUT;
 5566              		.loc 1 2614 0
 5567 21fc 4FF48033 		mov	r3, #65536
 5568 2200 7B61     		str	r3, [r7, #20]
2615:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2616:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = __HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_CMDSENT);
 5569              		.loc 1 2616 0
 5570 2202 7B68     		ldr	r3, [r7, #4]
 5571 2204 1B68     		ldr	r3, [r3]
 5572 2206 5B6B     		ldr	r3, [r3, #52]
 5573 2208 03F08003 		and	r3, r3, #128
 5574 220c 002B     		cmp	r3, #0
 5575 220e 0CBF     		ite	eq
 5576 2210 0023     		moveq	r3, #0
 5577 2212 0123     		movne	r3, #1
 5578 2214 DBB2     		uxtb	r3, r3
 5579 2216 3B61     		str	r3, [r7, #16]
2617:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2618:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   while((timeout > 0) && (!tmp))
 5580              		.loc 1 2618 0
 5581 2218 0DE0     		b	.L254
 5582              	.L256:
2619:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2620:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     tmp = __HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_CMDSENT);
 5583              		.loc 1 2620 0
 5584 221a 7B68     		ldr	r3, [r7, #4]
 5585 221c 1B68     		ldr	r3, [r3]
 5586 221e 5B6B     		ldr	r3, [r3, #52]
 5587 2220 03F08003 		and	r3, r3, #128
 5588 2224 002B     		cmp	r3, #0
 5589 2226 0CBF     		ite	eq
 5590 2228 0023     		moveq	r3, #0
 5591 222a 0123     		movne	r3, #1
 5592 222c DBB2     		uxtb	r3, r3
 5593 222e 3B61     		str	r3, [r7, #16]
2621:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     timeout--;
 5594              		.loc 1 2621 0
 5595 2230 7B69     		ldr	r3, [r7, #20]
 5596 2232 013B     		subs	r3, r3, #1
 5597 2234 7B61     		str	r3, [r7, #20]
 5598              	.L254:
2618:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 5599              		.loc 1 2618 0 discriminator 1
 5600 2236 7B69     		ldr	r3, [r7, #20]
 5601 2238 002B     		cmp	r3, #0
 5602 223a 02D0     		beq	.L255
2618:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 5603              		.loc 1 2618 0 is_stmt 0 discriminator 2
 5604 223c 3B69     		ldr	r3, [r7, #16]
 5605 223e 002B     		cmp	r3, #0
 5606 2240 EBD0     		beq	.L256
 5607              	.L255:
2622:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2623:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2624:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(timeout == 0)
 5608              		.loc 1 2624 0 is_stmt 1
 5609 2242 7B69     		ldr	r3, [r7, #20]
 5610 2244 002B     		cmp	r3, #0
 5611 2246 03D1     		bne	.L257
2625:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2626:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CMD_RSP_TIMEOUT;
 5612              		.loc 1 2626 0
 5613 2248 0323     		movs	r3, #3
 5614 224a FB73     		strb	r3, [r7, #15]
2627:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 5615              		.loc 1 2627 0
 5616 224c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5617 224e 05E0     		b	.L258
 5618              	.L257:
2628:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2629:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2630:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Clear all the static flags */
2631:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 5619              		.loc 1 2631 0
 5620 2250 7B68     		ldr	r3, [r7, #4]
 5621 2252 1B68     		ldr	r3, [r3]
 5622 2254 40F2FF52 		movw	r2, #1535
 5623 2258 9A63     		str	r2, [r3, #56]
2632:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2633:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 5624              		.loc 1 2633 0
 5625 225a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5626              	.L258:
2634:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 5627              		.loc 1 2634 0
 5628 225c 1846     		mov	r0, r3
 5629 225e 1C37     		adds	r7, r7, #28
 5630 2260 BD46     		mov	sp, r7
 5631              		@ sp needed
 5632 2262 5DF8047B 		ldr	r7, [sp], #4
 5633 2266 7047     		bx	lr
 5634              		.cfi_endproc
 5635              	.LFE90:
 5637              		.align	2
 5638              		.thumb
 5639              		.thumb_func
 5641              	SD_CmdResp7Error:
 5642              	.LFB91:
2635:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
2636:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
2637:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Checks for error conditions for R7 response.
2638:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
2639:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
2640:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
2641:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_CmdResp7Error(SD_HandleTypeDef *hsd)
2642:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 5643              		.loc 1 2642 0
 5644              		.cfi_startproc
 5645              		@ args = 0, pretend = 0, frame = 24
 5646              		@ frame_needed = 1, uses_anonymous_args = 0
 5647              		@ link register save eliminated.
 5648 2268 80B4     		push	{r7}
 5649              		.cfi_def_cfa_offset 4
 5650              		.cfi_offset 7, -4
 5651 226a 87B0     		sub	sp, sp, #28
 5652              		.cfi_def_cfa_offset 32
 5653 226c 00AF     		add	r7, sp, #0
 5654              		.cfi_def_cfa_register 7
 5655 226e 7860     		str	r0, [r7, #4]
2643:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_ERROR;
 5656              		.loc 1 2643 0
 5657 2270 2923     		movs	r3, #41
 5658 2272 FB73     		strb	r3, [r7, #15]
2644:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t timeout = SDIO_CMD0TIMEOUT, tmp;
 5659              		.loc 1 2644 0
 5660 2274 4FF48033 		mov	r3, #65536
 5661 2278 7B61     		str	r3, [r7, #20]
2645:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2646:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = __HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT); 
 5662              		.loc 1 2646 0
 5663 227a 7B68     		ldr	r3, [r7, #4]
 5664 227c 1B68     		ldr	r3, [r3]
 5665 227e 5B6B     		ldr	r3, [r3, #52]
 5666 2280 03F04503 		and	r3, r3, #69
 5667 2284 002B     		cmp	r3, #0
 5668 2286 0CBF     		ite	eq
 5669 2288 0023     		moveq	r3, #0
 5670 228a 0123     		movne	r3, #1
 5671 228c DBB2     		uxtb	r3, r3
 5672 228e 3B61     		str	r3, [r7, #16]
2647:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2648:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   while((!tmp) && (timeout > 0))
 5673              		.loc 1 2648 0
 5674 2290 0DE0     		b	.L260
 5675              	.L262:
2649:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2650:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     tmp = __HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT);
 5676              		.loc 1 2650 0
 5677 2292 7B68     		ldr	r3, [r7, #4]
 5678 2294 1B68     		ldr	r3, [r3]
 5679 2296 5B6B     		ldr	r3, [r3, #52]
 5680 2298 03F04503 		and	r3, r3, #69
 5681 229c 002B     		cmp	r3, #0
 5682 229e 0CBF     		ite	eq
 5683 22a0 0023     		moveq	r3, #0
 5684 22a2 0123     		movne	r3, #1
 5685 22a4 DBB2     		uxtb	r3, r3
 5686 22a6 3B61     		str	r3, [r7, #16]
2651:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     timeout--;
 5687              		.loc 1 2651 0
 5688 22a8 7B69     		ldr	r3, [r7, #20]
 5689 22aa 013B     		subs	r3, r3, #1
 5690 22ac 7B61     		str	r3, [r7, #20]
 5691              	.L260:
2648:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 5692              		.loc 1 2648 0 discriminator 1
 5693 22ae 3B69     		ldr	r3, [r7, #16]
 5694 22b0 002B     		cmp	r3, #0
 5695 22b2 02D1     		bne	.L261
2648:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 5696              		.loc 1 2648 0 is_stmt 0 discriminator 2
 5697 22b4 7B69     		ldr	r3, [r7, #20]
 5698 22b6 002B     		cmp	r3, #0
 5699 22b8 EBD1     		bne	.L262
 5700              	.L261:
2652:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2653:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2654:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   tmp = __HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_CTIMEOUT); 
 5701              		.loc 1 2654 0 is_stmt 1
 5702 22ba 7B68     		ldr	r3, [r7, #4]
 5703 22bc 1B68     		ldr	r3, [r3]
 5704 22be 5B6B     		ldr	r3, [r3, #52]
 5705 22c0 03F00403 		and	r3, r3, #4
 5706 22c4 002B     		cmp	r3, #0
 5707 22c6 0CBF     		ite	eq
 5708 22c8 0023     		moveq	r3, #0
 5709 22ca 0123     		movne	r3, #1
 5710 22cc DBB2     		uxtb	r3, r3
 5711 22ce 3B61     		str	r3, [r7, #16]
2655:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2656:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((timeout == 0) || tmp)
 5712              		.loc 1 2656 0
 5713 22d0 7B69     		ldr	r3, [r7, #20]
 5714 22d2 002B     		cmp	r3, #0
 5715 22d4 02D0     		beq	.L263
 5716              		.loc 1 2656 0 is_stmt 0 discriminator 1
 5717 22d6 3B69     		ldr	r3, [r7, #16]
 5718 22d8 002B     		cmp	r3, #0
 5719 22da 07D0     		beq	.L264
 5720              	.L263:
2657:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2658:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Card is not V2.0 compliant or card does not support the set voltage range */
2659:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CMD_RSP_TIMEOUT;
 5721              		.loc 1 2659 0 is_stmt 1
 5722 22dc 0323     		movs	r3, #3
 5723 22de FB73     		strb	r3, [r7, #15]
2660:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2661:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_CTIMEOUT);
 5724              		.loc 1 2661 0
 5725 22e0 7B68     		ldr	r3, [r7, #4]
 5726 22e2 1B68     		ldr	r3, [r3]
 5727 22e4 0422     		movs	r2, #4
 5728 22e6 9A63     		str	r2, [r3, #56]
2662:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2663:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 5729              		.loc 1 2663 0
 5730 22e8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5731 22ea 0FE0     		b	.L265
 5732              	.L264:
2664:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2665:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2666:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_CMDREND))
 5733              		.loc 1 2666 0
 5734 22ec 7B68     		ldr	r3, [r7, #4]
 5735 22ee 1B68     		ldr	r3, [r3]
 5736 22f0 5B6B     		ldr	r3, [r3, #52]
 5737 22f2 03F04003 		and	r3, r3, #64
 5738 22f6 002B     		cmp	r3, #0
 5739 22f8 07D0     		beq	.L266
2667:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2668:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Card is SD V2.0 compliant */
2669:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_OK;
 5740              		.loc 1 2669 0
 5741 22fa 0023     		movs	r3, #0
 5742 22fc FB73     		strb	r3, [r7, #15]
2670:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2671:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_CMDREND);
 5743              		.loc 1 2671 0
 5744 22fe 7B68     		ldr	r3, [r7, #4]
 5745 2300 1B68     		ldr	r3, [r3]
 5746 2302 4022     		movs	r2, #64
 5747 2304 9A63     		str	r2, [r3, #56]
2672:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2673:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 5748              		.loc 1 2673 0
 5749 2306 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5750 2308 00E0     		b	.L265
 5751              	.L266:
2674:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2675:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2676:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 5752              		.loc 1 2676 0
 5753 230a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5754              	.L265:
2677:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 5755              		.loc 1 2677 0
 5756 230c 1846     		mov	r0, r3
 5757 230e 1C37     		adds	r7, r7, #28
 5758 2310 BD46     		mov	sp, r7
 5759              		@ sp needed
 5760 2312 5DF8047B 		ldr	r7, [sp], #4
 5761 2316 7047     		bx	lr
 5762              		.cfi_endproc
 5763              	.LFE91:
 5765              		.align	2
 5766              		.thumb
 5767              		.thumb_func
 5769              	SD_CmdResp1Error:
 5770              	.LFB92:
2678:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
2679:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
2680:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Checks for error conditions for R1 response.
2681:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
2682:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  SD_CMD: The sent command index  
2683:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
2684:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
2685:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_CmdResp1Error(SD_HandleTypeDef *hsd, uint8_t SD_CMD)
2686:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 5771              		.loc 1 2686 0
 5772              		.cfi_startproc
 5773              		@ args = 0, pretend = 0, frame = 16
 5774              		@ frame_needed = 1, uses_anonymous_args = 0
 5775 2318 80B5     		push	{r7, lr}
 5776              		.cfi_def_cfa_offset 8
 5777              		.cfi_offset 7, -8
 5778              		.cfi_offset 14, -4
 5779 231a 84B0     		sub	sp, sp, #16
 5780              		.cfi_def_cfa_offset 24
 5781 231c 00AF     		add	r7, sp, #0
 5782              		.cfi_def_cfa_register 7
 5783 231e 7860     		str	r0, [r7, #4]
 5784 2320 0B46     		mov	r3, r1
 5785 2322 FB70     		strb	r3, [r7, #3]
2687:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 5786              		.loc 1 2687 0
 5787 2324 0023     		movs	r3, #0
 5788 2326 FB73     		strb	r3, [r7, #15]
2688:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t response_R1;
2689:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2690:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   while(!__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT))
 5789              		.loc 1 2690 0
 5790 2328 00BF     		nop
 5791              	.L268:
 5792              		.loc 1 2690 0 is_stmt 0 discriminator 1
 5793 232a 7B68     		ldr	r3, [r7, #4]
 5794 232c 1B68     		ldr	r3, [r3]
 5795 232e 5B6B     		ldr	r3, [r3, #52]
 5796 2330 03F04503 		and	r3, r3, #69
 5797 2334 002B     		cmp	r3, #0
 5798 2336 F8D0     		beq	.L268
2691:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2692:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2693:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
2694:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_CTIMEOUT))
 5799              		.loc 1 2694 0 is_stmt 1
 5800 2338 7B68     		ldr	r3, [r7, #4]
 5801 233a 1B68     		ldr	r3, [r3]
 5802 233c 5B6B     		ldr	r3, [r3, #52]
 5803 233e 03F00403 		and	r3, r3, #4
 5804 2342 002B     		cmp	r3, #0
 5805 2344 07D0     		beq	.L269
2695:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2696:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CMD_RSP_TIMEOUT;
 5806              		.loc 1 2696 0
 5807 2346 0323     		movs	r3, #3
 5808 2348 FB73     		strb	r3, [r7, #15]
2697:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2698:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_CTIMEOUT);
 5809              		.loc 1 2698 0
 5810 234a 7B68     		ldr	r3, [r7, #4]
 5811 234c 1B68     		ldr	r3, [r3]
 5812 234e 0422     		movs	r2, #4
 5813 2350 9A63     		str	r2, [r3, #56]
2699:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2700:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 5814              		.loc 1 2700 0
 5815 2352 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5816 2354 B2E0     		b	.L270
 5817              	.L269:
2701:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2702:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else if(__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_CCRCFAIL))
 5818              		.loc 1 2702 0
 5819 2356 7B68     		ldr	r3, [r7, #4]
 5820 2358 1B68     		ldr	r3, [r3]
 5821 235a 5B6B     		ldr	r3, [r3, #52]
 5822 235c 03F00103 		and	r3, r3, #1
 5823 2360 002B     		cmp	r3, #0
 5824 2362 07D0     		beq	.L271
2703:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2704:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CMD_CRC_FAIL;
 5825              		.loc 1 2704 0
 5826 2364 0123     		movs	r3, #1
 5827 2366 FB73     		strb	r3, [r7, #15]
2705:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2706:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_CCRCFAIL);
 5828              		.loc 1 2706 0
 5829 2368 7B68     		ldr	r3, [r7, #4]
 5830 236a 1B68     		ldr	r3, [r3]
 5831 236c 0122     		movs	r2, #1
 5832 236e 9A63     		str	r2, [r3, #56]
2707:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2708:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 5833              		.loc 1 2708 0
 5834 2370 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5835 2372 A3E0     		b	.L270
 5836              	.L271:
2709:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2710:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2711:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check response received is of desired command */
2712:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(SDIO_GetCommandResponse(hsd->Instance) != SD_CMD)
 5837              		.loc 1 2712 0
 5838 2374 7B68     		ldr	r3, [r7, #4]
 5839 2376 1B68     		ldr	r3, [r3]
 5840 2378 1846     		mov	r0, r3
 5841 237a FFF7FEFF 		bl	SDIO_GetCommandResponse
 5842 237e 0346     		mov	r3, r0
 5843 2380 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 5844 2382 9A42     		cmp	r2, r3
 5845 2384 03D0     		beq	.L272
2713:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2714:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_ILLEGAL_CMD;
 5846              		.loc 1 2714 0
 5847 2386 1023     		movs	r3, #16
 5848 2388 FB73     		strb	r3, [r7, #15]
2715:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2716:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 5849              		.loc 1 2716 0
 5850 238a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5851 238c 96E0     		b	.L270
 5852              	.L272:
2717:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2718:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2719:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Clear all the static flags */
2720:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 5853              		.loc 1 2720 0
 5854 238e 7B68     		ldr	r3, [r7, #4]
 5855 2390 1B68     		ldr	r3, [r3]
 5856 2392 40F2FF52 		movw	r2, #1535
 5857 2396 9A63     		str	r2, [r3, #56]
2721:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2722:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* We have received response, retrieve it for analysis  */
2723:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   response_R1 = SDIO_GetResponse(SDIO_RESP1);
 5858              		.loc 1 2723 0
 5859 2398 0020     		movs	r0, #0
 5860 239a FFF7FEFF 		bl	SDIO_GetResponse
 5861 239e B860     		str	r0, [r7, #8]
2724:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2725:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((response_R1 & SD_OCR_ERRORBITS) == SD_ALLZERO)
 5862              		.loc 1 2725 0
 5863 23a0 BA68     		ldr	r2, [r7, #8]
 5864 23a2 4EF20803 		movw	r3, #57352
 5865 23a6 CFF6FF53 		movt	r3, 65023
 5866 23aa 1340     		ands	r3, r3, r2
 5867 23ac 002B     		cmp	r3, #0
 5868 23ae 01D1     		bne	.L273
2726:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2727:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 5869              		.loc 1 2727 0
 5870 23b0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5871 23b2 83E0     		b	.L270
 5872              	.L273:
2728:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2729:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2730:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((response_R1 & SD_OCR_ADDR_OUT_OF_RANGE) == SD_OCR_ADDR_OUT_OF_RANGE)
 5873              		.loc 1 2730 0
 5874 23b4 BB68     		ldr	r3, [r7, #8]
 5875 23b6 002B     		cmp	r3, #0
 5876 23b8 01DA     		bge	.L274
2731:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2732:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_ADDR_OUT_OF_RANGE);
 5877              		.loc 1 2732 0
 5878 23ba 1C23     		movs	r3, #28
 5879 23bc 7EE0     		b	.L270
 5880              	.L274:
2733:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2734:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2735:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((response_R1 & SD_OCR_ADDR_MISALIGNED) == SD_OCR_ADDR_MISALIGNED)
 5881              		.loc 1 2735 0
 5882 23be BB68     		ldr	r3, [r7, #8]
 5883 23c0 03F08043 		and	r3, r3, #1073741824
 5884 23c4 002B     		cmp	r3, #0
 5885 23c6 01D0     		beq	.L275
2736:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2737:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_ADDR_MISALIGNED);
 5886              		.loc 1 2737 0
 5887 23c8 0923     		movs	r3, #9
 5888 23ca 77E0     		b	.L270
 5889              	.L275:
2738:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2739:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2740:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((response_R1 & SD_OCR_BLOCK_LEN_ERR) == SD_OCR_BLOCK_LEN_ERR)
 5890              		.loc 1 2740 0
 5891 23cc BB68     		ldr	r3, [r7, #8]
 5892 23ce 03F00053 		and	r3, r3, #536870912
 5893 23d2 002B     		cmp	r3, #0
 5894 23d4 01D0     		beq	.L276
2741:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2742:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_BLOCK_LEN_ERR);
 5895              		.loc 1 2742 0
 5896 23d6 0A23     		movs	r3, #10
 5897 23d8 70E0     		b	.L270
 5898              	.L276:
2743:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2744:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2745:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((response_R1 & SD_OCR_ERASE_SEQ_ERR) == SD_OCR_ERASE_SEQ_ERR)
 5899              		.loc 1 2745 0
 5900 23da BB68     		ldr	r3, [r7, #8]
 5901 23dc 03F08053 		and	r3, r3, #268435456
 5902 23e0 002B     		cmp	r3, #0
 5903 23e2 01D0     		beq	.L277
2746:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2747:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_ERASE_SEQ_ERR);
 5904              		.loc 1 2747 0
 5905 23e4 0B23     		movs	r3, #11
 5906 23e6 69E0     		b	.L270
 5907              	.L277:
2748:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2749:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2750:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((response_R1 & SD_OCR_BAD_ERASE_PARAM) == SD_OCR_BAD_ERASE_PARAM)
 5908              		.loc 1 2750 0
 5909 23e8 BB68     		ldr	r3, [r7, #8]
 5910 23ea 03F00063 		and	r3, r3, #134217728
 5911 23ee 002B     		cmp	r3, #0
 5912 23f0 01D0     		beq	.L278
2751:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2752:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_BAD_ERASE_PARAM);
 5913              		.loc 1 2752 0
 5914 23f2 0C23     		movs	r3, #12
 5915 23f4 62E0     		b	.L270
 5916              	.L278:
2753:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2754:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2755:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((response_R1 & SD_OCR_WRITE_PROT_VIOLATION) == SD_OCR_WRITE_PROT_VIOLATION)
 5917              		.loc 1 2755 0
 5918 23f6 BB68     		ldr	r3, [r7, #8]
 5919 23f8 03F08063 		and	r3, r3, #67108864
 5920 23fc 002B     		cmp	r3, #0
 5921 23fe 01D0     		beq	.L279
2756:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2757:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_WRITE_PROT_VIOLATION);
 5922              		.loc 1 2757 0
 5923 2400 0D23     		movs	r3, #13
 5924 2402 5BE0     		b	.L270
 5925              	.L279:
2758:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2759:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2760:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((response_R1 & SD_OCR_LOCK_UNLOCK_FAILED) == SD_OCR_LOCK_UNLOCK_FAILED)
 5926              		.loc 1 2760 0
 5927 2404 BB68     		ldr	r3, [r7, #8]
 5928 2406 03F08073 		and	r3, r3, #16777216
 5929 240a 002B     		cmp	r3, #0
 5930 240c 01D0     		beq	.L280
2761:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2762:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_LOCK_UNLOCK_FAILED);
 5931              		.loc 1 2762 0
 5932 240e 0E23     		movs	r3, #14
 5933 2410 54E0     		b	.L270
 5934              	.L280:
2763:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2764:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2765:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((response_R1 & SD_OCR_COM_CRC_FAILED) == SD_OCR_COM_CRC_FAILED)
 5935              		.loc 1 2765 0
 5936 2412 BB68     		ldr	r3, [r7, #8]
 5937 2414 03F40003 		and	r3, r3, #8388608
 5938 2418 002B     		cmp	r3, #0
 5939 241a 01D0     		beq	.L281
2766:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2767:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_COM_CRC_FAILED);
 5940              		.loc 1 2767 0
 5941 241c 0F23     		movs	r3, #15
 5942 241e 4DE0     		b	.L270
 5943              	.L281:
2768:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2769:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2770:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((response_R1 & SD_OCR_ILLEGAL_CMD) == SD_OCR_ILLEGAL_CMD)
 5944              		.loc 1 2770 0
 5945 2420 BB68     		ldr	r3, [r7, #8]
 5946 2422 03F48003 		and	r3, r3, #4194304
 5947 2426 002B     		cmp	r3, #0
 5948 2428 01D0     		beq	.L282
2771:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2772:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_ILLEGAL_CMD);
 5949              		.loc 1 2772 0
 5950 242a 1023     		movs	r3, #16
 5951 242c 46E0     		b	.L270
 5952              	.L282:
2773:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2774:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2775:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((response_R1 & SD_OCR_CARD_ECC_FAILED) == SD_OCR_CARD_ECC_FAILED)
 5953              		.loc 1 2775 0
 5954 242e BB68     		ldr	r3, [r7, #8]
 5955 2430 03F40013 		and	r3, r3, #2097152
 5956 2434 002B     		cmp	r3, #0
 5957 2436 01D0     		beq	.L283
2776:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2777:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_CARD_ECC_FAILED);
 5958              		.loc 1 2777 0
 5959 2438 1123     		movs	r3, #17
 5960 243a 3FE0     		b	.L270
 5961              	.L283:
2778:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2779:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2780:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((response_R1 & SD_OCR_CC_ERROR) == SD_OCR_CC_ERROR)
 5962              		.loc 1 2780 0
 5963 243c BB68     		ldr	r3, [r7, #8]
 5964 243e 03F48013 		and	r3, r3, #1048576
 5965 2442 002B     		cmp	r3, #0
 5966 2444 01D0     		beq	.L284
2781:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2782:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_CC_ERROR);
 5967              		.loc 1 2782 0
 5968 2446 1223     		movs	r3, #18
 5969 2448 38E0     		b	.L270
 5970              	.L284:
2783:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2784:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2785:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((response_R1 & SD_OCR_GENERAL_UNKNOWN_ERROR) == SD_OCR_GENERAL_UNKNOWN_ERROR)
 5971              		.loc 1 2785 0
 5972 244a BB68     		ldr	r3, [r7, #8]
 5973 244c 03F40023 		and	r3, r3, #524288
 5974 2450 002B     		cmp	r3, #0
 5975 2452 01D0     		beq	.L285
2786:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2787:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_GENERAL_UNKNOWN_ERROR);
 5976              		.loc 1 2787 0
 5977 2454 1323     		movs	r3, #19
 5978 2456 31E0     		b	.L270
 5979              	.L285:
2788:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2789:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2790:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((response_R1 & SD_OCR_STREAM_READ_UNDERRUN) == SD_OCR_STREAM_READ_UNDERRUN)
 5980              		.loc 1 2790 0
 5981 2458 BB68     		ldr	r3, [r7, #8]
 5982 245a 03F48023 		and	r3, r3, #262144
 5983 245e 002B     		cmp	r3, #0
 5984 2460 01D0     		beq	.L286
2791:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2792:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_STREAM_READ_UNDERRUN);
 5985              		.loc 1 2792 0
 5986 2462 1423     		movs	r3, #20
 5987 2464 2AE0     		b	.L270
 5988              	.L286:
2793:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2794:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2795:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((response_R1 & SD_OCR_STREAM_WRITE_OVERRUN) == SD_OCR_STREAM_WRITE_OVERRUN)
 5989              		.loc 1 2795 0
 5990 2466 BB68     		ldr	r3, [r7, #8]
 5991 2468 03F40033 		and	r3, r3, #131072
 5992 246c 002B     		cmp	r3, #0
 5993 246e 01D0     		beq	.L287
2796:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2797:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_STREAM_WRITE_OVERRUN);
 5994              		.loc 1 2797 0
 5995 2470 1523     		movs	r3, #21
 5996 2472 23E0     		b	.L270
 5997              	.L287:
2798:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2799:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2800:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((response_R1 & SD_OCR_CID_CSD_OVERWRIETE) == SD_OCR_CID_CSD_OVERWRIETE)
 5998              		.loc 1 2800 0
 5999 2474 BB68     		ldr	r3, [r7, #8]
 6000 2476 03F48033 		and	r3, r3, #65536
 6001 247a 002B     		cmp	r3, #0
 6002 247c 01D0     		beq	.L288
2801:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2802:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_CID_CSD_OVERWRITE);
 6003              		.loc 1 2802 0
 6004 247e 1623     		movs	r3, #22
 6005 2480 1CE0     		b	.L270
 6006              	.L288:
2803:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2804:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2805:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((response_R1 & SD_OCR_WP_ERASE_SKIP) == SD_OCR_WP_ERASE_SKIP)
 6007              		.loc 1 2805 0
 6008 2482 BB68     		ldr	r3, [r7, #8]
 6009 2484 03F40043 		and	r3, r3, #32768
 6010 2488 002B     		cmp	r3, #0
 6011 248a 01D0     		beq	.L289
2806:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2807:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_WP_ERASE_SKIP);
 6012              		.loc 1 2807 0
 6013 248c 1723     		movs	r3, #23
 6014 248e 15E0     		b	.L270
 6015              	.L289:
2808:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2809:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2810:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((response_R1 & SD_OCR_CARD_ECC_DISABLED) == SD_OCR_CARD_ECC_DISABLED)
 6016              		.loc 1 2810 0
 6017 2490 BB68     		ldr	r3, [r7, #8]
 6018 2492 03F48043 		and	r3, r3, #16384
 6019 2496 002B     		cmp	r3, #0
 6020 2498 01D0     		beq	.L290
2811:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2812:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_CARD_ECC_DISABLED);
 6021              		.loc 1 2812 0
 6022 249a 1823     		movs	r3, #24
 6023 249c 0EE0     		b	.L270
 6024              	.L290:
2813:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2814:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2815:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((response_R1 & SD_OCR_ERASE_RESET) == SD_OCR_ERASE_RESET)
 6025              		.loc 1 2815 0
 6026 249e BB68     		ldr	r3, [r7, #8]
 6027 24a0 03F40053 		and	r3, r3, #8192
 6028 24a4 002B     		cmp	r3, #0
 6029 24a6 01D0     		beq	.L291
2816:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2817:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_ERASE_RESET);
 6030              		.loc 1 2817 0
 6031 24a8 1923     		movs	r3, #25
 6032 24aa 07E0     		b	.L270
 6033              	.L291:
2818:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2819:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2820:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((response_R1 & SD_OCR_AKE_SEQ_ERROR) == SD_OCR_AKE_SEQ_ERROR)
 6034              		.loc 1 2820 0
 6035 24ac BB68     		ldr	r3, [r7, #8]
 6036 24ae 03F00803 		and	r3, r3, #8
 6037 24b2 002B     		cmp	r3, #0
 6038 24b4 01D0     		beq	.L292
2821:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2822:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_AKE_SEQ_ERROR);
 6039              		.loc 1 2822 0
 6040 24b6 1A23     		movs	r3, #26
 6041 24b8 00E0     		b	.L270
 6042              	.L292:
2823:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2824:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2825:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 6043              		.loc 1 2825 0
 6044 24ba FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6045              	.L270:
2826:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 6046              		.loc 1 2826 0
 6047 24bc 1846     		mov	r0, r3
 6048 24be 1037     		adds	r7, r7, #16
 6049 24c0 BD46     		mov	sp, r7
 6050              		@ sp needed
 6051 24c2 80BD     		pop	{r7, pc}
 6052              		.cfi_endproc
 6053              	.LFE92:
 6055              		.align	2
 6056              		.thumb
 6057              		.thumb_func
 6059              	SD_CmdResp3Error:
 6060              	.LFB93:
2827:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
2828:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
2829:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Checks for error conditions for R3 (OCR) response.
2830:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
2831:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
2832:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
2833:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_CmdResp3Error(SD_HandleTypeDef *hsd)
2834:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 6061              		.loc 1 2834 0
 6062              		.cfi_startproc
 6063              		@ args = 0, pretend = 0, frame = 16
 6064              		@ frame_needed = 1, uses_anonymous_args = 0
 6065              		@ link register save eliminated.
 6066 24c4 80B4     		push	{r7}
 6067              		.cfi_def_cfa_offset 4
 6068              		.cfi_offset 7, -4
 6069 24c6 85B0     		sub	sp, sp, #20
 6070              		.cfi_def_cfa_offset 24
 6071 24c8 00AF     		add	r7, sp, #0
 6072              		.cfi_def_cfa_register 7
 6073 24ca 7860     		str	r0, [r7, #4]
2835:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 6074              		.loc 1 2835 0
 6075 24cc 0023     		movs	r3, #0
 6076 24ce FB73     		strb	r3, [r7, #15]
2836:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2837:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   while (!__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT))
 6077              		.loc 1 2837 0
 6078 24d0 00BF     		nop
 6079              	.L294:
 6080              		.loc 1 2837 0 is_stmt 0 discriminator 1
 6081 24d2 7B68     		ldr	r3, [r7, #4]
 6082 24d4 1B68     		ldr	r3, [r3]
 6083 24d6 5B6B     		ldr	r3, [r3, #52]
 6084 24d8 03F04503 		and	r3, r3, #69
 6085 24dc 002B     		cmp	r3, #0
 6086 24de F8D0     		beq	.L294
2838:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2839:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2840:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2841:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_CTIMEOUT))
 6087              		.loc 1 2841 0 is_stmt 1
 6088 24e0 7B68     		ldr	r3, [r7, #4]
 6089 24e2 1B68     		ldr	r3, [r3]
 6090 24e4 5B6B     		ldr	r3, [r3, #52]
 6091 24e6 03F00403 		and	r3, r3, #4
 6092 24ea 002B     		cmp	r3, #0
 6093 24ec 07D0     		beq	.L295
2842:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2843:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CMD_RSP_TIMEOUT;
 6094              		.loc 1 2843 0
 6095 24ee 0323     		movs	r3, #3
 6096 24f0 FB73     		strb	r3, [r7, #15]
2844:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2845:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_CTIMEOUT);
 6097              		.loc 1 2845 0
 6098 24f2 7B68     		ldr	r3, [r7, #4]
 6099 24f4 1B68     		ldr	r3, [r3]
 6100 24f6 0422     		movs	r2, #4
 6101 24f8 9A63     		str	r2, [r3, #56]
2846:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2847:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 6102              		.loc 1 2847 0
 6103 24fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6104 24fc 05E0     		b	.L296
 6105              	.L295:
2848:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2849:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2850:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Clear all the static flags */
2851:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 6106              		.loc 1 2851 0
 6107 24fe 7B68     		ldr	r3, [r7, #4]
 6108 2500 1B68     		ldr	r3, [r3]
 6109 2502 40F2FF52 		movw	r2, #1535
 6110 2506 9A63     		str	r2, [r3, #56]
2852:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2853:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 6111              		.loc 1 2853 0
 6112 2508 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6113              	.L296:
2854:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 6114              		.loc 1 2854 0
 6115 250a 1846     		mov	r0, r3
 6116 250c 1437     		adds	r7, r7, #20
 6117 250e BD46     		mov	sp, r7
 6118              		@ sp needed
 6119 2510 5DF8047B 		ldr	r7, [sp], #4
 6120 2514 7047     		bx	lr
 6121              		.cfi_endproc
 6122              	.LFE93:
 6124 2516 00BF     		.align	2
 6125              		.thumb
 6126              		.thumb_func
 6128              	SD_CmdResp2Error:
 6129              	.LFB94:
2855:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
2856:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
2857:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Checks for error conditions for R2 (CID or CSD) response.
2858:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
2859:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
2860:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
2861:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_CmdResp2Error(SD_HandleTypeDef *hsd)
2862:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 6130              		.loc 1 2862 0
 6131              		.cfi_startproc
 6132              		@ args = 0, pretend = 0, frame = 16
 6133              		@ frame_needed = 1, uses_anonymous_args = 0
 6134              		@ link register save eliminated.
 6135 2518 80B4     		push	{r7}
 6136              		.cfi_def_cfa_offset 4
 6137              		.cfi_offset 7, -4
 6138 251a 85B0     		sub	sp, sp, #20
 6139              		.cfi_def_cfa_offset 24
 6140 251c 00AF     		add	r7, sp, #0
 6141              		.cfi_def_cfa_register 7
 6142 251e 7860     		str	r0, [r7, #4]
2863:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 6143              		.loc 1 2863 0
 6144 2520 0023     		movs	r3, #0
 6145 2522 FB73     		strb	r3, [r7, #15]
2864:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2865:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   while (!__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT))
 6146              		.loc 1 2865 0
 6147 2524 00BF     		nop
 6148              	.L298:
 6149              		.loc 1 2865 0 is_stmt 0 discriminator 1
 6150 2526 7B68     		ldr	r3, [r7, #4]
 6151 2528 1B68     		ldr	r3, [r3]
 6152 252a 5B6B     		ldr	r3, [r3, #52]
 6153 252c 03F04503 		and	r3, r3, #69
 6154 2530 002B     		cmp	r3, #0
 6155 2532 F8D0     		beq	.L298
2866:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2867:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2868:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2869:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_CTIMEOUT))
 6156              		.loc 1 2869 0 is_stmt 1
 6157 2534 7B68     		ldr	r3, [r7, #4]
 6158 2536 1B68     		ldr	r3, [r3]
 6159 2538 5B6B     		ldr	r3, [r3, #52]
 6160 253a 03F00403 		and	r3, r3, #4
 6161 253e 002B     		cmp	r3, #0
 6162 2540 07D0     		beq	.L299
2870:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2871:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CMD_RSP_TIMEOUT;
 6163              		.loc 1 2871 0
 6164 2542 0323     		movs	r3, #3
 6165 2544 FB73     		strb	r3, [r7, #15]
2872:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2873:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_CTIMEOUT);
 6166              		.loc 1 2873 0
 6167 2546 7B68     		ldr	r3, [r7, #4]
 6168 2548 1B68     		ldr	r3, [r3]
 6169 254a 0422     		movs	r2, #4
 6170 254c 9A63     		str	r2, [r3, #56]
2874:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2875:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 6171              		.loc 1 2875 0
 6172 254e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6173 2550 14E0     		b	.L300
 6174              	.L299:
2876:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2877:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else if (__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_CCRCFAIL))
 6175              		.loc 1 2877 0
 6176 2552 7B68     		ldr	r3, [r7, #4]
 6177 2554 1B68     		ldr	r3, [r3]
 6178 2556 5B6B     		ldr	r3, [r3, #52]
 6179 2558 03F00103 		and	r3, r3, #1
 6180 255c 002B     		cmp	r3, #0
 6181 255e 07D0     		beq	.L301
2878:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2879:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CMD_CRC_FAIL;
 6182              		.loc 1 2879 0
 6183 2560 0123     		movs	r3, #1
 6184 2562 FB73     		strb	r3, [r7, #15]
2880:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2881:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_CCRCFAIL);
 6185              		.loc 1 2881 0
 6186 2564 7B68     		ldr	r3, [r7, #4]
 6187 2566 1B68     		ldr	r3, [r3]
 6188 2568 0122     		movs	r2, #1
 6189 256a 9A63     		str	r2, [r3, #56]
2882:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2883:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 6190              		.loc 1 2883 0
 6191 256c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6192 256e 05E0     		b	.L300
 6193              	.L301:
2884:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2885:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2886:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Clear all the static flags */
2887:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 6194              		.loc 1 2887 0
 6195 2570 7B68     		ldr	r3, [r7, #4]
 6196 2572 1B68     		ldr	r3, [r3]
 6197 2574 40F2FF52 		movw	r2, #1535
 6198 2578 9A63     		str	r2, [r3, #56]
2888:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2889:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 6199              		.loc 1 2889 0
 6200 257a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6201              	.L300:
2890:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 6202              		.loc 1 2890 0
 6203 257c 1846     		mov	r0, r3
 6204 257e 1437     		adds	r7, r7, #20
 6205 2580 BD46     		mov	sp, r7
 6206              		@ sp needed
 6207 2582 5DF8047B 		ldr	r7, [sp], #4
 6208 2586 7047     		bx	lr
 6209              		.cfi_endproc
 6210              	.LFE94:
 6212              		.align	2
 6213              		.thumb
 6214              		.thumb_func
 6216              	SD_CmdResp6Error:
 6217              	.LFB95:
2891:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
2892:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
2893:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Checks for error conditions for R6 (RCA) response.
2894:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
2895:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  SD_CMD: The sent command index
2896:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  pRCA: Pointer to the variable that will contain the SD card relative 
2897:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *         address RCA   
2898:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
2899:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
2900:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_CmdResp6Error(SD_HandleTypeDef *hsd, uint8_t SD_CMD, uint16_t *pRCA)
2901:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 6218              		.loc 1 2901 0
 6219              		.cfi_startproc
 6220              		@ args = 0, pretend = 0, frame = 24
 6221              		@ frame_needed = 1, uses_anonymous_args = 0
 6222 2588 80B5     		push	{r7, lr}
 6223              		.cfi_def_cfa_offset 8
 6224              		.cfi_offset 7, -8
 6225              		.cfi_offset 14, -4
 6226 258a 86B0     		sub	sp, sp, #24
 6227              		.cfi_def_cfa_offset 32
 6228 258c 00AF     		add	r7, sp, #0
 6229              		.cfi_def_cfa_register 7
 6230 258e F860     		str	r0, [r7, #12]
 6231 2590 0B46     		mov	r3, r1
 6232 2592 7A60     		str	r2, [r7, #4]
 6233 2594 FB72     		strb	r3, [r7, #11]
2902:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 6234              		.loc 1 2902 0
 6235 2596 0023     		movs	r3, #0
 6236 2598 FB75     		strb	r3, [r7, #23]
2903:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t response_R1;
2904:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2905:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   while(!__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT))
 6237              		.loc 1 2905 0
 6238 259a 00BF     		nop
 6239              	.L303:
 6240              		.loc 1 2905 0 is_stmt 0 discriminator 1
 6241 259c FB68     		ldr	r3, [r7, #12]
 6242 259e 1B68     		ldr	r3, [r3]
 6243 25a0 5B6B     		ldr	r3, [r3, #52]
 6244 25a2 03F04503 		and	r3, r3, #69
 6245 25a6 002B     		cmp	r3, #0
 6246 25a8 F8D0     		beq	.L303
2906:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2907:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2908:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2909:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_CTIMEOUT))
 6247              		.loc 1 2909 0 is_stmt 1
 6248 25aa FB68     		ldr	r3, [r7, #12]
 6249 25ac 1B68     		ldr	r3, [r3]
 6250 25ae 5B6B     		ldr	r3, [r3, #52]
 6251 25b0 03F00403 		and	r3, r3, #4
 6252 25b4 002B     		cmp	r3, #0
 6253 25b6 07D0     		beq	.L304
2910:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2911:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CMD_RSP_TIMEOUT;
 6254              		.loc 1 2911 0
 6255 25b8 0323     		movs	r3, #3
 6256 25ba FB75     		strb	r3, [r7, #23]
2912:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2913:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_CTIMEOUT);
 6257              		.loc 1 2913 0
 6258 25bc FB68     		ldr	r3, [r7, #12]
 6259 25be 1B68     		ldr	r3, [r3]
 6260 25c0 0422     		movs	r2, #4
 6261 25c2 9A63     		str	r2, [r3, #56]
2914:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2915:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 6262              		.loc 1 2915 0
 6263 25c4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6264 25c6 46E0     		b	.L305
 6265              	.L304:
2916:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2917:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else if(__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_CCRCFAIL))
 6266              		.loc 1 2917 0
 6267 25c8 FB68     		ldr	r3, [r7, #12]
 6268 25ca 1B68     		ldr	r3, [r3]
 6269 25cc 5B6B     		ldr	r3, [r3, #52]
 6270 25ce 03F00103 		and	r3, r3, #1
 6271 25d2 002B     		cmp	r3, #0
 6272 25d4 07D0     		beq	.L306
2918:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2919:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CMD_CRC_FAIL;
 6273              		.loc 1 2919 0
 6274 25d6 0123     		movs	r3, #1
 6275 25d8 FB75     		strb	r3, [r7, #23]
2920:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2921:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_CCRCFAIL);
 6276              		.loc 1 2921 0
 6277 25da FB68     		ldr	r3, [r7, #12]
 6278 25dc 1B68     		ldr	r3, [r3]
 6279 25de 0122     		movs	r2, #1
 6280 25e0 9A63     		str	r2, [r3, #56]
2922:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2923:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 6281              		.loc 1 2923 0
 6282 25e2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6283 25e4 37E0     		b	.L305
 6284              	.L306:
2924:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2925:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2926:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check response received is of desired command */
2927:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(SDIO_GetCommandResponse(hsd->Instance) != SD_CMD)
 6285              		.loc 1 2927 0
 6286 25e6 FB68     		ldr	r3, [r7, #12]
 6287 25e8 1B68     		ldr	r3, [r3]
 6288 25ea 1846     		mov	r0, r3
 6289 25ec FFF7FEFF 		bl	SDIO_GetCommandResponse
 6290 25f0 0346     		mov	r3, r0
 6291 25f2 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 6292 25f4 9A42     		cmp	r2, r3
 6293 25f6 03D0     		beq	.L307
2928:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2929:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_ILLEGAL_CMD;
 6294              		.loc 1 2929 0
 6295 25f8 1023     		movs	r3, #16
 6296 25fa FB75     		strb	r3, [r7, #23]
2930:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2931:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 6297              		.loc 1 2931 0
 6298 25fc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6299 25fe 2AE0     		b	.L305
 6300              	.L307:
2932:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2933:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2934:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Clear all the static flags */
2935:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 6301              		.loc 1 2935 0
 6302 2600 FB68     		ldr	r3, [r7, #12]
 6303 2602 1B68     		ldr	r3, [r3]
 6304 2604 40F2FF52 		movw	r2, #1535
 6305 2608 9A63     		str	r2, [r3, #56]
2936:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2937:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* We have received response, retrieve it.  */
2938:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   response_R1 = SDIO_GetResponse(SDIO_RESP1);
 6306              		.loc 1 2938 0
 6307 260a 0020     		movs	r0, #0
 6308 260c FFF7FEFF 		bl	SDIO_GetResponse
 6309 2610 3861     		str	r0, [r7, #16]
2939:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2940:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((response_R1 & (SD_R6_GENERAL_UNKNOWN_ERROR | SD_R6_ILLEGAL_CMD | SD_R6_COM_CRC_FAILED)) == SD
 6310              		.loc 1 2940 0
 6311 2612 3B69     		ldr	r3, [r7, #16]
 6312 2614 03F46043 		and	r3, r3, #57344
 6313 2618 002B     		cmp	r3, #0
 6314 261a 06D1     		bne	.L308
2941:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2942:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     *pRCA = (uint16_t) (response_R1 >> 16);
 6315              		.loc 1 2942 0
 6316 261c 3B69     		ldr	r3, [r7, #16]
 6317 261e 1B0C     		lsrs	r3, r3, #16
 6318 2620 9AB2     		uxth	r2, r3
 6319 2622 7B68     		ldr	r3, [r7, #4]
 6320 2624 1A80     		strh	r2, [r3]	@ movhi
2943:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2944:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 6321              		.loc 1 2944 0
 6322 2626 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6323 2628 15E0     		b	.L305
 6324              	.L308:
2945:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2946:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2947:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((response_R1 & SD_R6_GENERAL_UNKNOWN_ERROR) == SD_R6_GENERAL_UNKNOWN_ERROR)
 6325              		.loc 1 2947 0
 6326 262a 3B69     		ldr	r3, [r7, #16]
 6327 262c 03F40053 		and	r3, r3, #8192
 6328 2630 002B     		cmp	r3, #0
 6329 2632 01D0     		beq	.L309
2948:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2949:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_GENERAL_UNKNOWN_ERROR);
 6330              		.loc 1 2949 0
 6331 2634 1323     		movs	r3, #19
 6332 2636 0EE0     		b	.L305
 6333              	.L309:
2950:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2951:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2952:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((response_R1 & SD_R6_ILLEGAL_CMD) == SD_R6_ILLEGAL_CMD)
 6334              		.loc 1 2952 0
 6335 2638 3B69     		ldr	r3, [r7, #16]
 6336 263a 03F48043 		and	r3, r3, #16384
 6337 263e 002B     		cmp	r3, #0
 6338 2640 01D0     		beq	.L310
2953:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2954:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_ILLEGAL_CMD);
 6339              		.loc 1 2954 0
 6340 2642 1023     		movs	r3, #16
 6341 2644 07E0     		b	.L305
 6342              	.L310:
2955:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2956:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2957:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((response_R1 & SD_R6_COM_CRC_FAILED) == SD_R6_COM_CRC_FAILED)
 6343              		.loc 1 2957 0
 6344 2646 3B69     		ldr	r3, [r7, #16]
 6345 2648 03F40043 		and	r3, r3, #32768
 6346 264c 002B     		cmp	r3, #0
 6347 264e 01D0     		beq	.L311
2958:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2959:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_COM_CRC_FAILED);
 6348              		.loc 1 2959 0
 6349 2650 0F23     		movs	r3, #15
 6350 2652 00E0     		b	.L305
 6351              	.L311:
2960:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2961:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2962:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 6352              		.loc 1 2962 0
 6353 2654 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6354              	.L305:
2963:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 6355              		.loc 1 2963 0
 6356 2656 1846     		mov	r0, r3
 6357 2658 1837     		adds	r7, r7, #24
 6358 265a BD46     		mov	sp, r7
 6359              		@ sp needed
 6360 265c 80BD     		pop	{r7, pc}
 6361              		.cfi_endproc
 6362              	.LFE95:
 6364 265e 00BF     		.align	2
 6365              		.thumb
 6366              		.thumb_func
 6368              	SD_WideBus_Enable:
 6369              	.LFB96:
2964:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
2965:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
2966:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Enables the SDIO wide bus mode.
2967:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
2968:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
2969:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
2970:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_WideBus_Enable(SD_HandleTypeDef *hsd)
2971:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 6370              		.loc 1 2971 0
 6371              		.cfi_startproc
 6372              		@ args = 0, pretend = 0, frame = 40
 6373              		@ frame_needed = 1, uses_anonymous_args = 0
 6374 2660 80B5     		push	{r7, lr}
 6375              		.cfi_def_cfa_offset 8
 6376              		.cfi_offset 7, -8
 6377              		.cfi_offset 14, -4
 6378 2662 8AB0     		sub	sp, sp, #40
 6379              		.cfi_def_cfa_offset 48
 6380 2664 00AF     		add	r7, sp, #0
 6381              		.cfi_def_cfa_register 7
 6382 2666 7860     		str	r0, [r7, #4]
2972:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitTypeDef SDIO_CmdInitStructure;
2973:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 6383              		.loc 1 2973 0
 6384 2668 0023     		movs	r3, #0
 6385 266a 87F82730 		strb	r3, [r7, #39]
2974:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2975:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t scr[2] = {0, 0};
 6386              		.loc 1 2975 0
 6387 266e 0023     		movs	r3, #0
 6388 2670 BB60     		str	r3, [r7, #8]
 6389 2672 0023     		movs	r3, #0
 6390 2674 FB60     		str	r3, [r7, #12]
2976:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2977:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((SDIO_GetResponse(SDIO_RESP1) & SD_CARD_LOCKED) == SD_CARD_LOCKED)
 6391              		.loc 1 2977 0
 6392 2676 0020     		movs	r0, #0
 6393 2678 FFF7FEFF 		bl	SDIO_GetResponse
 6394 267c 0346     		mov	r3, r0
 6395 267e 03F00073 		and	r3, r3, #33554432
 6396 2682 002B     		cmp	r3, #0
 6397 2684 05D0     		beq	.L313
2978:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2979:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_LOCK_UNLOCK_FAILED;
 6398              		.loc 1 2979 0
 6399 2686 0E23     		movs	r3, #14
 6400 2688 87F82730 		strb	r3, [r7, #39]
2980:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
2981:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 6401              		.loc 1 2981 0
 6402 268c 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 6403 2690 59E0     		b	.L319
 6404              	.L313:
2982:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2983:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2984:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Get SCR Register */
2985:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = SD_FindSCR(hsd, scr);
 6405              		.loc 1 2985 0
 6406 2692 07F10803 		add	r3, r7, #8
 6407 2696 7868     		ldr	r0, [r7, #4]
 6408 2698 1946     		mov	r1, r3
 6409 269a 00F0D1F8 		bl	SD_FindSCR
 6410 269e 0346     		mov	r3, r0
 6411 26a0 87F82730 		strb	r3, [r7, #39]
2986:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2987:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(errorState != SD_OK)
 6412              		.loc 1 2987 0
 6413 26a4 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 6414 26a8 002B     		cmp	r3, #0
 6415 26aa 02D0     		beq	.L315
2988:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2989:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 6416              		.loc 1 2989 0
 6417 26ac 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 6418 26b0 49E0     		b	.L319
 6419              	.L315:
2990:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
2991:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
2992:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* If requested card supports wide bus operation */
2993:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((scr[1] & SD_WIDE_BUS_SUPPORT) != SD_ALLZERO)
 6420              		.loc 1 2993 0
 6421 26b2 FB68     		ldr	r3, [r7, #12]
 6422 26b4 03F48023 		and	r3, r3, #262144
 6423 26b8 002B     		cmp	r3, #0
 6424 26ba 3FD0     		beq	.L316
2994:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
2995:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Send CMD55 APP_CMD with argument as card's RCA.*/
2996:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.Argument         = (uint32_t)(hsd->RCA << 16);
 6425              		.loc 1 2996 0
 6426 26bc 7B68     		ldr	r3, [r7, #4]
 6427 26be 5B6A     		ldr	r3, [r3, #36]
 6428 26c0 1B04     		lsls	r3, r3, #16
 6429 26c2 3B61     		str	r3, [r7, #16]
2997:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.CmdIndex         = SD_CMD_APP_CMD;
 6430              		.loc 1 2997 0
 6431 26c4 3723     		movs	r3, #55
 6432 26c6 7B61     		str	r3, [r7, #20]
2998:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.Response         = SDIO_RESPONSE_SHORT;
 6433              		.loc 1 2998 0
 6434 26c8 4023     		movs	r3, #64
 6435 26ca BB61     		str	r3, [r7, #24]
2999:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 6436              		.loc 1 2999 0
 6437 26cc 0023     		movs	r3, #0
 6438 26ce FB61     		str	r3, [r7, #28]
3000:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.CPSM             = SDIO_CPSM_ENABLE;
 6439              		.loc 1 3000 0
 6440 26d0 4FF48063 		mov	r3, #1024
 6441 26d4 3B62     		str	r3, [r7, #32]
3001:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 6442              		.loc 1 3001 0
 6443 26d6 7B68     		ldr	r3, [r7, #4]
 6444 26d8 1A68     		ldr	r2, [r3]
 6445 26da 07F11003 		add	r3, r7, #16
 6446 26de 1046     		mov	r0, r2
 6447 26e0 1946     		mov	r1, r3
 6448 26e2 FFF7FEFF 		bl	SDIO_SendCommand
3002:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3003:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Check for error conditions */
3004:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CmdResp1Error(hsd, SD_CMD_APP_CMD);
 6449              		.loc 1 3004 0
 6450 26e6 7868     		ldr	r0, [r7, #4]
 6451 26e8 3721     		movs	r1, #55
 6452 26ea FFF715FE 		bl	SD_CmdResp1Error
 6453 26ee 0346     		mov	r3, r0
 6454 26f0 87F82730 		strb	r3, [r7, #39]
3005:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3006:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     if(errorState != SD_OK)
 6455              		.loc 1 3006 0
 6456 26f4 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 6457 26f8 002B     		cmp	r3, #0
 6458 26fa 02D0     		beq	.L317
3007:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
3008:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       return errorState;
 6459              		.loc 1 3008 0
 6460 26fc 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 6461 2700 21E0     		b	.L319
 6462              	.L317:
3009:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
3010:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3011:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Send ACMD6 APP_CMD with argument as 2 for wide bus mode */
3012:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.Argument         = 2;
 6463              		.loc 1 3012 0
 6464 2702 0223     		movs	r3, #2
 6465 2704 3B61     		str	r3, [r7, #16]
3013:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.CmdIndex         = SD_CMD_APP_SD_SET_BUSWIDTH;
 6466              		.loc 1 3013 0
 6467 2706 0623     		movs	r3, #6
 6468 2708 7B61     		str	r3, [r7, #20]
3014:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 6469              		.loc 1 3014 0
 6470 270a 7B68     		ldr	r3, [r7, #4]
 6471 270c 1A68     		ldr	r2, [r3]
 6472 270e 07F11003 		add	r3, r7, #16
 6473 2712 1046     		mov	r0, r2
 6474 2714 1946     		mov	r1, r3
 6475 2716 FFF7FEFF 		bl	SDIO_SendCommand
3015:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3016:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Check for error conditions */
3017:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CmdResp1Error(hsd, SD_CMD_APP_SD_SET_BUSWIDTH);
 6476              		.loc 1 3017 0
 6477 271a 7868     		ldr	r0, [r7, #4]
 6478 271c 0621     		movs	r1, #6
 6479 271e FFF7FBFD 		bl	SD_CmdResp1Error
 6480 2722 0346     		mov	r3, r0
 6481 2724 87F82730 		strb	r3, [r7, #39]
3018:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3019:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     if(errorState != SD_OK)
 6482              		.loc 1 3019 0
 6483 2728 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 6484 272c 002B     		cmp	r3, #0
 6485 272e 02D0     		beq	.L318
3020:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
3021:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       return errorState;
 6486              		.loc 1 3021 0
 6487 2730 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 6488 2734 07E0     		b	.L319
 6489              	.L318:
3022:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
3023:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3024:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 6490              		.loc 1 3024 0
 6491 2736 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 6492 273a 04E0     		b	.L319
 6493              	.L316:
3025:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3026:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else
3027:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3028:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_REQUEST_NOT_APPLICABLE;
 6494              		.loc 1 3028 0
 6495 273c 2523     		movs	r3, #37
 6496 273e 87F82730 		strb	r3, [r7, #39]
3029:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3030:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 6497              		.loc 1 3030 0
 6498 2742 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 6499              	.L319:
3031:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3032:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }   
 6500              		.loc 1 3032 0
 6501 2746 1846     		mov	r0, r3
 6502 2748 2837     		adds	r7, r7, #40
 6503 274a BD46     		mov	sp, r7
 6504              		@ sp needed
 6505 274c 80BD     		pop	{r7, pc}
 6506              		.cfi_endproc
 6507              	.LFE96:
 6509 274e 00BF     		.align	2
 6510              		.thumb
 6511              		.thumb_func
 6513              	SD_WideBus_Disable:
 6514              	.LFB97:
3033:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
3034:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
3035:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Disables the SDIO wide bus mode.
3036:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
3037:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
3038:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
3039:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_WideBus_Disable(SD_HandleTypeDef *hsd)
3040:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 6515              		.loc 1 3040 0
 6516              		.cfi_startproc
 6517              		@ args = 0, pretend = 0, frame = 40
 6518              		@ frame_needed = 1, uses_anonymous_args = 0
 6519 2750 80B5     		push	{r7, lr}
 6520              		.cfi_def_cfa_offset 8
 6521              		.cfi_offset 7, -8
 6522              		.cfi_offset 14, -4
 6523 2752 8AB0     		sub	sp, sp, #40
 6524              		.cfi_def_cfa_offset 48
 6525 2754 00AF     		add	r7, sp, #0
 6526              		.cfi_def_cfa_register 7
 6527 2756 7860     		str	r0, [r7, #4]
3041:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitTypeDef SDIO_CmdInitStructure;
3042:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 6528              		.loc 1 3042 0
 6529 2758 0023     		movs	r3, #0
 6530 275a 87F82730 		strb	r3, [r7, #39]
3043:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3044:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t scr[2] = {0, 0};
 6531              		.loc 1 3044 0
 6532 275e 0023     		movs	r3, #0
 6533 2760 BB60     		str	r3, [r7, #8]
 6534 2762 0023     		movs	r3, #0
 6535 2764 FB60     		str	r3, [r7, #12]
3045:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3046:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((SDIO_GetResponse(SDIO_RESP1) & SD_CARD_LOCKED) == SD_CARD_LOCKED)
 6536              		.loc 1 3046 0
 6537 2766 0020     		movs	r0, #0
 6538 2768 FFF7FEFF 		bl	SDIO_GetResponse
 6539 276c 0346     		mov	r3, r0
 6540 276e 03F00073 		and	r3, r3, #33554432
 6541 2772 002B     		cmp	r3, #0
 6542 2774 05D0     		beq	.L321
3047:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3048:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_LOCK_UNLOCK_FAILED;
 6543              		.loc 1 3048 0
 6544 2776 0E23     		movs	r3, #14
 6545 2778 87F82730 		strb	r3, [r7, #39]
3049:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3050:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 6546              		.loc 1 3050 0
 6547 277c 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 6548 2780 59E0     		b	.L327
 6549              	.L321:
3051:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3052:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3053:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Get SCR Register */
3054:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = SD_FindSCR(hsd, scr);
 6550              		.loc 1 3054 0
 6551 2782 07F10803 		add	r3, r7, #8
 6552 2786 7868     		ldr	r0, [r7, #4]
 6553 2788 1946     		mov	r1, r3
 6554 278a 00F059F8 		bl	SD_FindSCR
 6555 278e 0346     		mov	r3, r0
 6556 2790 87F82730 		strb	r3, [r7, #39]
3055:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3056:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(errorState != SD_OK)
 6557              		.loc 1 3056 0
 6558 2794 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 6559 2798 002B     		cmp	r3, #0
 6560 279a 02D0     		beq	.L323
3057:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3058:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 6561              		.loc 1 3058 0
 6562 279c 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 6563 27a0 49E0     		b	.L327
 6564              	.L323:
3059:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3060:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3061:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* If requested card supports 1 bit mode operation */
3062:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((scr[1] & SD_SINGLE_BUS_SUPPORT) != SD_ALLZERO)
 6565              		.loc 1 3062 0
 6566 27a2 FB68     		ldr	r3, [r7, #12]
 6567 27a4 03F48033 		and	r3, r3, #65536
 6568 27a8 002B     		cmp	r3, #0
 6569 27aa 3FD0     		beq	.L324
3063:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3064:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Send CMD55 APP_CMD with argument as card's RCA */
3065:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.Argument         = (uint32_t)(hsd->RCA << 16);
 6570              		.loc 1 3065 0
 6571 27ac 7B68     		ldr	r3, [r7, #4]
 6572 27ae 5B6A     		ldr	r3, [r3, #36]
 6573 27b0 1B04     		lsls	r3, r3, #16
 6574 27b2 3B61     		str	r3, [r7, #16]
3066:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.CmdIndex         = SD_CMD_APP_CMD;
 6575              		.loc 1 3066 0
 6576 27b4 3723     		movs	r3, #55
 6577 27b6 7B61     		str	r3, [r7, #20]
3067:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.Response         = SDIO_RESPONSE_SHORT;
 6578              		.loc 1 3067 0
 6579 27b8 4023     		movs	r3, #64
 6580 27ba BB61     		str	r3, [r7, #24]
3068:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 6581              		.loc 1 3068 0
 6582 27bc 0023     		movs	r3, #0
 6583 27be FB61     		str	r3, [r7, #28]
3069:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.CPSM             = SDIO_CPSM_ENABLE;
 6584              		.loc 1 3069 0
 6585 27c0 4FF48063 		mov	r3, #1024
 6586 27c4 3B62     		str	r3, [r7, #32]
3070:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 6587              		.loc 1 3070 0
 6588 27c6 7B68     		ldr	r3, [r7, #4]
 6589 27c8 1A68     		ldr	r2, [r3]
 6590 27ca 07F11003 		add	r3, r7, #16
 6591 27ce 1046     		mov	r0, r2
 6592 27d0 1946     		mov	r1, r3
 6593 27d2 FFF7FEFF 		bl	SDIO_SendCommand
3071:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3072:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Check for error conditions */
3073:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CmdResp1Error(hsd, SD_CMD_APP_CMD);
 6594              		.loc 1 3073 0
 6595 27d6 7868     		ldr	r0, [r7, #4]
 6596 27d8 3721     		movs	r1, #55
 6597 27da FFF79DFD 		bl	SD_CmdResp1Error
 6598 27de 0346     		mov	r3, r0
 6599 27e0 87F82730 		strb	r3, [r7, #39]
3074:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3075:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     if(errorState != SD_OK)
 6600              		.loc 1 3075 0
 6601 27e4 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 6602 27e8 002B     		cmp	r3, #0
 6603 27ea 02D0     		beq	.L325
3076:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
3077:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       return errorState;
 6604              		.loc 1 3077 0
 6605 27ec 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 6606 27f0 21E0     		b	.L327
 6607              	.L325:
3078:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
3079:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3080:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Send ACMD6 APP_CMD with argument as 0 for single bus mode */
3081:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.Argument         = 0;
 6608              		.loc 1 3081 0
 6609 27f2 0023     		movs	r3, #0
 6610 27f4 3B61     		str	r3, [r7, #16]
3082:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_CmdInitStructure.CmdIndex         = SD_CMD_APP_SD_SET_BUSWIDTH;
 6611              		.loc 1 3082 0
 6612 27f6 0623     		movs	r3, #6
 6613 27f8 7B61     		str	r3, [r7, #20]
3083:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 6614              		.loc 1 3083 0
 6615 27fa 7B68     		ldr	r3, [r7, #4]
 6616 27fc 1A68     		ldr	r2, [r3]
 6617 27fe 07F11003 		add	r3, r7, #16
 6618 2802 1046     		mov	r0, r2
 6619 2804 1946     		mov	r1, r3
 6620 2806 FFF7FEFF 		bl	SDIO_SendCommand
3084:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3085:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     /* Check for error conditions */
3086:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CmdResp1Error(hsd, SD_CMD_APP_SD_SET_BUSWIDTH);
 6621              		.loc 1 3086 0
 6622 280a 7868     		ldr	r0, [r7, #4]
 6623 280c 0621     		movs	r1, #6
 6624 280e FFF783FD 		bl	SD_CmdResp1Error
 6625 2812 0346     		mov	r3, r0
 6626 2814 87F82730 		strb	r3, [r7, #39]
3087:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3088:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     if(errorState != SD_OK)
 6627              		.loc 1 3088 0
 6628 2818 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 6629 281c 002B     		cmp	r3, #0
 6630 281e 02D0     		beq	.L326
3089:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
3090:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       return errorState;
 6631              		.loc 1 3090 0
 6632 2820 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 6633 2824 07E0     		b	.L327
 6634              	.L326:
3091:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
3092:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3093:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 6635              		.loc 1 3093 0
 6636 2826 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 6637 282a 04E0     		b	.L327
 6638              	.L324:
3094:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3095:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else
3096:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3097:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_REQUEST_NOT_APPLICABLE;
 6639              		.loc 1 3097 0
 6640 282c 2523     		movs	r3, #37
 6641 282e 87F82730 		strb	r3, [r7, #39]
3098:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3099:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 6642              		.loc 1 3099 0
 6643 2832 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 6644              	.L327:
3100:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3101:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 6645              		.loc 1 3101 0
 6646 2836 1846     		mov	r0, r3
 6647 2838 2837     		adds	r7, r7, #40
 6648 283a BD46     		mov	sp, r7
 6649              		@ sp needed
 6650 283c 80BD     		pop	{r7, pc}
 6651              		.cfi_endproc
 6652              	.LFE97:
 6654 283e 00BF     		.align	2
 6655              		.thumb
 6656              		.thumb_func
 6658              	SD_FindSCR:
 6659              	.LFB98:
3102:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3103:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3104:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
3105:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Finds the SD card SCR register value.
3106:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
3107:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  pSCR: pointer to the buffer that will contain the SCR value  
3108:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
3109:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
3110:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_FindSCR(SD_HandleTypeDef *hsd, uint32_t *pSCR)
3111:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 6660              		.loc 1 3111 0
 6661              		.cfi_startproc
 6662              		@ args = 0, pretend = 0, frame = 72
 6663              		@ frame_needed = 1, uses_anonymous_args = 0
 6664 2840 90B5     		push	{r4, r7, lr}
 6665              		.cfi_def_cfa_offset 12
 6666              		.cfi_offset 4, -12
 6667              		.cfi_offset 7, -8
 6668              		.cfi_offset 14, -4
 6669 2842 93B0     		sub	sp, sp, #76
 6670              		.cfi_def_cfa_offset 88
 6671 2844 00AF     		add	r7, sp, #0
 6672              		.cfi_def_cfa_register 7
 6673 2846 7860     		str	r0, [r7, #4]
 6674 2848 3960     		str	r1, [r7]
3112:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitTypeDef  SDIO_CmdInitStructure;
3113:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitTypeDef SDIO_DataInitStructure;
3114:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 6675              		.loc 1 3114 0
 6676 284a 0023     		movs	r3, #0
 6677 284c 87F84330 		strb	r3, [r7, #67]
3115:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t index = 0;
 6678              		.loc 1 3115 0
 6679 2850 0023     		movs	r3, #0
 6680 2852 7B64     		str	r3, [r7, #68]
3116:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   uint32_t tempscr[2] = {0, 0};
 6681              		.loc 1 3116 0
 6682 2854 0023     		movs	r3, #0
 6683 2856 FB60     		str	r3, [r7, #12]
 6684 2858 0023     		movs	r3, #0
 6685 285a 3B61     		str	r3, [r7, #16]
3117:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3118:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Set Block Size To 8 Bytes */
3119:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Send CMD55 APP_CMD with argument as card's RCA */
3120:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Argument         = (uint32_t)8;
 6686              		.loc 1 3120 0
 6687 285c 0823     		movs	r3, #8
 6688 285e FB62     		str	r3, [r7, #44]
3121:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CmdIndex         = SD_CMD_SET_BLOCKLEN;
 6689              		.loc 1 3121 0
 6690 2860 1023     		movs	r3, #16
 6691 2862 3B63     		str	r3, [r7, #48]
3122:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Response         = SDIO_RESPONSE_SHORT;
 6692              		.loc 1 3122 0
 6693 2864 4023     		movs	r3, #64
 6694 2866 7B63     		str	r3, [r7, #52]
3123:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 6695              		.loc 1 3123 0
 6696 2868 0023     		movs	r3, #0
 6697 286a BB63     		str	r3, [r7, #56]
3124:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CPSM             = SDIO_CPSM_ENABLE;
 6698              		.loc 1 3124 0
 6699 286c 4FF48063 		mov	r3, #1024
 6700 2870 FB63     		str	r3, [r7, #60]
3125:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 6701              		.loc 1 3125 0
 6702 2872 7B68     		ldr	r3, [r7, #4]
 6703 2874 1A68     		ldr	r2, [r3]
 6704 2876 07F12C03 		add	r3, r7, #44
 6705 287a 1046     		mov	r0, r2
 6706 287c 1946     		mov	r1, r3
 6707 287e FFF7FEFF 		bl	SDIO_SendCommand
3126:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3127:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check for error conditions */
3128:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = SD_CmdResp1Error(hsd, SD_CMD_SET_BLOCKLEN);
 6708              		.loc 1 3128 0
 6709 2882 7868     		ldr	r0, [r7, #4]
 6710 2884 1021     		movs	r1, #16
 6711 2886 FFF747FD 		bl	SD_CmdResp1Error
 6712 288a 0346     		mov	r3, r0
 6713 288c 87F84330 		strb	r3, [r7, #67]
3129:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3130:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(errorState != SD_OK)
 6714              		.loc 1 3130 0
 6715 2890 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 6716 2894 002B     		cmp	r3, #0
 6717 2896 02D0     		beq	.L329
3131:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3132:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 6718              		.loc 1 3132 0
 6719 2898 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 6720 289c D8E0     		b	.L339
 6721              	.L329:
3133:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3134:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3135:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Send CMD55 APP_CMD with argument as card's RCA */
3136:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Argument         = (uint32_t)((hsd->RCA) << 16);
 6722              		.loc 1 3136 0
 6723 289e 7B68     		ldr	r3, [r7, #4]
 6724 28a0 5B6A     		ldr	r3, [r3, #36]
 6725 28a2 1B04     		lsls	r3, r3, #16
 6726 28a4 FB62     		str	r3, [r7, #44]
3137:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CmdIndex         = SD_CMD_APP_CMD;
 6727              		.loc 1 3137 0
 6728 28a6 3723     		movs	r3, #55
 6729 28a8 3B63     		str	r3, [r7, #48]
3138:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 6730              		.loc 1 3138 0
 6731 28aa 7B68     		ldr	r3, [r7, #4]
 6732 28ac 1A68     		ldr	r2, [r3]
 6733 28ae 07F12C03 		add	r3, r7, #44
 6734 28b2 1046     		mov	r0, r2
 6735 28b4 1946     		mov	r1, r3
 6736 28b6 FFF7FEFF 		bl	SDIO_SendCommand
3139:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3140:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check for error conditions */
3141:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = SD_CmdResp1Error(hsd, SD_CMD_APP_CMD);
 6737              		.loc 1 3141 0
 6738 28ba 7868     		ldr	r0, [r7, #4]
 6739 28bc 3721     		movs	r1, #55
 6740 28be FFF72BFD 		bl	SD_CmdResp1Error
 6741 28c2 0346     		mov	r3, r0
 6742 28c4 87F84330 		strb	r3, [r7, #67]
3142:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3143:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(errorState != SD_OK)
 6743              		.loc 1 3143 0
 6744 28c8 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 6745 28cc 002B     		cmp	r3, #0
 6746 28ce 02D0     		beq	.L331
3144:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3145:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 6747              		.loc 1 3145 0
 6748 28d0 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 6749 28d4 BCE0     		b	.L339
 6750              	.L331:
3146:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3147:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.DataTimeOut   = SD_DATATIMEOUT;
 6751              		.loc 1 3147 0
 6752 28d6 4FF0FF33 		mov	r3, #-1
 6753 28da 7B61     		str	r3, [r7, #20]
3148:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.DataLength    = 8;
 6754              		.loc 1 3148 0
 6755 28dc 0823     		movs	r3, #8
 6756 28de BB61     		str	r3, [r7, #24]
3149:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.DataBlockSize = SDIO_DATABLOCK_SIZE_8B;
 6757              		.loc 1 3149 0
 6758 28e0 3023     		movs	r3, #48
 6759 28e2 FB61     		str	r3, [r7, #28]
3150:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.TransferDir   = SDIO_TRANSFER_DIR_TO_SDIO;
 6760              		.loc 1 3150 0
 6761 28e4 0223     		movs	r3, #2
 6762 28e6 3B62     		str	r3, [r7, #32]
3151:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.TransferMode  = SDIO_TRANSFER_MODE_BLOCK;
 6763              		.loc 1 3151 0
 6764 28e8 0023     		movs	r3, #0
 6765 28ea 7B62     		str	r3, [r7, #36]
3152:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataInitStructure.DPSM          = SDIO_DPSM_ENABLE;
 6766              		.loc 1 3152 0
 6767 28ec 0123     		movs	r3, #1
 6768 28ee BB62     		str	r3, [r7, #40]
3153:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_DataConfig(hsd->Instance, &SDIO_DataInitStructure);
 6769              		.loc 1 3153 0
 6770 28f0 7B68     		ldr	r3, [r7, #4]
 6771 28f2 1A68     		ldr	r2, [r3]
 6772 28f4 07F11403 		add	r3, r7, #20
 6773 28f8 1046     		mov	r0, r2
 6774 28fa 1946     		mov	r1, r3
 6775 28fc FFF7FEFF 		bl	SDIO_DataConfig
3154:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3155:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Send ACMD51 SD_APP_SEND_SCR with argument as 0 */
3156:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Argument         = 0;
 6776              		.loc 1 3156 0
 6777 2900 0023     		movs	r3, #0
 6778 2902 FB62     		str	r3, [r7, #44]
3157:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CmdIndex         = SD_CMD_SD_APP_SEND_SCR;
 6779              		.loc 1 3157 0
 6780 2904 3323     		movs	r3, #51
 6781 2906 3B63     		str	r3, [r7, #48]
3158:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 6782              		.loc 1 3158 0
 6783 2908 7B68     		ldr	r3, [r7, #4]
 6784 290a 1A68     		ldr	r2, [r3]
 6785 290c 07F12C03 		add	r3, r7, #44
 6786 2910 1046     		mov	r0, r2
 6787 2912 1946     		mov	r1, r3
 6788 2914 FFF7FEFF 		bl	SDIO_SendCommand
3159:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3160:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check for error conditions */
3161:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   errorState = SD_CmdResp1Error(hsd, SD_CMD_SD_APP_SEND_SCR);
 6789              		.loc 1 3161 0
 6790 2918 7868     		ldr	r0, [r7, #4]
 6791 291a 3321     		movs	r1, #51
 6792 291c FFF7FCFC 		bl	SD_CmdResp1Error
 6793 2920 0346     		mov	r3, r0
 6794 2922 87F84330 		strb	r3, [r7, #67]
3162:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3163:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(errorState != SD_OK)
 6795              		.loc 1 3163 0
 6796 2926 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 6797 292a 002B     		cmp	r3, #0
 6798 292c 02D0     		beq	.L332
3164:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3165:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 6799              		.loc 1 3165 0
 6800 292e 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 6801 2932 8DE0     		b	.L339
 6802              	.L332:
3166:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3167:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3168:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   while(!__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_RXOVERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_DTIMEOUT | 
 6803              		.loc 1 3168 0
 6804 2934 15E0     		b	.L333
 6805              	.L334:
3169:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3170:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     if(__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_RXDAVL))
 6806              		.loc 1 3170 0
 6807 2936 7B68     		ldr	r3, [r7, #4]
 6808 2938 1B68     		ldr	r3, [r3]
 6809 293a 5B6B     		ldr	r3, [r3, #52]
 6810 293c 03F40013 		and	r3, r3, #2097152
 6811 2940 002B     		cmp	r3, #0
 6812 2942 0ED0     		beq	.L333
3171:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     {
3172:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       *(tempscr + index) = SDIO_ReadFIFO(hsd->Instance);
 6813              		.loc 1 3172 0
 6814 2944 7B6C     		ldr	r3, [r7, #68]
 6815 2946 9B00     		lsls	r3, r3, #2
 6816 2948 07F10C02 		add	r2, r7, #12
 6817 294c D418     		adds	r4, r2, r3
 6818 294e 7B68     		ldr	r3, [r7, #4]
 6819 2950 1B68     		ldr	r3, [r3]
 6820 2952 1846     		mov	r0, r3
 6821 2954 FFF7FEFF 		bl	SDIO_ReadFIFO
 6822 2958 0346     		mov	r3, r0
 6823 295a 2360     		str	r3, [r4]
3173:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****       index++;
 6824              		.loc 1 3173 0
 6825 295c 7B6C     		ldr	r3, [r7, #68]
 6826 295e 0133     		adds	r3, r3, #1
 6827 2960 7B64     		str	r3, [r7, #68]
 6828              	.L333:
3168:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
 6829              		.loc 1 3168 0 discriminator 1
 6830 2962 7B68     		ldr	r3, [r7, #4]
 6831 2964 1B68     		ldr	r3, [r3]
 6832 2966 5A6B     		ldr	r2, [r3, #52]
 6833 2968 40F22A63 		movw	r3, #1578
 6834 296c 1340     		ands	r3, r3, r2
 6835 296e 002B     		cmp	r3, #0
 6836 2970 E1D0     		beq	.L334
3174:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     }
3175:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3176:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3177:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_DTIMEOUT))
 6837              		.loc 1 3177 0
 6838 2972 7B68     		ldr	r3, [r7, #4]
 6839 2974 1B68     		ldr	r3, [r3]
 6840 2976 5B6B     		ldr	r3, [r3, #52]
 6841 2978 03F00803 		and	r3, r3, #8
 6842 297c 002B     		cmp	r3, #0
 6843 297e 09D0     		beq	.L335
3178:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3179:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_DTIMEOUT);
 6844              		.loc 1 3179 0
 6845 2980 7B68     		ldr	r3, [r7, #4]
 6846 2982 1B68     		ldr	r3, [r3]
 6847 2984 0822     		movs	r2, #8
 6848 2986 9A63     		str	r2, [r3, #56]
3180:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3181:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_DATA_TIMEOUT;
 6849              		.loc 1 3181 0
 6850 2988 0423     		movs	r3, #4
 6851 298a 87F84330 		strb	r3, [r7, #67]
3182:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3183:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 6852              		.loc 1 3183 0
 6853 298e 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 6854 2992 5DE0     		b	.L339
 6855              	.L335:
3184:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3185:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else if(__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_DCRCFAIL))
 6856              		.loc 1 3185 0
 6857 2994 7B68     		ldr	r3, [r7, #4]
 6858 2996 1B68     		ldr	r3, [r3]
 6859 2998 5B6B     		ldr	r3, [r3, #52]
 6860 299a 03F00203 		and	r3, r3, #2
 6861 299e 002B     		cmp	r3, #0
 6862 29a0 09D0     		beq	.L336
3186:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3187:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_DCRCFAIL);
 6863              		.loc 1 3187 0
 6864 29a2 7B68     		ldr	r3, [r7, #4]
 6865 29a4 1B68     		ldr	r3, [r3]
 6866 29a6 0222     		movs	r2, #2
 6867 29a8 9A63     		str	r2, [r3, #56]
3188:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3189:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_DATA_CRC_FAIL;
 6868              		.loc 1 3189 0
 6869 29aa 0223     		movs	r3, #2
 6870 29ac 87F84330 		strb	r3, [r7, #67]
3190:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3191:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 6871              		.loc 1 3191 0
 6872 29b0 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 6873 29b4 4CE0     		b	.L339
 6874              	.L336:
3192:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3193:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else if(__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_RXOVERR))
 6875              		.loc 1 3193 0
 6876 29b6 7B68     		ldr	r3, [r7, #4]
 6877 29b8 1B68     		ldr	r3, [r3]
 6878 29ba 5B6B     		ldr	r3, [r3, #52]
 6879 29bc 03F02003 		and	r3, r3, #32
 6880 29c0 002B     		cmp	r3, #0
 6881 29c2 09D0     		beq	.L337
3194:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3195:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_RXOVERR);
 6882              		.loc 1 3195 0
 6883 29c4 7B68     		ldr	r3, [r7, #4]
 6884 29c6 1B68     		ldr	r3, [r3]
 6885 29c8 2022     		movs	r2, #32
 6886 29ca 9A63     		str	r2, [r3, #56]
3196:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3197:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_RX_OVERRUN;
 6887              		.loc 1 3197 0
 6888 29cc 0623     		movs	r3, #6
 6889 29ce 87F84330 		strb	r3, [r7, #67]
3198:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3199:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 6890              		.loc 1 3199 0
 6891 29d2 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 6892 29d6 3BE0     		b	.L339
 6893              	.L337:
3200:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3201:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else if(__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_STBITERR))
 6894              		.loc 1 3201 0
 6895 29d8 7B68     		ldr	r3, [r7, #4]
 6896 29da 1B68     		ldr	r3, [r3]
 6897 29dc 5B6B     		ldr	r3, [r3, #52]
 6898 29de 03F40073 		and	r3, r3, #512
 6899 29e2 002B     		cmp	r3, #0
 6900 29e4 0AD0     		beq	.L338
3202:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3203:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_STBITERR);
 6901              		.loc 1 3203 0
 6902 29e6 7B68     		ldr	r3, [r7, #4]
 6903 29e8 1B68     		ldr	r3, [r3]
 6904 29ea 4FF40072 		mov	r2, #512
 6905 29ee 9A63     		str	r2, [r3, #56]
3204:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3205:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_START_BIT_ERR;
 6906              		.loc 1 3205 0
 6907 29f0 0723     		movs	r3, #7
 6908 29f2 87F84330 		strb	r3, [r7, #67]
3206:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3207:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 6909              		.loc 1 3207 0
 6910 29f6 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 6911 29fa 29E0     		b	.L339
 6912              	.L338:
3208:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3209:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3210:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Clear all the static flags */
3211:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 6913              		.loc 1 3211 0
 6914 29fc 7B68     		ldr	r3, [r7, #4]
 6915 29fe 1B68     		ldr	r3, [r3]
 6916 2a00 40F2FF52 		movw	r2, #1535
 6917 2a04 9A63     		str	r2, [r3, #56]
3212:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3213:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *(pSCR + 1) = ((tempscr[0] & SD_0TO7BITS) << 24)  | ((tempscr[0] & SD_8TO15BITS) << 8) |\
 6918              		.loc 1 3213 0
 6919 2a06 3B68     		ldr	r3, [r7]
 6920 2a08 0433     		adds	r3, r3, #4
 6921 2a0a FA68     		ldr	r2, [r7, #12]
 6922 2a0c 1106     		lsls	r1, r2, #24
 6923 2a0e FA68     		ldr	r2, [r7, #12]
 6924 2a10 02F47F42 		and	r2, r2, #65280
 6925 2a14 1202     		lsls	r2, r2, #8
 6926 2a16 1143     		orrs	r1, r1, r2
3214:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     ((tempscr[0] & SD_16TO23BITS) >> 8) | ((tempscr[0] & SD_24TO31BITS) >> 24);
 6927              		.loc 1 3214 0
 6928 2a18 FA68     		ldr	r2, [r7, #12]
 6929 2a1a 02F47F02 		and	r2, r2, #16711680
 6930 2a1e 120A     		lsrs	r2, r2, #8
3213:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     ((tempscr[0] & SD_16TO23BITS) >> 8) | ((tempscr[0] & SD_24TO31BITS) >> 24);
 6931              		.loc 1 3213 0
 6932 2a20 1143     		orrs	r1, r1, r2
 6933              		.loc 1 3214 0
 6934 2a22 FA68     		ldr	r2, [r7, #12]
 6935 2a24 120E     		lsrs	r2, r2, #24
 6936 2a26 0A43     		orrs	r2, r2, r1
3213:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     ((tempscr[0] & SD_16TO23BITS) >> 8) | ((tempscr[0] & SD_24TO31BITS) >> 24);
 6937              		.loc 1 3213 0
 6938 2a28 1A60     		str	r2, [r3]
3215:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3216:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *(pSCR) = ((tempscr[1] & SD_0TO7BITS) << 24)  | ((tempscr[1] & SD_8TO15BITS) << 8) |\
 6939              		.loc 1 3216 0
 6940 2a2a 3B69     		ldr	r3, [r7, #16]
 6941 2a2c 1A06     		lsls	r2, r3, #24
 6942 2a2e 3B69     		ldr	r3, [r7, #16]
 6943 2a30 03F47F43 		and	r3, r3, #65280
 6944 2a34 1B02     		lsls	r3, r3, #8
 6945 2a36 1A43     		orrs	r2, r2, r3
3217:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     ((tempscr[1] & SD_16TO23BITS) >> 8) | ((tempscr[1] & SD_24TO31BITS) >> 24);
 6946              		.loc 1 3217 0
 6947 2a38 3B69     		ldr	r3, [r7, #16]
 6948 2a3a 03F47F03 		and	r3, r3, #16711680
 6949 2a3e 1B0A     		lsrs	r3, r3, #8
3216:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     ((tempscr[1] & SD_16TO23BITS) >> 8) | ((tempscr[1] & SD_24TO31BITS) >> 24);
 6950              		.loc 1 3216 0
 6951 2a40 1A43     		orrs	r2, r2, r3
 6952              		.loc 1 3217 0
 6953 2a42 3B69     		ldr	r3, [r7, #16]
 6954 2a44 1B0E     		lsrs	r3, r3, #24
 6955 2a46 1A43     		orrs	r2, r2, r3
3216:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     ((tempscr[1] & SD_16TO23BITS) >> 8) | ((tempscr[1] & SD_24TO31BITS) >> 24);
 6956              		.loc 1 3216 0
 6957 2a48 3B68     		ldr	r3, [r7]
 6958 2a4a 1A60     		str	r2, [r3]
3218:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3219:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 6959              		.loc 1 3219 0
 6960 2a4c 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 6961              	.L339:
3220:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }
 6962              		.loc 1 3220 0
 6963 2a50 1846     		mov	r0, r3
 6964 2a52 4C37     		adds	r7, r7, #76
 6965 2a54 BD46     		mov	sp, r7
 6966              		@ sp needed
 6967 2a56 90BD     		pop	{r4, r7, pc}
 6968              		.cfi_endproc
 6969              	.LFE98:
 6971              		.align	2
 6972              		.thumb
 6973              		.thumb_func
 6975              	SD_IsCardProgramming:
 6976              	.LFB99:
3221:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** 
3222:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** /**
3223:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @brief  Checks if the SD card is in programming state.
3224:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  hsd: SD handle
3225:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @param  pStatus: pointer to the variable that will contain the SD card state  
3226:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   * @retval SD Card error state
3227:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   */
3228:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** static HAL_SD_ErrorTypedef SD_IsCardProgramming(SD_HandleTypeDef *hsd, uint8_t *pStatus)
3229:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** {
 6977              		.loc 1 3229 0
 6978              		.cfi_startproc
 6979              		@ args = 0, pretend = 0, frame = 40
 6980              		@ frame_needed = 1, uses_anonymous_args = 0
 6981 2a58 80B5     		push	{r7, lr}
 6982              		.cfi_def_cfa_offset 8
 6983              		.cfi_offset 7, -8
 6984              		.cfi_offset 14, -4
 6985 2a5a 8AB0     		sub	sp, sp, #40
 6986              		.cfi_def_cfa_offset 48
 6987 2a5c 00AF     		add	r7, sp, #0
 6988              		.cfi_def_cfa_register 7
 6989 2a5e 7860     		str	r0, [r7, #4]
 6990 2a60 3960     		str	r1, [r7]
3230:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitTypeDef SDIO_CmdInitStructure;
3231:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   HAL_SD_ErrorTypedef errorState = SD_OK;
 6991              		.loc 1 3231 0
 6992 2a62 0023     		movs	r3, #0
 6993 2a64 87F82730 		strb	r3, [r7, #39]
3232:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   __IO uint32_t responseR1 = 0;
 6994              		.loc 1 3232 0
 6995 2a68 0023     		movs	r3, #0
 6996 2a6a FB60     		str	r3, [r7, #12]
3233:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3234:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Argument         = (uint32_t)(hsd->RCA << 16);
 6997              		.loc 1 3234 0
 6998 2a6c 7B68     		ldr	r3, [r7, #4]
 6999 2a6e 5B6A     		ldr	r3, [r3, #36]
 7000 2a70 1B04     		lsls	r3, r3, #16
 7001 2a72 3B61     		str	r3, [r7, #16]
3235:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CmdIndex         = SD_CMD_SEND_STATUS;
 7002              		.loc 1 3235 0
 7003 2a74 0D23     		movs	r3, #13
 7004 2a76 7B61     		str	r3, [r7, #20]
3236:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.Response         = SDIO_RESPONSE_SHORT;
 7005              		.loc 1 3236 0
 7006 2a78 4023     		movs	r3, #64
 7007 2a7a BB61     		str	r3, [r7, #24]
3237:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.WaitForInterrupt = SDIO_WAIT_NO;
 7008              		.loc 1 3237 0
 7009 2a7c 0023     		movs	r3, #0
 7010 2a7e FB61     		str	r3, [r7, #28]
3238:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_CmdInitStructure.CPSM             = SDIO_CPSM_ENABLE;
 7011              		.loc 1 3238 0
 7012 2a80 4FF48063 		mov	r3, #1024
 7013 2a84 3B62     		str	r3, [r7, #32]
3239:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   SDIO_SendCommand(hsd->Instance, &SDIO_CmdInitStructure);
 7014              		.loc 1 3239 0
 7015 2a86 7B68     		ldr	r3, [r7, #4]
 7016 2a88 1A68     		ldr	r2, [r3]
 7017 2a8a 07F11003 		add	r3, r7, #16
 7018 2a8e 1046     		mov	r0, r2
 7019 2a90 1946     		mov	r1, r3
 7020 2a92 FFF7FEFF 		bl	SDIO_SendCommand
3240:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3241:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   while(!__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT))
 7021              		.loc 1 3241 0
 7022 2a96 00BF     		nop
 7023              	.L341:
 7024              		.loc 1 3241 0 is_stmt 0 discriminator 1
 7025 2a98 7B68     		ldr	r3, [r7, #4]
 7026 2a9a 1B68     		ldr	r3, [r3]
 7027 2a9c 5B6B     		ldr	r3, [r3, #52]
 7028 2a9e 03F04503 		and	r3, r3, #69
 7029 2aa2 002B     		cmp	r3, #0
 7030 2aa4 F8D0     		beq	.L341
3242:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3243:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3244:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3245:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if(__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_CTIMEOUT))
 7031              		.loc 1 3245 0 is_stmt 1
 7032 2aa6 7B68     		ldr	r3, [r7, #4]
 7033 2aa8 1B68     		ldr	r3, [r3]
 7034 2aaa 5B6B     		ldr	r3, [r3, #52]
 7035 2aac 03F00403 		and	r3, r3, #4
 7036 2ab0 002B     		cmp	r3, #0
 7037 2ab2 09D0     		beq	.L342
3246:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3247:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CMD_RSP_TIMEOUT;
 7038              		.loc 1 3247 0
 7039 2ab4 0323     		movs	r3, #3
 7040 2ab6 87F82730 		strb	r3, [r7, #39]
3248:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3249:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_CTIMEOUT);
 7041              		.loc 1 3249 0
 7042 2aba 7B68     		ldr	r3, [r7, #4]
 7043 2abc 1B68     		ldr	r3, [r3]
 7044 2abe 0422     		movs	r2, #4
 7045 2ac0 9A63     		str	r2, [r3, #56]
3250:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3251:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 7046              		.loc 1 3251 0
 7047 2ac2 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 7048 2ac6 C0E0     		b	.L366
 7049              	.L342:
3252:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3253:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   else if(__HAL_SD_SDIO_GET_FLAG(hsd, SDIO_FLAG_CCRCFAIL))
 7050              		.loc 1 3253 0
 7051 2ac8 7B68     		ldr	r3, [r7, #4]
 7052 2aca 1B68     		ldr	r3, [r3]
 7053 2acc 5B6B     		ldr	r3, [r3, #52]
 7054 2ace 03F00103 		and	r3, r3, #1
 7055 2ad2 002B     		cmp	r3, #0
 7056 2ad4 09D0     		beq	.L344
3254:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3255:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_CMD_CRC_FAIL;
 7057              		.loc 1 3255 0
 7058 2ad6 0123     		movs	r3, #1
 7059 2ad8 87F82730 		strb	r3, [r7, #39]
3256:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3257:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_FLAG_CCRCFAIL);
 7060              		.loc 1 3257 0
 7061 2adc 7B68     		ldr	r3, [r7, #4]
 7062 2ade 1B68     		ldr	r3, [r3]
 7063 2ae0 0122     		movs	r2, #1
 7064 2ae2 9A63     		str	r2, [r3, #56]
3258:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3259:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 7065              		.loc 1 3259 0
 7066 2ae4 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 7067 2ae8 AFE0     		b	.L366
 7068              	.L344:
3260:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3261:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3262:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Check response received is of desired command */
3263:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((uint32_t)SDIO_GetCommandResponse(hsd->Instance) != SD_CMD_SEND_STATUS)
 7069              		.loc 1 3263 0
 7070 2aea 7B68     		ldr	r3, [r7, #4]
 7071 2aec 1B68     		ldr	r3, [r3]
 7072 2aee 1846     		mov	r0, r3
 7073 2af0 FFF7FEFF 		bl	SDIO_GetCommandResponse
 7074 2af4 0346     		mov	r3, r0
 7075 2af6 0D2B     		cmp	r3, #13
 7076 2af8 05D0     		beq	.L345
3264:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3265:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     errorState = SD_ILLEGAL_CMD;
 7077              		.loc 1 3265 0
 7078 2afa 1023     		movs	r3, #16
 7079 2afc 87F82730 		strb	r3, [r7, #39]
3266:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     
3267:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 7080              		.loc 1 3267 0
 7081 2b00 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 7082 2b04 A1E0     		b	.L366
 7083              	.L345:
3268:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3269:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3270:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Clear all the static flags */
3271:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   __HAL_SD_SDIO_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 7084              		.loc 1 3271 0
 7085 2b06 7B68     		ldr	r3, [r7, #4]
 7086 2b08 1B68     		ldr	r3, [r3]
 7087 2b0a 40F2FF52 		movw	r2, #1535
 7088 2b0e 9A63     		str	r2, [r3, #56]
3272:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3273:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3274:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* We have received response, retrieve it for analysis */
3275:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   responseR1 = SDIO_GetResponse(SDIO_RESP1);
 7089              		.loc 1 3275 0
 7090 2b10 0020     		movs	r0, #0
 7091 2b12 FFF7FEFF 		bl	SDIO_GetResponse
 7092 2b16 0346     		mov	r3, r0
 7093 2b18 FB60     		str	r3, [r7, #12]
3276:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3277:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   /* Find out card status */
3278:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   *pStatus = (uint8_t)((responseR1 >> 9) & 0x0000000F);
 7094              		.loc 1 3278 0
 7095 2b1a FB68     		ldr	r3, [r7, #12]
 7096 2b1c 5B0A     		lsrs	r3, r3, #9
 7097 2b1e DBB2     		uxtb	r3, r3
 7098 2b20 03F00F03 		and	r3, r3, #15
 7099 2b24 DAB2     		uxtb	r2, r3
 7100 2b26 3B68     		ldr	r3, [r7]
 7101 2b28 1A70     		strb	r2, [r3]
3279:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3280:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((responseR1 & SD_OCR_ERRORBITS) == SD_ALLZERO)
 7102              		.loc 1 3280 0
 7103 2b2a FA68     		ldr	r2, [r7, #12]
 7104 2b2c 4EF20803 		movw	r3, #57352
 7105 2b30 CFF6FF53 		movt	r3, 65023
 7106 2b34 1340     		ands	r3, r3, r2
 7107 2b36 002B     		cmp	r3, #0
 7108 2b38 02D1     		bne	.L346
3281:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3282:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return errorState;
 7109              		.loc 1 3282 0
 7110 2b3a 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 7111 2b3e 84E0     		b	.L366
 7112              	.L346:
3283:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3284:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3285:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((responseR1 & SD_OCR_ADDR_OUT_OF_RANGE) == SD_OCR_ADDR_OUT_OF_RANGE)
 7113              		.loc 1 3285 0
 7114 2b40 FB68     		ldr	r3, [r7, #12]
 7115 2b42 002B     		cmp	r3, #0
 7116 2b44 01DA     		bge	.L347
3286:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3287:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_ADDR_OUT_OF_RANGE);
 7117              		.loc 1 3287 0
 7118 2b46 1C23     		movs	r3, #28
 7119 2b48 7FE0     		b	.L366
 7120              	.L347:
3288:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3289:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3290:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((responseR1 & SD_OCR_ADDR_MISALIGNED) == SD_OCR_ADDR_MISALIGNED)
 7121              		.loc 1 3290 0
 7122 2b4a FB68     		ldr	r3, [r7, #12]
 7123 2b4c 03F08043 		and	r3, r3, #1073741824
 7124 2b50 002B     		cmp	r3, #0
 7125 2b52 01D0     		beq	.L348
3291:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3292:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_ADDR_MISALIGNED);
 7126              		.loc 1 3292 0
 7127 2b54 0923     		movs	r3, #9
 7128 2b56 78E0     		b	.L366
 7129              	.L348:
3293:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3294:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3295:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((responseR1 & SD_OCR_BLOCK_LEN_ERR) == SD_OCR_BLOCK_LEN_ERR)
 7130              		.loc 1 3295 0
 7131 2b58 FB68     		ldr	r3, [r7, #12]
 7132 2b5a 03F00053 		and	r3, r3, #536870912
 7133 2b5e 002B     		cmp	r3, #0
 7134 2b60 01D0     		beq	.L349
3296:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3297:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_BLOCK_LEN_ERR);
 7135              		.loc 1 3297 0
 7136 2b62 0A23     		movs	r3, #10
 7137 2b64 71E0     		b	.L366
 7138              	.L349:
3298:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3299:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3300:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((responseR1 & SD_OCR_ERASE_SEQ_ERR) == SD_OCR_ERASE_SEQ_ERR)
 7139              		.loc 1 3300 0
 7140 2b66 FB68     		ldr	r3, [r7, #12]
 7141 2b68 03F08053 		and	r3, r3, #268435456
 7142 2b6c 002B     		cmp	r3, #0
 7143 2b6e 01D0     		beq	.L350
3301:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3302:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_ERASE_SEQ_ERR);
 7144              		.loc 1 3302 0
 7145 2b70 0B23     		movs	r3, #11
 7146 2b72 6AE0     		b	.L366
 7147              	.L350:
3303:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3304:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3305:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((responseR1 & SD_OCR_BAD_ERASE_PARAM) == SD_OCR_BAD_ERASE_PARAM)
 7148              		.loc 1 3305 0
 7149 2b74 FB68     		ldr	r3, [r7, #12]
 7150 2b76 03F00063 		and	r3, r3, #134217728
 7151 2b7a 002B     		cmp	r3, #0
 7152 2b7c 01D0     		beq	.L351
3306:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3307:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_BAD_ERASE_PARAM);
 7153              		.loc 1 3307 0
 7154 2b7e 0C23     		movs	r3, #12
 7155 2b80 63E0     		b	.L366
 7156              	.L351:
3308:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3309:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3310:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((responseR1 & SD_OCR_WRITE_PROT_VIOLATION) == SD_OCR_WRITE_PROT_VIOLATION)
 7157              		.loc 1 3310 0
 7158 2b82 FB68     		ldr	r3, [r7, #12]
 7159 2b84 03F08063 		and	r3, r3, #67108864
 7160 2b88 002B     		cmp	r3, #0
 7161 2b8a 01D0     		beq	.L352
3311:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3312:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_WRITE_PROT_VIOLATION);
 7162              		.loc 1 3312 0
 7163 2b8c 0D23     		movs	r3, #13
 7164 2b8e 5CE0     		b	.L366
 7165              	.L352:
3313:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3314:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3315:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((responseR1 & SD_OCR_LOCK_UNLOCK_FAILED) == SD_OCR_LOCK_UNLOCK_FAILED)
 7166              		.loc 1 3315 0
 7167 2b90 FB68     		ldr	r3, [r7, #12]
 7168 2b92 03F08073 		and	r3, r3, #16777216
 7169 2b96 002B     		cmp	r3, #0
 7170 2b98 01D0     		beq	.L353
3316:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3317:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_LOCK_UNLOCK_FAILED);
 7171              		.loc 1 3317 0
 7172 2b9a 0E23     		movs	r3, #14
 7173 2b9c 55E0     		b	.L366
 7174              	.L353:
3318:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3319:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3320:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((responseR1 & SD_OCR_COM_CRC_FAILED) == SD_OCR_COM_CRC_FAILED)
 7175              		.loc 1 3320 0
 7176 2b9e FB68     		ldr	r3, [r7, #12]
 7177 2ba0 03F40003 		and	r3, r3, #8388608
 7178 2ba4 002B     		cmp	r3, #0
 7179 2ba6 01D0     		beq	.L354
3321:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3322:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_COM_CRC_FAILED);
 7180              		.loc 1 3322 0
 7181 2ba8 0F23     		movs	r3, #15
 7182 2baa 4EE0     		b	.L366
 7183              	.L354:
3323:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3324:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3325:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((responseR1 & SD_OCR_ILLEGAL_CMD) == SD_OCR_ILLEGAL_CMD)
 7184              		.loc 1 3325 0
 7185 2bac FB68     		ldr	r3, [r7, #12]
 7186 2bae 03F48003 		and	r3, r3, #4194304
 7187 2bb2 002B     		cmp	r3, #0
 7188 2bb4 01D0     		beq	.L355
3326:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3327:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_ILLEGAL_CMD);
 7189              		.loc 1 3327 0
 7190 2bb6 1023     		movs	r3, #16
 7191 2bb8 47E0     		b	.L366
 7192              	.L355:
3328:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3329:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3330:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((responseR1 & SD_OCR_CARD_ECC_FAILED) == SD_OCR_CARD_ECC_FAILED)
 7193              		.loc 1 3330 0
 7194 2bba FB68     		ldr	r3, [r7, #12]
 7195 2bbc 03F40013 		and	r3, r3, #2097152
 7196 2bc0 002B     		cmp	r3, #0
 7197 2bc2 01D0     		beq	.L356
3331:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3332:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_CARD_ECC_FAILED);
 7198              		.loc 1 3332 0
 7199 2bc4 1123     		movs	r3, #17
 7200 2bc6 40E0     		b	.L366
 7201              	.L356:
3333:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3334:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3335:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((responseR1 & SD_OCR_CC_ERROR) == SD_OCR_CC_ERROR)
 7202              		.loc 1 3335 0
 7203 2bc8 FB68     		ldr	r3, [r7, #12]
 7204 2bca 03F48013 		and	r3, r3, #1048576
 7205 2bce 002B     		cmp	r3, #0
 7206 2bd0 01D0     		beq	.L357
3336:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3337:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_CC_ERROR);
 7207              		.loc 1 3337 0
 7208 2bd2 1223     		movs	r3, #18
 7209 2bd4 39E0     		b	.L366
 7210              	.L357:
3338:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3339:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3340:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((responseR1 & SD_OCR_GENERAL_UNKNOWN_ERROR) == SD_OCR_GENERAL_UNKNOWN_ERROR)
 7211              		.loc 1 3340 0
 7212 2bd6 FB68     		ldr	r3, [r7, #12]
 7213 2bd8 03F40023 		and	r3, r3, #524288
 7214 2bdc 002B     		cmp	r3, #0
 7215 2bde 01D0     		beq	.L358
3341:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3342:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_GENERAL_UNKNOWN_ERROR);
 7216              		.loc 1 3342 0
 7217 2be0 1323     		movs	r3, #19
 7218 2be2 32E0     		b	.L366
 7219              	.L358:
3343:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3344:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3345:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((responseR1 & SD_OCR_STREAM_READ_UNDERRUN) == SD_OCR_STREAM_READ_UNDERRUN)
 7220              		.loc 1 3345 0
 7221 2be4 FB68     		ldr	r3, [r7, #12]
 7222 2be6 03F48023 		and	r3, r3, #262144
 7223 2bea 002B     		cmp	r3, #0
 7224 2bec 01D0     		beq	.L359
3346:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3347:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_STREAM_READ_UNDERRUN);
 7225              		.loc 1 3347 0
 7226 2bee 1423     		movs	r3, #20
 7227 2bf0 2BE0     		b	.L366
 7228              	.L359:
3348:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3349:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3350:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((responseR1 & SD_OCR_STREAM_WRITE_OVERRUN) == SD_OCR_STREAM_WRITE_OVERRUN)
 7229              		.loc 1 3350 0
 7230 2bf2 FB68     		ldr	r3, [r7, #12]
 7231 2bf4 03F40033 		and	r3, r3, #131072
 7232 2bf8 002B     		cmp	r3, #0
 7233 2bfa 01D0     		beq	.L360
3351:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3352:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_STREAM_WRITE_OVERRUN);
 7234              		.loc 1 3352 0
 7235 2bfc 1523     		movs	r3, #21
 7236 2bfe 24E0     		b	.L366
 7237              	.L360:
3353:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3354:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3355:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((responseR1 & SD_OCR_CID_CSD_OVERWRIETE) == SD_OCR_CID_CSD_OVERWRIETE)
 7238              		.loc 1 3355 0
 7239 2c00 FB68     		ldr	r3, [r7, #12]
 7240 2c02 03F48033 		and	r3, r3, #65536
 7241 2c06 002B     		cmp	r3, #0
 7242 2c08 01D0     		beq	.L361
3356:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3357:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_CID_CSD_OVERWRITE);
 7243              		.loc 1 3357 0
 7244 2c0a 1623     		movs	r3, #22
 7245 2c0c 1DE0     		b	.L366
 7246              	.L361:
3358:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3359:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3360:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((responseR1 & SD_OCR_WP_ERASE_SKIP) == SD_OCR_WP_ERASE_SKIP)
 7247              		.loc 1 3360 0
 7248 2c0e FB68     		ldr	r3, [r7, #12]
 7249 2c10 03F40043 		and	r3, r3, #32768
 7250 2c14 002B     		cmp	r3, #0
 7251 2c16 01D0     		beq	.L362
3361:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3362:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_WP_ERASE_SKIP);
 7252              		.loc 1 3362 0
 7253 2c18 1723     		movs	r3, #23
 7254 2c1a 16E0     		b	.L366
 7255              	.L362:
3363:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3364:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3365:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((responseR1 & SD_OCR_CARD_ECC_DISABLED) == SD_OCR_CARD_ECC_DISABLED)
 7256              		.loc 1 3365 0
 7257 2c1c FB68     		ldr	r3, [r7, #12]
 7258 2c1e 03F48043 		and	r3, r3, #16384
 7259 2c22 002B     		cmp	r3, #0
 7260 2c24 01D0     		beq	.L363
3366:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3367:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_CARD_ECC_DISABLED);
 7261              		.loc 1 3367 0
 7262 2c26 1823     		movs	r3, #24
 7263 2c28 0FE0     		b	.L366
 7264              	.L363:
3368:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3369:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3370:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((responseR1 & SD_OCR_ERASE_RESET) == SD_OCR_ERASE_RESET)
 7265              		.loc 1 3370 0
 7266 2c2a FB68     		ldr	r3, [r7, #12]
 7267 2c2c 03F40053 		and	r3, r3, #8192
 7268 2c30 002B     		cmp	r3, #0
 7269 2c32 01D0     		beq	.L364
3371:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3372:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_ERASE_RESET);
 7270              		.loc 1 3372 0
 7271 2c34 1923     		movs	r3, #25
 7272 2c36 08E0     		b	.L366
 7273              	.L364:
3373:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3374:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3375:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   if((responseR1 & SD_OCR_AKE_SEQ_ERROR) == SD_OCR_AKE_SEQ_ERROR)
 7274              		.loc 1 3375 0
 7275 2c38 FB68     		ldr	r3, [r7, #12]
 7276 2c3a 03F00803 		and	r3, r3, #8
 7277 2c3e 002B     		cmp	r3, #0
 7278 2c40 01D0     		beq	.L365
3376:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   {
3377:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****     return(SD_AKE_SEQ_ERROR);
 7279              		.loc 1 3377 0
 7280 2c42 1A23     		movs	r3, #26
 7281 2c44 01E0     		b	.L366
 7282              	.L365:
3378:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   }
3379:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   
3380:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c ****   return errorState;
 7283              		.loc 1 3380 0
 7284 2c46 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 7285              	.L366:
3381:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_sd.c **** }   
 7286              		.loc 1 3381 0
 7287 2c4a 1846     		mov	r0, r3
 7288 2c4c 2837     		adds	r7, r7, #40
 7289 2c4e BD46     		mov	sp, r7
 7290              		@ sp needed
 7291 2c50 80BD     		pop	{r7, pc}
 7292              		.cfi_endproc
 7293              	.LFE99:
 7295              	.Letext0:
 7296              		.file 2 "c:\\program files (x86)\\codesourcery\\arm-none-eabi\\include\\stdint.h"
 7297              		.file 3 "D:\\workspace\\console800480\\system/stm32f217xx.h"
 7298              		.file 4 "D:\\workspace\\console800480\\system/stm32f2xx.h"
 7299              		.file 5 "D:\\workspace\\console800480\\STM32F2xx_HAL_Driver\\Inc/stm32f2xx_hal_def.h"
 7300              		.file 6 "D:\\workspace\\console800480\\STM32F2xx_HAL_Driver\\Inc/stm32f2xx_hal_dma.h"
 7301              		.file 7 "D:\\workspace\\console800480\\STM32F2xx_HAL_Driver\\Inc/stm32f2xx_ll_sdmmc.h"
 7302              		.file 8 "D:\\workspace\\console800480\\STM32F2xx_HAL_Driver\\Inc/stm32f2xx_hal_sd.h"
 7303              		.file 9 "D:\\workspace\\console800480\\system/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f2xx_hal_sd.c
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:18     .text:00000000 $t
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:23     .text:00000000 HAL_SD_Init
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:196    .text:00000104 HAL_SD_MspInit
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:5134   .text:00001f90 SD_PowerON
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:4838   .text:00001db4 SD_Initialize_Cards
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:2639   .text:00000f78 HAL_SD_Get_CardInfo
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:5072   .text:00001f3c SD_Select_Deselect
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:159    .text:000000e4 HAL_SD_DeInit
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:5420   .text:0000215c SD_PowerOFF
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:225    .text:00000118 HAL_SD_MspDeInit
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:254    .text:0000012c HAL_SD_ReadBlocks
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:5769   .text:00002318 SD_CmdResp1Error
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:3619   .text:00001684 HAL_SD_StopTransfer
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:686    .text:000003f0 HAL_SD_WriteBlocks
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:6975   .text:00002a58 SD_IsCardProgramming
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:1253   .text:0000078c HAL_SD_ReadBlocks_DMA
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:4620   .text:00001cdc SD_DMA_RxCplt
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:4668   .text:00001d0c SD_DMA_RxError
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:1485   .text:00000914 HAL_SD_WriteBlocks_DMA
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:4704   .text:00001d2c SD_DMA_TxCplt
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:4752   .text:00001d5c SD_DMA_TxError
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:1726   .text:00000aac HAL_SD_CheckReadOperation
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:1875   .text:00000b68 HAL_SD_CheckWriteOperation
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:4362   .text:00001b70 HAL_SD_GetStatus
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:2033   .text:00000c34 HAL_SD_Erase
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:2299   .text:00000dfc HAL_SD_IRQHandler
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:2465   .text:00000f00 HAL_SD_XferCpltCallback
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:2494   .text:00000f14 HAL_SD_XferErrorCallback
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:2523   .text:00000f28 HAL_SD_DMA_RxCpltCallback
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:2552   .text:00000f3c HAL_SD_DMA_RxErrorCallback
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:2581   .text:00000f50 HAL_SD_DMA_TxCpltCallback
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:2610   .text:00000f64 HAL_SD_DMA_TxErrorCallback
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:3459   .text:0000158c HAL_SD_WideBusOperation_Config
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:6368   .text:00002660 SD_WideBus_Enable
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:6513   .text:00002750 SD_WideBus_Disable
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:3681   .text:000016cc HAL_SD_HighSpeed
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:6658   .text:00002840 SD_FindSCR
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:4027   .text:00001940 HAL_SD_SendSDStatus
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:4788   .text:00001d7c SD_GetState
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:4418   .text:00001ba4 HAL_SD_GetCardStatus
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:5458   .text:0000217c SD_SendStatus
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:6128   .text:00002518 SD_CmdResp2Error
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:6216   .text:00002588 SD_CmdResp6Error
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:5548   .text:000021f0 SD_CmdError
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:5641   .text:00002268 SD_CmdResp7Error
C:\Users\sagok\AppData\Local\Temp\cceOQiDW.s:6059   .text:000024c4 SD_CmdResp3Error
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.7f551ac7fcad8b79b9df4bfdaa536673
                           .group:00000000 wm4.stm32f2xx_hal_conf.h.40.007126baefb9f966c36646edbf8040d2
                           .group:00000000 wm4.stm32f2xx.h.57.5ec1581efc43612c411d33a8686e9ec7
                           .group:00000000 wm4.stm32f217xx.h.52.9c940d76d00294b78837dc334c172fdd
                           .group:00000000 wm4.core_cm3.h.32.49180ccb4d36cabd2d7016d2a51d91ae
                           .group:00000000 wm4.newlib.h.8.384a112feabb3bef7b573ae48cde2e3b
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4.config.h.183.aa62afef667fb61d15fa64c48beb2f14
                           .group:00000000 wm4._ansi.h.23.5644b60c990a4800b02a6e654e88f93a
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:00000000 wm4.core_cm3.h.130.63ab2348a6eed0fdb318040d970b676c
                           .group:00000000 wm4.stm32f217xx.h.978.a5c681952b2f704a0e7f2ba21d08adf5
                           .group:00000000 wm4.stm32f2xx.h.142.bc2155a1f7498bab16371e38413a9e41
                           .group:00000000 wm4.stm32f2xx_hal_def.h.74.8ad2dc8aa82c4fd02e5aeaae592641ba
                           .group:00000000 wm4.stm32f2xx_hal_rcc.h.142.ec0f91cc6576a6acebd17e6dd85829ae
                           .group:00000000 wm4.stm32f2xx_hal_rcc_ex.h.40.0829033e864455c6bdd0db01f8ba5a50
                           .group:00000000 wm4.stm32f2xx_hal_gpio.h.40.ba64e0bb94d9a68835f80159f39a86f1
                           .group:00000000 wm4.stm32f2xx_hal_gpio_ex.h.40.24e547fd402281923f446b510381083f
                           .group:00000000 wm4.stm32f2xx_hal_dma.h.40.5d9732ace2a21a4526ce8f0c52428fff
                           .group:00000000 wm4.stm32f2xx_hal_cortex.h.40.e10263d2ec5d4fa79b4180ce1a38aff1
                           .group:00000000 wm4.stm32f2xx_hal_adc.h.40.89ac8b78113cac4cf63847587daabac9
                           .group:00000000 wm4.stm32f2xx_hal_adc_ex.h.40.7de68ed256ef25526ee31cc017f2c291
                           .group:00000000 wm4.stm32f2xx_hal_flash.h.40.c3171719ce015e9cff20c795e44e886d
                           .group:00000000 wm4.stm32f2xx_hal_flash_ex.h.40.7389508bd24a0aeb077bde0c9fb651eb
                           .group:00000000 wm4.stm32f2xx_ll_fsmc.h.40.c1c32f2e1862f4dd342bd9b80fb895bb
                           .group:00000000 wm4.stm32f2xx_hal_pwr.h.40.812df32e5c31b609a128e9db0eb4cbd0
                           .group:00000000 wm4.stm32f2xx_hal_rtc.h.40.850fda5fe2cce8797446913dee18382f
                           .group:00000000 wm4.stm32f2xx_hal_rtc_ex.h.40.f3e0c408e3bf4e8a0352d7ec9a18a822
                           .group:00000000 wm4.stm32f2xx_ll_sdmmc.h.40.3719ab487c4b77401c572f459adf6eb7
                           .group:00000000 wm4.stm32f2xx_hal_sd.h.58.760215394dcc316161a6482c0af9b866
                           .group:00000000 wm4.stm32f2xx_hal_spi.h.40.7984243dbaba8b21c6392998a47e6987
                           .group:00000000 wm4.stm32f2xx_hal_tim.h.40.d79172f25d0e9a15dc346aba8515bdd6
                           .group:00000000 wm4.stm32f2xx_hal_tim_ex.h.40.361f280a7a3f60b4b238bb99ca728d83
                           .group:00000000 wm4.stm32f2xx_hal_uart.h.40.d74def561ae6f78f40f477c8426ecbef
                           .group:00000000 wm4.stm32f2xx_ll_usb.h.40.9b0206a05bc6ce3bec1648b51f22cb81
                           .group:00000000 wm4.stm32f2xx_hal_pcd.h.99.11faba414c39e357b2f23364912d0605
                           .group:00000000 wm4.stm32f2xx_hal_hcd.h.40.44ee5e972983ae0139ddbacdc75c44ef
                           .group:00000000 wm4.stm32f2xx_hal.h.64.ed79ee83e52b151b3c365392b398f866

UNDEFINED SYMBOLS
SDIO_Init
SDIO_SendCommand
SDIO_DataConfig
SDIO_ReadFIFO
SDIO_WriteFIFO
HAL_DMA_Start_IT
SDIO_GetResponse
memset
SDIO_GetPowerState
SDIO_PowerState_ON
SDIO_PowerState_OFF
SDIO_GetCommandResponse
