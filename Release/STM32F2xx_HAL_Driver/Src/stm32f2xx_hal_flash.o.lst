   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f2xx_hal_flash.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	pFlash,24,4
  19              		.align	2
  20              		.global	HAL_FLASH_Program
  21              		.thumb
  22              		.thumb_func
  24              	HAL_FLASH_Program:
  25              	.LFB55:
  26              		.file 1 "../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c"
   1:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /**
   2:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   ******************************************************************************
   3:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @file    stm32f2xx_hal_flash.c
   4:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @author  MCD Application Team
   5:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @version V1.0.1
   6:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @date    25-March-2014
   7:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @brief   FLASH HAL module driver.
   8:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *          This file provides firmware functions to manage the following 
   9:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *          functionalities of the internal FLASH memory:
  10:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *           + Program operations functions
  11:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *           + Memory Control functions 
  12:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *           + Peripheral Errors functions
  13:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *         
  14:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   @verbatim
  15:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   ==============================================================================
  16:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****                         ##### FLASH peripheral features #####
  17:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   ==============================================================================
  18:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****            
  19:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   [..] The Flash memory interface manages CPU AHB I-Code and D-Code accesses 
  20:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****        to the Flash memory. It implements the erase and program Flash memory operations 
  21:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****        and the read and write protection mechanisms.
  22:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       
  23:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   [..] The Flash memory interface accelerates code execution with a system of instruction
  24:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****        prefetch and cache lines. 
  25:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
  26:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   [..] The FLASH main features are:
  27:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       (+) Flash memory read operations
  28:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       (+) Flash memory program/erase operations
  29:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       (+) Read / write protections
  30:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       (+) Prefetch on I-Code
  31:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       (+) 64 cache lines of 128 bits on I-Code
  32:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       (+) 8 cache lines of 128 bits on D-Code
  33:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       
  34:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       
  35:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****                      ##### How to use this driver #####
  36:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   ==============================================================================
  37:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     [..]                             
  38:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       This driver provides functions and macros to configure and program the FLASH 
  39:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       memory of all STM32F2xx devices.
  40:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     
  41:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       (#) FLASH Memory IO Programming functions: 
  42:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****            (++) Lock and Unlock the FLASH interface using HAL_FLASH_Unlock() and 
  43:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****                 HAL_FLASH_Lock() functions
  44:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****            (++) Program functions: byte, half word, word and double word
  45:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****            (++) There Two modes of programming :
  46:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****             (+++) Polling mode using HAL_FLASH_Program() function
  47:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****             (+++) Interrupt mode using HAL_FLASH_Program_IT() function
  48:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     
  49:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       (#) Interrupts and flags management functions : 
  50:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****            (++) Handle FLASH interrupts by calling HAL_FLASH_IRQHandler()
  51:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****            (++) Wait for last FLASH operation according to its status
  52:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****            (++) Get error flag status by calling HAL_SetErrorCode()          
  53:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
  54:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     [..] 
  55:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       In addition to these functions, this driver includes a set of macros allowing
  56:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       to handle the following operations:
  57:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****        (+) Set the latency
  58:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****        (+) Enable/Disable the prefetch buffer
  59:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****        (+) Enable/Disable the Instruction cache and the Data cache
  60:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****        (+) Reset the Instruction cache and the Data cache
  61:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****        (+) Enable/Disable the FLASH interrupts
  62:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****        (+) Monitor the FLASH flags status
  63:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****           
  64:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   @endverbatim
  65:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   ******************************************************************************
  66:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @attention
  67:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *
  68:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * <h2><center>&copy; COPYRIGHT(c) 2014 STMicroelectronics</center></h2>
  69:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *
  70:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * Redistribution and use in source and binary forms, with or without modification,
  71:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * are permitted provided that the following conditions are met:
  72:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  73:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *      this list of conditions and the following disclaimer.
  74:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  75:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *      this list of conditions and the following disclaimer in the documentation
  76:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *      and/or other materials provided with the distribution.
  77:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  78:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *      may be used to endorse or promote products derived from this software
  79:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *      without specific prior written permission.
  80:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *
  81:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  82:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  83:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  84:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  85:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  86:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  87:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  88:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  89:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  90:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  91:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *
  92:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   ******************************************************************************
  93:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */ 
  94:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
  95:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /* Includes ------------------------------------------------------------------*/
  96:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** #include "stm32f2xx_hal.h"
  97:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
  98:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /** @addtogroup STM32F2xx_HAL_Driver
  99:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @{
 100:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */
 101:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 102:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /** @defgroup FLASH
 103:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @brief FLASH HAL module driver
 104:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @{
 105:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */
 106:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 107:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** #ifdef HAL_FLASH_MODULE_ENABLED
 108:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 109:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /* Private typedef -----------------------------------------------------------*/
 110:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /* Private define ------------------------------------------------------------*/
 111:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** #define SECTOR_MASK               ((uint32_t)0xFFFFFF07)
 112:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 113:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** #define HAL_FLASH_TIMEOUT_VALUE   ((uint32_t)50000)/* 50 s */
 114:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /* Private macro -------------------------------------------------------------*/
 115:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /* Private variables ---------------------------------------------------------*/
 116:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /* Variable used for Erase sectors under interruption */
 117:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** FLASH_ProcessTypeDef pFlash;
 118:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 119:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 120:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /* Private function prototypes -----------------------------------------------*/
 121:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /* Program operations */
 122:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** static void   FLASH_Program_DoubleWord(uint32_t Address, uint64_t Data);
 123:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** static void   FLASH_Program_Word(uint32_t Address, uint32_t Data);
 124:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** static void   FLASH_Program_HalfWord(uint32_t Address, uint16_t Data);
 125:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** static void   FLASH_Program_Byte(uint32_t Address, uint8_t Data);
 126:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** static void   FLASH_SetErrorCode(void);
 127:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 128:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout);
 129:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 130:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /* Private functions ---------------------------------------------------------*/
 131:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /** @defgroup FLASH_Private_Functions FLASH Private functions
 132:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @{
 133:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */
 134:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 135:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /** @defgroup FLASH_Group1 Programming operation functions 
 136:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****  *  @brief   Programming operation functions 
 137:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****  *
 138:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** @verbatim   
 139:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****  ===============================================================================
 140:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****                   ##### Programming operation functions #####
 141:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****  ===============================================================================  
 142:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     [..]
 143:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     This subsection provides a set of functions allowing to manage the FLASH 
 144:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     program operations.
 145:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 146:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** @endverbatim
 147:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @{
 148:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */
 149:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 150:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /**
 151:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @brief  Program byte, halfword, word or double word at a specified address
 152:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @param  TypeProgram:  Indicate the way to program at a specified address.
 153:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *                           This parameter can be a value of @ref FLASH_Type_Program
 154:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @param  Address:  specifies the address to be programmed.
 155:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @param  Data: specifies the data to be programmed
 156:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * 
 157:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 158:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */
 159:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program(uint32_t TypeProgram, uint32_t Address, uint64_t Data)
 160:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** {
  27              		.loc 1 160 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 86B0     		sub	sp, sp, #24
  36              		.cfi_def_cfa_offset 32
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 F860     		str	r0, [r7, #12]
  40 0008 B960     		str	r1, [r7, #8]
  41 000a C7E90023 		strd	r2, [r7]
 161:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_ERROR;
  42              		.loc 1 161 0
  43 000e 0123     		movs	r3, #1
  44 0010 FB75     		strb	r3, [r7, #23]
 162:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 163:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* Process Locked */
 164:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   __HAL_LOCK(&pFlash);
  45              		.loc 1 164 0
  46 0012 40F20003 		movw	r3, #:lower16:pFlash
  47 0016 C0F20003 		movt	r3, #:upper16:pFlash
  48 001a 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
  49 001c 012B     		cmp	r3, #1
  50 001e 01D1     		bne	.L2
  51              		.loc 1 164 0 is_stmt 0 discriminator 1
  52 0020 0223     		movs	r3, #2
  53 0022 47E0     		b	.L3
  54              	.L2:
  55              		.loc 1 164 0 discriminator 2
  56 0024 40F20003 		movw	r3, #:lower16:pFlash
  57 0028 C0F20003 		movt	r3, #:upper16:pFlash
  58 002c 0122     		movs	r2, #1
  59 002e 1A75     		strb	r2, [r3, #20]
 165:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 166:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* Check the parameters */
 167:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   assert_param(IS_TYPEPROGRAM(TypeProgram));
 168:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 169:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* Wait for last operation to be completed */
 170:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   status = FLASH_WaitForLastOperation((uint32_t)HAL_FLASH_TIMEOUT_VALUE);
  60              		.loc 1 170 0 is_stmt 1 discriminator 2
  61 0030 4CF25030 		movw	r0, #50000
  62 0034 FFF7FEFF 		bl	FLASH_WaitForLastOperation
  63 0038 0346     		mov	r3, r0
  64 003a FB75     		strb	r3, [r7, #23]
 171:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 172:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   if(status == HAL_OK)
  65              		.loc 1 172 0 discriminator 2
  66 003c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
  67 003e 002B     		cmp	r3, #0
  68 0040 31D1     		bne	.L4
 173:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   {
 174:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     if(TypeProgram == TYPEPROGRAM_BYTE)
  69              		.loc 1 174 0
  70 0042 FB68     		ldr	r3, [r7, #12]
  71 0044 002B     		cmp	r3, #0
  72 0046 05D1     		bne	.L5
 175:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     {
 176:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       /*Program byte (8-bit) at a specified address.*/
 177:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****         FLASH_Program_Byte(Address, (uint8_t) Data);
  73              		.loc 1 177 0
  74 0048 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
  75 004a B868     		ldr	r0, [r7, #8]
  76 004c 1946     		mov	r1, r3
  77 004e 00F035FB 		bl	FLASH_Program_Byte
  78 0052 16E0     		b	.L6
  79              	.L5:
 178:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     }
 179:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     else if(TypeProgram == TYPEPROGRAM_HALFWORD)
  80              		.loc 1 179 0
  81 0054 FB68     		ldr	r3, [r7, #12]
  82 0056 012B     		cmp	r3, #1
  83 0058 05D1     		bne	.L7
 180:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     {
 181:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       /*Program halfword (16-bit) at a specified address.*/
 182:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       FLASH_Program_HalfWord(Address, (uint16_t) Data);
  84              		.loc 1 182 0
  85 005a 3B88     		ldrh	r3, [r7]
  86 005c B868     		ldr	r0, [r7, #8]
  87 005e 1946     		mov	r1, r3
  88 0060 00F0FAFA 		bl	FLASH_Program_HalfWord
  89 0064 0DE0     		b	.L6
  90              	.L7:
 183:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     }
 184:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     else if(TypeProgram == TYPEPROGRAM_WORD)
  91              		.loc 1 184 0
  92 0066 FB68     		ldr	r3, [r7, #12]
  93 0068 022B     		cmp	r3, #2
  94 006a 05D1     		bne	.L8
 185:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     {
 186:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       /*Program word (32-bit) at a specified address.*/
 187:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       FLASH_Program_Word(Address, (uint32_t) Data);
  95              		.loc 1 187 0
  96 006c 3B68     		ldr	r3, [r7]
  97 006e B868     		ldr	r0, [r7, #8]
  98 0070 1946     		mov	r1, r3
  99 0072 00F0BFFA 		bl	FLASH_Program_Word
 100 0076 04E0     		b	.L6
 101              	.L8:
 188:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     }
 189:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     else
 190:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     {
 191:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       /*Program double word (64-bit) at a specified address.*/
 192:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       FLASH_Program_DoubleWord(Address, Data);
 102              		.loc 1 192 0
 103 0078 B868     		ldr	r0, [r7, #8]
 104 007a D7E90023 		ldrd	r2, [r7]
 105 007e 00F085FA 		bl	FLASH_Program_DoubleWord
 106              	.L6:
 193:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     }
 194:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 195:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     /* Wait for last operation to be completed */
 196:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     status = FLASH_WaitForLastOperation((uint32_t)HAL_FLASH_TIMEOUT_VALUE);
 107              		.loc 1 196 0
 108 0082 4CF25030 		movw	r0, #50000
 109 0086 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 110 008a 0346     		mov	r3, r0
 111 008c FB75     		strb	r3, [r7, #23]
 197:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     
 198:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     /* If the program operation is completed, disable the PG Bit */
 199:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 112              		.loc 1 199 0
 113 008e 4FF47053 		mov	r3, #15360
 114 0092 C4F20203 		movt	r3, 16386
 115 0096 4FF47052 		mov	r2, #15360
 116 009a C4F20202 		movt	r2, 16386
 117 009e 1269     		ldr	r2, [r2, #16]
 118 00a0 22F00102 		bic	r2, r2, #1
 119 00a4 1A61     		str	r2, [r3, #16]
 120              	.L4:
 200:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   }
 201:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 202:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* Process Unlocked */
 203:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   __HAL_UNLOCK(&pFlash);
 121              		.loc 1 203 0
 122 00a6 40F20003 		movw	r3, #:lower16:pFlash
 123 00aa C0F20003 		movt	r3, #:upper16:pFlash
 124 00ae 0022     		movs	r2, #0
 125 00b0 1A75     		strb	r2, [r3, #20]
 204:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 205:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   return status;
 126              		.loc 1 205 0
 127 00b2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 128              	.L3:
 206:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** }
 129              		.loc 1 206 0
 130 00b4 1846     		mov	r0, r3
 131 00b6 1837     		adds	r7, r7, #24
 132 00b8 BD46     		mov	sp, r7
 133              		@ sp needed
 134 00ba 80BD     		pop	{r7, pc}
 135              		.cfi_endproc
 136              	.LFE55:
 138              		.align	2
 139              		.global	HAL_FLASH_Program_IT
 140              		.thumb
 141              		.thumb_func
 143              	HAL_FLASH_Program_IT:
 144              	.LFB56:
 207:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 208:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /**
 209:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @brief   Program byte, halfword, word or double word at a specified address  with interrupt ena
 210:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @param  TypeProgram:  Indicate the way to program at a specified address.
 211:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *                           This parameter can be a value of @ref FLASH_Type_Program
 212:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @param  Address:  specifies the address to be programmed.
 213:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @param  Data: specifies the data to be programmed
 214:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * 
 215:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 216:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */
 217:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program_IT(uint32_t TypeProgram, uint32_t Address, uint64_t Data)
 218:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** {
 145              		.loc 1 218 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 24
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 00bc 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 00be 86B0     		sub	sp, sp, #24
 154              		.cfi_def_cfa_offset 32
 155 00c0 00AF     		add	r7, sp, #0
 156              		.cfi_def_cfa_register 7
 157 00c2 F860     		str	r0, [r7, #12]
 158 00c4 B960     		str	r1, [r7, #8]
 159 00c6 C7E90023 		strd	r2, [r7]
 219:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 160              		.loc 1 219 0
 161 00ca 0023     		movs	r3, #0
 162 00cc FB75     		strb	r3, [r7, #23]
 220:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 221:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* Process Locked */
 222:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   __HAL_LOCK(&pFlash);
 163              		.loc 1 222 0
 164 00ce 40F20003 		movw	r3, #:lower16:pFlash
 165 00d2 C0F20003 		movt	r3, #:upper16:pFlash
 166 00d6 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 167 00d8 012B     		cmp	r3, #1
 168 00da 01D1     		bne	.L10
 169              		.loc 1 222 0 is_stmt 0 discriminator 1
 170 00dc 0223     		movs	r3, #2
 171 00de 50E0     		b	.L11
 172              	.L10:
 173              		.loc 1 222 0 discriminator 2
 174 00e0 40F20003 		movw	r3, #:lower16:pFlash
 175 00e4 C0F20003 		movt	r3, #:upper16:pFlash
 176 00e8 0122     		movs	r2, #1
 177 00ea 1A75     		strb	r2, [r3, #20]
 223:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 224:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* Check the parameters */
 225:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   assert_param(IS_TYPEPROGRAM(TypeProgram));
 226:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 227:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* Enable End of FLASH Operation interrupt */
 228:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   __HAL_FLASH_ENABLE_IT(FLASH_IT_EOP);
 178              		.loc 1 228 0 is_stmt 1 discriminator 2
 179 00ec 4FF47053 		mov	r3, #15360
 180 00f0 C4F20203 		movt	r3, 16386
 181 00f4 4FF47052 		mov	r2, #15360
 182 00f8 C4F20202 		movt	r2, 16386
 183 00fc 1269     		ldr	r2, [r2, #16]
 184 00fe 42F08072 		orr	r2, r2, #16777216
 185 0102 1A61     		str	r2, [r3, #16]
 229:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 230:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* Enable Error source interrupt */
 231:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   __HAL_FLASH_ENABLE_IT(FLASH_IT_ERR);
 186              		.loc 1 231 0 discriminator 2
 187 0104 4FF47053 		mov	r3, #15360
 188 0108 C4F20203 		movt	r3, 16386
 189 010c 4FF47052 		mov	r2, #15360
 190 0110 C4F20202 		movt	r2, 16386
 191 0114 1269     		ldr	r2, [r2, #16]
 192 0116 42F00072 		orr	r2, r2, #33554432
 193 011a 1A61     		str	r2, [r3, #16]
 232:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 233:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* Clear pending flags (if any) */  
 234:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP    | FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR |\
 194              		.loc 1 234 0 discriminator 2
 195 011c 4FF47053 		mov	r3, #15360
 196 0120 C4F20203 		movt	r3, 16386
 197 0124 F322     		movs	r2, #243
 198 0126 DA60     		str	r2, [r3, #12]
 235:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****                          FLASH_FLAG_PGAERR | FLASH_FLAG_PGPERR| FLASH_FLAG_PGSERR);  
 236:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 237:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   pFlash.ProcedureOnGoing = FLASH_PROC_PROGRAM;
 199              		.loc 1 237 0 discriminator 2
 200 0128 40F20003 		movw	r3, #:lower16:pFlash
 201 012c C0F20003 		movt	r3, #:upper16:pFlash
 202 0130 0322     		movs	r2, #3
 203 0132 1A70     		strb	r2, [r3]
 238:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   pFlash.Address = Address;
 204              		.loc 1 238 0 discriminator 2
 205 0134 40F20003 		movw	r3, #:lower16:pFlash
 206 0138 C0F20003 		movt	r3, #:upper16:pFlash
 207 013c BA68     		ldr	r2, [r7, #8]
 208 013e 1A61     		str	r2, [r3, #16]
 239:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 240:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   if(TypeProgram == TYPEPROGRAM_BYTE)
 209              		.loc 1 240 0 discriminator 2
 210 0140 FB68     		ldr	r3, [r7, #12]
 211 0142 002B     		cmp	r3, #0
 212 0144 05D1     		bne	.L12
 241:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   {
 242:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     /*Program byte (8-bit) at a specified address.*/
 243:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       FLASH_Program_Byte(Address, (uint8_t) Data);
 213              		.loc 1 243 0
 214 0146 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 215 0148 B868     		ldr	r0, [r7, #8]
 216 014a 1946     		mov	r1, r3
 217 014c 00F0B6FA 		bl	FLASH_Program_Byte
 218 0150 16E0     		b	.L13
 219              	.L12:
 244:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   }
 245:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   else if(TypeProgram == TYPEPROGRAM_HALFWORD)
 220              		.loc 1 245 0
 221 0152 FB68     		ldr	r3, [r7, #12]
 222 0154 012B     		cmp	r3, #1
 223 0156 05D1     		bne	.L14
 246:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   {
 247:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     /*Program halfword (16-bit) at a specified address.*/
 248:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     FLASH_Program_HalfWord(Address, (uint16_t) Data);
 224              		.loc 1 248 0
 225 0158 3B88     		ldrh	r3, [r7]
 226 015a B868     		ldr	r0, [r7, #8]
 227 015c 1946     		mov	r1, r3
 228 015e 00F07BFA 		bl	FLASH_Program_HalfWord
 229 0162 0DE0     		b	.L13
 230              	.L14:
 249:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   }
 250:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   else if(TypeProgram == TYPEPROGRAM_WORD)
 231              		.loc 1 250 0
 232 0164 FB68     		ldr	r3, [r7, #12]
 233 0166 022B     		cmp	r3, #2
 234 0168 05D1     		bne	.L15
 251:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   {
 252:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     /*Program word (32-bit) at a specified address.*/
 253:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     FLASH_Program_Word(Address, (uint32_t) Data);
 235              		.loc 1 253 0
 236 016a 3B68     		ldr	r3, [r7]
 237 016c B868     		ldr	r0, [r7, #8]
 238 016e 1946     		mov	r1, r3
 239 0170 00F040FA 		bl	FLASH_Program_Word
 240 0174 04E0     		b	.L13
 241              	.L15:
 254:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   }
 255:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   else
 256:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   {
 257:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     /*Program double word (64-bit) at a specified address.*/
 258:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     FLASH_Program_DoubleWord(Address, Data);
 242              		.loc 1 258 0
 243 0176 B868     		ldr	r0, [r7, #8]
 244 0178 D7E90023 		ldrd	r2, [r7]
 245 017c 00F006FA 		bl	FLASH_Program_DoubleWord
 246              	.L13:
 259:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   }
 260:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 261:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   return status;
 247              		.loc 1 261 0
 248 0180 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 249              	.L11:
 262:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** }
 250              		.loc 1 262 0
 251 0182 1846     		mov	r0, r3
 252 0184 1837     		adds	r7, r7, #24
 253 0186 BD46     		mov	sp, r7
 254              		@ sp needed
 255 0188 80BD     		pop	{r7, pc}
 256              		.cfi_endproc
 257              	.LFE56:
 259 018a 00BF     		.align	2
 260              		.global	HAL_FLASH_IRQHandler
 261              		.thumb
 262              		.thumb_func
 264              	HAL_FLASH_IRQHandler:
 265              	.LFB57:
 263:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 264:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /**
 265:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @brief This function handles FLASH interrupt request.
 266:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @param  None
 267:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @retval None
 268:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */
 269:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** void HAL_FLASH_IRQHandler(void)
 270:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** {
 266              		.loc 1 270 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 8
 269              		@ frame_needed = 1, uses_anonymous_args = 0
 270 018c 80B5     		push	{r7, lr}
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 7, -8
 273              		.cfi_offset 14, -4
 274 018e 82B0     		sub	sp, sp, #8
 275              		.cfi_def_cfa_offset 16
 276 0190 00AF     		add	r7, sp, #0
 277              		.cfi_def_cfa_register 7
 271:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   uint32_t temp;
 272:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 273:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* If the program operation is completed, disable the PG Bit */
 274:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   FLASH->CR &= (~FLASH_CR_PG);
 278              		.loc 1 274 0
 279 0192 4FF47053 		mov	r3, #15360
 280 0196 C4F20203 		movt	r3, 16386
 281 019a 4FF47052 		mov	r2, #15360
 282 019e C4F20202 		movt	r2, 16386
 283 01a2 1269     		ldr	r2, [r2, #16]
 284 01a4 22F00102 		bic	r2, r2, #1
 285 01a8 1A61     		str	r2, [r3, #16]
 275:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 276:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* If the erase operation is completed, disable the SER Bit */
 277:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   FLASH->CR &= (~FLASH_CR_SER);
 286              		.loc 1 277 0
 287 01aa 4FF47053 		mov	r3, #15360
 288 01ae C4F20203 		movt	r3, 16386
 289 01b2 4FF47052 		mov	r2, #15360
 290 01b6 C4F20202 		movt	r2, 16386
 291 01ba 1269     		ldr	r2, [r2, #16]
 292 01bc 22F00202 		bic	r2, r2, #2
 293 01c0 1A61     		str	r2, [r3, #16]
 278:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   FLASH->CR &= SECTOR_MASK; 
 294              		.loc 1 278 0
 295 01c2 4FF47053 		mov	r3, #15360
 296 01c6 C4F20203 		movt	r3, 16386
 297 01ca 4FF47052 		mov	r2, #15360
 298 01ce C4F20202 		movt	r2, 16386
 299 01d2 1269     		ldr	r2, [r2, #16]
 300 01d4 22F0F802 		bic	r2, r2, #248
 301 01d8 1A61     		str	r2, [r3, #16]
 279:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 280:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* if the erase operation is completed, disable the MER Bit */
 281:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   FLASH->CR &= (~FLASH_CR_MER);
 302              		.loc 1 281 0
 303 01da 4FF47053 		mov	r3, #15360
 304 01de C4F20203 		movt	r3, 16386
 305 01e2 4FF47052 		mov	r2, #15360
 306 01e6 C4F20202 		movt	r2, 16386
 307 01ea 1269     		ldr	r2, [r2, #16]
 308 01ec 22F00402 		bic	r2, r2, #4
 309 01f0 1A61     		str	r2, [r3, #16]
 282:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 283:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* Check FLASH End of Operation flag  */
 284:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 310              		.loc 1 284 0
 311 01f2 4FF47053 		mov	r3, #15360
 312 01f6 C4F20203 		movt	r3, 16386
 313 01fa DB68     		ldr	r3, [r3, #12]
 314 01fc 03F00103 		and	r3, r3, #1
 315 0200 002B     		cmp	r3, #0
 316 0202 79D0     		beq	.L17
 285:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   {
 286:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     if(pFlash.ProcedureOnGoing == FLASH_PROC_SECTERASE)
 317              		.loc 1 286 0
 318 0204 40F20003 		movw	r3, #:lower16:pFlash
 319 0208 C0F20003 		movt	r3, #:upper16:pFlash
 320 020c 1B78     		ldrb	r3, [r3]
 321 020e DBB2     		uxtb	r3, r3
 322 0210 012B     		cmp	r3, #1
 323 0212 51D1     		bne	.L18
 287:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     {
 288:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       /*Nb of sector to erased can be decreased*/
 289:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       pFlash.NbSectorsToErase--;
 324              		.loc 1 289 0
 325 0214 40F20003 		movw	r3, #:lower16:pFlash
 326 0218 C0F20003 		movt	r3, #:upper16:pFlash
 327 021c 5B68     		ldr	r3, [r3, #4]
 328 021e 5A1E     		subs	r2, r3, #1
 329 0220 40F20003 		movw	r3, #:lower16:pFlash
 330 0224 C0F20003 		movt	r3, #:upper16:pFlash
 331 0228 5A60     		str	r2, [r3, #4]
 290:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 291:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       /* Check if there are still sectors to erase*/
 292:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       if(pFlash.NbSectorsToErase != 0)
 332              		.loc 1 292 0
 333 022a 40F20003 		movw	r3, #:lower16:pFlash
 334 022e C0F20003 		movt	r3, #:upper16:pFlash
 335 0232 5B68     		ldr	r3, [r3, #4]
 336 0234 002B     		cmp	r3, #0
 337 0236 26D0     		beq	.L19
 293:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       {
 294:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****         temp = pFlash.Sector;
 338              		.loc 1 294 0
 339 0238 40F20003 		movw	r3, #:lower16:pFlash
 340 023c C0F20003 		movt	r3, #:upper16:pFlash
 341 0240 DB68     		ldr	r3, [r3, #12]
 342 0242 7B60     		str	r3, [r7, #4]
 295:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****         /*Indicate user which sector has been erased*/
 296:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(temp);
 343              		.loc 1 296 0
 344 0244 7868     		ldr	r0, [r7, #4]
 345 0246 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 297:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 298:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****         /* Clear pending flags (if any) */  
 299:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP | FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR |\
 346              		.loc 1 299 0
 347 024a 4FF47053 		mov	r3, #15360
 348 024e C4F20203 		movt	r3, 16386
 349 0252 F322     		movs	r2, #243
 350 0254 DA60     		str	r2, [r3, #12]
 300:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****          FLASH_FLAG_PGAERR | FLASH_FLAG_PGPERR| FLASH_FLAG_PGSERR);  
 301:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 302:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****         /*Increment sector number*/
 303:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****         temp = ++pFlash.Sector;
 351              		.loc 1 303 0
 352 0256 40F20003 		movw	r3, #:lower16:pFlash
 353 025a C0F20003 		movt	r3, #:upper16:pFlash
 354 025e DB68     		ldr	r3, [r3, #12]
 355 0260 0133     		adds	r3, r3, #1
 356 0262 1A46     		mov	r2, r3
 357 0264 40F20003 		movw	r3, #:lower16:pFlash
 358 0268 C0F20003 		movt	r3, #:upper16:pFlash
 359 026c DA60     		str	r2, [r3, #12]
 360 026e 7A60     		str	r2, [r7, #4]
 304:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****         FLASH_Erase_Sector(temp, pFlash.VoltageForErase);
 361              		.loc 1 304 0
 362 0270 40F20003 		movw	r3, #:lower16:pFlash
 363 0274 C0F20003 		movt	r3, #:upper16:pFlash
 364 0278 1B7A     		ldrb	r3, [r3, #8]
 365 027a DBB2     		uxtb	r3, r3
 366 027c 7868     		ldr	r0, [r7, #4]
 367 027e 1946     		mov	r1, r3
 368 0280 FFF7FEFF 		bl	FLASH_Erase_Sector
 369 0284 38E0     		b	.L17
 370              	.L19:
 305:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       }
 306:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       else
 307:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       {
 308:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****         /*No more sectors to Erase, user callback can be called.*/
 309:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****         /*Reset Sector and stop Erase sectors procedure*/
 310:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****         pFlash.Sector = temp = 0xFFFFFFFF;
 371              		.loc 1 310 0
 372 0286 4FF0FF33 		mov	r3, #-1
 373 028a 7B60     		str	r3, [r7, #4]
 374 028c 40F20003 		movw	r3, #:lower16:pFlash
 375 0290 C0F20003 		movt	r3, #:upper16:pFlash
 376 0294 7A68     		ldr	r2, [r7, #4]
 377 0296 DA60     		str	r2, [r3, #12]
 311:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 378              		.loc 1 311 0
 379 0298 40F20003 		movw	r3, #:lower16:pFlash
 380 029c C0F20003 		movt	r3, #:upper16:pFlash
 381 02a0 0022     		movs	r2, #0
 382 02a2 1A70     		strb	r2, [r3]
 312:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 313:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(temp);
 383              		.loc 1 313 0
 384 02a4 7868     		ldr	r0, [r7, #4]
 385 02a6 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 314:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 315:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 386              		.loc 1 315 0
 387 02aa 4FF47053 		mov	r3, #15360
 388 02ae C4F20203 		movt	r3, 16386
 389 02b2 0122     		movs	r2, #1
 390 02b4 DA60     		str	r2, [r3, #12]
 391 02b6 1FE0     		b	.L17
 392              	.L18:
 316:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       }
 317:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     }
 318:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     else 
 319:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     {
 320:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       if (pFlash.ProcedureOnGoing == FLASH_PROC_MASSERASE) 
 393              		.loc 1 320 0
 394 02b8 40F20003 		movw	r3, #:lower16:pFlash
 395 02bc C0F20003 		movt	r3, #:upper16:pFlash
 396 02c0 1B78     		ldrb	r3, [r3]
 397 02c2 DBB2     		uxtb	r3, r3
 398 02c4 022B     		cmp	r3, #2
 399 02c6 03D1     		bne	.L21
 321:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       {
 322:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****         /*MassErase ended. Return the selected bank*/
 323:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 324:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(1);
 400              		.loc 1 324 0
 401 02c8 0120     		movs	r0, #1
 402 02ca FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 403 02ce 07E0     		b	.L22
 404              	.L21:
 325:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       }
 326:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       else
 327:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       {
 328:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****         /*Program ended. Return the selected address*/
 329:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 330:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Address);
 405              		.loc 1 330 0
 406 02d0 40F20003 		movw	r3, #:lower16:pFlash
 407 02d4 C0F20003 		movt	r3, #:upper16:pFlash
 408 02d8 1B69     		ldr	r3, [r3, #16]
 409 02da 1846     		mov	r0, r3
 410 02dc FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 411              	.L22:
 331:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       }
 332:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 412              		.loc 1 332 0
 413 02e0 40F20003 		movw	r3, #:lower16:pFlash
 414 02e4 C0F20003 		movt	r3, #:upper16:pFlash
 415 02e8 0022     		movs	r2, #0
 416 02ea 1A70     		strb	r2, [r3]
 333:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       /* Clear FLASH End of Operation pending bit */
 334:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 417              		.loc 1 334 0
 418 02ec 4FF47053 		mov	r3, #15360
 419 02f0 C4F20203 		movt	r3, 16386
 420 02f4 0122     		movs	r2, #1
 421 02f6 DA60     		str	r2, [r3, #12]
 422              	.L17:
 335:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     }
 336:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 337:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   }
 338:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 339:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* Check FLASH operation error flags */
 340:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 423              		.loc 1 340 0
 424 02f8 4FF47053 		mov	r3, #15360
 425 02fc C4F20203 		movt	r3, 16386
 426 0300 DB68     		ldr	r3, [r3, #12]
 427 0302 03F4F973 		and	r3, r3, #498
 428 0306 002B     		cmp	r3, #0
 429 0308 38D0     		beq	.L23
 341:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****                            FLASH_FLAG_PGPERR | FLASH_FLAG_PGSERR | FLASH_FLAG_RDERR)) != RESET)
 342:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   {
 343:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     if(pFlash.ProcedureOnGoing == FLASH_PROC_SECTERASE)
 430              		.loc 1 343 0
 431 030a 40F20003 		movw	r3, #:lower16:pFlash
 432 030e C0F20003 		movt	r3, #:upper16:pFlash
 433 0312 1B78     		ldrb	r3, [r3]
 434 0314 DBB2     		uxtb	r3, r3
 435 0316 012B     		cmp	r3, #1
 436 0318 0DD1     		bne	.L24
 344:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     {
 345:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       /*return the faulty sector*/
 346:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       temp = pFlash.Sector;
 437              		.loc 1 346 0
 438 031a 40F20003 		movw	r3, #:lower16:pFlash
 439 031e C0F20003 		movt	r3, #:upper16:pFlash
 440 0322 DB68     		ldr	r3, [r3, #12]
 441 0324 7B60     		str	r3, [r7, #4]
 347:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       pFlash.Sector = 0xFFFFFFFF;
 442              		.loc 1 347 0
 443 0326 40F20003 		movw	r3, #:lower16:pFlash
 444 032a C0F20003 		movt	r3, #:upper16:pFlash
 445 032e 4FF0FF32 		mov	r2, #-1
 446 0332 DA60     		str	r2, [r3, #12]
 447 0334 10E0     		b	.L25
 448              	.L24:
 348:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     }
 349:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     else if (pFlash.ProcedureOnGoing == FLASH_PROC_MASSERASE)
 449              		.loc 1 349 0
 450 0336 40F20003 		movw	r3, #:lower16:pFlash
 451 033a C0F20003 		movt	r3, #:upper16:pFlash
 452 033e 1B78     		ldrb	r3, [r3]
 453 0340 DBB2     		uxtb	r3, r3
 454 0342 022B     		cmp	r3, #2
 455 0344 02D1     		bne	.L26
 350:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     {
 351:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       /*return the faulty bank*/
 352:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       temp = 1;
 456              		.loc 1 352 0
 457 0346 0123     		movs	r3, #1
 458 0348 7B60     		str	r3, [r7, #4]
 459 034a 05E0     		b	.L25
 460              	.L26:
 353:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     }
 354:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     else
 355:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     {
 356:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       /*retrun the faulty address*/
 357:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       temp = pFlash.Address;
 461              		.loc 1 357 0
 462 034c 40F20003 		movw	r3, #:lower16:pFlash
 463 0350 C0F20003 		movt	r3, #:upper16:pFlash
 464 0354 1B69     		ldr	r3, [r3, #16]
 465 0356 7B60     		str	r3, [r7, #4]
 466              	.L25:
 358:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     }
 359:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     
 360:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     /*Save the Error code*/
 361:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     FLASH_SetErrorCode();
 467              		.loc 1 361 0
 468 0358 00F0E0F9 		bl	FLASH_SetErrorCode
 362:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 363:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     /* FLASH error interrupt user callback */
 364:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     HAL_FLASH_OperationErrorCallback(temp);
 469              		.loc 1 364 0
 470 035c 7868     		ldr	r0, [r7, #4]
 471 035e FFF7FEFF 		bl	HAL_FLASH_OperationErrorCallback
 365:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     /* Clear FLASH error pending bits */
 366:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR  | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR |\
 472              		.loc 1 366 0
 473 0362 4FF47053 		mov	r3, #15360
 474 0366 C4F20203 		movt	r3, 16386
 475 036a 4FF4F972 		mov	r2, #498
 476 036e DA60     		str	r2, [r3, #12]
 367:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****                            FLASH_FLAG_PGPERR | FLASH_FLAG_PGSERR | FLASH_FLAG_RDERR);
 368:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 369:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     /*Stop the procedure ongoing*/
 370:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 477              		.loc 1 370 0
 478 0370 40F20003 		movw	r3, #:lower16:pFlash
 479 0374 C0F20003 		movt	r3, #:upper16:pFlash
 480 0378 0022     		movs	r2, #0
 481 037a 1A70     		strb	r2, [r3]
 482              	.L23:
 371:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   }
 372:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 373:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   if(pFlash.ProcedureOnGoing == FLASH_PROC_NONE)
 483              		.loc 1 373 0
 484 037c 40F20003 		movw	r3, #:lower16:pFlash
 485 0380 C0F20003 		movt	r3, #:upper16:pFlash
 486 0384 1B78     		ldrb	r3, [r3]
 487 0386 DBB2     		uxtb	r3, r3
 488 0388 002B     		cmp	r3, #0
 489 038a 1DD1     		bne	.L16
 374:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   {
 375:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     /* Disable End of FLASH Operation interrupt */
 376:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT(FLASH_IT_EOP);
 490              		.loc 1 376 0
 491 038c 4FF47053 		mov	r3, #15360
 492 0390 C4F20203 		movt	r3, 16386
 493 0394 4FF47052 		mov	r2, #15360
 494 0398 C4F20202 		movt	r2, 16386
 495 039c 1269     		ldr	r2, [r2, #16]
 496 039e 22F08072 		bic	r2, r2, #16777216
 497 03a2 1A61     		str	r2, [r3, #16]
 377:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 378:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     /* Disable Error source interrupt */
 379:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT(FLASH_IT_ERR);
 498              		.loc 1 379 0
 499 03a4 4FF47053 		mov	r3, #15360
 500 03a8 C4F20203 		movt	r3, 16386
 501 03ac 4FF47052 		mov	r2, #15360
 502 03b0 C4F20202 		movt	r2, 16386
 503 03b4 1269     		ldr	r2, [r2, #16]
 504 03b6 22F00072 		bic	r2, r2, #33554432
 505 03ba 1A61     		str	r2, [r3, #16]
 380:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 381:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     /* Process Unlocked */
 382:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     __HAL_UNLOCK(&pFlash);
 506              		.loc 1 382 0
 507 03bc 40F20003 		movw	r3, #:lower16:pFlash
 508 03c0 C0F20003 		movt	r3, #:upper16:pFlash
 509 03c4 0022     		movs	r2, #0
 510 03c6 1A75     		strb	r2, [r3, #20]
 511              	.L16:
 383:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   }
 384:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 385:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** }
 512              		.loc 1 385 0
 513 03c8 0837     		adds	r7, r7, #8
 514 03ca BD46     		mov	sp, r7
 515              		@ sp needed
 516 03cc 80BD     		pop	{r7, pc}
 517              		.cfi_endproc
 518              	.LFE57:
 520 03ce 00BF     		.align	2
 521              		.weak	HAL_FLASH_EndOfOperationCallback
 522              		.thumb
 523              		.thumb_func
 525              	HAL_FLASH_EndOfOperationCallback:
 526              	.LFB58:
 386:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 387:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /**
 388:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @brief  FLASH end of operation interrupt callback
 389:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @param  ReturnValue: The value saved in this parameter depends on the ongoing procedure
 390:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *                 - Sectors Erase: Sector which has been erased 
 391:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *                    (if 0xFFFFFFFF, it means that all the selected sectors have been erased)
 392:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *                 - Program: Address which was selected for data program
 393:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @retval none
 394:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */
 395:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** __weak void HAL_FLASH_EndOfOperationCallback(uint32_t ReturnValue)
 396:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** {
 527              		.loc 1 396 0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 8
 530              		@ frame_needed = 1, uses_anonymous_args = 0
 531              		@ link register save eliminated.
 532 03d0 80B4     		push	{r7}
 533              		.cfi_def_cfa_offset 4
 534              		.cfi_offset 7, -4
 535 03d2 83B0     		sub	sp, sp, #12
 536              		.cfi_def_cfa_offset 16
 537 03d4 00AF     		add	r7, sp, #0
 538              		.cfi_def_cfa_register 7
 539 03d6 7860     		str	r0, [r7, #4]
 397:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 398:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****             the HAL_FLASH_EndOfOperationCallback could be implemented in the user file
 399:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****    */ 
 400:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** }
 540              		.loc 1 400 0
 541 03d8 0C37     		adds	r7, r7, #12
 542 03da BD46     		mov	sp, r7
 543              		@ sp needed
 544 03dc 5DF8047B 		ldr	r7, [sp], #4
 545 03e0 7047     		bx	lr
 546              		.cfi_endproc
 547              	.LFE58:
 549 03e2 00BF     		.align	2
 550              		.weak	HAL_FLASH_OperationErrorCallback
 551              		.thumb
 552              		.thumb_func
 554              	HAL_FLASH_OperationErrorCallback:
 555              	.LFB59:
 401:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 402:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /**
 403:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @brief  FLASH operation error interrupt callback
 404:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @param  ReturnValue: The value saved in this parameter depends on the ongoing procedure
 405:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *                 - Sectors Erase: Sector number which returned an error
 406:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *                 - Program: Address which was selected for data program
 407:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @retval none
 408:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */
 409:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** __weak void HAL_FLASH_OperationErrorCallback(uint32_t ReturnValue)
 410:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** {
 556              		.loc 1 410 0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 8
 559              		@ frame_needed = 1, uses_anonymous_args = 0
 560              		@ link register save eliminated.
 561 03e4 80B4     		push	{r7}
 562              		.cfi_def_cfa_offset 4
 563              		.cfi_offset 7, -4
 564 03e6 83B0     		sub	sp, sp, #12
 565              		.cfi_def_cfa_offset 16
 566 03e8 00AF     		add	r7, sp, #0
 567              		.cfi_def_cfa_register 7
 568 03ea 7860     		str	r0, [r7, #4]
 411:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 412:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****             the HAL_FLASH_OperationErrorCallback could be implemented in the user file
 413:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****    */ 
 414:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** }
 569              		.loc 1 414 0
 570 03ec 0C37     		adds	r7, r7, #12
 571 03ee BD46     		mov	sp, r7
 572              		@ sp needed
 573 03f0 5DF8047B 		ldr	r7, [sp], #4
 574 03f4 7047     		bx	lr
 575              		.cfi_endproc
 576              	.LFE59:
 578 03f6 00BF     		.align	2
 579              		.global	HAL_FLASH_Unlock
 580              		.thumb
 581              		.thumb_func
 583              	HAL_FLASH_Unlock:
 584              	.LFB60:
 415:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 416:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /**
 417:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @}
 418:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */
 419:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 420:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /** @defgroup FLASH_Group2 Peripheral Control functions 
 421:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****  *  @brief   management functions 
 422:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****  *
 423:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** @verbatim   
 424:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****  ===============================================================================
 425:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****                       ##### Peripheral Control functions #####
 426:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****  ===============================================================================  
 427:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     [..]
 428:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     This subsection provides a set of functions allowing to control the FLASH 
 429:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     memory operations.
 430:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 431:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** @endverbatim
 432:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @{
 433:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */
 434:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 435:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /**
 436:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @brief  Unlock the FLASH control register access
 437:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @param  None
 438:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 439:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */
 440:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Unlock(void)
 441:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** {
 585              		.loc 1 441 0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 1, uses_anonymous_args = 0
 589              		@ link register save eliminated.
 590 03f8 80B4     		push	{r7}
 591              		.cfi_def_cfa_offset 4
 592              		.cfi_offset 7, -4
 593 03fa 00AF     		add	r7, sp, #0
 594              		.cfi_def_cfa_register 7
 442:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   if((FLASH->CR & FLASH_CR_LOCK) != RESET)
 595              		.loc 1 442 0
 596 03fc 4FF47053 		mov	r3, #15360
 597 0400 C4F20203 		movt	r3, 16386
 598 0404 1B69     		ldr	r3, [r3, #16]
 599 0406 002B     		cmp	r3, #0
 600 0408 13DA     		bge	.L31
 443:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   {
 444:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     /* Authorize the FLASH Registers access */
 445:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     FLASH->KEYR = FLASH_KEY1;
 601              		.loc 1 445 0
 602 040a 4FF47053 		mov	r3, #15360
 603 040e C4F20203 		movt	r3, 16386
 604 0412 40F22312 		movw	r2, #291
 605 0416 C4F26752 		movt	r2, 17767
 606 041a 5A60     		str	r2, [r3, #4]
 446:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     FLASH->KEYR = FLASH_KEY2;
 607              		.loc 1 446 0
 608 041c 4FF47053 		mov	r3, #15360
 609 0420 C4F20203 		movt	r3, 16386
 610 0424 48F6AB12 		movw	r2, #35243
 611 0428 CCF6EF52 		movt	r2, 52719
 612 042c 5A60     		str	r2, [r3, #4]
 447:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   }
 448:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   else
 449:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   {
 450:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     return HAL_ERROR;
 451:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   }
 452:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 453:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   return HAL_OK; 
 613              		.loc 1 453 0
 614 042e 0023     		movs	r3, #0
 615 0430 00E0     		b	.L33
 616              	.L31:
 450:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   }
 617              		.loc 1 450 0
 618 0432 0123     		movs	r3, #1
 619              	.L33:
 454:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** }
 620              		.loc 1 454 0
 621 0434 1846     		mov	r0, r3
 622 0436 BD46     		mov	sp, r7
 623              		@ sp needed
 624 0438 5DF8047B 		ldr	r7, [sp], #4
 625 043c 7047     		bx	lr
 626              		.cfi_endproc
 627              	.LFE60:
 629 043e 00BF     		.align	2
 630              		.global	HAL_FLASH_Lock
 631              		.thumb
 632              		.thumb_func
 634              	HAL_FLASH_Lock:
 635              	.LFB61:
 455:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 456:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /**
 457:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @brief  Locks the FLASH control register access
 458:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @param  None
 459:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 460:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */
 461:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Lock(void)
 462:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** {
 636              		.loc 1 462 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640              		@ link register save eliminated.
 641 0440 80B4     		push	{r7}
 642              		.cfi_def_cfa_offset 4
 643              		.cfi_offset 7, -4
 644 0442 00AF     		add	r7, sp, #0
 645              		.cfi_def_cfa_register 7
 463:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* Set the LOCK Bit to lock the FLASH Registers access */
 464:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   FLASH->CR |= FLASH_CR_LOCK;
 646              		.loc 1 464 0
 647 0444 4FF47053 		mov	r3, #15360
 648 0448 C4F20203 		movt	r3, 16386
 649 044c 4FF47052 		mov	r2, #15360
 650 0450 C4F20202 		movt	r2, 16386
 651 0454 1269     		ldr	r2, [r2, #16]
 652 0456 42F00042 		orr	r2, r2, #-2147483648
 653 045a 1A61     		str	r2, [r3, #16]
 465:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 466:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   return HAL_OK;  
 654              		.loc 1 466 0
 655 045c 0023     		movs	r3, #0
 467:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** }
 656              		.loc 1 467 0
 657 045e 1846     		mov	r0, r3
 658 0460 BD46     		mov	sp, r7
 659              		@ sp needed
 660 0462 5DF8047B 		ldr	r7, [sp], #4
 661 0466 7047     		bx	lr
 662              		.cfi_endproc
 663              	.LFE61:
 665              		.align	2
 666              		.global	HAL_FLASH_OB_Unlock
 667              		.thumb
 668              		.thumb_func
 670              	HAL_FLASH_OB_Unlock:
 671              	.LFB62:
 468:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 469:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 470:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /**
 471:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @brief  Unlock the FLASH Option Control Registers access.
 472:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @param  None
 473:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 474:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */
 475:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Unlock(void)
 476:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** {
 672              		.loc 1 476 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 0
 675              		@ frame_needed = 1, uses_anonymous_args = 0
 676              		@ link register save eliminated.
 677 0468 80B4     		push	{r7}
 678              		.cfi_def_cfa_offset 4
 679              		.cfi_offset 7, -4
 680 046a 00AF     		add	r7, sp, #0
 681              		.cfi_def_cfa_register 7
 477:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   if((FLASH->OPTCR & FLASH_OPTCR_OPTLOCK) != RESET)
 682              		.loc 1 477 0
 683 046c 4FF47053 		mov	r3, #15360
 684 0470 C4F20203 		movt	r3, 16386
 685 0474 5B69     		ldr	r3, [r3, #20]
 686 0476 03F00103 		and	r3, r3, #1
 687 047a 002B     		cmp	r3, #0
 688 047c 13D0     		beq	.L37
 478:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   {
 479:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     /* Authorizes the Option Byte register programming */
 480:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     FLASH->OPTKEYR = FLASH_OPT_KEY1;
 689              		.loc 1 480 0
 690 047e 4FF47053 		mov	r3, #15360
 691 0482 C4F20203 		movt	r3, 16386
 692 0486 42F63B22 		movw	r2, #10811
 693 048a C0F61902 		movt	r2, 2073
 694 048e 9A60     		str	r2, [r3, #8]
 481:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     FLASH->OPTKEYR = FLASH_OPT_KEY2;
 695              		.loc 1 481 0
 696 0490 4FF47053 		mov	r3, #15360
 697 0494 C4F20203 		movt	r3, 16386
 698 0498 46F67F62 		movw	r2, #28287
 699 049c C4F65D42 		movt	r2, 19549
 700 04a0 9A60     		str	r2, [r3, #8]
 482:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   }
 483:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   else
 484:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   {
 485:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     return HAL_ERROR;
 486:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   }  
 487:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 488:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   return HAL_OK;  
 701              		.loc 1 488 0
 702 04a2 0023     		movs	r3, #0
 703 04a4 00E0     		b	.L39
 704              	.L37:
 485:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   }  
 705              		.loc 1 485 0
 706 04a6 0123     		movs	r3, #1
 707              	.L39:
 489:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** }
 708              		.loc 1 489 0
 709 04a8 1846     		mov	r0, r3
 710 04aa BD46     		mov	sp, r7
 711              		@ sp needed
 712 04ac 5DF8047B 		ldr	r7, [sp], #4
 713 04b0 7047     		bx	lr
 714              		.cfi_endproc
 715              	.LFE62:
 717 04b2 00BF     		.align	2
 718              		.global	HAL_FLASH_OB_Lock
 719              		.thumb
 720              		.thumb_func
 722              	HAL_FLASH_OB_Lock:
 723              	.LFB63:
 490:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 491:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /**
 492:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @brief  Lock the FLASH Option Control Registers access.
 493:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @param  None
 494:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status 
 495:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */
 496:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Lock(void)
 497:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** {
 724              		.loc 1 497 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 1, uses_anonymous_args = 0
 728              		@ link register save eliminated.
 729 04b4 80B4     		push	{r7}
 730              		.cfi_def_cfa_offset 4
 731              		.cfi_offset 7, -4
 732 04b6 00AF     		add	r7, sp, #0
 733              		.cfi_def_cfa_register 7
 498:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* Set the OPTLOCK Bit to lock the FLASH Option Byte Registers access */
 499:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   FLASH->OPTCR |= FLASH_OPTCR_OPTLOCK;
 734              		.loc 1 499 0
 735 04b8 4FF47053 		mov	r3, #15360
 736 04bc C4F20203 		movt	r3, 16386
 737 04c0 4FF47052 		mov	r2, #15360
 738 04c4 C4F20202 		movt	r2, 16386
 739 04c8 5269     		ldr	r2, [r2, #20]
 740 04ca 42F00102 		orr	r2, r2, #1
 741 04ce 5A61     		str	r2, [r3, #20]
 500:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 501:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   return HAL_OK;  
 742              		.loc 1 501 0
 743 04d0 0023     		movs	r3, #0
 502:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** }
 744              		.loc 1 502 0
 745 04d2 1846     		mov	r0, r3
 746 04d4 BD46     		mov	sp, r7
 747              		@ sp needed
 748 04d6 5DF8047B 		ldr	r7, [sp], #4
 749 04da 7047     		bx	lr
 750              		.cfi_endproc
 751              	.LFE63:
 753              		.align	2
 754              		.global	HAL_FLASH_OB_Launch
 755              		.thumb
 756              		.thumb_func
 758              	HAL_FLASH_OB_Launch:
 759              	.LFB64:
 503:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 504:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /**
 505:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @brief  Launch the option byte loading.
 506:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @param  None
 507:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 508:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */
 509:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Launch(void)
 510:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** {
 760              		.loc 1 510 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 0
 763              		@ frame_needed = 1, uses_anonymous_args = 0
 764 04dc 80B5     		push	{r7, lr}
 765              		.cfi_def_cfa_offset 8
 766              		.cfi_offset 7, -8
 767              		.cfi_offset 14, -4
 768 04de 00AF     		add	r7, sp, #0
 769              		.cfi_def_cfa_register 7
 511:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* Set the OPTSTRT bit in OPTCR register */
 512:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS |= FLASH_OPTCR_OPTSTRT;
 770              		.loc 1 512 0
 771 04e0 43F61443 		movw	r3, #15380
 772 04e4 C4F20203 		movt	r3, 16386
 773 04e8 43F61442 		movw	r2, #15380
 774 04ec C4F20202 		movt	r2, 16386
 775 04f0 1278     		ldrb	r2, [r2]
 776 04f2 D2B2     		uxtb	r2, r2
 777 04f4 42F00202 		orr	r2, r2, #2
 778 04f8 D2B2     		uxtb	r2, r2
 779 04fa 1A70     		strb	r2, [r3]
 513:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 514:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* Wait for last operation to be completed */
 515:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   return(FLASH_WaitForLastOperation((uint32_t)HAL_FLASH_TIMEOUT_VALUE)); 
 780              		.loc 1 515 0
 781 04fc 4CF25030 		movw	r0, #50000
 782 0500 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 783 0504 0346     		mov	r3, r0
 516:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** }
 784              		.loc 1 516 0
 785 0506 1846     		mov	r0, r3
 786 0508 80BD     		pop	{r7, pc}
 787              		.cfi_endproc
 788              	.LFE64:
 790 050a 00BF     		.align	2
 791              		.global	HAL_FLASH_GetError
 792              		.thumb
 793              		.thumb_func
 795              	HAL_FLASH_GetError:
 796              	.LFB65:
 517:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 518:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /**
 519:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @}
 520:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */
 521:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 522:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /** @defgroup FLASH_Group3 Peripheral State and Errors functions 
 523:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****  *  @brief   Peripheral Errors functions 
 524:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****  *
 525:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** @verbatim   
 526:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****  ===============================================================================
 527:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****                 ##### Peripheral Errors functions #####
 528:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****  ===============================================================================  
 529:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     [..]
 530:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     This subsection permit to get in run-time Errors of the FLASH peripheral.
 531:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 532:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** @endverbatim
 533:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @{
 534:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */
 535:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 536:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /**
 537:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @brief  Get the specific FLASH error flag.
 538:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @param  None
 539:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @retval FLASH_ErrorCode: The returned value can be:
 540:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *            @arg FLASH_ERROR_RD: FLASH Read Protection error flag (PCROP)
 541:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *            @arg FLASH_ERROR_PGS: FLASH Programming Sequence error flag 
 542:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *            @arg FLASH_ERROR_PGP: FLASH Programming Parallelism error flag  
 543:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *            @arg FLASH_ERROR_PGA: FLASH Programming Alignment error flag
 544:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *            @arg FLASH_ERROR_WRP: FLASH Write protected error flag
 545:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *            @arg FLASH_ERROR_OPERATION: FLASH operation Error flag 
 546:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */
 547:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** FLASH_ErrorTypeDef HAL_FLASH_GetError(void)
 548:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** { 
 797              		.loc 1 548 0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 1, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802 050c 80B4     		push	{r7}
 803              		.cfi_def_cfa_offset 4
 804              		.cfi_offset 7, -4
 805 050e 00AF     		add	r7, sp, #0
 806              		.cfi_def_cfa_register 7
 549:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****    return pFlash.ErrorCode;
 807              		.loc 1 549 0
 808 0510 40F20003 		movw	r3, #:lower16:pFlash
 809 0514 C0F20003 		movt	r3, #:upper16:pFlash
 810 0518 5B7D     		ldrb	r3, [r3, #21]
 811 051a DBB2     		uxtb	r3, r3
 550:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** }  
 812              		.loc 1 550 0
 813 051c 1846     		mov	r0, r3
 814 051e BD46     		mov	sp, r7
 815              		@ sp needed
 816 0520 5DF8047B 		ldr	r7, [sp], #4
 817 0524 7047     		bx	lr
 818              		.cfi_endproc
 819              	.LFE65:
 821 0526 00BF     		.align	2
 822              		.global	FLASH_WaitForLastOperation
 823              		.thumb
 824              		.thumb_func
 826              	FLASH_WaitForLastOperation:
 827              	.LFB66:
 551:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 552:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /**
 553:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @}
 554:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */    
 555:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 556:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /**
 557:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @brief  Wait for a FLASH operation to complete.
 558:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @param  Timeout: maximum flash operationtimeout
 559:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 560:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */
 561:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout)
 562:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** { 
 828              		.loc 1 562 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 16
 831              		@ frame_needed = 1, uses_anonymous_args = 0
 832 0528 80B5     		push	{r7, lr}
 833              		.cfi_def_cfa_offset 8
 834              		.cfi_offset 7, -8
 835              		.cfi_offset 14, -4
 836 052a 84B0     		sub	sp, sp, #16
 837              		.cfi_def_cfa_offset 24
 838 052c 00AF     		add	r7, sp, #0
 839              		.cfi_def_cfa_register 7
 840 052e 7860     		str	r0, [r7, #4]
 563:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
 564:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****      Even if the FLASH operation fails, the BUSY flag will be reset and an error
 565:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****      flag will be set */
 566:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     
 567:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   uint32_t timeout = HAL_GetTick() + Timeout;
 841              		.loc 1 567 0
 842 0530 FFF7FEFF 		bl	HAL_GetTick
 843 0534 0246     		mov	r2, r0
 844 0536 7B68     		ldr	r3, [r7, #4]
 845 0538 1344     		add	r3, r3, r2
 846 053a FB60     		str	r3, [r7, #12]
 568:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****      
 569:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 847              		.loc 1 569 0
 848 053c 0BE0     		b	.L47
 849              	.L49:
 570:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   { 
 571:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     if(Timeout != HAL_MAX_DELAY)
 850              		.loc 1 571 0
 851 053e 7B68     		ldr	r3, [r7, #4]
 852 0540 B3F1FF3F 		cmp	r3, #-1
 853 0544 07D0     		beq	.L47
 572:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     {
 573:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       if(HAL_GetTick() >= timeout)
 854              		.loc 1 573 0
 855 0546 FFF7FEFF 		bl	HAL_GetTick
 856 054a 0246     		mov	r2, r0
 857 054c FB68     		ldr	r3, [r7, #12]
 858 054e 9A42     		cmp	r2, r3
 859 0550 01D3     		bcc	.L47
 574:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       {
 575:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****         return HAL_TIMEOUT;
 860              		.loc 1 575 0
 861 0552 0323     		movs	r3, #3
 862 0554 16E0     		b	.L48
 863              	.L47:
 569:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   { 
 864              		.loc 1 569 0 discriminator 1
 865 0556 4FF47053 		mov	r3, #15360
 866 055a C4F20203 		movt	r3, 16386
 867 055e DB68     		ldr	r3, [r3, #12]
 868 0560 03F48033 		and	r3, r3, #65536
 869 0564 002B     		cmp	r3, #0
 870 0566 EAD1     		bne	.L49
 576:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****       }
 577:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     } 
 578:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   }
 579:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 580:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 871              		.loc 1 580 0
 872 0568 4FF47053 		mov	r3, #15360
 873 056c C4F20203 		movt	r3, 16386
 874 0570 DB68     		ldr	r3, [r3, #12]
 875 0572 03F4F973 		and	r3, r3, #498
 876 0576 002B     		cmp	r3, #0
 877 0578 03D0     		beq	.L50
 581:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****                            FLASH_FLAG_PGPERR | FLASH_FLAG_PGSERR | FLASH_FLAG_RDERR)) != RESET)
 582:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   {
 583:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     /*Save the error code*/
 584:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     FLASH_SetErrorCode();
 878              		.loc 1 584 0
 879 057a 00F0CFF8 		bl	FLASH_SetErrorCode
 585:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     return HAL_ERROR;
 880              		.loc 1 585 0
 881 057e 0123     		movs	r3, #1
 882 0580 00E0     		b	.L48
 883              	.L50:
 586:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   }
 587:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 588:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* If there is an error flag set */
 589:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   return HAL_OK;
 884              		.loc 1 589 0
 885 0582 0023     		movs	r3, #0
 886              	.L48:
 590:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 591:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** }  
 887              		.loc 1 591 0
 888 0584 1846     		mov	r0, r3
 889 0586 1037     		adds	r7, r7, #16
 890 0588 BD46     		mov	sp, r7
 891              		@ sp needed
 892 058a 80BD     		pop	{r7, pc}
 893              		.cfi_endproc
 894              	.LFE66:
 896              		.align	2
 897              		.thumb
 898              		.thumb_func
 900              	FLASH_Program_DoubleWord:
 901              	.LFB67:
 592:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 593:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /**
 594:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @brief  Program a double word (64-bit) at a specified address.
 595:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @note   This function must be used when the device voltage range is from
 596:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *         2.7V to 3.6V and an External Vpp is present.
 597:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *
 598:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 599:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *         the erase operation is performed before the program one.
 600:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *  
 601:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @param  Address: specifies the address to be programmed.
 602:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @param  Data: specifies the data to be programmed.
 603:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @retval None
 604:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */
 605:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** static void FLASH_Program_DoubleWord(uint32_t Address, uint64_t Data)
 606:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** {
 902              		.loc 1 606 0
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 16
 905              		@ frame_needed = 1, uses_anonymous_args = 0
 906              		@ link register save eliminated.
 907 058c 80B4     		push	{r7}
 908              		.cfi_def_cfa_offset 4
 909              		.cfi_offset 7, -4
 910 058e 85B0     		sub	sp, sp, #20
 911              		.cfi_def_cfa_offset 24
 912 0590 00AF     		add	r7, sp, #0
 913              		.cfi_def_cfa_register 7
 914 0592 F860     		str	r0, [r7, #12]
 915 0594 C7E90023 		strd	r2, [r7]
 607:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* Check the parameters */
 608:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 609:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 610:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* If the previous operation is completed, proceed to program the new data */
 611:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   FLASH->CR &= CR_PSIZE_MASK;
 916              		.loc 1 611 0
 917 0598 4FF47053 		mov	r3, #15360
 918 059c C4F20203 		movt	r3, 16386
 919 05a0 4FF47052 		mov	r2, #15360
 920 05a4 C4F20202 		movt	r2, 16386
 921 05a8 1269     		ldr	r2, [r2, #16]
 922 05aa 22F44072 		bic	r2, r2, #768
 923 05ae 1A61     		str	r2, [r3, #16]
 612:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 924              		.loc 1 612 0
 925 05b0 4FF47053 		mov	r3, #15360
 926 05b4 C4F20203 		movt	r3, 16386
 927 05b8 4FF47052 		mov	r2, #15360
 928 05bc C4F20202 		movt	r2, 16386
 929 05c0 1269     		ldr	r2, [r2, #16]
 930 05c2 42F44072 		orr	r2, r2, #768
 931 05c6 1A61     		str	r2, [r3, #16]
 613:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   FLASH->CR |= FLASH_CR_PG;
 932              		.loc 1 613 0
 933 05c8 4FF47053 		mov	r3, #15360
 934 05cc C4F20203 		movt	r3, 16386
 935 05d0 4FF47052 		mov	r2, #15360
 936 05d4 C4F20202 		movt	r2, 16386
 937 05d8 1269     		ldr	r2, [r2, #16]
 938 05da 42F00102 		orr	r2, r2, #1
 939 05de 1A61     		str	r2, [r3, #16]
 614:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 615:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *(__IO uint64_t*)Address = Data;
 940              		.loc 1 615 0
 941 05e0 F968     		ldr	r1, [r7, #12]
 942 05e2 D7E90023 		ldrd	r2, [r7]
 943 05e6 C1E90023 		strd	r2, [r1]
 616:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** }
 944              		.loc 1 616 0
 945 05ea 1437     		adds	r7, r7, #20
 946 05ec BD46     		mov	sp, r7
 947              		@ sp needed
 948 05ee 5DF8047B 		ldr	r7, [sp], #4
 949 05f2 7047     		bx	lr
 950              		.cfi_endproc
 951              	.LFE67:
 953              		.align	2
 954              		.thumb
 955              		.thumb_func
 957              	FLASH_Program_Word:
 958              	.LFB68:
 617:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 618:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 619:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /**
 620:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @brief  Program word (32-bit) at a specified address.
 621:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @note   This function must be used when the device voltage range is from
 622:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *         2.7V to 3.6V.
 623:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *
 624:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 625:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *         the erase operation is performed before the program one.
 626:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *  
 627:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @param  Address: specifies the address to be programmed.
 628:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @param  Data: specifies the data to be programmed.
 629:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @retval None
 630:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */
 631:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** static void FLASH_Program_Word(uint32_t Address, uint32_t Data)
 632:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** {
 959              		.loc 1 632 0
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 8
 962              		@ frame_needed = 1, uses_anonymous_args = 0
 963              		@ link register save eliminated.
 964 05f4 80B4     		push	{r7}
 965              		.cfi_def_cfa_offset 4
 966              		.cfi_offset 7, -4
 967 05f6 83B0     		sub	sp, sp, #12
 968              		.cfi_def_cfa_offset 16
 969 05f8 00AF     		add	r7, sp, #0
 970              		.cfi_def_cfa_register 7
 971 05fa 7860     		str	r0, [r7, #4]
 972 05fc 3960     		str	r1, [r7]
 633:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* Check the parameters */
 634:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 635:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 636:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* If the previous operation is completed, proceed to program the new data */
 637:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   FLASH->CR &= CR_PSIZE_MASK;
 973              		.loc 1 637 0
 974 05fe 4FF47053 		mov	r3, #15360
 975 0602 C4F20203 		movt	r3, 16386
 976 0606 4FF47052 		mov	r2, #15360
 977 060a C4F20202 		movt	r2, 16386
 978 060e 1269     		ldr	r2, [r2, #16]
 979 0610 22F44072 		bic	r2, r2, #768
 980 0614 1A61     		str	r2, [r3, #16]
 638:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   FLASH->CR |= FLASH_PSIZE_WORD;
 981              		.loc 1 638 0
 982 0616 4FF47053 		mov	r3, #15360
 983 061a C4F20203 		movt	r3, 16386
 984 061e 4FF47052 		mov	r2, #15360
 985 0622 C4F20202 		movt	r2, 16386
 986 0626 1269     		ldr	r2, [r2, #16]
 987 0628 42F40072 		orr	r2, r2, #512
 988 062c 1A61     		str	r2, [r3, #16]
 639:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   FLASH->CR |= FLASH_CR_PG;
 989              		.loc 1 639 0
 990 062e 4FF47053 		mov	r3, #15360
 991 0632 C4F20203 		movt	r3, 16386
 992 0636 4FF47052 		mov	r2, #15360
 993 063a C4F20202 		movt	r2, 16386
 994 063e 1269     		ldr	r2, [r2, #16]
 995 0640 42F00102 		orr	r2, r2, #1
 996 0644 1A61     		str	r2, [r3, #16]
 640:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 641:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *(__IO uint32_t*)Address = Data;
 997              		.loc 1 641 0
 998 0646 7B68     		ldr	r3, [r7, #4]
 999 0648 3A68     		ldr	r2, [r7]
 1000 064a 1A60     		str	r2, [r3]
 642:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** }
 1001              		.loc 1 642 0
 1002 064c 0C37     		adds	r7, r7, #12
 1003 064e BD46     		mov	sp, r7
 1004              		@ sp needed
 1005 0650 5DF8047B 		ldr	r7, [sp], #4
 1006 0654 7047     		bx	lr
 1007              		.cfi_endproc
 1008              	.LFE68:
 1010 0656 00BF     		.align	2
 1011              		.thumb
 1012              		.thumb_func
 1014              	FLASH_Program_HalfWord:
 1015              	.LFB69:
 643:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 644:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /**
 645:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @brief  Program a half-word (16-bit) at a specified address.
 646:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @note   This function must be used when the device voltage range is from
 647:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *         2.7V to 3.6V.
 648:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *
 649:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 650:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *         the erase operation is performed before the program one.
 651:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *  
 652:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @param  Address: specifies the address to be programmed.
 653:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @param  Data: specifies the data to be programmed.
 654:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @retval None
 655:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */
 656:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** static void FLASH_Program_HalfWord(uint32_t Address, uint16_t Data)
 657:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** {
 1016              		.loc 1 657 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 8
 1019              		@ frame_needed = 1, uses_anonymous_args = 0
 1020              		@ link register save eliminated.
 1021 0658 80B4     		push	{r7}
 1022              		.cfi_def_cfa_offset 4
 1023              		.cfi_offset 7, -4
 1024 065a 83B0     		sub	sp, sp, #12
 1025              		.cfi_def_cfa_offset 16
 1026 065c 00AF     		add	r7, sp, #0
 1027              		.cfi_def_cfa_register 7
 1028 065e 7860     		str	r0, [r7, #4]
 1029 0660 0B46     		mov	r3, r1
 1030 0662 7B80     		strh	r3, [r7, #2]	@ movhi
 658:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* Check the parameters */
 659:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 660:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 661:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* If the previous operation is completed, proceed to program the new data */
 662:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   FLASH->CR &= CR_PSIZE_MASK;
 1031              		.loc 1 662 0
 1032 0664 4FF47053 		mov	r3, #15360
 1033 0668 C4F20203 		movt	r3, 16386
 1034 066c 4FF47052 		mov	r2, #15360
 1035 0670 C4F20202 		movt	r2, 16386
 1036 0674 1269     		ldr	r2, [r2, #16]
 1037 0676 22F44072 		bic	r2, r2, #768
 1038 067a 1A61     		str	r2, [r3, #16]
 663:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 1039              		.loc 1 663 0
 1040 067c 4FF47053 		mov	r3, #15360
 1041 0680 C4F20203 		movt	r3, 16386
 1042 0684 4FF47052 		mov	r2, #15360
 1043 0688 C4F20202 		movt	r2, 16386
 1044 068c 1269     		ldr	r2, [r2, #16]
 1045 068e 42F48072 		orr	r2, r2, #256
 1046 0692 1A61     		str	r2, [r3, #16]
 664:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   FLASH->CR |= FLASH_CR_PG;
 1047              		.loc 1 664 0
 1048 0694 4FF47053 		mov	r3, #15360
 1049 0698 C4F20203 		movt	r3, 16386
 1050 069c 4FF47052 		mov	r2, #15360
 1051 06a0 C4F20202 		movt	r2, 16386
 1052 06a4 1269     		ldr	r2, [r2, #16]
 1053 06a6 42F00102 		orr	r2, r2, #1
 1054 06aa 1A61     		str	r2, [r3, #16]
 665:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 666:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *(__IO uint16_t*)Address = Data;
 1055              		.loc 1 666 0
 1056 06ac 7B68     		ldr	r3, [r7, #4]
 1057 06ae 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1058 06b0 1A80     		strh	r2, [r3]	@ movhi
 667:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** }
 1059              		.loc 1 667 0
 1060 06b2 0C37     		adds	r7, r7, #12
 1061 06b4 BD46     		mov	sp, r7
 1062              		@ sp needed
 1063 06b6 5DF8047B 		ldr	r7, [sp], #4
 1064 06ba 7047     		bx	lr
 1065              		.cfi_endproc
 1066              	.LFE69:
 1068              		.align	2
 1069              		.thumb
 1070              		.thumb_func
 1072              	FLASH_Program_Byte:
 1073              	.LFB70:
 668:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 669:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /**
 670:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @brief  Program byte (8-bit) at a specified address.
 671:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @note   This function must be used when the device voltage range is from
 672:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *         2.7V to 3.6V.
 673:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *
 674:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 675:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *         the erase operation is performed before the program one.
 676:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *  
 677:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @param  Address: specifies the address to be programmed.
 678:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @param  Data: specifies the data to be programmed.
 679:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @retval None
 680:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */
 681:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** static void FLASH_Program_Byte(uint32_t Address, uint8_t Data)
 682:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** {
 1074              		.loc 1 682 0
 1075              		.cfi_startproc
 1076              		@ args = 0, pretend = 0, frame = 8
 1077              		@ frame_needed = 1, uses_anonymous_args = 0
 1078              		@ link register save eliminated.
 1079 06bc 80B4     		push	{r7}
 1080              		.cfi_def_cfa_offset 4
 1081              		.cfi_offset 7, -4
 1082 06be 83B0     		sub	sp, sp, #12
 1083              		.cfi_def_cfa_offset 16
 1084 06c0 00AF     		add	r7, sp, #0
 1085              		.cfi_def_cfa_register 7
 1086 06c2 7860     		str	r0, [r7, #4]
 1087 06c4 0B46     		mov	r3, r1
 1088 06c6 FB70     		strb	r3, [r7, #3]
 683:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* Check the parameters */
 684:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 685:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 686:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   /* If the previous operation is completed, proceed to program the new data */
 687:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   FLASH->CR &= CR_PSIZE_MASK;
 1089              		.loc 1 687 0
 1090 06c8 4FF47053 		mov	r3, #15360
 1091 06cc C4F20203 		movt	r3, 16386
 1092 06d0 4FF47052 		mov	r2, #15360
 1093 06d4 C4F20202 		movt	r2, 16386
 1094 06d8 1269     		ldr	r2, [r2, #16]
 1095 06da 22F44072 		bic	r2, r2, #768
 1096 06de 1A61     		str	r2, [r3, #16]
 688:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   FLASH->CR |= FLASH_PSIZE_BYTE;
 1097              		.loc 1 688 0
 1098 06e0 4FF47053 		mov	r3, #15360
 1099 06e4 C4F20203 		movt	r3, 16386
 1100 06e8 4FF47052 		mov	r2, #15360
 1101 06ec C4F20202 		movt	r2, 16386
 1102 06f0 1269     		ldr	r2, [r2, #16]
 1103 06f2 1A61     		str	r2, [r3, #16]
 689:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   FLASH->CR |= FLASH_CR_PG;
 1104              		.loc 1 689 0
 1105 06f4 4FF47053 		mov	r3, #15360
 1106 06f8 C4F20203 		movt	r3, 16386
 1107 06fc 4FF47052 		mov	r2, #15360
 1108 0700 C4F20202 		movt	r2, 16386
 1109 0704 1269     		ldr	r2, [r2, #16]
 1110 0706 42F00102 		orr	r2, r2, #1
 1111 070a 1A61     		str	r2, [r3, #16]
 690:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 691:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   *(__IO uint8_t*)Address = Data;
 1112              		.loc 1 691 0
 1113 070c 7B68     		ldr	r3, [r7, #4]
 1114 070e FA78     		ldrb	r2, [r7, #3]
 1115 0710 1A70     		strb	r2, [r3]
 692:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** }
 1116              		.loc 1 692 0
 1117 0712 0C37     		adds	r7, r7, #12
 1118 0714 BD46     		mov	sp, r7
 1119              		@ sp needed
 1120 0716 5DF8047B 		ldr	r7, [sp], #4
 1121 071a 7047     		bx	lr
 1122              		.cfi_endproc
 1123              	.LFE70:
 1125              		.align	2
 1126              		.thumb
 1127              		.thumb_func
 1129              	FLASH_SetErrorCode:
 1130              	.LFB71:
 693:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** 
 694:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** /**
 695:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @brief  Set the specific FLASH error flag.
 696:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @param  None
 697:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   * @retval None
 698:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   */
 699:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** static void FLASH_SetErrorCode(void)
 700:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** { 
 1131              		.loc 1 700 0
 1132              		.cfi_startproc
 1133              		@ args = 0, pretend = 0, frame = 0
 1134              		@ frame_needed = 1, uses_anonymous_args = 0
 1135              		@ link register save eliminated.
 1136 071c 80B4     		push	{r7}
 1137              		.cfi_def_cfa_offset 4
 1138              		.cfi_offset 7, -4
 1139 071e 00AF     		add	r7, sp, #0
 1140              		.cfi_def_cfa_register 7
 701:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 1141              		.loc 1 701 0
 1142 0720 4FF47053 		mov	r3, #15360
 1143 0724 C4F20203 		movt	r3, 16386
 1144 0728 DB68     		ldr	r3, [r3, #12]
 1145 072a 03F01003 		and	r3, r3, #16
 1146 072e 002B     		cmp	r3, #0
 1147 0730 05D0     		beq	.L56
 702:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   {
 703:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****    pFlash.ErrorCode = FLASH_ERROR_WRP;
 1148              		.loc 1 703 0
 1149 0732 40F20003 		movw	r3, #:lower16:pFlash
 1150 0736 C0F20003 		movt	r3, #:upper16:pFlash
 1151 073a 1022     		movs	r2, #16
 1152 073c 5A75     		strb	r2, [r3, #21]
 1153              	.L56:
 704:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   }
 705:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 706:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 1154              		.loc 1 706 0
 1155 073e 4FF47053 		mov	r3, #15360
 1156 0742 C4F20203 		movt	r3, 16386
 1157 0746 DB68     		ldr	r3, [r3, #12]
 1158 0748 03F02003 		and	r3, r3, #32
 1159 074c 002B     		cmp	r3, #0
 1160 074e 0DD0     		beq	.L57
 707:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   {
 708:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****    pFlash.ErrorCode |= FLASH_ERROR_PGA;
 1161              		.loc 1 708 0
 1162 0750 40F20003 		movw	r3, #:lower16:pFlash
 1163 0754 C0F20003 		movt	r3, #:upper16:pFlash
 1164 0758 5B7D     		ldrb	r3, [r3, #21]
 1165 075a DBB2     		uxtb	r3, r3
 1166 075c 43F00803 		orr	r3, r3, #8
 1167 0760 DAB2     		uxtb	r2, r3
 1168 0762 40F20003 		movw	r3, #:lower16:pFlash
 1169 0766 C0F20003 		movt	r3, #:upper16:pFlash
 1170 076a 5A75     		strb	r2, [r3, #21]
 1171              	.L57:
 709:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   }
 710:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 711:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 1172              		.loc 1 711 0
 1173 076c 4FF47053 		mov	r3, #15360
 1174 0770 C4F20203 		movt	r3, 16386
 1175 0774 DB68     		ldr	r3, [r3, #12]
 1176 0776 03F04003 		and	r3, r3, #64
 1177 077a 002B     		cmp	r3, #0
 1178 077c 0DD0     		beq	.L58
 712:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   {
 713:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     pFlash.ErrorCode |= FLASH_ERROR_PGP;
 1179              		.loc 1 713 0
 1180 077e 40F20003 		movw	r3, #:lower16:pFlash
 1181 0782 C0F20003 		movt	r3, #:upper16:pFlash
 1182 0786 5B7D     		ldrb	r3, [r3, #21]
 1183 0788 DBB2     		uxtb	r3, r3
 1184 078a 43F00403 		orr	r3, r3, #4
 1185 078e DAB2     		uxtb	r2, r3
 1186 0790 40F20003 		movw	r3, #:lower16:pFlash
 1187 0794 C0F20003 		movt	r3, #:upper16:pFlash
 1188 0798 5A75     		strb	r2, [r3, #21]
 1189              	.L58:
 714:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   }
 715:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 716:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 1190              		.loc 1 716 0
 1191 079a 4FF47053 		mov	r3, #15360
 1192 079e C4F20203 		movt	r3, 16386
 1193 07a2 DB68     		ldr	r3, [r3, #12]
 1194 07a4 03F08003 		and	r3, r3, #128
 1195 07a8 002B     		cmp	r3, #0
 1196 07aa 0DD0     		beq	.L59
 717:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   {
 718:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     pFlash.ErrorCode |= FLASH_ERROR_PGS;
 1197              		.loc 1 718 0
 1198 07ac 40F20003 		movw	r3, #:lower16:pFlash
 1199 07b0 C0F20003 		movt	r3, #:upper16:pFlash
 1200 07b4 5B7D     		ldrb	r3, [r3, #21]
 1201 07b6 DBB2     		uxtb	r3, r3
 1202 07b8 43F00203 		orr	r3, r3, #2
 1203 07bc DAB2     		uxtb	r2, r3
 1204 07be 40F20003 		movw	r3, #:lower16:pFlash
 1205 07c2 C0F20003 		movt	r3, #:upper16:pFlash
 1206 07c6 5A75     		strb	r2, [r3, #21]
 1207              	.L59:
 719:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   }
 720:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 721:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_RDERR) != RESET)
 1208              		.loc 1 721 0
 1209 07c8 4FF47053 		mov	r3, #15360
 1210 07cc C4F20203 		movt	r3, 16386
 1211 07d0 DB68     		ldr	r3, [r3, #12]
 1212 07d2 03F48073 		and	r3, r3, #256
 1213 07d6 002B     		cmp	r3, #0
 1214 07d8 0DD0     		beq	.L60
 722:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   {
 723:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     pFlash.ErrorCode |= FLASH_ERROR_RD;
 1215              		.loc 1 723 0
 1216 07da 40F20003 		movw	r3, #:lower16:pFlash
 1217 07de C0F20003 		movt	r3, #:upper16:pFlash
 1218 07e2 5B7D     		ldrb	r3, [r3, #21]
 1219 07e4 DBB2     		uxtb	r3, r3
 1220 07e6 43F00103 		orr	r3, r3, #1
 1221 07ea DAB2     		uxtb	r2, r3
 1222 07ec 40F20003 		movw	r3, #:lower16:pFlash
 1223 07f0 C0F20003 		movt	r3, #:upper16:pFlash
 1224 07f4 5A75     		strb	r2, [r3, #21]
 1225              	.L60:
 724:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   }
 725:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   
 726:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 1226              		.loc 1 726 0
 1227 07f6 4FF47053 		mov	r3, #15360
 1228 07fa C4F20203 		movt	r3, 16386
 1229 07fe DB68     		ldr	r3, [r3, #12]
 1230 0800 03F00203 		and	r3, r3, #2
 1231 0804 002B     		cmp	r3, #0
 1232 0806 0DD0     		beq	.L55
 727:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   {
 728:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****     pFlash.ErrorCode |= FLASH_ERROR_OPERATION;
 1233              		.loc 1 728 0
 1234 0808 40F20003 		movw	r3, #:lower16:pFlash
 1235 080c C0F20003 		movt	r3, #:upper16:pFlash
 1236 0810 5B7D     		ldrb	r3, [r3, #21]
 1237 0812 DBB2     		uxtb	r3, r3
 1238 0814 43F02003 		orr	r3, r3, #32
 1239 0818 DAB2     		uxtb	r2, r3
 1240 081a 40F20003 		movw	r3, #:lower16:pFlash
 1241 081e C0F20003 		movt	r3, #:upper16:pFlash
 1242 0822 5A75     		strb	r2, [r3, #21]
 1243              	.L55:
 729:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c ****   }
 730:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash.c **** }
 1244              		.loc 1 730 0
 1245 0824 BD46     		mov	sp, r7
 1246              		@ sp needed
 1247 0826 5DF8047B 		ldr	r7, [sp], #4
 1248 082a 7047     		bx	lr
 1249              		.cfi_endproc
 1250              	.LFE71:
 1252              	.Letext0:
 1253              		.file 2 "c:\\program files (x86)\\codesourcery\\arm-none-eabi\\include\\stdint.h"
 1254              		.file 3 "D:\\workspace\\console800480\\system/stm32f217xx.h"
 1255              		.file 4 "D:\\workspace\\console800480\\system/stm32f2xx.h"
 1256              		.file 5 "D:\\workspace\\console800480\\STM32F2xx_HAL_Driver\\Inc/stm32f2xx_hal_def.h"
 1257              		.file 6 "D:\\workspace\\console800480\\STM32F2xx_HAL_Driver\\Inc/stm32f2xx_hal_flash.h"
 1258              		.file 7 "D:\\workspace\\console800480\\system/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f2xx_hal_flash.c
                            *COM*:00000018 pFlash
C:\Users\sagok\AppData\Local\Temp\ccNMGZ64.s:19     .text:00000000 $t
C:\Users\sagok\AppData\Local\Temp\ccNMGZ64.s:24     .text:00000000 HAL_FLASH_Program
C:\Users\sagok\AppData\Local\Temp\ccNMGZ64.s:826    .text:00000528 FLASH_WaitForLastOperation
C:\Users\sagok\AppData\Local\Temp\ccNMGZ64.s:1072   .text:000006bc FLASH_Program_Byte
C:\Users\sagok\AppData\Local\Temp\ccNMGZ64.s:1014   .text:00000658 FLASH_Program_HalfWord
C:\Users\sagok\AppData\Local\Temp\ccNMGZ64.s:957    .text:000005f4 FLASH_Program_Word
C:\Users\sagok\AppData\Local\Temp\ccNMGZ64.s:900    .text:0000058c FLASH_Program_DoubleWord
C:\Users\sagok\AppData\Local\Temp\ccNMGZ64.s:143    .text:000000bc HAL_FLASH_Program_IT
C:\Users\sagok\AppData\Local\Temp\ccNMGZ64.s:264    .text:0000018c HAL_FLASH_IRQHandler
C:\Users\sagok\AppData\Local\Temp\ccNMGZ64.s:525    .text:000003d0 HAL_FLASH_EndOfOperationCallback
C:\Users\sagok\AppData\Local\Temp\ccNMGZ64.s:1129   .text:0000071c FLASH_SetErrorCode
C:\Users\sagok\AppData\Local\Temp\ccNMGZ64.s:554    .text:000003e4 HAL_FLASH_OperationErrorCallback
C:\Users\sagok\AppData\Local\Temp\ccNMGZ64.s:583    .text:000003f8 HAL_FLASH_Unlock
C:\Users\sagok\AppData\Local\Temp\ccNMGZ64.s:634    .text:00000440 HAL_FLASH_Lock
C:\Users\sagok\AppData\Local\Temp\ccNMGZ64.s:670    .text:00000468 HAL_FLASH_OB_Unlock
C:\Users\sagok\AppData\Local\Temp\ccNMGZ64.s:722    .text:000004b4 HAL_FLASH_OB_Lock
C:\Users\sagok\AppData\Local\Temp\ccNMGZ64.s:758    .text:000004dc HAL_FLASH_OB_Launch
C:\Users\sagok\AppData\Local\Temp\ccNMGZ64.s:795    .text:0000050c HAL_FLASH_GetError
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.7f551ac7fcad8b79b9df4bfdaa536673
                           .group:00000000 wm4.stm32f2xx_hal_conf.h.40.007126baefb9f966c36646edbf8040d2
                           .group:00000000 wm4.stm32f2xx.h.57.5ec1581efc43612c411d33a8686e9ec7
                           .group:00000000 wm4.stm32f217xx.h.52.9c940d76d00294b78837dc334c172fdd
                           .group:00000000 wm4.core_cm3.h.32.49180ccb4d36cabd2d7016d2a51d91ae
                           .group:00000000 wm4.newlib.h.8.384a112feabb3bef7b573ae48cde2e3b
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4.config.h.183.aa62afef667fb61d15fa64c48beb2f14
                           .group:00000000 wm4._ansi.h.23.5644b60c990a4800b02a6e654e88f93a
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:00000000 wm4.core_cm3.h.130.63ab2348a6eed0fdb318040d970b676c
                           .group:00000000 wm4.stm32f217xx.h.978.a5c681952b2f704a0e7f2ba21d08adf5
                           .group:00000000 wm4.stm32f2xx.h.142.bc2155a1f7498bab16371e38413a9e41
                           .group:00000000 wm4.stm32f2xx_hal_def.h.74.8ad2dc8aa82c4fd02e5aeaae592641ba
                           .group:00000000 wm4.stm32f2xx_hal_rcc.h.142.ec0f91cc6576a6acebd17e6dd85829ae
                           .group:00000000 wm4.stm32f2xx_hal_rcc_ex.h.40.0829033e864455c6bdd0db01f8ba5a50
                           .group:00000000 wm4.stm32f2xx_hal_gpio.h.40.ba64e0bb94d9a68835f80159f39a86f1
                           .group:00000000 wm4.stm32f2xx_hal_gpio_ex.h.40.24e547fd402281923f446b510381083f
                           .group:00000000 wm4.stm32f2xx_hal_dma.h.40.5d9732ace2a21a4526ce8f0c52428fff
                           .group:00000000 wm4.stm32f2xx_hal_cortex.h.40.e10263d2ec5d4fa79b4180ce1a38aff1
                           .group:00000000 wm4.stm32f2xx_hal_adc.h.40.89ac8b78113cac4cf63847587daabac9
                           .group:00000000 wm4.stm32f2xx_hal_adc_ex.h.40.7de68ed256ef25526ee31cc017f2c291
                           .group:00000000 wm4.stm32f2xx_hal_flash.h.40.c3171719ce015e9cff20c795e44e886d
                           .group:00000000 wm4.stm32f2xx_hal_flash_ex.h.40.7389508bd24a0aeb077bde0c9fb651eb
                           .group:00000000 wm4.stm32f2xx_ll_fsmc.h.40.c1c32f2e1862f4dd342bd9b80fb895bb
                           .group:00000000 wm4.stm32f2xx_hal_pwr.h.40.812df32e5c31b609a128e9db0eb4cbd0
                           .group:00000000 wm4.stm32f2xx_hal_rtc.h.40.850fda5fe2cce8797446913dee18382f
                           .group:00000000 wm4.stm32f2xx_hal_rtc_ex.h.40.f3e0c408e3bf4e8a0352d7ec9a18a822
                           .group:00000000 wm4.stm32f2xx_ll_sdmmc.h.40.3719ab487c4b77401c572f459adf6eb7
                           .group:00000000 wm4.stm32f2xx_hal_sd.h.58.760215394dcc316161a6482c0af9b866
                           .group:00000000 wm4.stm32f2xx_hal_spi.h.40.7984243dbaba8b21c6392998a47e6987
                           .group:00000000 wm4.stm32f2xx_hal_tim.h.40.d79172f25d0e9a15dc346aba8515bdd6
                           .group:00000000 wm4.stm32f2xx_hal_tim_ex.h.40.361f280a7a3f60b4b238bb99ca728d83
                           .group:00000000 wm4.stm32f2xx_hal_uart.h.40.d74def561ae6f78f40f477c8426ecbef
                           .group:00000000 wm4.stm32f2xx_ll_usb.h.40.9b0206a05bc6ce3bec1648b51f22cb81
                           .group:00000000 wm4.stm32f2xx_hal_pcd.h.99.11faba414c39e357b2f23364912d0605
                           .group:00000000 wm4.stm32f2xx_hal_hcd.h.40.44ee5e972983ae0139ddbacdc75c44ef
                           .group:00000000 wm4.stm32f2xx_hal.h.64.ed79ee83e52b151b3c365392b398f866

UNDEFINED SYMBOLS
FLASH_Erase_Sector
HAL_GetTick
