   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f2xx_hal_spi.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	HAL_SPI_Init
  20              		.thumb
  21              		.thumb_func
  23              	HAL_SPI_Init:
  24              	.LFB55:
  25              		.file 1 "../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c"
   1:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
   2:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   ******************************************************************************
   3:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @file    stm32f2xx_hal_spi.c
   4:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @author  MCD Application Team
   5:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @version V1.0.1
   6:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @date    25-March-2014
   7:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief   SPI HAL module driver.
   8:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   *    
   9:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   *          This file provides firmware functions to manage the following 
  10:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   *          functionalities of the Serial Peripheral Interface (SPI) peripheral:
  11:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   *           + Initialization and de-initialization functions
  12:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   *           + IO operation functions
  13:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   *           + Peripheral Control functions 
  14:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   *           + Peripheral State functions
  15:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   @verbatim
  16:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   ==============================================================================
  17:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****                         ##### How to use this driver #####
  18:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   ==============================================================================
  19:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     [..]
  20:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       The SPI HAL driver can be used as follows:
  21:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
  22:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       (#) Declare a SPI_HandleTypeDef handle structure, for example:
  23:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           SPI_HandleTypeDef  hspi; 
  24:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
  25:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       (#)Initialize the SPI low level resources by implement the HAL_SPI_MspInit ()API:
  26:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           (##) Enable the SPIx interface clock 
  27:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           (##) SPI pins configuration
  28:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****               (+++) Enable the clock for the SPI GPIOs 
  29:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****               (+++) Configure these SPI pins as alternate function push-pull
  30:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           (##) NVIC configuration if you need to use interrupt process
  31:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****               (+++) Configure the SPIx interrupt priority
  32:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****               (+++) Enable the NVIC SPI IRQ handle
  33:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           (##) DMA Configuration if you need to use DMA process
  34:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****               (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive stream
  35:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****               (+++) Enable the DMAx interface clock using 
  36:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****               (+++) Configure the DMA handle parameters 
  37:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****               (+++) Configure the DMA Tx or Rx Stream
  38:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****               (+++) Associate the initilalized hdma_tx handle to the hspi DMA Tx or Rx handle
  39:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****               (+++) Configure the priority and enable the NVIC for the transfer complete interrupt 
  40:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
  41:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       (#) Program the Mode, Direction , Data size, Baudrate Prescaler, NSS 
  42:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           management, Clock polarity and phase, FirstBit and CRC configuration in the hspi Init str
  43:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
  44:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       (#) Initialize the SPI registers by calling the HAL_SPI_Init() API:
  45:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  46:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****               by calling the customed HAL_SPI_MspInit(&hspi) API.
  47:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****             
  48:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   @endverbatim
  49:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   ******************************************************************************
  50:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @attention
  51:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   *
  52:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * <h2><center>&copy; COPYRIGHT(c) 2014 STMicroelectronics</center></h2>
  53:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   *
  54:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * Redistribution and use in source and binary forms, with or without modification,
  55:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * are permitted provided that the following conditions are met:
  56:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  57:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   *      this list of conditions and the following disclaimer.
  58:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  59:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   *      this list of conditions and the following disclaimer in the documentation
  60:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   *      and/or other materials provided with the distribution.
  61:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  62:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   *      may be used to endorse or promote products derived from this software
  63:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   *      without specific prior written permission.
  64:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   *
  65:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  66:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  67:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  68:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  69:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  70:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  71:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  72:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  73:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  74:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  75:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   *
  76:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   ******************************************************************************
  77:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
  78:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
  79:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /* Includes ------------------------------------------------------------------*/
  80:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** #include "stm32f2xx_hal.h"
  81:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
  82:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /** @addtogroup STM32F2xx_HAL_Driver
  83:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @{
  84:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
  85:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
  86:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /** @defgroup SPI 
  87:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief SPI HAL module driver
  88:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @{
  89:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
  90:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
  91:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** #ifdef HAL_SPI_MODULE_ENABLED
  92:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
  93:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /* Private typedef -----------------------------------------------------------*/
  94:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /* Private define ------------------------------------------------------------*/
  95:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** #define SPI_TIMEOUT_VALUE  10
  96:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /* Private macro -------------------------------------------------------------*/
  97:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /* Private variables ---------------------------------------------------------*/
  98:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /* Private function prototypes -----------------------------------------------*/
  99:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** static void SPI_TxCloseIRQHandler(SPI_HandleTypeDef *hspi);
 100:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** static void SPI_TxISR(SPI_HandleTypeDef *hspi);
 101:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** static void SPI_RxCloseIRQHandler(SPI_HandleTypeDef *hspi);
 102:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** static void SPI_2LinesRxISR(SPI_HandleTypeDef *hspi);
 103:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** static void SPI_RxISR(SPI_HandleTypeDef *hspi);
 104:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 105:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 106:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 107:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma);
 108:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitOnFlagUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagSta
 109:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 110:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /* Private functions ---------------------------------------------------------*/
 111:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 112:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /** @defgroup SPI_Private_Functions
 113:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @{
 114:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
 115:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 116:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /** @defgroup SPI_Group1 Initialization and de-initialization functions 
 117:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****  *  @brief    Initialization and Configuration functions 
 118:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****  *
 119:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** @verbatim
 120:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****  ===============================================================================
 121:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****               ##### Initialization and de-initialization functions #####
 122:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****  ===============================================================================
 123:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     [..]  This subsection provides a set of functions allowing to initialize and 
 124:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           de-initialiaze the SPIx peripheral:
 125:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 126:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       (+) User must Implement HAL_SPI_MspInit() function in which he configures 
 127:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 128:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 129:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       (+) Call the function HAL_SPI_Init() to configure the selected device with 
 130:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           the selected configuration:
 131:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (++) Mode
 132:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (++) Direction 
 133:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (++) Data Size
 134:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (++) Clock Polarity and Phase
 135:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (++) NSS Management
 136:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (++) BaudRate Prescaler
 137:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (++) FirstBit
 138:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (++) TIMode
 139:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (++) CRC Calculation
 140:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (++) CRC Polynomial if CRC enabled
 141:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 142:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       (+) Call the function HAL_SPI_DeInit() to restore the default configuration 
 143:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           of the selected SPIx periperal.       
 144:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 145:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** @endverbatim
 146:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @{
 147:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
 148:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 149:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
 150:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief  Initializes the SPI according to the specified parameters 
 151:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   *         in the SPI_InitTypeDef and create the associated handle.
 152:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  hspi: SPI handle
 153:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval HAL status
 154:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
 155:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
 156:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
  26              		.loc 1 156 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 82B0     		sub	sp, sp, #8
  35              		.cfi_def_cfa_offset 16
  36 0004 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  38 0006 7860     		str	r0, [r7, #4]
 157:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Check the SPI handle allocation */
 158:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(hspi == NULL)
  39              		.loc 1 158 0
  40 0008 7B68     		ldr	r3, [r7, #4]
  41 000a 002B     		cmp	r3, #0
  42 000c 01D1     		bne	.L2
 159:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
 160:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     return HAL_ERROR;
  43              		.loc 1 160 0
  44 000e 0123     		movs	r3, #1
  45 0010 54E0     		b	.L3
  46              	.L2:
 161:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
 162:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 163:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Check the parameters */
 164:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   assert_param(IS_SPI_MODE(hspi->Init.Mode));
 165:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_MODE(hspi->Init.Direction));
 166:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
 167:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
 168:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));
 169:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   assert_param(IS_SPI_NSS(hspi->Init.NSS));
 170:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 171:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
 172:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
 173:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   assert_param(IS_SPI_CRC_CALCULATION(hspi->Init.CRCCalculation));
 174:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
 175:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 176:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_RESET)
  47              		.loc 1 176 0
  48 0012 7B68     		ldr	r3, [r7, #4]
  49 0014 93F85130 		ldrb	r3, [r3, #81]
  50 0018 DBB2     		uxtb	r3, r3
  51 001a 002B     		cmp	r3, #0
  52 001c 02D1     		bne	.L4
 177:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
 178:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 179:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     HAL_SPI_MspInit(hspi);
  53              		.loc 1 179 0
  54 001e 7868     		ldr	r0, [r7, #4]
  55 0020 FFF7FEFF 		bl	HAL_SPI_MspInit
  56              	.L4:
 180:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
 181:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   
 182:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
  57              		.loc 1 182 0
  58 0024 7B68     		ldr	r3, [r7, #4]
  59 0026 0222     		movs	r2, #2
  60 0028 83F85120 		strb	r2, [r3, #81]
 183:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 184:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Disble the selected SPI peripheral */
 185:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
  61              		.loc 1 185 0
  62 002c 7B68     		ldr	r3, [r7, #4]
  63 002e 1B68     		ldr	r3, [r3]
  64 0030 7A68     		ldr	r2, [r7, #4]
  65 0032 1268     		ldr	r2, [r2]
  66 0034 1268     		ldr	r2, [r2]
  67 0036 22F04002 		bic	r2, r2, #64
  68 003a 1A60     		str	r2, [r3]
 186:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 187:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
 188:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
 189:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   Communication speed, First bit and CRC calculation state */
 190:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->Instance->CR1 = (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
  69              		.loc 1 190 0
  70 003c 7B68     		ldr	r3, [r7, #4]
  71 003e 1B68     		ldr	r3, [r3]
  72 0040 7A68     		ldr	r2, [r7, #4]
  73 0042 5168     		ldr	r1, [r2, #4]
  74 0044 7A68     		ldr	r2, [r7, #4]
  75 0046 9268     		ldr	r2, [r2, #8]
  76 0048 1143     		orrs	r1, r1, r2
  77 004a 7A68     		ldr	r2, [r7, #4]
  78 004c D268     		ldr	r2, [r2, #12]
  79 004e 1143     		orrs	r1, r1, r2
 191:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****                          hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & SPI_CR1_S
  80              		.loc 1 191 0
  81 0050 7A68     		ldr	r2, [r7, #4]
  82 0052 1269     		ldr	r2, [r2, #16]
 190:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****                          hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & SPI_CR1_S
  83              		.loc 1 190 0
  84 0054 1143     		orrs	r1, r1, r2
  85              		.loc 1 191 0
  86 0056 7A68     		ldr	r2, [r7, #4]
  87 0058 5269     		ldr	r2, [r2, #20]
  88 005a 1143     		orrs	r1, r1, r2
  89 005c 7A68     		ldr	r2, [r7, #4]
  90 005e 9269     		ldr	r2, [r2, #24]
  91 0060 02F40072 		and	r2, r2, #512
  92 0064 1143     		orrs	r1, r1, r2
 192:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****                          hspi->Init.BaudRatePrescaler | hspi->Init.FirstBit  | hspi->Init.CRCCalcul
  93              		.loc 1 192 0
  94 0066 7A68     		ldr	r2, [r7, #4]
  95 0068 D269     		ldr	r2, [r2, #28]
 191:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****                          hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & SPI_CR1_S
  96              		.loc 1 191 0
  97 006a 1143     		orrs	r1, r1, r2
  98              		.loc 1 192 0
  99 006c 7A68     		ldr	r2, [r7, #4]
 100 006e 126A     		ldr	r2, [r2, #32]
 101 0070 1143     		orrs	r1, r1, r2
 102 0072 7A68     		ldr	r2, [r7, #4]
 103 0074 926A     		ldr	r2, [r2, #40]
 104 0076 0A43     		orrs	r2, r2, r1
 190:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****                          hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & SPI_CR1_S
 105              		.loc 1 190 0
 106 0078 1A60     		str	r2, [r3]
 193:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 194:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Configure : NSS management */
 195:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->Instance->CR2 = (((hspi->Init.NSS >> 16) & SPI_CR2_SSOE) | hspi->Init.TIMode);
 107              		.loc 1 195 0
 108 007a 7B68     		ldr	r3, [r7, #4]
 109 007c 1B68     		ldr	r3, [r3]
 110 007e 7A68     		ldr	r2, [r7, #4]
 111 0080 9269     		ldr	r2, [r2, #24]
 112 0082 120C     		lsrs	r2, r2, #16
 113 0084 02F00401 		and	r1, r2, #4
 114 0088 7A68     		ldr	r2, [r7, #4]
 115 008a 526A     		ldr	r2, [r2, #36]
 116 008c 0A43     		orrs	r2, r2, r1
 117 008e 5A60     		str	r2, [r3, #4]
 196:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 197:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /*---------------------------- SPIx CRCPOLY Configuration ------------------*/
 198:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Configure : CRC Polynomial */
 199:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->Instance->CRCPR = hspi->Init.CRCPolynomial;
 118              		.loc 1 199 0
 119 0090 7B68     		ldr	r3, [r7, #4]
 120 0092 1B68     		ldr	r3, [r3]
 121 0094 7A68     		ldr	r2, [r7, #4]
 122 0096 D26A     		ldr	r2, [r2, #44]
 123 0098 1A61     		str	r2, [r3, #16]
 200:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 201:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
 202:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->Instance->I2SCFGR &= (uint32_t)(~SPI_I2SCFGR_I2SMOD);
 124              		.loc 1 202 0
 125 009a 7B68     		ldr	r3, [r7, #4]
 126 009c 1B68     		ldr	r3, [r3]
 127 009e 7A68     		ldr	r2, [r7, #4]
 128 00a0 1268     		ldr	r2, [r2]
 129 00a2 D269     		ldr	r2, [r2, #28]
 130 00a4 22F40062 		bic	r2, r2, #2048
 131 00a8 DA61     		str	r2, [r3, #28]
 203:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 204:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 132              		.loc 1 204 0
 133 00aa 7B68     		ldr	r3, [r7, #4]
 134 00ac 0022     		movs	r2, #0
 135 00ae 83F85220 		strb	r2, [r3, #82]
 205:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 136              		.loc 1 205 0
 137 00b2 7B68     		ldr	r3, [r7, #4]
 138 00b4 0122     		movs	r2, #1
 139 00b6 83F85120 		strb	r2, [r3, #81]
 206:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   
 207:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   return HAL_OK;
 140              		.loc 1 207 0
 141 00ba 0023     		movs	r3, #0
 142              	.L3:
 208:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 143              		.loc 1 208 0
 144 00bc 1846     		mov	r0, r3
 145 00be 0837     		adds	r7, r7, #8
 146 00c0 BD46     		mov	sp, r7
 147              		@ sp needed
 148 00c2 80BD     		pop	{r7, pc}
 149              		.cfi_endproc
 150              	.LFE55:
 152              		.align	2
 153              		.global	HAL_SPI_DeInit
 154              		.thumb
 155              		.thumb_func
 157              	HAL_SPI_DeInit:
 158              	.LFB56:
 209:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 210:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
 211:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief  DeInitializes the SPI peripheral 
 212:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  hspi: SPI handle
 213:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval HAL status
 214:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
 215:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DeInit(SPI_HandleTypeDef *hspi)
 216:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 159              		.loc 1 216 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 8
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163 00c4 80B5     		push	{r7, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 00c6 82B0     		sub	sp, sp, #8
 168              		.cfi_def_cfa_offset 16
 169 00c8 00AF     		add	r7, sp, #0
 170              		.cfi_def_cfa_register 7
 171 00ca 7860     		str	r0, [r7, #4]
 217:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Check the SPI handle allocation */
 218:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(hspi == NULL)
 172              		.loc 1 218 0
 173 00cc 7B68     		ldr	r3, [r7, #4]
 174 00ce 002B     		cmp	r3, #0
 175 00d0 01D1     		bne	.L6
 219:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
 220:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     return HAL_ERROR;
 176              		.loc 1 220 0
 177 00d2 0123     		movs	r3, #1
 178 00d4 17E0     		b	.L7
 179              	.L6:
 221:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
 222:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 223:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Disable the SPI Peripheral Clock */
 224:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 180              		.loc 1 224 0
 181 00d6 7B68     		ldr	r3, [r7, #4]
 182 00d8 1B68     		ldr	r3, [r3]
 183 00da 7A68     		ldr	r2, [r7, #4]
 184 00dc 1268     		ldr	r2, [r2]
 185 00de 1268     		ldr	r2, [r2]
 186 00e0 22F04002 		bic	r2, r2, #64
 187 00e4 1A60     		str	r2, [r3]
 225:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 226:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 227:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   HAL_SPI_MspDeInit(hspi);
 188              		.loc 1 227 0
 189 00e6 7868     		ldr	r0, [r7, #4]
 190 00e8 FFF7FEFF 		bl	HAL_SPI_MspDeInit
 228:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 229:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 191              		.loc 1 229 0
 192 00ec 7B68     		ldr	r3, [r7, #4]
 193 00ee 0022     		movs	r2, #0
 194 00f0 83F85220 		strb	r2, [r3, #82]
 230:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 195              		.loc 1 230 0
 196 00f4 7B68     		ldr	r3, [r7, #4]
 197 00f6 0022     		movs	r2, #0
 198 00f8 83F85120 		strb	r2, [r3, #81]
 231:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 232:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Release Lock */
 233:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 199              		.loc 1 233 0
 200 00fc 7B68     		ldr	r3, [r7, #4]
 201 00fe 0022     		movs	r2, #0
 202 0100 83F85020 		strb	r2, [r3, #80]
 234:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 235:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   return HAL_OK;
 203              		.loc 1 235 0
 204 0104 0023     		movs	r3, #0
 205              	.L7:
 236:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 206              		.loc 1 236 0
 207 0106 1846     		mov	r0, r3
 208 0108 0837     		adds	r7, r7, #8
 209 010a BD46     		mov	sp, r7
 210              		@ sp needed
 211 010c 80BD     		pop	{r7, pc}
 212              		.cfi_endproc
 213              	.LFE56:
 215 010e 00BF     		.align	2
 216              		.weak	HAL_SPI_MspInit
 217              		.thumb
 218              		.thumb_func
 220              	HAL_SPI_MspInit:
 221              	.LFB57:
 237:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 238:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
 239:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief SPI MSP Init
 240:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param hspi: SPI handle
 241:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval None
 242:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
 243:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****  __weak void HAL_SPI_MspInit(SPI_HandleTypeDef *hspi)
 244:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****  {
 222              		.loc 1 244 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 8
 225              		@ frame_needed = 1, uses_anonymous_args = 0
 226              		@ link register save eliminated.
 227 0110 80B4     		push	{r7}
 228              		.cfi_def_cfa_offset 4
 229              		.cfi_offset 7, -4
 230 0112 83B0     		sub	sp, sp, #12
 231              		.cfi_def_cfa_offset 16
 232 0114 00AF     		add	r7, sp, #0
 233              		.cfi_def_cfa_register 7
 234 0116 7860     		str	r0, [r7, #4]
 245:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****    /* NOTE : This function Should not be modified, when the callback is needed,
 246:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****             the HAL_SPI_MspInit could be implenetd in the user file
 247:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****    */
 248:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 235              		.loc 1 248 0
 236 0118 0C37     		adds	r7, r7, #12
 237 011a BD46     		mov	sp, r7
 238              		@ sp needed
 239 011c 5DF8047B 		ldr	r7, [sp], #4
 240 0120 7047     		bx	lr
 241              		.cfi_endproc
 242              	.LFE57:
 244 0122 00BF     		.align	2
 245              		.weak	HAL_SPI_MspDeInit
 246              		.thumb
 247              		.thumb_func
 249              	HAL_SPI_MspDeInit:
 250              	.LFB58:
 249:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 250:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
 251:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief SPI MSP DeInit
 252:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param hspi: SPI handle
 253:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval None
 254:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
 255:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****  __weak void HAL_SPI_MspDeInit(SPI_HandleTypeDef *hspi)
 256:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 251              		.loc 1 256 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 8
 254              		@ frame_needed = 1, uses_anonymous_args = 0
 255              		@ link register save eliminated.
 256 0124 80B4     		push	{r7}
 257              		.cfi_def_cfa_offset 4
 258              		.cfi_offset 7, -4
 259 0126 83B0     		sub	sp, sp, #12
 260              		.cfi_def_cfa_offset 16
 261 0128 00AF     		add	r7, sp, #0
 262              		.cfi_def_cfa_register 7
 263 012a 7860     		str	r0, [r7, #4]
 257:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 258:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****             the HAL_SPI_MspDeInit could be implenetd in the user file
 259:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****    */
 260:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 264              		.loc 1 260 0
 265 012c 0C37     		adds	r7, r7, #12
 266 012e BD46     		mov	sp, r7
 267              		@ sp needed
 268 0130 5DF8047B 		ldr	r7, [sp], #4
 269 0134 7047     		bx	lr
 270              		.cfi_endproc
 271              	.LFE58:
 273 0136 00BF     		.align	2
 274              		.global	HAL_SPI_Transmit
 275              		.thumb
 276              		.thumb_func
 278              	HAL_SPI_Transmit:
 279              	.LFB59:
 261:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 262:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
 263:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @}
 264:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
 265:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 266:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /** @defgroup SPI_Group2 IO operation functions
 267:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****  *  @brief   Data transfers functions
 268:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****  *
 269:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** @verbatim
 270:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   ==============================================================================
 271:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****                       ##### IO operation functions #####
 272:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****  ===============================================================================
 273:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     This subsection provides a set of functions allowing to manage the SPI
 274:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     data transfers.
 275:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 276:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     [..] The SPI supports master and slave mode :
 277:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 278:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     (#) There are two mode of transfer:
 279:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****        (++) Blocking mode: The communication is performed in polling mode.
 280:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****             The HAL status of all data processing is returned by the same function
 281:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****             after finishing transfer.
 282:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****        (++) No-Blocking mode: The communication is performed using Interrupts
 283:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****            or DMA, These API's return the HAL status.
 284:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****            The end of the data processing will be indicated through the 
 285:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****            dedicated SPI IRQ when using Interrupt mode or the DMA IRQ when 
 286:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****            using DMA mode.
 287:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****            The HAL_SPI_TxCpltCallback(), HAL_SPI_RxCpltCallback() and HAL_SPI_TxRxCpltCallback() us
 288:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****            will be executed respectivelly at the end of the transmit or Receive process
 289:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****            The HAL_SPI_ErrorCallback()user callback will be executed when a communication error is 
 290:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 291:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     (#) Blocking mode API's are :
 292:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (++) HAL_SPI_Transmit()in 1Line (simplex) and 2Lines (full duplex) mode
 293:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (++) HAL_SPI_Receive() in 1Line (simplex) and 2Lines (full duplex) mode
 294:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (++) HAL_SPI_TransmitReceive() in full duplex mode
 295:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 296:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     (#) Non-Blocking mode API's with Interrupt are :
 297:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (++) HAL_SPI_Transmit_IT()in 1Line (simplex) and 2Lines (full duplex) mode
 298:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (++) HAL_SPI_Receive_IT() in 1Line (simplex) and 2Lines (full duplex) mode
 299:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (++) HAL_SPI_TransmitReceive_IT()in full duplex mode
 300:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (++) HAL_SPI_IRQHandler()
 301:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 302:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     (#) No-Blocking mode functions with DMA are :
 303:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (++) HAL_SPI_Transmit_DMA()in 1Line (simplex) and 2Lines (full duplex) mode
 304:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (++) HAL_SPI_Receive_DMA() in 1Line (simplex) and 2Lines (full duplex) mode
 305:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (++) HAL_SPI_TransmitReceie_DMA() in full duplex mode
 306:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 307:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     (#) A set of Transfer Complete Callbacks are provided in No_Blocking mode:
 308:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (++) HAL_SPI_TxCpltCallback()
 309:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (++) HAL_SPI_RxCpltCallback()
 310:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (++) HAL_SPI_ErrorCallback()
 311:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (++) HAL_SPI_TxRxCpltCallback()
 312:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 313:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** @endverbatim
 314:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @{
 315:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
 316:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 317:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
 318:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief  Transmit an amount of data in blocking mode
 319:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  hspi: SPI handle
 320:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  pData: pointer to data buffer
 321:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  Size: amount of data to be sent
 322:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  Timeout: Timeout duration
 323:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval HAL status
 324:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
 325:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t
 326:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 280              		.loc 1 326 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 16
 283              		@ frame_needed = 1, uses_anonymous_args = 0
 284 0138 80B5     		push	{r7, lr}
 285              		.cfi_def_cfa_offset 8
 286              		.cfi_offset 7, -8
 287              		.cfi_offset 14, -4
 288 013a 84B0     		sub	sp, sp, #16
 289              		.cfi_def_cfa_offset 24
 290 013c 00AF     		add	r7, sp, #0
 291              		.cfi_def_cfa_register 7
 292 013e F860     		str	r0, [r7, #12]
 293 0140 B960     		str	r1, [r7, #8]
 294 0142 3B60     		str	r3, [r7]
 295 0144 1346     		mov	r3, r2	@ movhi
 296 0146 FB80     		strh	r3, [r7, #6]	@ movhi
 327:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 328:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_READY)
 297              		.loc 1 328 0
 298 0148 FB68     		ldr	r3, [r7, #12]
 299 014a 93F85130 		ldrb	r3, [r3, #81]
 300 014e DBB2     		uxtb	r3, r3
 301 0150 012B     		cmp	r3, #1
 302 0152 40F01E81 		bne	.L11
 329:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
 330:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if((pData == NULL ) || (Size == 0)) 
 303              		.loc 1 330 0
 304 0156 BB68     		ldr	r3, [r7, #8]
 305 0158 002B     		cmp	r3, #0
 306 015a 02D0     		beq	.L12
 307              		.loc 1 330 0 is_stmt 0 discriminator 1
 308 015c FB88     		ldrh	r3, [r7, #6]
 309 015e 002B     		cmp	r3, #0
 310 0160 01D1     		bne	.L13
 311              	.L12:
 331:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 332:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       return  HAL_ERROR;
 312              		.loc 1 332 0 is_stmt 1
 313 0162 0123     		movs	r3, #1
 314 0164 16E1     		b	.L14
 315              	.L13:
 333:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 334:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 335:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Check the parameters */
 336:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
 337:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 338:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Process Locked */
 339:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_LOCK(hspi);
 316              		.loc 1 339 0
 317 0166 FB68     		ldr	r3, [r7, #12]
 318 0168 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 319 016c 012B     		cmp	r3, #1
 320 016e 01D1     		bne	.L15
 321              		.loc 1 339 0 is_stmt 0 discriminator 1
 322 0170 0223     		movs	r3, #2
 323 0172 0FE1     		b	.L14
 324              	.L15:
 325              		.loc 1 339 0 discriminator 2
 326 0174 FB68     		ldr	r3, [r7, #12]
 327 0176 0122     		movs	r2, #1
 328 0178 83F85020 		strb	r2, [r3, #80]
 340:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 341:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Configure communication */
 342:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX;
 329              		.loc 1 342 0 is_stmt 1 discriminator 2
 330 017c FB68     		ldr	r3, [r7, #12]
 331 017e 1222     		movs	r2, #18
 332 0180 83F85120 		strb	r2, [r3, #81]
 343:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 333              		.loc 1 343 0 discriminator 2
 334 0184 FB68     		ldr	r3, [r7, #12]
 335 0186 0022     		movs	r2, #0
 336 0188 83F85220 		strb	r2, [r3, #82]
 344:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 345:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->pTxBuffPtr = pData;
 337              		.loc 1 345 0 discriminator 2
 338 018c FB68     		ldr	r3, [r7, #12]
 339 018e BA68     		ldr	r2, [r7, #8]
 340 0190 1A63     		str	r2, [r3, #48]
 346:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxXferSize = Size;
 341              		.loc 1 346 0 discriminator 2
 342 0192 FB68     		ldr	r3, [r7, #12]
 343 0194 FA88     		ldrh	r2, [r7, #6]	@ movhi
 344 0196 9A86     		strh	r2, [r3, #52]	@ movhi
 347:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxXferCount = Size;
 345              		.loc 1 347 0 discriminator 2
 346 0198 FB68     		ldr	r3, [r7, #12]
 347 019a FA88     		ldrh	r2, [r7, #6]	@ movhi
 348 019c DA86     		strh	r2, [r3, #54]	@ movhi
 348:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 349:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /*Init field not used in handle to zero */
 350:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxISR = 0;
 349              		.loc 1 350 0 discriminator 2
 350 019e FB68     		ldr	r3, [r7, #12]
 351 01a0 0022     		movs	r2, #0
 352 01a2 DA64     		str	r2, [r3, #76]
 351:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxISR = 0;
 353              		.loc 1 351 0 discriminator 2
 354 01a4 FB68     		ldr	r3, [r7, #12]
 355 01a6 0022     		movs	r2, #0
 356 01a8 9A64     		str	r2, [r3, #72]
 352:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxXferSize   = 0;
 357              		.loc 1 352 0 discriminator 2
 358 01aa FB68     		ldr	r3, [r7, #12]
 359 01ac 0022     		movs	r2, #0
 360 01ae 9A87     		strh	r2, [r3, #60]	@ movhi
 353:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxXferCount  = 0;
 361              		.loc 1 353 0 discriminator 2
 362 01b0 FB68     		ldr	r3, [r7, #12]
 363 01b2 0022     		movs	r2, #0
 364 01b4 DA87     		strh	r2, [r3, #62]	@ movhi
 354:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 355:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Reset CRC Calculation */
 356:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED)
 365              		.loc 1 356 0 discriminator 2
 366 01b6 FB68     		ldr	r3, [r7, #12]
 367 01b8 9B6A     		ldr	r3, [r3, #40]
 368 01ba B3F5005F 		cmp	r3, #8192
 369 01be 0FD1     		bne	.L16
 357:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 358:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_RESET_CRC(hspi);
 370              		.loc 1 358 0
 371 01c0 FB68     		ldr	r3, [r7, #12]
 372 01c2 1B68     		ldr	r3, [r3]
 373 01c4 FA68     		ldr	r2, [r7, #12]
 374 01c6 1268     		ldr	r2, [r2]
 375 01c8 1268     		ldr	r2, [r2]
 376 01ca 22F40052 		bic	r2, r2, #8192
 377 01ce 1A60     		str	r2, [r3]
 378 01d0 FB68     		ldr	r3, [r7, #12]
 379 01d2 1B68     		ldr	r3, [r3]
 380 01d4 FA68     		ldr	r2, [r7, #12]
 381 01d6 1268     		ldr	r2, [r2]
 382 01d8 1268     		ldr	r2, [r2]
 383 01da 42F40052 		orr	r2, r2, #8192
 384 01de 1A60     		str	r2, [r3]
 385              	.L16:
 359:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 360:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 361:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
 386              		.loc 1 361 0
 387 01e0 FB68     		ldr	r3, [r7, #12]
 388 01e2 9B68     		ldr	r3, [r3, #8]
 389 01e4 B3F5004F 		cmp	r3, #32768
 390 01e8 07D1     		bne	.L17
 362:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 363:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Configure communication direction : 1Line */
 364:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_1LINE_TX(hspi);
 391              		.loc 1 364 0
 392 01ea FB68     		ldr	r3, [r7, #12]
 393 01ec 1B68     		ldr	r3, [r3]
 394 01ee FA68     		ldr	r2, [r7, #12]
 395 01f0 1268     		ldr	r2, [r2]
 396 01f2 1268     		ldr	r2, [r2]
 397 01f4 42F48042 		orr	r2, r2, #16384
 398 01f8 1A60     		str	r2, [r3]
 399              	.L17:
 365:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 366:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 367:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Check if the SPI is already enabled */ 
 368:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
 400              		.loc 1 368 0
 401 01fa FB68     		ldr	r3, [r7, #12]
 402 01fc 1B68     		ldr	r3, [r3]
 403 01fe 1B68     		ldr	r3, [r3]
 404 0200 03F04003 		and	r3, r3, #64
 405 0204 002B     		cmp	r3, #0
 406 0206 07D1     		bne	.L18
 369:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 370:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Enable SPI peripheral */
 371:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
 407              		.loc 1 371 0
 408 0208 FB68     		ldr	r3, [r7, #12]
 409 020a 1B68     		ldr	r3, [r3]
 410 020c FA68     		ldr	r2, [r7, #12]
 411 020e 1268     		ldr	r2, [r2]
 412 0210 1268     		ldr	r2, [r2]
 413 0212 42F04002 		orr	r2, r2, #64
 414 0216 1A60     		str	r2, [r3]
 415              	.L18:
 372:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 373:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 374:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Transmit data in 8 Bit mode */
 375:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 416              		.loc 1 375 0
 417 0218 FB68     		ldr	r3, [r7, #12]
 418 021a DB68     		ldr	r3, [r3, #12]
 419 021c 002B     		cmp	r3, #0
 420 021e 3BD1     		bne	.L19
 376:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 377:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 378:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->Instance->DR = (*hspi->pTxBuffPtr++);
 421              		.loc 1 378 0
 422 0220 FB68     		ldr	r3, [r7, #12]
 423 0222 1A68     		ldr	r2, [r3]
 424 0224 FB68     		ldr	r3, [r7, #12]
 425 0226 1B6B     		ldr	r3, [r3, #48]
 426 0228 581C     		adds	r0, r3, #1
 427 022a F968     		ldr	r1, [r7, #12]
 428 022c 0863     		str	r0, [r1, #48]
 429 022e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 430 0230 D360     		str	r3, [r2, #12]
 379:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->TxXferCount--;
 431              		.loc 1 379 0
 432 0232 FB68     		ldr	r3, [r7, #12]
 433 0234 DB8E     		ldrh	r3, [r3, #54]
 434 0236 013B     		subs	r3, r3, #1
 435 0238 9AB2     		uxth	r2, r3
 436 023a FB68     		ldr	r3, [r7, #12]
 437 023c DA86     		strh	r2, [r3, #54]	@ movhi
 380:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 381:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       while(hspi->TxXferCount > 0)
 438              		.loc 1 381 0
 439 023e 19E0     		b	.L20
 440              	.L22:
 382:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
 383:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         /* Wait until TXE flag is set to send data */
 384:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_TXE, RESET, Timeout) != HAL_OK)
 441              		.loc 1 384 0
 442 0240 F868     		ldr	r0, [r7, #12]
 443 0242 0221     		movs	r1, #2
 444 0244 0022     		movs	r2, #0
 445 0246 3B68     		ldr	r3, [r7]
 446 0248 01F0D2FC 		bl	SPI_WaitOnFlagUntilTimeout
 447 024c 0346     		mov	r3, r0
 448 024e 002B     		cmp	r3, #0
 449 0250 01D0     		beq	.L21
 385:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         { 
 386:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           return HAL_TIMEOUT;
 450              		.loc 1 386 0
 451 0252 0323     		movs	r3, #3
 452 0254 9EE0     		b	.L14
 453              	.L21:
 387:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         }
 388:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->Instance->DR = (*hspi->pTxBuffPtr++);
 454              		.loc 1 388 0
 455 0256 FB68     		ldr	r3, [r7, #12]
 456 0258 1A68     		ldr	r2, [r3]
 457 025a FB68     		ldr	r3, [r7, #12]
 458 025c 1B6B     		ldr	r3, [r3, #48]
 459 025e 581C     		adds	r0, r3, #1
 460 0260 F968     		ldr	r1, [r7, #12]
 461 0262 0863     		str	r0, [r1, #48]
 462 0264 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 463 0266 D360     		str	r3, [r2, #12]
 389:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->TxXferCount--;
 464              		.loc 1 389 0
 465 0268 FB68     		ldr	r3, [r7, #12]
 466 026a DB8E     		ldrh	r3, [r3, #54]
 467 026c 013B     		subs	r3, r3, #1
 468 026e 9AB2     		uxth	r2, r3
 469 0270 FB68     		ldr	r3, [r7, #12]
 470 0272 DA86     		strh	r2, [r3, #54]	@ movhi
 471              	.L20:
 381:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
 472              		.loc 1 381 0 discriminator 1
 473 0274 FB68     		ldr	r3, [r7, #12]
 474 0276 DB8E     		ldrh	r3, [r3, #54]
 475 0278 002B     		cmp	r3, #0
 476 027a E1D1     		bne	.L22
 390:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       }
 391:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Enable CRC Transmission */
 392:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED) 
 477              		.loc 1 392 0
 478 027c FB68     		ldr	r3, [r7, #12]
 479 027e 9B6A     		ldr	r3, [r3, #40]
 480 0280 B3F5005F 		cmp	r3, #8192
 481 0284 47D1     		bne	.L24
 393:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
 394:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->Instance->CR1 |= SPI_CR1_CRCNEXT;
 482              		.loc 1 394 0
 483 0286 FB68     		ldr	r3, [r7, #12]
 484 0288 1B68     		ldr	r3, [r3]
 485 028a FA68     		ldr	r2, [r7, #12]
 486 028c 1268     		ldr	r2, [r2]
 487 028e 1268     		ldr	r2, [r2]
 488 0290 42F48052 		orr	r2, r2, #4096
 489 0294 1A60     		str	r2, [r3]
 490 0296 3EE0     		b	.L24
 491              	.L19:
 395:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       }
 396:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 397:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Transmit data in 16 Bit mode */
 398:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     else
 399:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 400:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t*)hspi->pTxBuffPtr);
 492              		.loc 1 400 0
 493 0298 FB68     		ldr	r3, [r7, #12]
 494 029a 1B68     		ldr	r3, [r3]
 495 029c FA68     		ldr	r2, [r7, #12]
 496 029e 126B     		ldr	r2, [r2, #48]
 497 02a0 1288     		ldrh	r2, [r2]
 498 02a2 DA60     		str	r2, [r3, #12]
 401:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->pTxBuffPtr+=2;
 499              		.loc 1 401 0
 500 02a4 FB68     		ldr	r3, [r7, #12]
 501 02a6 1B6B     		ldr	r3, [r3, #48]
 502 02a8 9A1C     		adds	r2, r3, #2
 503 02aa FB68     		ldr	r3, [r7, #12]
 504 02ac 1A63     		str	r2, [r3, #48]
 402:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->TxXferCount--;
 505              		.loc 1 402 0
 506 02ae FB68     		ldr	r3, [r7, #12]
 507 02b0 DB8E     		ldrh	r3, [r3, #54]
 508 02b2 013B     		subs	r3, r3, #1
 509 02b4 9AB2     		uxth	r2, r3
 510 02b6 FB68     		ldr	r3, [r7, #12]
 511 02b8 DA86     		strh	r2, [r3, #54]	@ movhi
 403:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 404:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       while(hspi->TxXferCount > 0)
 512              		.loc 1 404 0
 513 02ba 1BE0     		b	.L25
 514              	.L27:
 405:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
 406:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         /* Wait until TXE flag is set to send data */
 407:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_TXE, RESET, Timeout) != HAL_OK)
 515              		.loc 1 407 0
 516 02bc F868     		ldr	r0, [r7, #12]
 517 02be 0221     		movs	r1, #2
 518 02c0 0022     		movs	r2, #0
 519 02c2 3B68     		ldr	r3, [r7]
 520 02c4 01F094FC 		bl	SPI_WaitOnFlagUntilTimeout
 521 02c8 0346     		mov	r3, r0
 522 02ca 002B     		cmp	r3, #0
 523 02cc 01D0     		beq	.L26
 408:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         { 
 409:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           return HAL_TIMEOUT;
 524              		.loc 1 409 0
 525 02ce 0323     		movs	r3, #3
 526 02d0 60E0     		b	.L14
 527              	.L26:
 410:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         }
 411:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t*)hspi->pTxBuffPtr);
 528              		.loc 1 411 0
 529 02d2 FB68     		ldr	r3, [r7, #12]
 530 02d4 1B68     		ldr	r3, [r3]
 531 02d6 FA68     		ldr	r2, [r7, #12]
 532 02d8 126B     		ldr	r2, [r2, #48]
 533 02da 1288     		ldrh	r2, [r2]
 534 02dc DA60     		str	r2, [r3, #12]
 412:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->pTxBuffPtr+=2;
 535              		.loc 1 412 0
 536 02de FB68     		ldr	r3, [r7, #12]
 537 02e0 1B6B     		ldr	r3, [r3, #48]
 538 02e2 9A1C     		adds	r2, r3, #2
 539 02e4 FB68     		ldr	r3, [r7, #12]
 540 02e6 1A63     		str	r2, [r3, #48]
 413:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->TxXferCount--;
 541              		.loc 1 413 0
 542 02e8 FB68     		ldr	r3, [r7, #12]
 543 02ea DB8E     		ldrh	r3, [r3, #54]
 544 02ec 013B     		subs	r3, r3, #1
 545 02ee 9AB2     		uxth	r2, r3
 546 02f0 FB68     		ldr	r3, [r7, #12]
 547 02f2 DA86     		strh	r2, [r3, #54]	@ movhi
 548              	.L25:
 404:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
 549              		.loc 1 404 0 discriminator 1
 550 02f4 FB68     		ldr	r3, [r7, #12]
 551 02f6 DB8E     		ldrh	r3, [r3, #54]
 552 02f8 002B     		cmp	r3, #0
 553 02fa DFD1     		bne	.L27
 414:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       }
 415:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Enable CRC Transmission */
 416:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED) 
 554              		.loc 1 416 0
 555 02fc FB68     		ldr	r3, [r7, #12]
 556 02fe 9B6A     		ldr	r3, [r3, #40]
 557 0300 B3F5005F 		cmp	r3, #8192
 558 0304 07D1     		bne	.L24
 417:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
 418:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->Instance->CR1 |= SPI_CR1_CRCNEXT;
 559              		.loc 1 418 0
 560 0306 FB68     		ldr	r3, [r7, #12]
 561 0308 1B68     		ldr	r3, [r3]
 562 030a FA68     		ldr	r2, [r7, #12]
 563 030c 1268     		ldr	r2, [r2]
 564 030e 1268     		ldr	r2, [r2]
 565 0310 42F48052 		orr	r2, r2, #4096
 566 0314 1A60     		str	r2, [r3]
 567              	.L24:
 419:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       }
 420:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 421:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 422:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Wait until TXE flag is set to send data */
 423:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_TXE, RESET, Timeout) != HAL_OK)
 568              		.loc 1 423 0
 569 0316 F868     		ldr	r0, [r7, #12]
 570 0318 0221     		movs	r1, #2
 571 031a 0022     		movs	r2, #0
 572 031c 3B68     		ldr	r3, [r7]
 573 031e 01F067FC 		bl	SPI_WaitOnFlagUntilTimeout
 574 0322 0346     		mov	r3, r0
 575 0324 002B     		cmp	r3, #0
 576 0326 0BD0     		beq	.L28
 424:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 425:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->ErrorCode |= HAL_SPI_ERROR_FLAG;
 577              		.loc 1 425 0
 578 0328 FB68     		ldr	r3, [r7, #12]
 579 032a 93F85230 		ldrb	r3, [r3, #82]
 580 032e DBB2     		uxtb	r3, r3
 581 0330 43F02003 		orr	r3, r3, #32
 582 0334 DAB2     		uxtb	r2, r3
 583 0336 FB68     		ldr	r3, [r7, #12]
 584 0338 83F85220 		strb	r2, [r3, #82]
 426:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       return HAL_TIMEOUT;
 585              		.loc 1 426 0
 586 033c 0323     		movs	r3, #3
 587 033e 29E0     		b	.L14
 588              	.L28:
 427:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 428:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 429:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Wait until Busy flag is reset before disabling SPI */
 430:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_BSY, SET, Timeout) != HAL_OK)
 589              		.loc 1 430 0
 590 0340 F868     		ldr	r0, [r7, #12]
 591 0342 8021     		movs	r1, #128
 592 0344 0122     		movs	r2, #1
 593 0346 3B68     		ldr	r3, [r7]
 594 0348 01F052FC 		bl	SPI_WaitOnFlagUntilTimeout
 595 034c 0346     		mov	r3, r0
 596 034e 002B     		cmp	r3, #0
 597 0350 0BD0     		beq	.L29
 431:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     { 
 432:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->ErrorCode |= HAL_SPI_ERROR_FLAG;
 598              		.loc 1 432 0
 599 0352 FB68     		ldr	r3, [r7, #12]
 600 0354 93F85230 		ldrb	r3, [r3, #82]
 601 0358 DBB2     		uxtb	r3, r3
 602 035a 43F02003 		orr	r3, r3, #32
 603 035e DAB2     		uxtb	r2, r3
 604 0360 FB68     		ldr	r3, [r7, #12]
 605 0362 83F85220 		strb	r2, [r3, #82]
 433:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       return HAL_TIMEOUT;
 606              		.loc 1 433 0
 607 0366 0323     		movs	r3, #3
 608 0368 14E0     		b	.L14
 609              	.L29:
 434:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 435:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****  
 436:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Clear OVERUN flag in 2 Lines communication mode because received is not read */
 437:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_2LINES)
 610              		.loc 1 437 0
 611 036a FB68     		ldr	r3, [r7, #12]
 612 036c 9B68     		ldr	r3, [r3, #8]
 613 036e 002B     		cmp	r3, #0
 614 0370 05D1     		bne	.L30
 438:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 439:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
 615              		.loc 1 439 0
 616 0372 FB68     		ldr	r3, [r7, #12]
 617 0374 1B68     		ldr	r3, [r3]
 618 0376 DB68     		ldr	r3, [r3, #12]
 619 0378 FB68     		ldr	r3, [r7, #12]
 620 037a 1B68     		ldr	r3, [r3]
 621 037c 9B68     		ldr	r3, [r3, #8]
 622              	.L30:
 440:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 441:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 442:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY; 
 623              		.loc 1 442 0
 624 037e FB68     		ldr	r3, [r7, #12]
 625 0380 0122     		movs	r2, #1
 626 0382 83F85120 		strb	r2, [r3, #81]
 443:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 444:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Process Unlocked */
 445:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 627              		.loc 1 445 0
 628 0386 FB68     		ldr	r3, [r7, #12]
 629 0388 0022     		movs	r2, #0
 630 038a 83F85020 		strb	r2, [r3, #80]
 446:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 447:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     return HAL_OK;
 631              		.loc 1 447 0
 632 038e 0023     		movs	r3, #0
 633 0390 00E0     		b	.L14
 634              	.L11:
 448:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
 449:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   else
 450:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
 451:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     return HAL_BUSY;
 635              		.loc 1 451 0
 636 0392 0223     		movs	r3, #2
 637              	.L14:
 452:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
 453:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 638              		.loc 1 453 0
 639 0394 1846     		mov	r0, r3
 640 0396 1037     		adds	r7, r7, #16
 641 0398 BD46     		mov	sp, r7
 642              		@ sp needed
 643 039a 80BD     		pop	{r7, pc}
 644              		.cfi_endproc
 645              	.LFE59:
 647              		.align	2
 648              		.global	HAL_SPI_Receive
 649              		.thumb
 650              		.thumb_func
 652              	HAL_SPI_Receive:
 653              	.LFB60:
 454:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 455:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
 456:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief  Receive an amount of data in blocking mode 
 457:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  hspi: SPI handle
 458:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  pData: pointer to data buffer
 459:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  Size: amount of data to be sent
 460:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  Timeout: Timeout duration
 461:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval HAL status
 462:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
 463:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t 
 464:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 654              		.loc 1 464 0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 24
 657              		@ frame_needed = 1, uses_anonymous_args = 0
 658 039c 80B5     		push	{r7, lr}
 659              		.cfi_def_cfa_offset 8
 660              		.cfi_offset 7, -8
 661              		.cfi_offset 14, -4
 662 039e 88B0     		sub	sp, sp, #32
 663              		.cfi_def_cfa_offset 40
 664 03a0 02AF     		add	r7, sp, #8
 665              		.cfi_def_cfa 7, 32
 666 03a2 F860     		str	r0, [r7, #12]
 667 03a4 B960     		str	r1, [r7, #8]
 668 03a6 3B60     		str	r3, [r7]
 669 03a8 1346     		mov	r3, r2	@ movhi
 670 03aa FB80     		strh	r3, [r7, #6]	@ movhi
 465:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   __IO uint16_t tmpreg;
 466:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   uint32_t tmp = 0;
 671              		.loc 1 466 0
 672 03ac 0023     		movs	r3, #0
 673 03ae 7B61     		str	r3, [r7, #20]
 467:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 468:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_READY)
 674              		.loc 1 468 0
 675 03b0 FB68     		ldr	r3, [r7, #12]
 676 03b2 93F85130 		ldrb	r3, [r3, #81]
 677 03b6 DBB2     		uxtb	r3, r3
 678 03b8 012B     		cmp	r3, #1
 679 03ba 40F07881 		bne	.L32
 469:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
 470:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if((pData == NULL ) || (Size == 0)) 
 680              		.loc 1 470 0
 681 03be BB68     		ldr	r3, [r7, #8]
 682 03c0 002B     		cmp	r3, #0
 683 03c2 02D0     		beq	.L33
 684              		.loc 1 470 0 is_stmt 0 discriminator 1
 685 03c4 FB88     		ldrh	r3, [r7, #6]
 686 03c6 002B     		cmp	r3, #0
 687 03c8 01D1     		bne	.L34
 688              	.L33:
 471:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 472:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       return  HAL_ERROR;
 689              		.loc 1 472 0 is_stmt 1
 690 03ca 0123     		movs	r3, #1
 691 03cc 70E1     		b	.L35
 692              	.L34:
 473:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 474:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 475:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Process Locked */
 476:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_LOCK(hspi);
 693              		.loc 1 476 0
 694 03ce FB68     		ldr	r3, [r7, #12]
 695 03d0 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 696 03d4 012B     		cmp	r3, #1
 697 03d6 01D1     		bne	.L36
 698              		.loc 1 476 0 is_stmt 0 discriminator 1
 699 03d8 0223     		movs	r3, #2
 700 03da 69E1     		b	.L35
 701              	.L36:
 702              		.loc 1 476 0 discriminator 2
 703 03dc FB68     		ldr	r3, [r7, #12]
 704 03de 0122     		movs	r2, #1
 705 03e0 83F85020 		strb	r2, [r3, #80]
 477:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 478:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Configure communication */
 479:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->State       = HAL_SPI_STATE_BUSY_RX;
 706              		.loc 1 479 0 is_stmt 1 discriminator 2
 707 03e4 FB68     		ldr	r3, [r7, #12]
 708 03e6 2222     		movs	r2, #34
 709 03e8 83F85120 		strb	r2, [r3, #81]
 480:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 710              		.loc 1 480 0 discriminator 2
 711 03ec FB68     		ldr	r3, [r7, #12]
 712 03ee 0022     		movs	r2, #0
 713 03f0 83F85220 		strb	r2, [r3, #82]
 481:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 482:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->pRxBuffPtr  = pData;
 714              		.loc 1 482 0 discriminator 2
 715 03f4 FB68     		ldr	r3, [r7, #12]
 716 03f6 BA68     		ldr	r2, [r7, #8]
 717 03f8 9A63     		str	r2, [r3, #56]
 483:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxXferSize  = Size;
 718              		.loc 1 483 0 discriminator 2
 719 03fa FB68     		ldr	r3, [r7, #12]
 720 03fc FA88     		ldrh	r2, [r7, #6]	@ movhi
 721 03fe 9A87     		strh	r2, [r3, #60]	@ movhi
 484:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxXferCount = Size;
 722              		.loc 1 484 0 discriminator 2
 723 0400 FB68     		ldr	r3, [r7, #12]
 724 0402 FA88     		ldrh	r2, [r7, #6]	@ movhi
 725 0404 DA87     		strh	r2, [r3, #62]	@ movhi
 485:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 486:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /*Init field not used in handle to zero */
 487:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxISR = 0;
 726              		.loc 1 487 0 discriminator 2
 727 0406 FB68     		ldr	r3, [r7, #12]
 728 0408 0022     		movs	r2, #0
 729 040a 9A64     		str	r2, [r3, #72]
 488:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxISR = 0;
 730              		.loc 1 488 0 discriminator 2
 731 040c FB68     		ldr	r3, [r7, #12]
 732 040e 0022     		movs	r2, #0
 733 0410 DA64     		str	r2, [r3, #76]
 489:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxXferSize   = 0;
 734              		.loc 1 489 0 discriminator 2
 735 0412 FB68     		ldr	r3, [r7, #12]
 736 0414 0022     		movs	r2, #0
 737 0416 9A86     		strh	r2, [r3, #52]	@ movhi
 490:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxXferCount  = 0;
 738              		.loc 1 490 0 discriminator 2
 739 0418 FB68     		ldr	r3, [r7, #12]
 740 041a 0022     		movs	r2, #0
 741 041c DA86     		strh	r2, [r3, #54]	@ movhi
 491:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 492:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Configure communication direction : 1Line */
 493:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
 742              		.loc 1 493 0 discriminator 2
 743 041e FB68     		ldr	r3, [r7, #12]
 744 0420 9B68     		ldr	r3, [r3, #8]
 745 0422 B3F5004F 		cmp	r3, #32768
 746 0426 07D1     		bne	.L37
 494:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 495:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_1LINE_RX(hspi);
 747              		.loc 1 495 0
 748 0428 FB68     		ldr	r3, [r7, #12]
 749 042a 1B68     		ldr	r3, [r3]
 750 042c FA68     		ldr	r2, [r7, #12]
 751 042e 1268     		ldr	r2, [r2]
 752 0430 1268     		ldr	r2, [r2]
 753 0432 22F48042 		bic	r2, r2, #16384
 754 0436 1A60     		str	r2, [r3]
 755              	.L37:
 496:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 497:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 498:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Reset CRC Calculation */
 499:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED)
 756              		.loc 1 499 0
 757 0438 FB68     		ldr	r3, [r7, #12]
 758 043a 9B6A     		ldr	r3, [r3, #40]
 759 043c B3F5005F 		cmp	r3, #8192
 760 0440 0FD1     		bne	.L38
 500:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 501:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_RESET_CRC(hspi);
 761              		.loc 1 501 0
 762 0442 FB68     		ldr	r3, [r7, #12]
 763 0444 1B68     		ldr	r3, [r3]
 764 0446 FA68     		ldr	r2, [r7, #12]
 765 0448 1268     		ldr	r2, [r2]
 766 044a 1268     		ldr	r2, [r2]
 767 044c 22F40052 		bic	r2, r2, #8192
 768 0450 1A60     		str	r2, [r3]
 769 0452 FB68     		ldr	r3, [r7, #12]
 770 0454 1B68     		ldr	r3, [r3]
 771 0456 FA68     		ldr	r2, [r7, #12]
 772 0458 1268     		ldr	r2, [r2]
 773 045a 1268     		ldr	r2, [r2]
 774 045c 42F40052 		orr	r2, r2, #8192
 775 0460 1A60     		str	r2, [r3]
 776              	.L38:
 502:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 503:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     
 504:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 777              		.loc 1 504 0
 778 0462 FB68     		ldr	r3, [r7, #12]
 779 0464 5B68     		ldr	r3, [r3, #4]
 780 0466 B3F5827F 		cmp	r3, #260
 781 046a 11D1     		bne	.L39
 782              		.loc 1 504 0 is_stmt 0 discriminator 1
 783 046c FB68     		ldr	r3, [r7, #12]
 784 046e 9B68     		ldr	r3, [r3, #8]
 785 0470 002B     		cmp	r3, #0
 786 0472 0DD1     		bne	.L39
 505:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 506:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Process Unlocked */
 507:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
 787              		.loc 1 507 0 is_stmt 1
 788 0474 FB68     		ldr	r3, [r7, #12]
 789 0476 0022     		movs	r2, #0
 790 0478 83F85020 		strb	r2, [r3, #80]
 508:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 509:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK lin
 510:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 791              		.loc 1 510 0
 792 047c FB88     		ldrh	r3, [r7, #6]
 793 047e 3A68     		ldr	r2, [r7]
 794 0480 0092     		str	r2, [sp]
 795 0482 F868     		ldr	r0, [r7, #12]
 796 0484 B968     		ldr	r1, [r7, #8]
 797 0486 BA68     		ldr	r2, [r7, #8]
 798 0488 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 799 048c 0346     		mov	r3, r0
 800 048e 0FE1     		b	.L35
 801              	.L39:
 511:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 512:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 513:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Check if the SPI is already enabled */ 
 514:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
 802              		.loc 1 514 0
 803 0490 FB68     		ldr	r3, [r7, #12]
 804 0492 1B68     		ldr	r3, [r3]
 805 0494 1B68     		ldr	r3, [r3]
 806 0496 03F04003 		and	r3, r3, #64
 807 049a 002B     		cmp	r3, #0
 808 049c 07D1     		bne	.L40
 515:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 516:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Enable SPI peripheral */
 517:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
 809              		.loc 1 517 0
 810 049e FB68     		ldr	r3, [r7, #12]
 811 04a0 1B68     		ldr	r3, [r3]
 812 04a2 FA68     		ldr	r2, [r7, #12]
 813 04a4 1268     		ldr	r2, [r2]
 814 04a6 1268     		ldr	r2, [r2]
 815 04a8 42F04002 		orr	r2, r2, #64
 816 04ac 1A60     		str	r2, [r3]
 817              	.L40:
 518:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 519:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 520:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Receive data in 8 Bit mode */
 521:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 818              		.loc 1 521 0
 819 04ae FB68     		ldr	r3, [r7, #12]
 820 04b0 DB68     		ldr	r3, [r3, #12]
 821 04b2 002B     		cmp	r3, #0
 822 04b4 2DD1     		bne	.L41
 522:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 523:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       while(hspi->RxXferCount > 1)
 823              		.loc 1 523 0
 824 04b6 1AE0     		b	.L42
 825              	.L44:
 524:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
 525:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         /* Wait until RXNE flag is set */
 526:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 826              		.loc 1 526 0
 827 04b8 F868     		ldr	r0, [r7, #12]
 828 04ba 0121     		movs	r1, #1
 829 04bc 0022     		movs	r2, #0
 830 04be 3B68     		ldr	r3, [r7]
 831 04c0 01F096FB 		bl	SPI_WaitOnFlagUntilTimeout
 832 04c4 0346     		mov	r3, r0
 833 04c6 002B     		cmp	r3, #0
 834 04c8 01D0     		beq	.L43
 527:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         { 
 528:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           return HAL_TIMEOUT;
 835              		.loc 1 528 0
 836 04ca 0323     		movs	r3, #3
 837 04cc F0E0     		b	.L35
 838              	.L43:
 529:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         }
 530:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 531:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (*hspi->pRxBuffPtr++) = hspi->Instance->DR;
 839              		.loc 1 531 0
 840 04ce FB68     		ldr	r3, [r7, #12]
 841 04d0 9B6B     		ldr	r3, [r3, #56]
 842 04d2 591C     		adds	r1, r3, #1
 843 04d4 FA68     		ldr	r2, [r7, #12]
 844 04d6 9163     		str	r1, [r2, #56]
 845 04d8 FA68     		ldr	r2, [r7, #12]
 846 04da 1268     		ldr	r2, [r2]
 847 04dc D268     		ldr	r2, [r2, #12]
 848 04de D2B2     		uxtb	r2, r2
 849 04e0 1A70     		strb	r2, [r3]
 532:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->RxXferCount--;
 850              		.loc 1 532 0
 851 04e2 FB68     		ldr	r3, [r7, #12]
 852 04e4 DB8F     		ldrh	r3, [r3, #62]
 853 04e6 013B     		subs	r3, r3, #1
 854 04e8 9AB2     		uxth	r2, r3
 855 04ea FB68     		ldr	r3, [r7, #12]
 856 04ec DA87     		strh	r2, [r3, #62]	@ movhi
 857              	.L42:
 523:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
 858              		.loc 1 523 0 discriminator 1
 859 04ee FB68     		ldr	r3, [r7, #12]
 860 04f0 DB8F     		ldrh	r3, [r3, #62]
 861 04f2 012B     		cmp	r3, #1
 862 04f4 E0D8     		bhi	.L44
 533:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       }
 534:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Enable CRC Transmission */
 535:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED) 
 863              		.loc 1 535 0
 864 04f6 FB68     		ldr	r3, [r7, #12]
 865 04f8 9B6A     		ldr	r3, [r3, #40]
 866 04fa B3F5005F 		cmp	r3, #8192
 867 04fe 37D1     		bne	.L46
 536:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
 537:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->Instance->CR1 |= SPI_CR1_CRCNEXT;
 868              		.loc 1 537 0
 869 0500 FB68     		ldr	r3, [r7, #12]
 870 0502 1B68     		ldr	r3, [r3]
 871 0504 FA68     		ldr	r2, [r7, #12]
 872 0506 1268     		ldr	r2, [r2]
 873 0508 1268     		ldr	r2, [r2]
 874 050a 42F48052 		orr	r2, r2, #4096
 875 050e 1A60     		str	r2, [r3]
 876 0510 2EE0     		b	.L46
 877              	.L41:
 538:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       }
 539:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 540:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Receive data in 16 Bit mode */
 541:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     else
 542:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 543:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       while(hspi->RxXferCount > 1)
 878              		.loc 1 543 0
 879 0512 1CE0     		b	.L47
 880              	.L49:
 544:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
 545:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         /* Wait until RXNE flag is set to read data */
 546:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 881              		.loc 1 546 0
 882 0514 F868     		ldr	r0, [r7, #12]
 883 0516 0121     		movs	r1, #1
 884 0518 0022     		movs	r2, #0
 885 051a 3B68     		ldr	r3, [r7]
 886 051c 01F068FB 		bl	SPI_WaitOnFlagUntilTimeout
 887 0520 0346     		mov	r3, r0
 888 0522 002B     		cmp	r3, #0
 889 0524 01D0     		beq	.L48
 547:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         { 
 548:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           return HAL_TIMEOUT;
 890              		.loc 1 548 0
 891 0526 0323     		movs	r3, #3
 892 0528 C2E0     		b	.L35
 893              	.L48:
 549:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         }
 550:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 551:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         *((uint16_t*)hspi->pRxBuffPtr) = hspi->Instance->DR;
 894              		.loc 1 551 0
 895 052a FB68     		ldr	r3, [r7, #12]
 896 052c 9B6B     		ldr	r3, [r3, #56]
 897 052e FA68     		ldr	r2, [r7, #12]
 898 0530 1268     		ldr	r2, [r2]
 899 0532 D268     		ldr	r2, [r2, #12]
 900 0534 92B2     		uxth	r2, r2
 901 0536 1A80     		strh	r2, [r3]	@ movhi
 552:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->pRxBuffPtr+=2;
 902              		.loc 1 552 0
 903 0538 FB68     		ldr	r3, [r7, #12]
 904 053a 9B6B     		ldr	r3, [r3, #56]
 905 053c 9A1C     		adds	r2, r3, #2
 906 053e FB68     		ldr	r3, [r7, #12]
 907 0540 9A63     		str	r2, [r3, #56]
 553:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->RxXferCount--;
 908              		.loc 1 553 0
 909 0542 FB68     		ldr	r3, [r7, #12]
 910 0544 DB8F     		ldrh	r3, [r3, #62]
 911 0546 013B     		subs	r3, r3, #1
 912 0548 9AB2     		uxth	r2, r3
 913 054a FB68     		ldr	r3, [r7, #12]
 914 054c DA87     		strh	r2, [r3, #62]	@ movhi
 915              	.L47:
 543:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
 916              		.loc 1 543 0 discriminator 1
 917 054e FB68     		ldr	r3, [r7, #12]
 918 0550 DB8F     		ldrh	r3, [r3, #62]
 919 0552 012B     		cmp	r3, #1
 920 0554 DED8     		bhi	.L49
 554:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       }
 555:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Enable CRC Transmission */
 556:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED) 
 921              		.loc 1 556 0
 922 0556 FB68     		ldr	r3, [r7, #12]
 923 0558 9B6A     		ldr	r3, [r3, #40]
 924 055a B3F5005F 		cmp	r3, #8192
 925 055e 07D1     		bne	.L46
 557:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
 558:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->Instance->CR1 |= SPI_CR1_CRCNEXT;
 926              		.loc 1 558 0
 927 0560 FB68     		ldr	r3, [r7, #12]
 928 0562 1B68     		ldr	r3, [r3]
 929 0564 FA68     		ldr	r2, [r7, #12]
 930 0566 1268     		ldr	r2, [r2]
 931 0568 1268     		ldr	r2, [r2]
 932 056a 42F48052 		orr	r2, r2, #4096
 933 056e 1A60     		str	r2, [r3]
 934              	.L46:
 559:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       }
 560:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 561:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 562:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Wait until RXNE flag is set */
 563:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 935              		.loc 1 563 0
 936 0570 F868     		ldr	r0, [r7, #12]
 937 0572 0121     		movs	r1, #1
 938 0574 0022     		movs	r2, #0
 939 0576 3B68     		ldr	r3, [r7]
 940 0578 01F03AFB 		bl	SPI_WaitOnFlagUntilTimeout
 941 057c 0346     		mov	r3, r0
 942 057e 002B     		cmp	r3, #0
 943 0580 01D0     		beq	.L50
 564:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     { 
 565:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       return HAL_TIMEOUT;
 944              		.loc 1 565 0
 945 0582 0323     		movs	r3, #3
 946 0584 94E0     		b	.L35
 947              	.L50:
 566:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 567:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 568:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Receive last data in 8 Bit mode */
 569:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 948              		.loc 1 569 0
 949 0586 FB68     		ldr	r3, [r7, #12]
 950 0588 DB68     		ldr	r3, [r3, #12]
 951 058a 002B     		cmp	r3, #0
 952 058c 0AD1     		bne	.L51
 570:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 571:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       (*hspi->pRxBuffPtr++) = hspi->Instance->DR;
 953              		.loc 1 571 0
 954 058e FB68     		ldr	r3, [r7, #12]
 955 0590 9B6B     		ldr	r3, [r3, #56]
 956 0592 591C     		adds	r1, r3, #1
 957 0594 FA68     		ldr	r2, [r7, #12]
 958 0596 9163     		str	r1, [r2, #56]
 959 0598 FA68     		ldr	r2, [r7, #12]
 960 059a 1268     		ldr	r2, [r2]
 961 059c D268     		ldr	r2, [r2, #12]
 962 059e D2B2     		uxtb	r2, r2
 963 05a0 1A70     		strb	r2, [r3]
 964 05a2 0BE0     		b	.L52
 965              	.L51:
 572:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 573:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Receive last data in 16 Bit mode */
 574:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     else
 575:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 576:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       *((uint16_t*)hspi->pRxBuffPtr) = hspi->Instance->DR;
 966              		.loc 1 576 0
 967 05a4 FB68     		ldr	r3, [r7, #12]
 968 05a6 9B6B     		ldr	r3, [r3, #56]
 969 05a8 FA68     		ldr	r2, [r7, #12]
 970 05aa 1268     		ldr	r2, [r2]
 971 05ac D268     		ldr	r2, [r2, #12]
 972 05ae 92B2     		uxth	r2, r2
 973 05b0 1A80     		strh	r2, [r3]	@ movhi
 577:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->pRxBuffPtr+=2;
 974              		.loc 1 577 0
 975 05b2 FB68     		ldr	r3, [r7, #12]
 976 05b4 9B6B     		ldr	r3, [r3, #56]
 977 05b6 9A1C     		adds	r2, r3, #2
 978 05b8 FB68     		ldr	r3, [r7, #12]
 979 05ba 9A63     		str	r2, [r3, #56]
 980              	.L52:
 578:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 579:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxXferCount--;
 981              		.loc 1 579 0
 982 05bc FB68     		ldr	r3, [r7, #12]
 983 05be DB8F     		ldrh	r3, [r3, #62]
 984 05c0 013B     		subs	r3, r3, #1
 985 05c2 9AB2     		uxth	r2, r3
 986 05c4 FB68     		ldr	r3, [r7, #12]
 987 05c6 DA87     		strh	r2, [r3, #62]	@ movhi
 580:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 581:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Wait until RXNE flag is set: CRC Received */
 582:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED)
 988              		.loc 1 582 0
 989 05c8 FB68     		ldr	r3, [r7, #12]
 990 05ca 9B6A     		ldr	r3, [r3, #40]
 991 05cc B3F5005F 		cmp	r3, #8192
 992 05d0 19D1     		bne	.L53
 583:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 584:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 993              		.loc 1 584 0
 994 05d2 F868     		ldr	r0, [r7, #12]
 995 05d4 0121     		movs	r1, #1
 996 05d6 0022     		movs	r2, #0
 997 05d8 3B68     		ldr	r3, [r7]
 998 05da 01F009FB 		bl	SPI_WaitOnFlagUntilTimeout
 999 05de 0346     		mov	r3, r0
 1000 05e0 002B     		cmp	r3, #0
 1001 05e2 0BD0     		beq	.L54
 585:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
 586:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->ErrorCode |= HAL_SPI_ERROR_CRC;
 1002              		.loc 1 586 0
 1003 05e4 FB68     		ldr	r3, [r7, #12]
 1004 05e6 93F85230 		ldrb	r3, [r3, #82]
 1005 05ea DBB2     		uxtb	r3, r3
 1006 05ec 43F00203 		orr	r3, r3, #2
 1007 05f0 DAB2     		uxtb	r2, r3
 1008 05f2 FB68     		ldr	r3, [r7, #12]
 1009 05f4 83F85220 		strb	r2, [r3, #82]
 587:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         return HAL_TIMEOUT;
 1010              		.loc 1 587 0
 1011 05f8 0323     		movs	r3, #3
 1012 05fa 59E0     		b	.L35
 1013              	.L54:
 588:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       }
 589:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 590:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Read CRC to Flush RXNE flag */
 591:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       tmpreg = hspi->Instance->DR;
 1014              		.loc 1 591 0
 1015 05fc FB68     		ldr	r3, [r7, #12]
 1016 05fe 1B68     		ldr	r3, [r3]
 1017 0600 DB68     		ldr	r3, [r3, #12]
 1018 0602 9BB2     		uxth	r3, r3
 1019 0604 7B82     		strh	r3, [r7, #18]	@ movhi
 1020              	.L53:
 592:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 593:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     
 594:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if((hspi->Init.Mode == SPI_MODE_MASTER)&&((hspi->Init.Direction == SPI_DIRECTION_1LINE)||(hspi-
 1021              		.loc 1 594 0
 1022 0606 FB68     		ldr	r3, [r7, #12]
 1023 0608 5B68     		ldr	r3, [r3, #4]
 1024 060a B3F5827F 		cmp	r3, #260
 1025 060e 11D1     		bne	.L55
 1026              		.loc 1 594 0 is_stmt 0 discriminator 1
 1027 0610 FB68     		ldr	r3, [r7, #12]
 1028 0612 9B68     		ldr	r3, [r3, #8]
 1029 0614 B3F5004F 		cmp	r3, #32768
 1030 0618 04D0     		beq	.L56
 1031 061a FB68     		ldr	r3, [r7, #12]
 1032 061c 9B68     		ldr	r3, [r3, #8]
 1033 061e B3F5806F 		cmp	r3, #1024
 1034 0622 07D1     		bne	.L55
 1035              	.L56:
 595:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 596:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Disable SPI peripheral */
 597:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
 1036              		.loc 1 597 0 is_stmt 1
 1037 0624 FB68     		ldr	r3, [r7, #12]
 1038 0626 1B68     		ldr	r3, [r3]
 1039 0628 FA68     		ldr	r2, [r7, #12]
 1040 062a 1268     		ldr	r2, [r2]
 1041 062c 1268     		ldr	r2, [r2]
 1042 062e 22F04002 		bic	r2, r2, #64
 1043 0632 1A60     		str	r2, [r3]
 1044              	.L55:
 598:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 599:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 600:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 1045              		.loc 1 600 0
 1046 0634 FB68     		ldr	r3, [r7, #12]
 1047 0636 0122     		movs	r2, #1
 1048 0638 83F85120 		strb	r2, [r3, #81]
 601:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 602:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     tmp = __HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR);
 1049              		.loc 1 602 0
 1050 063c FB68     		ldr	r3, [r7, #12]
 1051 063e 1B68     		ldr	r3, [r3]
 1052 0640 9B68     		ldr	r3, [r3, #8]
 1053 0642 03F01003 		and	r3, r3, #16
 1054 0646 002B     		cmp	r3, #0
 1055 0648 0CBF     		ite	eq
 1056 064a 0023     		moveq	r3, #0
 1057 064c 0123     		movne	r3, #1
 1058 064e DBB2     		uxtb	r3, r3
 1059 0650 7B61     		str	r3, [r7, #20]
 603:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Check if CRC error occurred */
 604:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if((hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED) && (tmp != RESET))
 1060              		.loc 1 604 0
 1061 0652 FB68     		ldr	r3, [r7, #12]
 1062 0654 9B6A     		ldr	r3, [r3, #40]
 1063 0656 B3F5005F 		cmp	r3, #8192
 1064 065a 22D1     		bne	.L57
 1065              		.loc 1 604 0 is_stmt 0 discriminator 1
 1066 065c 7B69     		ldr	r3, [r7, #20]
 1067 065e 002B     		cmp	r3, #0
 1068 0660 1FD0     		beq	.L57
 605:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {  
 606:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->ErrorCode |= HAL_SPI_ERROR_CRC;
 1069              		.loc 1 606 0 is_stmt 1
 1070 0662 FB68     		ldr	r3, [r7, #12]
 1071 0664 93F85230 		ldrb	r3, [r3, #82]
 1072 0668 DBB2     		uxtb	r3, r3
 1073 066a 43F00203 		orr	r3, r3, #2
 1074 066e DAB2     		uxtb	r2, r3
 1075 0670 FB68     		ldr	r3, [r7, #12]
 1076 0672 83F85220 		strb	r2, [r3, #82]
 607:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 608:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Reset CRC Calculation */
 609:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_RESET_CRC(hspi);
 1077              		.loc 1 609 0
 1078 0676 FB68     		ldr	r3, [r7, #12]
 1079 0678 1B68     		ldr	r3, [r3]
 1080 067a FA68     		ldr	r2, [r7, #12]
 1081 067c 1268     		ldr	r2, [r2]
 1082 067e 1268     		ldr	r2, [r2]
 1083 0680 22F40052 		bic	r2, r2, #8192
 1084 0684 1A60     		str	r2, [r3]
 1085 0686 FB68     		ldr	r3, [r7, #12]
 1086 0688 1B68     		ldr	r3, [r3]
 1087 068a FA68     		ldr	r2, [r7, #12]
 1088 068c 1268     		ldr	r2, [r2]
 1089 068e 1268     		ldr	r2, [r2]
 1090 0690 42F40052 		orr	r2, r2, #8192
 1091 0694 1A60     		str	r2, [r3]
 610:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 611:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Process Unlocked */
 612:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
 1092              		.loc 1 612 0
 1093 0696 FB68     		ldr	r3, [r7, #12]
 1094 0698 0022     		movs	r2, #0
 1095 069a 83F85020 		strb	r2, [r3, #80]
 613:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 614:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       return HAL_ERROR; 
 1096              		.loc 1 614 0
 1097 069e 0123     		movs	r3, #1
 1098 06a0 06E0     		b	.L35
 1099              	.L57:
 615:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 616:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 617:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Process Unlocked */
 618:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 1100              		.loc 1 618 0
 1101 06a2 FB68     		ldr	r3, [r7, #12]
 1102 06a4 0022     		movs	r2, #0
 1103 06a6 83F85020 		strb	r2, [r3, #80]
 619:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 620:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     return HAL_OK;
 1104              		.loc 1 620 0
 1105 06aa 0023     		movs	r3, #0
 1106 06ac 00E0     		b	.L35
 1107              	.L32:
 621:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
 622:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   else
 623:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
 624:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     return HAL_BUSY;
 1108              		.loc 1 624 0
 1109 06ae 0223     		movs	r3, #2
 1110              	.L35:
 625:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
 626:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 1111              		.loc 1 626 0
 1112 06b0 1846     		mov	r0, r3
 1113 06b2 1837     		adds	r7, r7, #24
 1114 06b4 BD46     		mov	sp, r7
 1115              		@ sp needed
 1116 06b6 80BD     		pop	{r7, pc}
 1117              		.cfi_endproc
 1118              	.LFE60:
 1120              		.align	2
 1121              		.global	HAL_SPI_TransmitReceive
 1122              		.thumb
 1123              		.thumb_func
 1125              	HAL_SPI_TransmitReceive:
 1126              	.LFB61:
 627:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 628:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
 629:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in blocking mode 
 630:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  hspi: SPI handle
 631:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  pTxData: pointer to transmission data buffer
 632:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  pRxData: pointer to reception data buffer to be
 633:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  Size: amount of data to be sent
 634:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  Timeout: Timeout duration
 635:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval HAL status
 636:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
 637:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxDa
 638:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 1127              		.loc 1 638 0
 1128              		.cfi_startproc
 1129              		@ args = 4, pretend = 0, frame = 24
 1130              		@ frame_needed = 1, uses_anonymous_args = 0
 1131 06b8 80B5     		push	{r7, lr}
 1132              		.cfi_def_cfa_offset 8
 1133              		.cfi_offset 7, -8
 1134              		.cfi_offset 14, -4
 1135 06ba 86B0     		sub	sp, sp, #24
 1136              		.cfi_def_cfa_offset 32
 1137 06bc 00AF     		add	r7, sp, #0
 1138              		.cfi_def_cfa_register 7
 1139 06be F860     		str	r0, [r7, #12]
 1140 06c0 B960     		str	r1, [r7, #8]
 1141 06c2 7A60     		str	r2, [r7, #4]
 1142 06c4 7B80     		strh	r3, [r7, #2]	@ movhi
 639:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   __IO uint16_t tmpreg;
 640:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   uint32_t tmp = 0;
 1143              		.loc 1 640 0
 1144 06c6 0023     		movs	r3, #0
 1145 06c8 7B61     		str	r3, [r7, #20]
 641:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   
 642:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   tmp = hspi->State; 
 1146              		.loc 1 642 0
 1147 06ca FB68     		ldr	r3, [r7, #12]
 1148 06cc 93F85130 		ldrb	r3, [r3, #81]
 1149 06d0 DBB2     		uxtb	r3, r3
 1150 06d2 7B61     		str	r3, [r7, #20]
 643:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if((tmp == HAL_SPI_STATE_READY) || (tmp == HAL_SPI_STATE_BUSY_RX))
 1151              		.loc 1 643 0
 1152 06d4 7B69     		ldr	r3, [r7, #20]
 1153 06d6 012B     		cmp	r3, #1
 1154 06d8 03D0     		beq	.L59
 1155              		.loc 1 643 0 is_stmt 0 discriminator 1
 1156 06da 7B69     		ldr	r3, [r7, #20]
 1157 06dc 222B     		cmp	r3, #34
 1158 06de 40F02882 		bne	.L60
 1159              	.L59:
 644:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
 645:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if((pTxData == NULL ) || (pRxData == NULL ) || (Size == 0))
 1160              		.loc 1 645 0 is_stmt 1
 1161 06e2 BB68     		ldr	r3, [r7, #8]
 1162 06e4 002B     		cmp	r3, #0
 1163 06e6 05D0     		beq	.L61
 1164              		.loc 1 645 0 is_stmt 0 discriminator 1
 1165 06e8 7B68     		ldr	r3, [r7, #4]
 1166 06ea 002B     		cmp	r3, #0
 1167 06ec 02D0     		beq	.L61
 1168 06ee 7B88     		ldrh	r3, [r7, #2]
 1169 06f0 002B     		cmp	r3, #0
 1170 06f2 01D1     		bne	.L62
 1171              	.L61:
 646:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 647:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       return  HAL_ERROR;
 1172              		.loc 1 647 0 is_stmt 1
 1173 06f4 0123     		movs	r3, #1
 1174 06f6 1DE2     		b	.L63
 1175              	.L62:
 648:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 649:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 650:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Check the parameters */
 651:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
 652:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 653:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Process Locked */
 654:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_LOCK(hspi);
 1176              		.loc 1 654 0
 1177 06f8 FB68     		ldr	r3, [r7, #12]
 1178 06fa 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 1179 06fe 012B     		cmp	r3, #1
 1180 0700 01D1     		bne	.L64
 1181              		.loc 1 654 0 is_stmt 0 discriminator 1
 1182 0702 0223     		movs	r3, #2
 1183 0704 16E2     		b	.L63
 1184              	.L64:
 1185              		.loc 1 654 0 discriminator 2
 1186 0706 FB68     		ldr	r3, [r7, #12]
 1187 0708 0122     		movs	r2, #1
 1188 070a 83F85020 		strb	r2, [r3, #80]
 655:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****  
 656:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
 657:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->State == HAL_SPI_STATE_READY)
 1189              		.loc 1 657 0 is_stmt 1 discriminator 2
 1190 070e FB68     		ldr	r3, [r7, #12]
 1191 0710 93F85130 		ldrb	r3, [r3, #81]
 1192 0714 DBB2     		uxtb	r3, r3
 1193 0716 012B     		cmp	r3, #1
 1194 0718 03D1     		bne	.L65
 658:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 659:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 1195              		.loc 1 659 0
 1196 071a FB68     		ldr	r3, [r7, #12]
 1197 071c 3222     		movs	r2, #50
 1198 071e 83F85120 		strb	r2, [r3, #81]
 1199              	.L65:
 660:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 661:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 662:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****      /* Configure communication */   
 663:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1200              		.loc 1 663 0
 1201 0722 FB68     		ldr	r3, [r7, #12]
 1202 0724 0022     		movs	r2, #0
 1203 0726 83F85220 		strb	r2, [r3, #82]
 664:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 665:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->pRxBuffPtr  = pRxData;
 1204              		.loc 1 665 0
 1205 072a FB68     		ldr	r3, [r7, #12]
 1206 072c 7A68     		ldr	r2, [r7, #4]
 1207 072e 9A63     		str	r2, [r3, #56]
 666:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxXferSize  = Size;
 1208              		.loc 1 666 0
 1209 0730 FB68     		ldr	r3, [r7, #12]
 1210 0732 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1211 0734 9A87     		strh	r2, [r3, #60]	@ movhi
 667:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxXferCount = Size;  
 1212              		.loc 1 667 0
 1213 0736 FB68     		ldr	r3, [r7, #12]
 1214 0738 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1215 073a DA87     		strh	r2, [r3, #62]	@ movhi
 668:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     
 669:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->pTxBuffPtr  = pTxData;
 1216              		.loc 1 669 0
 1217 073c FB68     		ldr	r3, [r7, #12]
 1218 073e BA68     		ldr	r2, [r7, #8]
 1219 0740 1A63     		str	r2, [r3, #48]
 670:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxXferSize  = Size; 
 1220              		.loc 1 670 0
 1221 0742 FB68     		ldr	r3, [r7, #12]
 1222 0744 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1223 0746 9A86     		strh	r2, [r3, #52]	@ movhi
 671:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxXferCount = Size;
 1224              		.loc 1 671 0
 1225 0748 FB68     		ldr	r3, [r7, #12]
 1226 074a 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1227 074c DA86     		strh	r2, [r3, #54]	@ movhi
 672:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 673:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /*Init field not used in handle to zero */
 674:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxISR = 0;
 1228              		.loc 1 674 0
 1229 074e FB68     		ldr	r3, [r7, #12]
 1230 0750 0022     		movs	r2, #0
 1231 0752 9A64     		str	r2, [r3, #72]
 675:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxISR = 0;
 1232              		.loc 1 675 0
 1233 0754 FB68     		ldr	r3, [r7, #12]
 1234 0756 0022     		movs	r2, #0
 1235 0758 DA64     		str	r2, [r3, #76]
 676:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 677:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Reset CRC Calculation */
 678:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED)
 1236              		.loc 1 678 0
 1237 075a FB68     		ldr	r3, [r7, #12]
 1238 075c 9B6A     		ldr	r3, [r3, #40]
 1239 075e B3F5005F 		cmp	r3, #8192
 1240 0762 0FD1     		bne	.L66
 679:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 680:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_RESET_CRC(hspi);
 1241              		.loc 1 680 0
 1242 0764 FB68     		ldr	r3, [r7, #12]
 1243 0766 1B68     		ldr	r3, [r3]
 1244 0768 FA68     		ldr	r2, [r7, #12]
 1245 076a 1268     		ldr	r2, [r2]
 1246 076c 1268     		ldr	r2, [r2]
 1247 076e 22F40052 		bic	r2, r2, #8192
 1248 0772 1A60     		str	r2, [r3]
 1249 0774 FB68     		ldr	r3, [r7, #12]
 1250 0776 1B68     		ldr	r3, [r3]
 1251 0778 FA68     		ldr	r2, [r7, #12]
 1252 077a 1268     		ldr	r2, [r2]
 1253 077c 1268     		ldr	r2, [r2]
 1254 077e 42F40052 		orr	r2, r2, #8192
 1255 0782 1A60     		str	r2, [r3]
 1256              	.L66:
 681:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 682:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 683:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Check if the SPI is already enabled */ 
 684:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
 1257              		.loc 1 684 0
 1258 0784 FB68     		ldr	r3, [r7, #12]
 1259 0786 1B68     		ldr	r3, [r3]
 1260 0788 1B68     		ldr	r3, [r3]
 1261 078a 03F04003 		and	r3, r3, #64
 1262 078e 002B     		cmp	r3, #0
 1263 0790 07D1     		bne	.L67
 685:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 686:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Enable SPI peripheral */
 687:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
 1264              		.loc 1 687 0
 1265 0792 FB68     		ldr	r3, [r7, #12]
 1266 0794 1B68     		ldr	r3, [r3]
 1267 0796 FA68     		ldr	r2, [r7, #12]
 1268 0798 1268     		ldr	r2, [r2]
 1269 079a 1268     		ldr	r2, [r2]
 1270 079c 42F04002 		orr	r2, r2, #64
 1271 07a0 1A60     		str	r2, [r3]
 1272              	.L67:
 688:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 689:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 690:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Transmit and Receive data in 16 Bit mode */
 691:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 1273              		.loc 1 691 0
 1274 07a2 FB68     		ldr	r3, [r7, #12]
 1275 07a4 DB68     		ldr	r3, [r3, #12]
 1276 07a6 B3F5006F 		cmp	r3, #2048
 1277 07aa 40F0AD80 		bne	.L68
 692:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 693:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t*)hspi->pTxBuffPtr);
 1278              		.loc 1 693 0
 1279 07ae FB68     		ldr	r3, [r7, #12]
 1280 07b0 1B68     		ldr	r3, [r3]
 1281 07b2 FA68     		ldr	r2, [r7, #12]
 1282 07b4 126B     		ldr	r2, [r2, #48]
 1283 07b6 1288     		ldrh	r2, [r2]
 1284 07b8 DA60     		str	r2, [r3, #12]
 694:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->pTxBuffPtr+=2;
 1285              		.loc 1 694 0
 1286 07ba FB68     		ldr	r3, [r7, #12]
 1287 07bc 1B6B     		ldr	r3, [r3, #48]
 1288 07be 9A1C     		adds	r2, r3, #2
 1289 07c0 FB68     		ldr	r3, [r7, #12]
 1290 07c2 1A63     		str	r2, [r3, #48]
 695:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->TxXferCount--;
 1291              		.loc 1 695 0
 1292 07c4 FB68     		ldr	r3, [r7, #12]
 1293 07c6 DB8E     		ldrh	r3, [r3, #54]
 1294 07c8 013B     		subs	r3, r3, #1
 1295 07ca 9AB2     		uxth	r2, r3
 1296 07cc FB68     		ldr	r3, [r7, #12]
 1297 07ce DA86     		strh	r2, [r3, #54]	@ movhi
 696:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 697:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       if(hspi->TxXferCount == 0)
 1298              		.loc 1 697 0
 1299 07d0 FB68     		ldr	r3, [r7, #12]
 1300 07d2 DB8E     		ldrh	r3, [r3, #54]
 1301 07d4 002B     		cmp	r3, #0
 1302 07d6 2AD1     		bne	.L69
 698:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
 699:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         /* Enable CRC Transmission */
 700:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED)
 1303              		.loc 1 700 0
 1304 07d8 FB68     		ldr	r3, [r7, #12]
 1305 07da 9B6A     		ldr	r3, [r3, #40]
 1306 07dc B3F5005F 		cmp	r3, #8192
 1307 07e0 07D1     		bne	.L70
 701:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         {
 702:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           hspi->Instance->CR1 |= SPI_CR1_CRCNEXT;
 1308              		.loc 1 702 0
 1309 07e2 FB68     		ldr	r3, [r7, #12]
 1310 07e4 1B68     		ldr	r3, [r3]
 1311 07e6 FA68     		ldr	r2, [r7, #12]
 1312 07e8 1268     		ldr	r2, [r2]
 1313 07ea 1268     		ldr	r2, [r2]
 1314 07ec 42F48052 		orr	r2, r2, #4096
 1315 07f0 1A60     		str	r2, [r3]
 1316              	.L70:
 703:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         }
 704:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 705:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         /* Wait until RXNE flag is set */
 706:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 1317              		.loc 1 706 0
 1318 07f2 F868     		ldr	r0, [r7, #12]
 1319 07f4 0121     		movs	r1, #1
 1320 07f6 0022     		movs	r2, #0
 1321 07f8 3B6A     		ldr	r3, [r7, #32]
 1322 07fa 01F0F9F9 		bl	SPI_WaitOnFlagUntilTimeout
 1323 07fe 0346     		mov	r3, r0
 1324 0800 002B     		cmp	r3, #0
 1325 0802 01D0     		beq	.L71
 707:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         { 
 708:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           return HAL_TIMEOUT;
 1326              		.loc 1 708 0
 1327 0804 0323     		movs	r3, #3
 1328 0806 95E1     		b	.L63
 1329              	.L71:
 709:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         }
 710:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 711:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         *((uint16_t*)hspi->pRxBuffPtr) = hspi->Instance->DR;
 1330              		.loc 1 711 0
 1331 0808 FB68     		ldr	r3, [r7, #12]
 1332 080a 9B6B     		ldr	r3, [r3, #56]
 1333 080c FA68     		ldr	r2, [r7, #12]
 1334 080e 1268     		ldr	r2, [r2]
 1335 0810 D268     		ldr	r2, [r2, #12]
 1336 0812 92B2     		uxth	r2, r2
 1337 0814 1A80     		strh	r2, [r3]	@ movhi
 712:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->pRxBuffPtr+=2;
 1338              		.loc 1 712 0
 1339 0816 FB68     		ldr	r3, [r7, #12]
 1340 0818 9B6B     		ldr	r3, [r3, #56]
 1341 081a 9A1C     		adds	r2, r3, #2
 1342 081c FB68     		ldr	r3, [r7, #12]
 1343 081e 9A63     		str	r2, [r3, #56]
 713:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->RxXferCount--;
 1344              		.loc 1 713 0
 1345 0820 FB68     		ldr	r3, [r7, #12]
 1346 0822 DB8F     		ldrh	r3, [r3, #62]
 1347 0824 013B     		subs	r3, r3, #1
 1348 0826 9AB2     		uxth	r2, r3
 1349 0828 FB68     		ldr	r3, [r7, #12]
 1350 082a DA87     		strh	r2, [r3, #62]	@ movhi
 1351 082c 0BE1     		b	.L79
 1352              	.L69:
 714:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       }
 715:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       else
 716:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
 717:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         while(hspi->TxXferCount > 0)
 1353              		.loc 1 717 0
 1354 082e 49E0     		b	.L73
 1355              	.L77:
 718:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         {
 719:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           /* Wait until TXE flag is set to send data */
 720:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_TXE, RESET, Timeout) != HAL_OK)
 1356              		.loc 1 720 0
 1357 0830 F868     		ldr	r0, [r7, #12]
 1358 0832 0221     		movs	r1, #2
 1359 0834 0022     		movs	r2, #0
 1360 0836 3B6A     		ldr	r3, [r7, #32]
 1361 0838 01F0DAF9 		bl	SPI_WaitOnFlagUntilTimeout
 1362 083c 0346     		mov	r3, r0
 1363 083e 002B     		cmp	r3, #0
 1364 0840 01D0     		beq	.L74
 721:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           { 
 722:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****             return HAL_TIMEOUT;
 1365              		.loc 1 722 0
 1366 0842 0323     		movs	r3, #3
 1367 0844 76E1     		b	.L63
 1368              	.L74:
 723:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           }
 724:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 725:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           hspi->Instance->DR = *((uint16_t*)hspi->pTxBuffPtr);
 1369              		.loc 1 725 0
 1370 0846 FB68     		ldr	r3, [r7, #12]
 1371 0848 1B68     		ldr	r3, [r3]
 1372 084a FA68     		ldr	r2, [r7, #12]
 1373 084c 126B     		ldr	r2, [r2, #48]
 1374 084e 1288     		ldrh	r2, [r2]
 1375 0850 DA60     		str	r2, [r3, #12]
 726:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           hspi->pTxBuffPtr+=2;
 1376              		.loc 1 726 0
 1377 0852 FB68     		ldr	r3, [r7, #12]
 1378 0854 1B6B     		ldr	r3, [r3, #48]
 1379 0856 9A1C     		adds	r2, r3, #2
 1380 0858 FB68     		ldr	r3, [r7, #12]
 1381 085a 1A63     		str	r2, [r3, #48]
 727:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           hspi->TxXferCount--;
 1382              		.loc 1 727 0
 1383 085c FB68     		ldr	r3, [r7, #12]
 1384 085e DB8E     		ldrh	r3, [r3, #54]
 1385 0860 013B     		subs	r3, r3, #1
 1386 0862 9AB2     		uxth	r2, r3
 1387 0864 FB68     		ldr	r3, [r7, #12]
 1388 0866 DA86     		strh	r2, [r3, #54]	@ movhi
 728:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 729:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           /* Enable CRC Transmission */
 730:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           if((hspi->TxXferCount == 0) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED))
 1389              		.loc 1 730 0
 1390 0868 FB68     		ldr	r3, [r7, #12]
 1391 086a DB8E     		ldrh	r3, [r3, #54]
 1392 086c 002B     		cmp	r3, #0
 1393 086e 0CD1     		bne	.L75
 1394              		.loc 1 730 0 is_stmt 0 discriminator 1
 1395 0870 FB68     		ldr	r3, [r7, #12]
 1396 0872 9B6A     		ldr	r3, [r3, #40]
 1397 0874 B3F5005F 		cmp	r3, #8192
 1398 0878 07D1     		bne	.L75
 731:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           {
 732:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****             hspi->Instance->CR1 |= SPI_CR1_CRCNEXT;
 1399              		.loc 1 732 0 is_stmt 1
 1400 087a FB68     		ldr	r3, [r7, #12]
 1401 087c 1B68     		ldr	r3, [r3]
 1402 087e FA68     		ldr	r2, [r7, #12]
 1403 0880 1268     		ldr	r2, [r2]
 1404 0882 1268     		ldr	r2, [r2]
 1405 0884 42F48052 		orr	r2, r2, #4096
 1406 0888 1A60     		str	r2, [r3]
 1407              	.L75:
 733:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           }
 734:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 735:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           /* Wait until RXNE flag is set */
 736:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 1408              		.loc 1 736 0
 1409 088a F868     		ldr	r0, [r7, #12]
 1410 088c 0121     		movs	r1, #1
 1411 088e 0022     		movs	r2, #0
 1412 0890 3B6A     		ldr	r3, [r7, #32]
 1413 0892 01F0ADF9 		bl	SPI_WaitOnFlagUntilTimeout
 1414 0896 0346     		mov	r3, r0
 1415 0898 002B     		cmp	r3, #0
 1416 089a 01D0     		beq	.L76
 737:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           { 
 738:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****             return HAL_TIMEOUT;
 1417              		.loc 1 738 0
 1418 089c 0323     		movs	r3, #3
 1419 089e 49E1     		b	.L63
 1420              	.L76:
 739:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           }
 740:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 741:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           *((uint16_t*)hspi->pRxBuffPtr) = hspi->Instance->DR;
 1421              		.loc 1 741 0
 1422 08a0 FB68     		ldr	r3, [r7, #12]
 1423 08a2 9B6B     		ldr	r3, [r3, #56]
 1424 08a4 FA68     		ldr	r2, [r7, #12]
 1425 08a6 1268     		ldr	r2, [r2]
 1426 08a8 D268     		ldr	r2, [r2, #12]
 1427 08aa 92B2     		uxth	r2, r2
 1428 08ac 1A80     		strh	r2, [r3]	@ movhi
 742:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           hspi->pRxBuffPtr+=2;
 1429              		.loc 1 742 0
 1430 08ae FB68     		ldr	r3, [r7, #12]
 1431 08b0 9B6B     		ldr	r3, [r3, #56]
 1432 08b2 9A1C     		adds	r2, r3, #2
 1433 08b4 FB68     		ldr	r3, [r7, #12]
 1434 08b6 9A63     		str	r2, [r3, #56]
 743:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           hspi->RxXferCount--;
 1435              		.loc 1 743 0
 1436 08b8 FB68     		ldr	r3, [r7, #12]
 1437 08ba DB8F     		ldrh	r3, [r3, #62]
 1438 08bc 013B     		subs	r3, r3, #1
 1439 08be 9AB2     		uxth	r2, r3
 1440 08c0 FB68     		ldr	r3, [r7, #12]
 1441 08c2 DA87     		strh	r2, [r3, #62]	@ movhi
 1442              	.L73:
 717:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         {
 1443              		.loc 1 717 0 discriminator 1
 1444 08c4 FB68     		ldr	r3, [r7, #12]
 1445 08c6 DB8E     		ldrh	r3, [r3, #54]
 1446 08c8 002B     		cmp	r3, #0
 1447 08ca B1D1     		bne	.L77
 744:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         }
 745:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 746:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         /* Wait until RXNE flag is set */
 747:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 1448              		.loc 1 747 0
 1449 08cc F868     		ldr	r0, [r7, #12]
 1450 08ce 0121     		movs	r1, #1
 1451 08d0 0022     		movs	r2, #0
 1452 08d2 3B6A     		ldr	r3, [r7, #32]
 1453 08d4 01F08CF9 		bl	SPI_WaitOnFlagUntilTimeout
 1454 08d8 0346     		mov	r3, r0
 1455 08da 002B     		cmp	r3, #0
 1456 08dc 01D0     		beq	.L78
 748:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         {
 749:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           return HAL_TIMEOUT;
 1457              		.loc 1 749 0
 1458 08de 0323     		movs	r3, #3
 1459 08e0 28E1     		b	.L63
 1460              	.L78:
 750:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         }
 751:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 752:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         *((uint16_t*)hspi->pRxBuffPtr) = hspi->Instance->DR;
 1461              		.loc 1 752 0
 1462 08e2 FB68     		ldr	r3, [r7, #12]
 1463 08e4 9B6B     		ldr	r3, [r3, #56]
 1464 08e6 FA68     		ldr	r2, [r7, #12]
 1465 08e8 1268     		ldr	r2, [r2]
 1466 08ea D268     		ldr	r2, [r2, #12]
 1467 08ec 92B2     		uxth	r2, r2
 1468 08ee 1A80     		strh	r2, [r3]	@ movhi
 753:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->pRxBuffPtr+=2;
 1469              		.loc 1 753 0
 1470 08f0 FB68     		ldr	r3, [r7, #12]
 1471 08f2 9B6B     		ldr	r3, [r3, #56]
 1472 08f4 9A1C     		adds	r2, r3, #2
 1473 08f6 FB68     		ldr	r3, [r7, #12]
 1474 08f8 9A63     		str	r2, [r3, #56]
 754:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->RxXferCount--;
 1475              		.loc 1 754 0
 1476 08fa FB68     		ldr	r3, [r7, #12]
 1477 08fc DB8F     		ldrh	r3, [r3, #62]
 1478 08fe 013B     		subs	r3, r3, #1
 1479 0900 9AB2     		uxth	r2, r3
 1480 0902 FB68     		ldr	r3, [r7, #12]
 1481 0904 DA87     		strh	r2, [r3, #62]	@ movhi
 1482 0906 9EE0     		b	.L79
 1483              	.L68:
 755:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       }
 756:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 757:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Transmit and Receive data in 8 Bit mode */
 758:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     else
 759:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 760:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 761:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->Instance->DR = (*hspi->pTxBuffPtr++);
 1484              		.loc 1 761 0
 1485 0908 FB68     		ldr	r3, [r7, #12]
 1486 090a 1A68     		ldr	r2, [r3]
 1487 090c FB68     		ldr	r3, [r7, #12]
 1488 090e 1B6B     		ldr	r3, [r3, #48]
 1489 0910 581C     		adds	r0, r3, #1
 1490 0912 F968     		ldr	r1, [r7, #12]
 1491 0914 0863     		str	r0, [r1, #48]
 1492 0916 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1493 0918 D360     		str	r3, [r2, #12]
 762:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->TxXferCount--;
 1494              		.loc 1 762 0
 1495 091a FB68     		ldr	r3, [r7, #12]
 1496 091c DB8E     		ldrh	r3, [r3, #54]
 1497 091e 013B     		subs	r3, r3, #1
 1498 0920 9AB2     		uxth	r2, r3
 1499 0922 FB68     		ldr	r3, [r7, #12]
 1500 0924 DA86     		strh	r2, [r3, #54]	@ movhi
 763:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 764:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       if(hspi->TxXferCount == 0)
 1501              		.loc 1 764 0
 1502 0926 FB68     		ldr	r3, [r7, #12]
 1503 0928 DB8E     		ldrh	r3, [r3, #54]
 1504 092a 002B     		cmp	r3, #0
 1505 092c 25D1     		bne	.L80
 765:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
 766:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         /* Enable CRC Transmission */
 767:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED)
 1506              		.loc 1 767 0
 1507 092e FB68     		ldr	r3, [r7, #12]
 1508 0930 9B6A     		ldr	r3, [r3, #40]
 1509 0932 B3F5005F 		cmp	r3, #8192
 1510 0936 07D1     		bne	.L81
 768:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         {
 769:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           hspi->Instance->CR1 |= SPI_CR1_CRCNEXT;
 1511              		.loc 1 769 0
 1512 0938 FB68     		ldr	r3, [r7, #12]
 1513 093a 1B68     		ldr	r3, [r3]
 1514 093c FA68     		ldr	r2, [r7, #12]
 1515 093e 1268     		ldr	r2, [r2]
 1516 0940 1268     		ldr	r2, [r2]
 1517 0942 42F48052 		orr	r2, r2, #4096
 1518 0946 1A60     		str	r2, [r3]
 1519              	.L81:
 770:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         }
 771:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 772:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         /* Wait until RXNE flag is set */
 773:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 1520              		.loc 1 773 0
 1521 0948 F868     		ldr	r0, [r7, #12]
 1522 094a 0121     		movs	r1, #1
 1523 094c 0022     		movs	r2, #0
 1524 094e 3B6A     		ldr	r3, [r7, #32]
 1525 0950 01F04EF9 		bl	SPI_WaitOnFlagUntilTimeout
 1526 0954 0346     		mov	r3, r0
 1527 0956 002B     		cmp	r3, #0
 1528 0958 01D0     		beq	.L82
 774:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         {
 775:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           return HAL_TIMEOUT;
 1529              		.loc 1 775 0
 1530 095a 0323     		movs	r3, #3
 1531 095c EAE0     		b	.L63
 1532              	.L82:
 776:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         }
 777:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 778:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (*hspi->pRxBuffPtr) = hspi->Instance->DR;
 1533              		.loc 1 778 0
 1534 095e FB68     		ldr	r3, [r7, #12]
 1535 0960 9B6B     		ldr	r3, [r3, #56]
 1536 0962 FA68     		ldr	r2, [r7, #12]
 1537 0964 1268     		ldr	r2, [r2]
 1538 0966 D268     		ldr	r2, [r2, #12]
 1539 0968 D2B2     		uxtb	r2, r2
 1540 096a 1A70     		strb	r2, [r3]
 779:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->RxXferCount--;
 1541              		.loc 1 779 0
 1542 096c FB68     		ldr	r3, [r7, #12]
 1543 096e DB8F     		ldrh	r3, [r3, #62]
 1544 0970 013B     		subs	r3, r3, #1
 1545 0972 9AB2     		uxth	r2, r3
 1546 0974 FB68     		ldr	r3, [r7, #12]
 1547 0976 DA87     		strh	r2, [r3, #62]	@ movhi
 1548 0978 65E0     		b	.L79
 1549              	.L80:
 780:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       }
 781:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       else
 782:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
 783:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         while(hspi->TxXferCount > 0)
 1550              		.loc 1 783 0
 1551 097a 45E0     		b	.L83
 1552              	.L87:
 784:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         {
 785:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           /* Wait until TXE flag is set to send data */
 786:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_TXE, RESET, Timeout) != HAL_OK)
 1553              		.loc 1 786 0
 1554 097c F868     		ldr	r0, [r7, #12]
 1555 097e 0221     		movs	r1, #2
 1556 0980 0022     		movs	r2, #0
 1557 0982 3B6A     		ldr	r3, [r7, #32]
 1558 0984 01F034F9 		bl	SPI_WaitOnFlagUntilTimeout
 1559 0988 0346     		mov	r3, r0
 1560 098a 002B     		cmp	r3, #0
 1561 098c 01D0     		beq	.L84
 787:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           {
 788:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****             return HAL_TIMEOUT;
 1562              		.loc 1 788 0
 1563 098e 0323     		movs	r3, #3
 1564 0990 D0E0     		b	.L63
 1565              	.L84:
 789:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           }
 790:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 791:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           hspi->Instance->DR = (*hspi->pTxBuffPtr++);
 1566              		.loc 1 791 0
 1567 0992 FB68     		ldr	r3, [r7, #12]
 1568 0994 1A68     		ldr	r2, [r3]
 1569 0996 FB68     		ldr	r3, [r7, #12]
 1570 0998 1B6B     		ldr	r3, [r3, #48]
 1571 099a 581C     		adds	r0, r3, #1
 1572 099c F968     		ldr	r1, [r7, #12]
 1573 099e 0863     		str	r0, [r1, #48]
 1574 09a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1575 09a2 D360     		str	r3, [r2, #12]
 792:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           hspi->TxXferCount--;
 1576              		.loc 1 792 0
 1577 09a4 FB68     		ldr	r3, [r7, #12]
 1578 09a6 DB8E     		ldrh	r3, [r3, #54]
 1579 09a8 013B     		subs	r3, r3, #1
 1580 09aa 9AB2     		uxth	r2, r3
 1581 09ac FB68     		ldr	r3, [r7, #12]
 1582 09ae DA86     		strh	r2, [r3, #54]	@ movhi
 793:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 794:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           /* Enable CRC Transmission */
 795:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           if((hspi->TxXferCount == 0) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED))
 1583              		.loc 1 795 0
 1584 09b0 FB68     		ldr	r3, [r7, #12]
 1585 09b2 DB8E     		ldrh	r3, [r3, #54]
 1586 09b4 002B     		cmp	r3, #0
 1587 09b6 0CD1     		bne	.L85
 1588              		.loc 1 795 0 is_stmt 0 discriminator 1
 1589 09b8 FB68     		ldr	r3, [r7, #12]
 1590 09ba 9B6A     		ldr	r3, [r3, #40]
 1591 09bc B3F5005F 		cmp	r3, #8192
 1592 09c0 07D1     		bne	.L85
 796:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           {
 797:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****             hspi->Instance->CR1 |= SPI_CR1_CRCNEXT;
 1593              		.loc 1 797 0 is_stmt 1
 1594 09c2 FB68     		ldr	r3, [r7, #12]
 1595 09c4 1B68     		ldr	r3, [r3]
 1596 09c6 FA68     		ldr	r2, [r7, #12]
 1597 09c8 1268     		ldr	r2, [r2]
 1598 09ca 1268     		ldr	r2, [r2]
 1599 09cc 42F48052 		orr	r2, r2, #4096
 1600 09d0 1A60     		str	r2, [r3]
 1601              	.L85:
 798:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           }
 799:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 800:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           /* Wait until RXNE flag is set */
 801:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 1602              		.loc 1 801 0
 1603 09d2 F868     		ldr	r0, [r7, #12]
 1604 09d4 0121     		movs	r1, #1
 1605 09d6 0022     		movs	r2, #0
 1606 09d8 3B6A     		ldr	r3, [r7, #32]
 1607 09da 01F009F9 		bl	SPI_WaitOnFlagUntilTimeout
 1608 09de 0346     		mov	r3, r0
 1609 09e0 002B     		cmp	r3, #0
 1610 09e2 01D0     		beq	.L86
 802:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           {
 803:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****             return HAL_TIMEOUT;
 1611              		.loc 1 803 0
 1612 09e4 0323     		movs	r3, #3
 1613 09e6 A5E0     		b	.L63
 1614              	.L86:
 804:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           }
 805:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 806:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           (*hspi->pRxBuffPtr++) = hspi->Instance->DR;
 1615              		.loc 1 806 0
 1616 09e8 FB68     		ldr	r3, [r7, #12]
 1617 09ea 9B6B     		ldr	r3, [r3, #56]
 1618 09ec 591C     		adds	r1, r3, #1
 1619 09ee FA68     		ldr	r2, [r7, #12]
 1620 09f0 9163     		str	r1, [r2, #56]
 1621 09f2 FA68     		ldr	r2, [r7, #12]
 1622 09f4 1268     		ldr	r2, [r2]
 1623 09f6 D268     		ldr	r2, [r2, #12]
 1624 09f8 D2B2     		uxtb	r2, r2
 1625 09fa 1A70     		strb	r2, [r3]
 807:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           hspi->RxXferCount--;
 1626              		.loc 1 807 0
 1627 09fc FB68     		ldr	r3, [r7, #12]
 1628 09fe DB8F     		ldrh	r3, [r3, #62]
 1629 0a00 013B     		subs	r3, r3, #1
 1630 0a02 9AB2     		uxth	r2, r3
 1631 0a04 FB68     		ldr	r3, [r7, #12]
 1632 0a06 DA87     		strh	r2, [r3, #62]	@ movhi
 1633              	.L83:
 783:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         {
 1634              		.loc 1 783 0 discriminator 1
 1635 0a08 FB68     		ldr	r3, [r7, #12]
 1636 0a0a DB8E     		ldrh	r3, [r3, #54]
 1637 0a0c 002B     		cmp	r3, #0
 1638 0a0e B5D1     		bne	.L87
 808:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         }
 809:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 810:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         /* Wait until RXNE flag is set */
 811:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 1639              		.loc 1 811 0
 1640 0a10 F868     		ldr	r0, [r7, #12]
 1641 0a12 0121     		movs	r1, #1
 1642 0a14 0022     		movs	r2, #0
 1643 0a16 3B6A     		ldr	r3, [r7, #32]
 1644 0a18 01F0EAF8 		bl	SPI_WaitOnFlagUntilTimeout
 1645 0a1c 0346     		mov	r3, r0
 1646 0a1e 002B     		cmp	r3, #0
 1647 0a20 01D0     		beq	.L88
 812:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         {
 813:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           return HAL_TIMEOUT;
 1648              		.loc 1 813 0
 1649 0a22 0323     		movs	r3, #3
 1650 0a24 86E0     		b	.L63
 1651              	.L88:
 814:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         }
 815:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 816:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         (*hspi->pRxBuffPtr++) = hspi->Instance->DR;
 1652              		.loc 1 816 0
 1653 0a26 FB68     		ldr	r3, [r7, #12]
 1654 0a28 9B6B     		ldr	r3, [r3, #56]
 1655 0a2a 591C     		adds	r1, r3, #1
 1656 0a2c FA68     		ldr	r2, [r7, #12]
 1657 0a2e 9163     		str	r1, [r2, #56]
 1658 0a30 FA68     		ldr	r2, [r7, #12]
 1659 0a32 1268     		ldr	r2, [r2]
 1660 0a34 D268     		ldr	r2, [r2, #12]
 1661 0a36 D2B2     		uxtb	r2, r2
 1662 0a38 1A70     		strb	r2, [r3]
 817:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->RxXferCount--;
 1663              		.loc 1 817 0
 1664 0a3a FB68     		ldr	r3, [r7, #12]
 1665 0a3c DB8F     		ldrh	r3, [r3, #62]
 1666 0a3e 013B     		subs	r3, r3, #1
 1667 0a40 9AB2     		uxth	r2, r3
 1668 0a42 FB68     		ldr	r3, [r7, #12]
 1669 0a44 DA87     		strh	r2, [r3, #62]	@ movhi
 1670              	.L79:
 818:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       }
 819:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 820:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 821:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Read CRC from DR to close CRC calculation process */
 822:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED)
 1671              		.loc 1 822 0
 1672 0a46 FB68     		ldr	r3, [r7, #12]
 1673 0a48 9B6A     		ldr	r3, [r3, #40]
 1674 0a4a B3F5005F 		cmp	r3, #8192
 1675 0a4e 19D1     		bne	.L89
 823:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 824:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Wait until RXNE flag is set */
 825:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 1676              		.loc 1 825 0
 1677 0a50 F868     		ldr	r0, [r7, #12]
 1678 0a52 0121     		movs	r1, #1
 1679 0a54 0022     		movs	r2, #0
 1680 0a56 3B6A     		ldr	r3, [r7, #32]
 1681 0a58 01F0CAF8 		bl	SPI_WaitOnFlagUntilTimeout
 1682 0a5c 0346     		mov	r3, r0
 1683 0a5e 002B     		cmp	r3, #0
 1684 0a60 0BD0     		beq	.L90
 826:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
 827:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->ErrorCode |= HAL_SPI_ERROR_CRC;
 1685              		.loc 1 827 0
 1686 0a62 FB68     		ldr	r3, [r7, #12]
 1687 0a64 93F85230 		ldrb	r3, [r3, #82]
 1688 0a68 DBB2     		uxtb	r3, r3
 1689 0a6a 43F00203 		orr	r3, r3, #2
 1690 0a6e DAB2     		uxtb	r2, r3
 1691 0a70 FB68     		ldr	r3, [r7, #12]
 1692 0a72 83F85220 		strb	r2, [r3, #82]
 828:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         return HAL_TIMEOUT;
 1693              		.loc 1 828 0
 1694 0a76 0323     		movs	r3, #3
 1695 0a78 5CE0     		b	.L63
 1696              	.L90:
 829:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       }
 830:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Read CRC */
 831:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       tmpreg = hspi->Instance->DR;
 1697              		.loc 1 831 0
 1698 0a7a FB68     		ldr	r3, [r7, #12]
 1699 0a7c 1B68     		ldr	r3, [r3]
 1700 0a7e DB68     		ldr	r3, [r3, #12]
 1701 0a80 9BB2     		uxth	r3, r3
 1702 0a82 7B82     		strh	r3, [r7, #18]	@ movhi
 1703              	.L89:
 832:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 833:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 834:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Wait until Busy flag is reset before disabling SPI */
 835:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_BSY, SET, Timeout) != HAL_OK)
 1704              		.loc 1 835 0
 1705 0a84 F868     		ldr	r0, [r7, #12]
 1706 0a86 8021     		movs	r1, #128
 1707 0a88 0122     		movs	r2, #1
 1708 0a8a 3B6A     		ldr	r3, [r7, #32]
 1709 0a8c 01F0B0F8 		bl	SPI_WaitOnFlagUntilTimeout
 1710 0a90 0346     		mov	r3, r0
 1711 0a92 002B     		cmp	r3, #0
 1712 0a94 0BD0     		beq	.L91
 836:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 837:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->ErrorCode |= HAL_SPI_ERROR_FLAG;
 1713              		.loc 1 837 0
 1714 0a96 FB68     		ldr	r3, [r7, #12]
 1715 0a98 93F85230 		ldrb	r3, [r3, #82]
 1716 0a9c DBB2     		uxtb	r3, r3
 1717 0a9e 43F02003 		orr	r3, r3, #32
 1718 0aa2 DAB2     		uxtb	r2, r3
 1719 0aa4 FB68     		ldr	r3, [r7, #12]
 1720 0aa6 83F85220 		strb	r2, [r3, #82]
 838:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       return HAL_TIMEOUT;
 1721              		.loc 1 838 0
 1722 0aaa 0323     		movs	r3, #3
 1723 0aac 42E0     		b	.L63
 1724              	.L91:
 839:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 840:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     
 841:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 1725              		.loc 1 841 0
 1726 0aae FB68     		ldr	r3, [r7, #12]
 1727 0ab0 0122     		movs	r2, #1
 1728 0ab2 83F85120 		strb	r2, [r3, #81]
 842:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 843:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     tmp = __HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR);
 1729              		.loc 1 843 0
 1730 0ab6 FB68     		ldr	r3, [r7, #12]
 1731 0ab8 1B68     		ldr	r3, [r3]
 1732 0aba 9B68     		ldr	r3, [r3, #8]
 1733 0abc 03F01003 		and	r3, r3, #16
 1734 0ac0 002B     		cmp	r3, #0
 1735 0ac2 0CBF     		ite	eq
 1736 0ac4 0023     		moveq	r3, #0
 1737 0ac6 0123     		movne	r3, #1
 1738 0ac8 DBB2     		uxtb	r3, r3
 1739 0aca 7B61     		str	r3, [r7, #20]
 844:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Check if CRC error occurred */
 845:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if((hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED) && (tmp != RESET))
 1740              		.loc 1 845 0
 1741 0acc FB68     		ldr	r3, [r7, #12]
 1742 0ace 9B6A     		ldr	r3, [r3, #40]
 1743 0ad0 B3F5005F 		cmp	r3, #8192
 1744 0ad4 27D1     		bne	.L92
 1745              		.loc 1 845 0 is_stmt 0 discriminator 1
 1746 0ad6 7B69     		ldr	r3, [r7, #20]
 1747 0ad8 002B     		cmp	r3, #0
 1748 0ada 24D0     		beq	.L92
 846:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 847:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->ErrorCode |= HAL_SPI_ERROR_CRC;
 1749              		.loc 1 847 0 is_stmt 1
 1750 0adc FB68     		ldr	r3, [r7, #12]
 1751 0ade 93F85230 		ldrb	r3, [r3, #82]
 1752 0ae2 DBB2     		uxtb	r3, r3
 1753 0ae4 43F00203 		orr	r3, r3, #2
 1754 0ae8 DAB2     		uxtb	r2, r3
 1755 0aea FB68     		ldr	r3, [r7, #12]
 1756 0aec 83F85220 		strb	r2, [r3, #82]
 848:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 849:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Reset CRC Calculation */
 850:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED)
 1757              		.loc 1 850 0
 1758 0af0 FB68     		ldr	r3, [r7, #12]
 1759 0af2 9B6A     		ldr	r3, [r3, #40]
 1760 0af4 B3F5005F 		cmp	r3, #8192
 1761 0af8 0FD1     		bne	.L93
 851:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
 852:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         __HAL_SPI_RESET_CRC(hspi);
 1762              		.loc 1 852 0
 1763 0afa FB68     		ldr	r3, [r7, #12]
 1764 0afc 1B68     		ldr	r3, [r3]
 1765 0afe FA68     		ldr	r2, [r7, #12]
 1766 0b00 1268     		ldr	r2, [r2]
 1767 0b02 1268     		ldr	r2, [r2]
 1768 0b04 22F40052 		bic	r2, r2, #8192
 1769 0b08 1A60     		str	r2, [r3]
 1770 0b0a FB68     		ldr	r3, [r7, #12]
 1771 0b0c 1B68     		ldr	r3, [r3]
 1772 0b0e FA68     		ldr	r2, [r7, #12]
 1773 0b10 1268     		ldr	r2, [r2]
 1774 0b12 1268     		ldr	r2, [r2]
 1775 0b14 42F40052 		orr	r2, r2, #8192
 1776 0b18 1A60     		str	r2, [r3]
 1777              	.L93:
 853:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       }
 854:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 855:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Process Unlocked */
 856:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
 1778              		.loc 1 856 0
 1779 0b1a FB68     		ldr	r3, [r7, #12]
 1780 0b1c 0022     		movs	r2, #0
 1781 0b1e 83F85020 		strb	r2, [r3, #80]
 857:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       
 858:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       return HAL_ERROR; 
 1782              		.loc 1 858 0
 1783 0b22 0123     		movs	r3, #1
 1784 0b24 06E0     		b	.L63
 1785              	.L92:
 859:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 860:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 861:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Process Unlocked */
 862:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 1786              		.loc 1 862 0
 1787 0b26 FB68     		ldr	r3, [r7, #12]
 1788 0b28 0022     		movs	r2, #0
 1789 0b2a 83F85020 		strb	r2, [r3, #80]
 863:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 864:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     return HAL_OK;
 1790              		.loc 1 864 0
 1791 0b2e 0023     		movs	r3, #0
 1792 0b30 00E0     		b	.L63
 1793              	.L60:
 865:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
 866:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   else
 867:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
 868:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     return HAL_BUSY;
 1794              		.loc 1 868 0
 1795 0b32 0223     		movs	r3, #2
 1796              	.L63:
 869:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
 870:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 1797              		.loc 1 870 0
 1798 0b34 1846     		mov	r0, r3
 1799 0b36 1837     		adds	r7, r7, #24
 1800 0b38 BD46     		mov	sp, r7
 1801              		@ sp needed
 1802 0b3a 80BD     		pop	{r7, pc}
 1803              		.cfi_endproc
 1804              	.LFE61:
 1806              		.align	2
 1807              		.global	HAL_SPI_Transmit_IT
 1808              		.thumb
 1809              		.thumb_func
 1811              	HAL_SPI_Transmit_IT:
 1812              	.LFB62:
 871:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 872:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
 873:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief  Transmit an amount of data in no-blocking mode with Interrupt
 874:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  hspi: SPI handle
 875:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  pData: pointer to data buffer
 876:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  Size: amount of data to be sent
 877:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval HAL status
 878:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
 879:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
 880:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 1813              		.loc 1 880 0
 1814              		.cfi_startproc
 1815              		@ args = 0, pretend = 0, frame = 16
 1816              		@ frame_needed = 1, uses_anonymous_args = 0
 1817              		@ link register save eliminated.
 1818 0b3c 80B4     		push	{r7}
 1819              		.cfi_def_cfa_offset 4
 1820              		.cfi_offset 7, -4
 1821 0b3e 85B0     		sub	sp, sp, #20
 1822              		.cfi_def_cfa_offset 24
 1823 0b40 00AF     		add	r7, sp, #0
 1824              		.cfi_def_cfa_register 7
 1825 0b42 F860     		str	r0, [r7, #12]
 1826 0b44 B960     		str	r1, [r7, #8]
 1827 0b46 1346     		mov	r3, r2
 1828 0b48 FB80     		strh	r3, [r7, #6]	@ movhi
 881:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_READY)
 1829              		.loc 1 881 0
 1830 0b4a FB68     		ldr	r3, [r7, #12]
 1831 0b4c 93F85130 		ldrb	r3, [r3, #81]
 1832 0b50 DBB2     		uxtb	r3, r3
 1833 0b52 012B     		cmp	r3, #1
 1834 0b54 7ED1     		bne	.L95
 882:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
 883:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if((pData == NULL) || (Size == 0))
 1835              		.loc 1 883 0
 1836 0b56 BB68     		ldr	r3, [r7, #8]
 1837 0b58 002B     		cmp	r3, #0
 1838 0b5a 02D0     		beq	.L96
 1839              		.loc 1 883 0 is_stmt 0 discriminator 1
 1840 0b5c FB88     		ldrh	r3, [r7, #6]
 1841 0b5e 002B     		cmp	r3, #0
 1842 0b60 01D1     		bne	.L97
 1843              	.L96:
 884:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 885:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       return  HAL_ERROR;
 1844              		.loc 1 885 0 is_stmt 1
 1845 0b62 0123     		movs	r3, #1
 1846 0b64 77E0     		b	.L98
 1847              	.L97:
 886:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 887:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 888:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Check the parameters */
 889:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
 890:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 891:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Process Locked */
 892:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_LOCK(hspi);
 1848              		.loc 1 892 0
 1849 0b66 FB68     		ldr	r3, [r7, #12]
 1850 0b68 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 1851 0b6c 012B     		cmp	r3, #1
 1852 0b6e 01D1     		bne	.L99
 1853              		.loc 1 892 0 is_stmt 0 discriminator 1
 1854 0b70 0223     		movs	r3, #2
 1855 0b72 70E0     		b	.L98
 1856              	.L99:
 1857              		.loc 1 892 0 discriminator 2
 1858 0b74 FB68     		ldr	r3, [r7, #12]
 1859 0b76 0122     		movs	r2, #1
 1860 0b78 83F85020 		strb	r2, [r3, #80]
 893:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 894:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Configure communication */
 895:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->State        = HAL_SPI_STATE_BUSY_TX;
 1861              		.loc 1 895 0 is_stmt 1 discriminator 2
 1862 0b7c FB68     		ldr	r3, [r7, #12]
 1863 0b7e 1222     		movs	r2, #18
 1864 0b80 83F85120 		strb	r2, [r3, #81]
 896:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->ErrorCode    = HAL_SPI_ERROR_NONE;
 1865              		.loc 1 896 0 discriminator 2
 1866 0b84 FB68     		ldr	r3, [r7, #12]
 1867 0b86 0022     		movs	r2, #0
 1868 0b88 83F85220 		strb	r2, [r3, #82]
 897:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 898:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxISR = &SPI_TxISR;
 1869              		.loc 1 898 0 discriminator 2
 1870 0b8c FA68     		ldr	r2, [r7, #12]
 1871 0b8e 40F20003 		movw	r3, #:lower16:SPI_TxISR
 1872 0b92 C0F20003 		movt	r3, #:upper16:SPI_TxISR
 1873 0b96 D364     		str	r3, [r2, #76]
 899:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->pTxBuffPtr   = pData;
 1874              		.loc 1 899 0 discriminator 2
 1875 0b98 FB68     		ldr	r3, [r7, #12]
 1876 0b9a BA68     		ldr	r2, [r7, #8]
 1877 0b9c 1A63     		str	r2, [r3, #48]
 900:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxXferSize   = Size;
 1878              		.loc 1 900 0 discriminator 2
 1879 0b9e FB68     		ldr	r3, [r7, #12]
 1880 0ba0 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1881 0ba2 9A86     		strh	r2, [r3, #52]	@ movhi
 901:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxXferCount  = Size;
 1882              		.loc 1 901 0 discriminator 2
 1883 0ba4 FB68     		ldr	r3, [r7, #12]
 1884 0ba6 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1885 0ba8 DA86     		strh	r2, [r3, #54]	@ movhi
 902:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 903:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /*Init field not used in handle to zero */
 904:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxISR = 0;
 1886              		.loc 1 904 0 discriminator 2
 1887 0baa FB68     		ldr	r3, [r7, #12]
 1888 0bac 0022     		movs	r2, #0
 1889 0bae 9A64     		str	r2, [r3, #72]
 905:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxXferSize   = 0;
 1890              		.loc 1 905 0 discriminator 2
 1891 0bb0 FB68     		ldr	r3, [r7, #12]
 1892 0bb2 0022     		movs	r2, #0
 1893 0bb4 9A87     		strh	r2, [r3, #60]	@ movhi
 906:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxXferCount  = 0;
 1894              		.loc 1 906 0 discriminator 2
 1895 0bb6 FB68     		ldr	r3, [r7, #12]
 1896 0bb8 0022     		movs	r2, #0
 1897 0bba DA87     		strh	r2, [r3, #62]	@ movhi
 907:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 908:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Configure communication direction : 1Line */
 909:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
 1898              		.loc 1 909 0 discriminator 2
 1899 0bbc FB68     		ldr	r3, [r7, #12]
 1900 0bbe 9B68     		ldr	r3, [r3, #8]
 1901 0bc0 B3F5004F 		cmp	r3, #32768
 1902 0bc4 07D1     		bne	.L100
 910:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 911:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_1LINE_TX(hspi);
 1903              		.loc 1 911 0
 1904 0bc6 FB68     		ldr	r3, [r7, #12]
 1905 0bc8 1B68     		ldr	r3, [r3]
 1906 0bca FA68     		ldr	r2, [r7, #12]
 1907 0bcc 1268     		ldr	r2, [r2]
 1908 0bce 1268     		ldr	r2, [r2]
 1909 0bd0 42F48042 		orr	r2, r2, #16384
 1910 0bd4 1A60     		str	r2, [r3]
 1911              	.L100:
 912:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 913:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 914:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Reset CRC Calculation */
 915:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED)
 1912              		.loc 1 915 0
 1913 0bd6 FB68     		ldr	r3, [r7, #12]
 1914 0bd8 9B6A     		ldr	r3, [r3, #40]
 1915 0bda B3F5005F 		cmp	r3, #8192
 1916 0bde 0FD1     		bne	.L101
 916:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 917:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_RESET_CRC(hspi);
 1917              		.loc 1 917 0
 1918 0be0 FB68     		ldr	r3, [r7, #12]
 1919 0be2 1B68     		ldr	r3, [r3]
 1920 0be4 FA68     		ldr	r2, [r7, #12]
 1921 0be6 1268     		ldr	r2, [r2]
 1922 0be8 1268     		ldr	r2, [r2]
 1923 0bea 22F40052 		bic	r2, r2, #8192
 1924 0bee 1A60     		str	r2, [r3]
 1925 0bf0 FB68     		ldr	r3, [r7, #12]
 1926 0bf2 1B68     		ldr	r3, [r3]
 1927 0bf4 FA68     		ldr	r2, [r7, #12]
 1928 0bf6 1268     		ldr	r2, [r2]
 1929 0bf8 1268     		ldr	r2, [r2]
 1930 0bfa 42F40052 		orr	r2, r2, #8192
 1931 0bfe 1A60     		str	r2, [r3]
 1932              	.L101:
 918:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 919:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 920:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 1933              		.loc 1 920 0
 1934 0c00 FB68     		ldr	r3, [r7, #12]
 1935 0c02 9B68     		ldr	r3, [r3, #8]
 1936 0c04 002B     		cmp	r3, #0
 1937 0c06 08D1     		bne	.L102
 921:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 922:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE));
 1938              		.loc 1 922 0
 1939 0c08 FB68     		ldr	r3, [r7, #12]
 1940 0c0a 1B68     		ldr	r3, [r3]
 1941 0c0c FA68     		ldr	r2, [r7, #12]
 1942 0c0e 1268     		ldr	r2, [r2]
 1943 0c10 5268     		ldr	r2, [r2, #4]
 1944 0c12 42F08002 		orr	r2, r2, #128
 1945 0c16 5A60     		str	r2, [r3, #4]
 1946 0c18 07E0     		b	.L103
 1947              	.L102:
 923:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }else
 924:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 925:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Enable TXE and ERR interrupt */
 926:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
 1948              		.loc 1 926 0
 1949 0c1a FB68     		ldr	r3, [r7, #12]
 1950 0c1c 1B68     		ldr	r3, [r3]
 1951 0c1e FA68     		ldr	r2, [r7, #12]
 1952 0c20 1268     		ldr	r2, [r2]
 1953 0c22 5268     		ldr	r2, [r2, #4]
 1954 0c24 42F0A002 		orr	r2, r2, #160
 1955 0c28 5A60     		str	r2, [r3, #4]
 1956              	.L103:
 927:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 928:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Process Unlocked */
 929:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 1957              		.loc 1 929 0
 1958 0c2a FB68     		ldr	r3, [r7, #12]
 1959 0c2c 0022     		movs	r2, #0
 1960 0c2e 83F85020 		strb	r2, [r3, #80]
 930:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 931:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Check if the SPI is already enabled */ 
 932:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
 1961              		.loc 1 932 0
 1962 0c32 FB68     		ldr	r3, [r7, #12]
 1963 0c34 1B68     		ldr	r3, [r3]
 1964 0c36 1B68     		ldr	r3, [r3]
 1965 0c38 03F04003 		and	r3, r3, #64
 1966 0c3c 002B     		cmp	r3, #0
 1967 0c3e 07D1     		bne	.L104
 933:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 934:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Enable SPI peripheral */
 935:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
 1968              		.loc 1 935 0
 1969 0c40 FB68     		ldr	r3, [r7, #12]
 1970 0c42 1B68     		ldr	r3, [r3]
 1971 0c44 FA68     		ldr	r2, [r7, #12]
 1972 0c46 1268     		ldr	r2, [r2]
 1973 0c48 1268     		ldr	r2, [r2]
 1974 0c4a 42F04002 		orr	r2, r2, #64
 1975 0c4e 1A60     		str	r2, [r3]
 1976              	.L104:
 936:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 937:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 938:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     return HAL_OK;
 1977              		.loc 1 938 0
 1978 0c50 0023     		movs	r3, #0
 1979 0c52 00E0     		b	.L98
 1980              	.L95:
 939:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
 940:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   else
 941:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
 942:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     return HAL_BUSY;
 1981              		.loc 1 942 0
 1982 0c54 0223     		movs	r3, #2
 1983              	.L98:
 943:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
 944:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 1984              		.loc 1 944 0
 1985 0c56 1846     		mov	r0, r3
 1986 0c58 1437     		adds	r7, r7, #20
 1987 0c5a BD46     		mov	sp, r7
 1988              		@ sp needed
 1989 0c5c 5DF8047B 		ldr	r7, [sp], #4
 1990 0c60 7047     		bx	lr
 1991              		.cfi_endproc
 1992              	.LFE62:
 1994 0c62 00BF     		.align	2
 1995              		.global	HAL_SPI_Receive_IT
 1996              		.thumb
 1997              		.thumb_func
 1999              	HAL_SPI_Receive_IT:
 2000              	.LFB63:
 945:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 946:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
 947:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief  Receive an amount of data in no-blocking mode with Interrupt
 948:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  hspi: SPI handle
 949:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  pData: pointer to data buffer
 950:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  Size: amount of data to be sent
 951:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval HAL status
 952:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
 953:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
 954:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 2001              		.loc 1 954 0
 2002              		.cfi_startproc
 2003              		@ args = 0, pretend = 0, frame = 16
 2004              		@ frame_needed = 1, uses_anonymous_args = 0
 2005 0c64 80B5     		push	{r7, lr}
 2006              		.cfi_def_cfa_offset 8
 2007              		.cfi_offset 7, -8
 2008              		.cfi_offset 14, -4
 2009 0c66 84B0     		sub	sp, sp, #16
 2010              		.cfi_def_cfa_offset 24
 2011 0c68 00AF     		add	r7, sp, #0
 2012              		.cfi_def_cfa_register 7
 2013 0c6a F860     		str	r0, [r7, #12]
 2014 0c6c B960     		str	r1, [r7, #8]
 2015 0c6e 1346     		mov	r3, r2
 2016 0c70 FB80     		strh	r3, [r7, #6]	@ movhi
 955:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_READY)
 2017              		.loc 1 955 0
 2018 0c72 FB68     		ldr	r3, [r7, #12]
 2019 0c74 93F85130 		ldrb	r3, [r3, #81]
 2020 0c78 DBB2     		uxtb	r3, r3
 2021 0c7a 012B     		cmp	r3, #1
 2022 0c7c 40F08880 		bne	.L106
 956:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
 957:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if((pData == NULL) || (Size == 0)) 
 2023              		.loc 1 957 0
 2024 0c80 BB68     		ldr	r3, [r7, #8]
 2025 0c82 002B     		cmp	r3, #0
 2026 0c84 02D0     		beq	.L107
 2027              		.loc 1 957 0 is_stmt 0 discriminator 1
 2028 0c86 FB88     		ldrh	r3, [r7, #6]
 2029 0c88 002B     		cmp	r3, #0
 2030 0c8a 01D1     		bne	.L108
 2031              	.L107:
 958:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 959:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       return  HAL_ERROR;
 2032              		.loc 1 959 0 is_stmt 1
 2033 0c8c 0123     		movs	r3, #1
 2034 0c8e 80E0     		b	.L109
 2035              	.L108:
 960:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 961:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 962:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Process Locked */
 963:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_LOCK(hspi);
 2036              		.loc 1 963 0
 2037 0c90 FB68     		ldr	r3, [r7, #12]
 2038 0c92 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 2039 0c96 012B     		cmp	r3, #1
 2040 0c98 01D1     		bne	.L110
 2041              		.loc 1 963 0 is_stmt 0 discriminator 1
 2042 0c9a 0223     		movs	r3, #2
 2043 0c9c 79E0     		b	.L109
 2044              	.L110:
 2045              		.loc 1 963 0 discriminator 2
 2046 0c9e FB68     		ldr	r3, [r7, #12]
 2047 0ca0 0122     		movs	r2, #1
 2048 0ca2 83F85020 		strb	r2, [r3, #80]
 964:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 965:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Configure communication */
 966:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->State        = HAL_SPI_STATE_BUSY_RX;
 2049              		.loc 1 966 0 is_stmt 1 discriminator 2
 2050 0ca6 FB68     		ldr	r3, [r7, #12]
 2051 0ca8 2222     		movs	r2, #34
 2052 0caa 83F85120 		strb	r2, [r3, #81]
 967:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->ErrorCode    = HAL_SPI_ERROR_NONE;
 2053              		.loc 1 967 0 discriminator 2
 2054 0cae FB68     		ldr	r3, [r7, #12]
 2055 0cb0 0022     		movs	r2, #0
 2056 0cb2 83F85220 		strb	r2, [r3, #82]
 968:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 969:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxISR = &SPI_RxISR;
 2057              		.loc 1 969 0 discriminator 2
 2058 0cb6 FA68     		ldr	r2, [r7, #12]
 2059 0cb8 40F20003 		movw	r3, #:lower16:SPI_RxISR
 2060 0cbc C0F20003 		movt	r3, #:upper16:SPI_RxISR
 2061 0cc0 9364     		str	r3, [r2, #72]
 970:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->pRxBuffPtr   = pData;
 2062              		.loc 1 970 0 discriminator 2
 2063 0cc2 FB68     		ldr	r3, [r7, #12]
 2064 0cc4 BA68     		ldr	r2, [r7, #8]
 2065 0cc6 9A63     		str	r2, [r3, #56]
 971:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxXferSize   = Size;
 2066              		.loc 1 971 0 discriminator 2
 2067 0cc8 FB68     		ldr	r3, [r7, #12]
 2068 0cca FA88     		ldrh	r2, [r7, #6]	@ movhi
 2069 0ccc 9A87     		strh	r2, [r3, #60]	@ movhi
 972:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxXferCount  = Size ; 
 2070              		.loc 1 972 0 discriminator 2
 2071 0cce FB68     		ldr	r3, [r7, #12]
 2072 0cd0 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2073 0cd2 DA87     		strh	r2, [r3, #62]	@ movhi
 973:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 974:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****    /*Init field not used in handle to zero */
 975:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxISR = 0;
 2074              		.loc 1 975 0 discriminator 2
 2075 0cd4 FB68     		ldr	r3, [r7, #12]
 2076 0cd6 0022     		movs	r2, #0
 2077 0cd8 DA64     		str	r2, [r3, #76]
 976:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxXferSize   = 0;
 2078              		.loc 1 976 0 discriminator 2
 2079 0cda FB68     		ldr	r3, [r7, #12]
 2080 0cdc 0022     		movs	r2, #0
 2081 0cde 9A86     		strh	r2, [r3, #52]	@ movhi
 977:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxXferCount  = 0;
 2082              		.loc 1 977 0 discriminator 2
 2083 0ce0 FB68     		ldr	r3, [r7, #12]
 2084 0ce2 0022     		movs	r2, #0
 2085 0ce4 DA86     		strh	r2, [r3, #54]	@ movhi
 978:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 979:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Configure communication direction : 1Line */
 980:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
 2086              		.loc 1 980 0 discriminator 2
 2087 0ce6 FB68     		ldr	r3, [r7, #12]
 2088 0ce8 9B68     		ldr	r3, [r3, #8]
 2089 0cea B3F5004F 		cmp	r3, #32768
 2090 0cee 08D1     		bne	.L111
 981:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 982:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****        __HAL_SPI_1LINE_RX(hspi);
 2091              		.loc 1 982 0
 2092 0cf0 FB68     		ldr	r3, [r7, #12]
 2093 0cf2 1B68     		ldr	r3, [r3]
 2094 0cf4 FA68     		ldr	r2, [r7, #12]
 2095 0cf6 1268     		ldr	r2, [r2]
 2096 0cf8 1268     		ldr	r2, [r2]
 2097 0cfa 22F48042 		bic	r2, r2, #16384
 2098 0cfe 1A60     		str	r2, [r3]
 2099 0d00 14E0     		b	.L112
 2100              	.L111:
 983:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 984:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     else if((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
 2101              		.loc 1 984 0
 2102 0d02 FB68     		ldr	r3, [r7, #12]
 2103 0d04 9B68     		ldr	r3, [r3, #8]
 2104 0d06 002B     		cmp	r3, #0
 2105 0d08 10D1     		bne	.L112
 2106              		.loc 1 984 0 is_stmt 0 discriminator 1
 2107 0d0a FB68     		ldr	r3, [r7, #12]
 2108 0d0c 5B68     		ldr	r3, [r3, #4]
 2109 0d0e B3F5827F 		cmp	r3, #260
 2110 0d12 0BD1     		bne	.L112
 985:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 986:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****        /* Process Unlocked */
 987:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****        __HAL_UNLOCK(hspi);
 2111              		.loc 1 987 0 is_stmt 1
 2112 0d14 FB68     		ldr	r3, [r7, #12]
 2113 0d16 0022     		movs	r2, #0
 2114 0d18 83F85020 		strb	r2, [r3, #80]
 988:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 989:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****        /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK li
 990:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****        return HAL_SPI_TransmitReceive_IT(hspi, pData, pData, Size);
 2115              		.loc 1 990 0
 2116 0d1c FB88     		ldrh	r3, [r7, #6]
 2117 0d1e F868     		ldr	r0, [r7, #12]
 2118 0d20 B968     		ldr	r1, [r7, #8]
 2119 0d22 BA68     		ldr	r2, [r7, #8]
 2120 0d24 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_IT
 2121 0d28 0346     		mov	r3, r0
 2122 0d2a 32E0     		b	.L109
 2123              	.L112:
 991:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 992:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 993:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Reset CRC Calculation */
 994:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED)
 2124              		.loc 1 994 0
 2125 0d2c FB68     		ldr	r3, [r7, #12]
 2126 0d2e 9B6A     		ldr	r3, [r3, #40]
 2127 0d30 B3F5005F 		cmp	r3, #8192
 2128 0d34 0FD1     		bne	.L113
 995:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 996:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_RESET_CRC(hspi);
 2129              		.loc 1 996 0
 2130 0d36 FB68     		ldr	r3, [r7, #12]
 2131 0d38 1B68     		ldr	r3, [r3]
 2132 0d3a FA68     		ldr	r2, [r7, #12]
 2133 0d3c 1268     		ldr	r2, [r2]
 2134 0d3e 1268     		ldr	r2, [r2]
 2135 0d40 22F40052 		bic	r2, r2, #8192
 2136 0d44 1A60     		str	r2, [r3]
 2137 0d46 FB68     		ldr	r3, [r7, #12]
 2138 0d48 1B68     		ldr	r3, [r3]
 2139 0d4a FA68     		ldr	r2, [r7, #12]
 2140 0d4c 1268     		ldr	r2, [r2]
 2141 0d4e 1268     		ldr	r2, [r2]
 2142 0d50 42F40052 		orr	r2, r2, #8192
 2143 0d54 1A60     		str	r2, [r3]
 2144              	.L113:
 997:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
 998:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
 999:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Enable TXE and ERR interrupt */
1000:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
 2145              		.loc 1 1000 0
 2146 0d56 FB68     		ldr	r3, [r7, #12]
 2147 0d58 1B68     		ldr	r3, [r3]
 2148 0d5a FA68     		ldr	r2, [r7, #12]
 2149 0d5c 1268     		ldr	r2, [r2]
 2150 0d5e 5268     		ldr	r2, [r2, #4]
 2151 0d60 42F06002 		orr	r2, r2, #96
 2152 0d64 5A60     		str	r2, [r3, #4]
1001:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1002:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Process Unlocked */
1003:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 2153              		.loc 1 1003 0
 2154 0d66 FB68     		ldr	r3, [r7, #12]
 2155 0d68 0022     		movs	r2, #0
 2156 0d6a 83F85020 		strb	r2, [r3, #80]
1004:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1005:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Note : The SPI must be enabled after unlocking current process 
1006:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****               to avoid the risk of SPI interrupt handle execution before current
1007:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****               process unlock */
1008:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1009:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         /* Check if the SPI is already enabled */ 
1010:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
 2157              		.loc 1 1010 0
 2158 0d6e FB68     		ldr	r3, [r7, #12]
 2159 0d70 1B68     		ldr	r3, [r3]
 2160 0d72 1B68     		ldr	r3, [r3]
 2161 0d74 03F04003 		and	r3, r3, #64
 2162 0d78 002B     		cmp	r3, #0
 2163 0d7a 07D1     		bne	.L114
1011:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1012:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Enable SPI peripheral */
1013:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
 2164              		.loc 1 1013 0
 2165 0d7c FB68     		ldr	r3, [r7, #12]
 2166 0d7e 1B68     		ldr	r3, [r3]
 2167 0d80 FA68     		ldr	r2, [r7, #12]
 2168 0d82 1268     		ldr	r2, [r2]
 2169 0d84 1268     		ldr	r2, [r2]
 2170 0d86 42F04002 		orr	r2, r2, #64
 2171 0d8a 1A60     		str	r2, [r3]
 2172              	.L114:
1014:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1015:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1016:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     return HAL_OK;
 2173              		.loc 1 1016 0
 2174 0d8c 0023     		movs	r3, #0
 2175 0d8e 00E0     		b	.L109
 2176              	.L106:
1017:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1018:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   else
1019:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1020:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     return HAL_BUSY; 
 2177              		.loc 1 1020 0
 2178 0d90 0223     		movs	r3, #2
 2179              	.L109:
1021:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1022:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 2180              		.loc 1 1022 0
 2181 0d92 1846     		mov	r0, r3
 2182 0d94 1037     		adds	r7, r7, #16
 2183 0d96 BD46     		mov	sp, r7
 2184              		@ sp needed
 2185 0d98 80BD     		pop	{r7, pc}
 2186              		.cfi_endproc
 2187              	.LFE63:
 2189 0d9a 00BF     		.align	2
 2190              		.global	HAL_SPI_TransmitReceive_IT
 2191              		.thumb
 2192              		.thumb_func
 2194              	HAL_SPI_TransmitReceive_IT:
 2195              	.LFB64:
1023:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1024:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
1025:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in no-blocking mode with Interrupt 
1026:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  hspi: SPI handle
1027:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  pTxData: pointer to transmission data buffer
1028:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  pRxData: pointer to reception data buffer to be
1029:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  Size: amount of data to be sent
1030:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval HAL status
1031:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
1032:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_IT(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pR
1033:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 2196              		.loc 1 1033 0
 2197              		.cfi_startproc
 2198              		@ args = 0, pretend = 0, frame = 24
 2199              		@ frame_needed = 1, uses_anonymous_args = 0
 2200              		@ link register save eliminated.
 2201 0d9c 80B4     		push	{r7}
 2202              		.cfi_def_cfa_offset 4
 2203              		.cfi_offset 7, -4
 2204 0d9e 87B0     		sub	sp, sp, #28
 2205              		.cfi_def_cfa_offset 32
 2206 0da0 00AF     		add	r7, sp, #0
 2207              		.cfi_def_cfa_register 7
 2208 0da2 F860     		str	r0, [r7, #12]
 2209 0da4 B960     		str	r1, [r7, #8]
 2210 0da6 7A60     		str	r2, [r7, #4]
 2211 0da8 7B80     		strh	r3, [r7, #2]	@ movhi
1034:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****  uint32_t tmp = 0;
 2212              		.loc 1 1034 0
 2213 0daa 0023     		movs	r3, #0
 2214 0dac 7B61     		str	r3, [r7, #20]
1035:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1036:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****  tmp = hspi->State;
 2215              		.loc 1 1036 0
 2216 0dae FB68     		ldr	r3, [r7, #12]
 2217 0db0 93F85130 		ldrb	r3, [r3, #81]
 2218 0db4 DBB2     		uxtb	r3, r3
 2219 0db6 7B61     		str	r3, [r7, #20]
1037:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****  if((tmp == HAL_SPI_STATE_READY) || (tmp == HAL_SPI_STATE_BUSY_RX))
 2220              		.loc 1 1037 0
 2221 0db8 7B69     		ldr	r3, [r7, #20]
 2222 0dba 012B     		cmp	r3, #1
 2223 0dbc 02D0     		beq	.L116
 2224              		.loc 1 1037 0 is_stmt 0 discriminator 1
 2225 0dbe 7B69     		ldr	r3, [r7, #20]
 2226 0dc0 222B     		cmp	r3, #34
 2227 0dc2 73D1     		bne	.L117
 2228              	.L116:
1038:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1039:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if((pTxData == NULL ) || (pRxData == NULL ) || (Size == 0)) 
 2229              		.loc 1 1039 0 is_stmt 1
 2230 0dc4 BB68     		ldr	r3, [r7, #8]
 2231 0dc6 002B     		cmp	r3, #0
 2232 0dc8 05D0     		beq	.L118
 2233              		.loc 1 1039 0 is_stmt 0 discriminator 1
 2234 0dca 7B68     		ldr	r3, [r7, #4]
 2235 0dcc 002B     		cmp	r3, #0
 2236 0dce 02D0     		beq	.L118
 2237 0dd0 7B88     		ldrh	r3, [r7, #2]
 2238 0dd2 002B     		cmp	r3, #0
 2239 0dd4 01D1     		bne	.L119
 2240              	.L118:
1040:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1041:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       return  HAL_ERROR;
 2241              		.loc 1 1041 0 is_stmt 1
 2242 0dd6 0123     		movs	r3, #1
 2243 0dd8 69E0     		b	.L120
 2244              	.L119:
1042:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1043:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1044:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Check the parameters */
1045:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1046:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1047:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Process locked */
1048:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_LOCK(hspi);
 2245              		.loc 1 1048 0
 2246 0dda FB68     		ldr	r3, [r7, #12]
 2247 0ddc 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 2248 0de0 012B     		cmp	r3, #1
 2249 0de2 01D1     		bne	.L121
 2250              		.loc 1 1048 0 is_stmt 0 discriminator 1
 2251 0de4 0223     		movs	r3, #2
 2252 0de6 62E0     		b	.L120
 2253              	.L121:
 2254              		.loc 1 1048 0 discriminator 2
 2255 0de8 FB68     		ldr	r3, [r7, #12]
 2256 0dea 0122     		movs	r2, #1
 2257 0dec 83F85020 		strb	r2, [r3, #80]
1049:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1050:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1051:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->State == HAL_SPI_STATE_READY)
 2258              		.loc 1 1051 0 is_stmt 1 discriminator 2
 2259 0df0 FB68     		ldr	r3, [r7, #12]
 2260 0df2 93F85130 		ldrb	r3, [r3, #81]
 2261 0df6 DBB2     		uxtb	r3, r3
 2262 0df8 012B     		cmp	r3, #1
 2263 0dfa 03D1     		bne	.L122
1052:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1053:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 2264              		.loc 1 1053 0
 2265 0dfc FB68     		ldr	r3, [r7, #12]
 2266 0dfe 3222     		movs	r2, #50
 2267 0e00 83F85120 		strb	r2, [r3, #81]
 2268              	.L122:
1054:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1055:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1056:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Configure communication */
1057:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->ErrorCode    = HAL_SPI_ERROR_NONE;
 2269              		.loc 1 1057 0
 2270 0e04 FB68     		ldr	r3, [r7, #12]
 2271 0e06 0022     		movs	r2, #0
 2272 0e08 83F85220 		strb	r2, [r3, #82]
1058:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1059:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxISR = &SPI_TxISR;
 2273              		.loc 1 1059 0
 2274 0e0c FA68     		ldr	r2, [r7, #12]
 2275 0e0e 40F20003 		movw	r3, #:lower16:SPI_TxISR
 2276 0e12 C0F20003 		movt	r3, #:upper16:SPI_TxISR
 2277 0e16 D364     		str	r3, [r2, #76]
1060:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->pTxBuffPtr   = pTxData;
 2278              		.loc 1 1060 0
 2279 0e18 FB68     		ldr	r3, [r7, #12]
 2280 0e1a BA68     		ldr	r2, [r7, #8]
 2281 0e1c 1A63     		str	r2, [r3, #48]
1061:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxXferSize   = Size;
 2282              		.loc 1 1061 0
 2283 0e1e FB68     		ldr	r3, [r7, #12]
 2284 0e20 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2285 0e22 9A86     		strh	r2, [r3, #52]	@ movhi
1062:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxXferCount  = Size;
 2286              		.loc 1 1062 0
 2287 0e24 FB68     		ldr	r3, [r7, #12]
 2288 0e26 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2289 0e28 DA86     		strh	r2, [r3, #54]	@ movhi
1063:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1064:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxISR = &SPI_2LinesRxISR;
 2290              		.loc 1 1064 0
 2291 0e2a FA68     		ldr	r2, [r7, #12]
 2292 0e2c 40F20003 		movw	r3, #:lower16:SPI_2LinesRxISR
 2293 0e30 C0F20003 		movt	r3, #:upper16:SPI_2LinesRxISR
 2294 0e34 9364     		str	r3, [r2, #72]
1065:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->pRxBuffPtr   = pRxData;
 2295              		.loc 1 1065 0
 2296 0e36 FB68     		ldr	r3, [r7, #12]
 2297 0e38 7A68     		ldr	r2, [r7, #4]
 2298 0e3a 9A63     		str	r2, [r3, #56]
1066:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxXferSize   = Size;
 2299              		.loc 1 1066 0
 2300 0e3c FB68     		ldr	r3, [r7, #12]
 2301 0e3e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2302 0e40 9A87     		strh	r2, [r3, #60]	@ movhi
1067:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxXferCount  = Size;
 2303              		.loc 1 1067 0
 2304 0e42 FB68     		ldr	r3, [r7, #12]
 2305 0e44 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2306 0e46 DA87     		strh	r2, [r3, #62]	@ movhi
1068:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1069:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Reset CRC Calculation */
1070:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED)
 2307              		.loc 1 1070 0
 2308 0e48 FB68     		ldr	r3, [r7, #12]
 2309 0e4a 9B6A     		ldr	r3, [r3, #40]
 2310 0e4c B3F5005F 		cmp	r3, #8192
 2311 0e50 0FD1     		bne	.L123
1071:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1072:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_RESET_CRC(hspi);
 2312              		.loc 1 1072 0
 2313 0e52 FB68     		ldr	r3, [r7, #12]
 2314 0e54 1B68     		ldr	r3, [r3]
 2315 0e56 FA68     		ldr	r2, [r7, #12]
 2316 0e58 1268     		ldr	r2, [r2]
 2317 0e5a 1268     		ldr	r2, [r2]
 2318 0e5c 22F40052 		bic	r2, r2, #8192
 2319 0e60 1A60     		str	r2, [r3]
 2320 0e62 FB68     		ldr	r3, [r7, #12]
 2321 0e64 1B68     		ldr	r3, [r3]
 2322 0e66 FA68     		ldr	r2, [r7, #12]
 2323 0e68 1268     		ldr	r2, [r2]
 2324 0e6a 1268     		ldr	r2, [r2]
 2325 0e6c 42F40052 		orr	r2, r2, #8192
 2326 0e70 1A60     		str	r2, [r3]
 2327              	.L123:
1073:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1074:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1075:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Enable TXE, RXNE and ERR interrupt */
1076:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 2328              		.loc 1 1076 0
 2329 0e72 FB68     		ldr	r3, [r7, #12]
 2330 0e74 1B68     		ldr	r3, [r3]
 2331 0e76 FA68     		ldr	r2, [r7, #12]
 2332 0e78 1268     		ldr	r2, [r2]
 2333 0e7a 5268     		ldr	r2, [r2, #4]
 2334 0e7c 42F0E002 		orr	r2, r2, #224
 2335 0e80 5A60     		str	r2, [r3, #4]
1077:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1078:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Process Unlocked */
1079:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 2336              		.loc 1 1079 0
 2337 0e82 FB68     		ldr	r3, [r7, #12]
 2338 0e84 0022     		movs	r2, #0
 2339 0e86 83F85020 		strb	r2, [r3, #80]
1080:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1081:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Check if the SPI is already enabled */ 
1082:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
 2340              		.loc 1 1082 0
 2341 0e8a FB68     		ldr	r3, [r7, #12]
 2342 0e8c 1B68     		ldr	r3, [r3]
 2343 0e8e 1B68     		ldr	r3, [r3]
 2344 0e90 03F04003 		and	r3, r3, #64
 2345 0e94 002B     		cmp	r3, #0
 2346 0e96 07D1     		bne	.L124
1083:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1084:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Enable SPI peripheral */
1085:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
 2347              		.loc 1 1085 0
 2348 0e98 FB68     		ldr	r3, [r7, #12]
 2349 0e9a 1B68     		ldr	r3, [r3]
 2350 0e9c FA68     		ldr	r2, [r7, #12]
 2351 0e9e 1268     		ldr	r2, [r2]
 2352 0ea0 1268     		ldr	r2, [r2]
 2353 0ea2 42F04002 		orr	r2, r2, #64
 2354 0ea6 1A60     		str	r2, [r3]
 2355              	.L124:
1086:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1087:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1088:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     return HAL_OK;
 2356              		.loc 1 1088 0
 2357 0ea8 0023     		movs	r3, #0
 2358 0eaa 00E0     		b	.L120
 2359              	.L117:
1089:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1090:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   else
1091:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1092:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     return HAL_BUSY; 
 2360              		.loc 1 1092 0
 2361 0eac 0223     		movs	r3, #2
 2362              	.L120:
1093:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1094:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 2363              		.loc 1 1094 0
 2364 0eae 1846     		mov	r0, r3
 2365 0eb0 1C37     		adds	r7, r7, #28
 2366 0eb2 BD46     		mov	sp, r7
 2367              		@ sp needed
 2368 0eb4 5DF8047B 		ldr	r7, [sp], #4
 2369 0eb8 7047     		bx	lr
 2370              		.cfi_endproc
 2371              	.LFE64:
 2373 0eba 00BF     		.align	2
 2374              		.global	HAL_SPI_Transmit_DMA
 2375              		.thumb
 2376              		.thumb_func
 2378              	HAL_SPI_Transmit_DMA:
 2379              	.LFB65:
1095:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1096:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
1097:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief  Transmit an amount of data in no-blocking mode with DMA
1098:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  hspi: SPI handle
1099:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  pData: pointer to data buffer
1100:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  Size: amount of data to be sent
1101:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval HAL status
1102:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
1103:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1104:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 2380              		.loc 1 1104 0
 2381              		.cfi_startproc
 2382              		@ args = 0, pretend = 0, frame = 16
 2383              		@ frame_needed = 1, uses_anonymous_args = 0
 2384 0ebc 80B5     		push	{r7, lr}
 2385              		.cfi_def_cfa_offset 8
 2386              		.cfi_offset 7, -8
 2387              		.cfi_offset 14, -4
 2388 0ebe 84B0     		sub	sp, sp, #16
 2389              		.cfi_def_cfa_offset 24
 2390 0ec0 00AF     		add	r7, sp, #0
 2391              		.cfi_def_cfa_register 7
 2392 0ec2 F860     		str	r0, [r7, #12]
 2393 0ec4 B960     		str	r1, [r7, #8]
 2394 0ec6 1346     		mov	r3, r2
 2395 0ec8 FB80     		strh	r3, [r7, #6]	@ movhi
1105:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_READY)
 2396              		.loc 1 1105 0
 2397 0eca FB68     		ldr	r3, [r7, #12]
 2398 0ecc 93F85130 		ldrb	r3, [r3, #81]
 2399 0ed0 DBB2     		uxtb	r3, r3
 2400 0ed2 012B     		cmp	r3, #1
 2401 0ed4 40F08A80 		bne	.L126
1106:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1107:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if((pData == NULL) || (Size == 0))
 2402              		.loc 1 1107 0
 2403 0ed8 BB68     		ldr	r3, [r7, #8]
 2404 0eda 002B     		cmp	r3, #0
 2405 0edc 02D0     		beq	.L127
 2406              		.loc 1 1107 0 is_stmt 0 discriminator 1
 2407 0ede FB88     		ldrh	r3, [r7, #6]
 2408 0ee0 002B     		cmp	r3, #0
 2409 0ee2 01D1     		bne	.L128
 2410              	.L127:
1108:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1109:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       return  HAL_ERROR;
 2411              		.loc 1 1109 0 is_stmt 1
 2412 0ee4 0123     		movs	r3, #1
 2413 0ee6 82E0     		b	.L129
 2414              	.L128:
1110:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1111:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1112:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Check the parameters */
1113:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1114:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1115:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Process Locked */
1116:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_LOCK(hspi);
 2415              		.loc 1 1116 0
 2416 0ee8 FB68     		ldr	r3, [r7, #12]
 2417 0eea 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 2418 0eee 012B     		cmp	r3, #1
 2419 0ef0 01D1     		bne	.L130
 2420              		.loc 1 1116 0 is_stmt 0 discriminator 1
 2421 0ef2 0223     		movs	r3, #2
 2422 0ef4 7BE0     		b	.L129
 2423              	.L130:
 2424              		.loc 1 1116 0 discriminator 2
 2425 0ef6 FB68     		ldr	r3, [r7, #12]
 2426 0ef8 0122     		movs	r2, #1
 2427 0efa 83F85020 		strb	r2, [r3, #80]
1117:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1118:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Configure communication */
1119:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->State       = HAL_SPI_STATE_BUSY_TX;
 2428              		.loc 1 1119 0 is_stmt 1 discriminator 2
 2429 0efe FB68     		ldr	r3, [r7, #12]
 2430 0f00 1222     		movs	r2, #18
 2431 0f02 83F85120 		strb	r2, [r3, #81]
1120:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2432              		.loc 1 1120 0 discriminator 2
 2433 0f06 FB68     		ldr	r3, [r7, #12]
 2434 0f08 0022     		movs	r2, #0
 2435 0f0a 83F85220 		strb	r2, [r3, #82]
1121:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1122:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->pTxBuffPtr  = pData;
 2436              		.loc 1 1122 0 discriminator 2
 2437 0f0e FB68     		ldr	r3, [r7, #12]
 2438 0f10 BA68     		ldr	r2, [r7, #8]
 2439 0f12 1A63     		str	r2, [r3, #48]
1123:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxXferSize  = Size;
 2440              		.loc 1 1123 0 discriminator 2
 2441 0f14 FB68     		ldr	r3, [r7, #12]
 2442 0f16 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2443 0f18 9A86     		strh	r2, [r3, #52]	@ movhi
1124:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxXferCount = Size;
 2444              		.loc 1 1124 0 discriminator 2
 2445 0f1a FB68     		ldr	r3, [r7, #12]
 2446 0f1c FA88     		ldrh	r2, [r7, #6]	@ movhi
 2447 0f1e DA86     		strh	r2, [r3, #54]	@ movhi
1125:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1126:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /*Init field not used in handle to zero */
1127:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxISR = 0;
 2448              		.loc 1 1127 0 discriminator 2
 2449 0f20 FB68     		ldr	r3, [r7, #12]
 2450 0f22 0022     		movs	r2, #0
 2451 0f24 DA64     		str	r2, [r3, #76]
1128:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxISR = 0;
 2452              		.loc 1 1128 0 discriminator 2
 2453 0f26 FB68     		ldr	r3, [r7, #12]
 2454 0f28 0022     		movs	r2, #0
 2455 0f2a 9A64     		str	r2, [r3, #72]
1129:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxXferSize   = 0;
 2456              		.loc 1 1129 0 discriminator 2
 2457 0f2c FB68     		ldr	r3, [r7, #12]
 2458 0f2e 0022     		movs	r2, #0
 2459 0f30 9A87     		strh	r2, [r3, #60]	@ movhi
1130:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxXferCount  = 0;
 2460              		.loc 1 1130 0 discriminator 2
 2461 0f32 FB68     		ldr	r3, [r7, #12]
 2462 0f34 0022     		movs	r2, #0
 2463 0f36 DA87     		strh	r2, [r3, #62]	@ movhi
1131:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1132:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Configure communication direction : 1Line */
1133:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
 2464              		.loc 1 1133 0 discriminator 2
 2465 0f38 FB68     		ldr	r3, [r7, #12]
 2466 0f3a 9B68     		ldr	r3, [r3, #8]
 2467 0f3c B3F5004F 		cmp	r3, #32768
 2468 0f40 07D1     		bne	.L131
1134:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1135:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_1LINE_TX(hspi);
 2469              		.loc 1 1135 0
 2470 0f42 FB68     		ldr	r3, [r7, #12]
 2471 0f44 1B68     		ldr	r3, [r3]
 2472 0f46 FA68     		ldr	r2, [r7, #12]
 2473 0f48 1268     		ldr	r2, [r2]
 2474 0f4a 1268     		ldr	r2, [r2]
 2475 0f4c 42F48042 		orr	r2, r2, #16384
 2476 0f50 1A60     		str	r2, [r3]
 2477              	.L131:
1136:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1137:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1138:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Reset CRC Calculation */
1139:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED)
 2478              		.loc 1 1139 0
 2479 0f52 FB68     		ldr	r3, [r7, #12]
 2480 0f54 9B6A     		ldr	r3, [r3, #40]
 2481 0f56 B3F5005F 		cmp	r3, #8192
 2482 0f5a 0FD1     		bne	.L132
1140:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1141:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_RESET_CRC(hspi);
 2483              		.loc 1 1141 0
 2484 0f5c FB68     		ldr	r3, [r7, #12]
 2485 0f5e 1B68     		ldr	r3, [r3]
 2486 0f60 FA68     		ldr	r2, [r7, #12]
 2487 0f62 1268     		ldr	r2, [r2]
 2488 0f64 1268     		ldr	r2, [r2]
 2489 0f66 22F40052 		bic	r2, r2, #8192
 2490 0f6a 1A60     		str	r2, [r3]
 2491 0f6c FB68     		ldr	r3, [r7, #12]
 2492 0f6e 1B68     		ldr	r3, [r3]
 2493 0f70 FA68     		ldr	r2, [r7, #12]
 2494 0f72 1268     		ldr	r2, [r2]
 2495 0f74 1268     		ldr	r2, [r2]
 2496 0f76 42F40052 		orr	r2, r2, #8192
 2497 0f7a 1A60     		str	r2, [r3]
 2498              	.L132:
1142:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1143:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1144:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Set the SPI TxDMA transfer complete callback */
1145:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 2499              		.loc 1 1145 0
 2500 0f7c FB68     		ldr	r3, [r7, #12]
 2501 0f7e 1A6C     		ldr	r2, [r3, #64]
 2502 0f80 40F20003 		movw	r3, #:lower16:SPI_DMATransmitCplt
 2503 0f84 C0F20003 		movt	r3, #:upper16:SPI_DMATransmitCplt
 2504 0f88 D363     		str	r3, [r2, #60]
1146:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1147:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Set the DMA error callback */
1148:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 2505              		.loc 1 1148 0
 2506 0f8a FB68     		ldr	r3, [r7, #12]
 2507 0f8c 1A6C     		ldr	r2, [r3, #64]
 2508 0f8e 40F20003 		movw	r3, #:lower16:SPI_DMAError
 2509 0f92 C0F20003 		movt	r3, #:upper16:SPI_DMAError
 2510 0f96 9364     		str	r3, [r2, #72]
1149:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1150:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Enable the Tx DMA Stream */
1151:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR, hspi-
 2511              		.loc 1 1151 0
 2512 0f98 FB68     		ldr	r3, [r7, #12]
 2513 0f9a 186C     		ldr	r0, [r3, #64]
 2514 0f9c FB68     		ldr	r3, [r7, #12]
 2515 0f9e 1B6B     		ldr	r3, [r3, #48]
 2516 0fa0 1946     		mov	r1, r3
 2517 0fa2 FB68     		ldr	r3, [r7, #12]
 2518 0fa4 1B68     		ldr	r3, [r3]
 2519 0fa6 0C33     		adds	r3, r3, #12
 2520 0fa8 1A46     		mov	r2, r3
 2521 0faa FB68     		ldr	r3, [r7, #12]
 2522 0fac DB8E     		ldrh	r3, [r3, #54]
 2523 0fae FFF7FEFF 		bl	HAL_DMA_Start_IT
1152:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1153:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Enable Tx DMA Request */
1154:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->Instance->CR2 |= SPI_CR2_TXDMAEN;
 2524              		.loc 1 1154 0
 2525 0fb2 FB68     		ldr	r3, [r7, #12]
 2526 0fb4 1B68     		ldr	r3, [r3]
 2527 0fb6 FA68     		ldr	r2, [r7, #12]
 2528 0fb8 1268     		ldr	r2, [r2]
 2529 0fba 5268     		ldr	r2, [r2, #4]
 2530 0fbc 42F00202 		orr	r2, r2, #2
 2531 0fc0 5A60     		str	r2, [r3, #4]
1155:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1156:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Process Unlocked */
1157:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 2532              		.loc 1 1157 0
 2533 0fc2 FB68     		ldr	r3, [r7, #12]
 2534 0fc4 0022     		movs	r2, #0
 2535 0fc6 83F85020 		strb	r2, [r3, #80]
1158:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1159:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Check if the SPI is already enabled */ 
1160:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
 2536              		.loc 1 1160 0
 2537 0fca FB68     		ldr	r3, [r7, #12]
 2538 0fcc 1B68     		ldr	r3, [r3]
 2539 0fce 1B68     		ldr	r3, [r3]
 2540 0fd0 03F04003 		and	r3, r3, #64
 2541 0fd4 002B     		cmp	r3, #0
 2542 0fd6 07D1     		bne	.L133
1161:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1162:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Enable SPI peripheral */
1163:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
 2543              		.loc 1 1163 0
 2544 0fd8 FB68     		ldr	r3, [r7, #12]
 2545 0fda 1B68     		ldr	r3, [r3]
 2546 0fdc FA68     		ldr	r2, [r7, #12]
 2547 0fde 1268     		ldr	r2, [r2]
 2548 0fe0 1268     		ldr	r2, [r2]
 2549 0fe2 42F04002 		orr	r2, r2, #64
 2550 0fe6 1A60     		str	r2, [r3]
 2551              	.L133:
1164:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1165:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1166:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     return HAL_OK;
 2552              		.loc 1 1166 0
 2553 0fe8 0023     		movs	r3, #0
 2554 0fea 00E0     		b	.L129
 2555              	.L126:
1167:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1168:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   else
1169:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1170:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     return HAL_BUSY;
 2556              		.loc 1 1170 0
 2557 0fec 0223     		movs	r3, #2
 2558              	.L129:
1171:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1172:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 2559              		.loc 1 1172 0
 2560 0fee 1846     		mov	r0, r3
 2561 0ff0 1037     		adds	r7, r7, #16
 2562 0ff2 BD46     		mov	sp, r7
 2563              		@ sp needed
 2564 0ff4 80BD     		pop	{r7, pc}
 2565              		.cfi_endproc
 2566              	.LFE65:
 2568 0ff6 00BF     		.align	2
 2569              		.global	HAL_SPI_Receive_DMA
 2570              		.thumb
 2571              		.thumb_func
 2573              	HAL_SPI_Receive_DMA:
 2574              	.LFB66:
1173:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1174:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
1175:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief  Receive an amount of data in no-blocking mode with DMA 
1176:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  hspi: SPI handle
1177:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  pData: pointer to data buffer
1178:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @note  When the CRC feature is enabled the pData Length must be Size + 1. 
1179:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  Size: amount of data to be sent
1180:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval HAL status
1181:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
1182:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1183:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 2575              		.loc 1 1183 0
 2576              		.cfi_startproc
 2577              		@ args = 0, pretend = 0, frame = 16
 2578              		@ frame_needed = 1, uses_anonymous_args = 0
 2579 0ff8 80B5     		push	{r7, lr}
 2580              		.cfi_def_cfa_offset 8
 2581              		.cfi_offset 7, -8
 2582              		.cfi_offset 14, -4
 2583 0ffa 84B0     		sub	sp, sp, #16
 2584              		.cfi_def_cfa_offset 24
 2585 0ffc 00AF     		add	r7, sp, #0
 2586              		.cfi_def_cfa_register 7
 2587 0ffe F860     		str	r0, [r7, #12]
 2588 1000 B960     		str	r1, [r7, #8]
 2589 1002 1346     		mov	r3, r2
 2590 1004 FB80     		strh	r3, [r7, #6]	@ movhi
1184:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_READY)
 2591              		.loc 1 1184 0
 2592 1006 FB68     		ldr	r3, [r7, #12]
 2593 1008 93F85130 		ldrb	r3, [r3, #81]
 2594 100c DBB2     		uxtb	r3, r3
 2595 100e 012B     		cmp	r3, #1
 2596 1010 40F0A080 		bne	.L135
1185:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1186:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if((pData == NULL) || (Size == 0))
 2597              		.loc 1 1186 0
 2598 1014 BB68     		ldr	r3, [r7, #8]
 2599 1016 002B     		cmp	r3, #0
 2600 1018 02D0     		beq	.L136
 2601              		.loc 1 1186 0 is_stmt 0 discriminator 1
 2602 101a FB88     		ldrh	r3, [r7, #6]
 2603 101c 002B     		cmp	r3, #0
 2604 101e 01D1     		bne	.L137
 2605              	.L136:
1187:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1188:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       return  HAL_ERROR;
 2606              		.loc 1 1188 0 is_stmt 1
 2607 1020 0123     		movs	r3, #1
 2608 1022 98E0     		b	.L138
 2609              	.L137:
1189:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1190:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1191:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Process Locked */
1192:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_LOCK(hspi);
 2610              		.loc 1 1192 0
 2611 1024 FB68     		ldr	r3, [r7, #12]
 2612 1026 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 2613 102a 012B     		cmp	r3, #1
 2614 102c 01D1     		bne	.L139
 2615              		.loc 1 1192 0 is_stmt 0 discriminator 1
 2616 102e 0223     		movs	r3, #2
 2617 1030 91E0     		b	.L138
 2618              	.L139:
 2619              		.loc 1 1192 0 discriminator 2
 2620 1032 FB68     		ldr	r3, [r7, #12]
 2621 1034 0122     		movs	r2, #1
 2622 1036 83F85020 		strb	r2, [r3, #80]
1193:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1194:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Configure communication */
1195:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->State       = HAL_SPI_STATE_BUSY_RX;
 2623              		.loc 1 1195 0 is_stmt 1 discriminator 2
 2624 103a FB68     		ldr	r3, [r7, #12]
 2625 103c 2222     		movs	r2, #34
 2626 103e 83F85120 		strb	r2, [r3, #81]
1196:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2627              		.loc 1 1196 0 discriminator 2
 2628 1042 FB68     		ldr	r3, [r7, #12]
 2629 1044 0022     		movs	r2, #0
 2630 1046 83F85220 		strb	r2, [r3, #82]
1197:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1198:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->pRxBuffPtr  = pData;
 2631              		.loc 1 1198 0 discriminator 2
 2632 104a FB68     		ldr	r3, [r7, #12]
 2633 104c BA68     		ldr	r2, [r7, #8]
 2634 104e 9A63     		str	r2, [r3, #56]
1199:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxXferSize  = Size;
 2635              		.loc 1 1199 0 discriminator 2
 2636 1050 FB68     		ldr	r3, [r7, #12]
 2637 1052 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2638 1054 9A87     		strh	r2, [r3, #60]	@ movhi
1200:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxXferCount = Size;
 2639              		.loc 1 1200 0 discriminator 2
 2640 1056 FB68     		ldr	r3, [r7, #12]
 2641 1058 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2642 105a DA87     		strh	r2, [r3, #62]	@ movhi
1201:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1202:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /*Init field not used in handle to zero */
1203:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxISR = 0;
 2643              		.loc 1 1203 0 discriminator 2
 2644 105c FB68     		ldr	r3, [r7, #12]
 2645 105e 0022     		movs	r2, #0
 2646 1060 9A64     		str	r2, [r3, #72]
1204:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxISR = 0;
 2647              		.loc 1 1204 0 discriminator 2
 2648 1062 FB68     		ldr	r3, [r7, #12]
 2649 1064 0022     		movs	r2, #0
 2650 1066 DA64     		str	r2, [r3, #76]
1205:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxXferSize   = 0;
 2651              		.loc 1 1205 0 discriminator 2
 2652 1068 FB68     		ldr	r3, [r7, #12]
 2653 106a 0022     		movs	r2, #0
 2654 106c 9A86     		strh	r2, [r3, #52]	@ movhi
1206:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxXferCount  = 0;
 2655              		.loc 1 1206 0 discriminator 2
 2656 106e FB68     		ldr	r3, [r7, #12]
 2657 1070 0022     		movs	r2, #0
 2658 1072 DA86     		strh	r2, [r3, #54]	@ movhi
1207:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1208:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Configure communication direction : 1Line */
1209:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
 2659              		.loc 1 1209 0 discriminator 2
 2660 1074 FB68     		ldr	r3, [r7, #12]
 2661 1076 9B68     		ldr	r3, [r3, #8]
 2662 1078 B3F5004F 		cmp	r3, #32768
 2663 107c 08D1     		bne	.L140
1210:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1211:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****        __HAL_SPI_1LINE_RX(hspi);
 2664              		.loc 1 1211 0
 2665 107e FB68     		ldr	r3, [r7, #12]
 2666 1080 1B68     		ldr	r3, [r3]
 2667 1082 FA68     		ldr	r2, [r7, #12]
 2668 1084 1268     		ldr	r2, [r2]
 2669 1086 1268     		ldr	r2, [r2]
 2670 1088 22F48042 		bic	r2, r2, #16384
 2671 108c 1A60     		str	r2, [r3]
 2672 108e 14E0     		b	.L141
 2673              	.L140:
1212:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1213:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     else if((hspi->Init.Direction == SPI_DIRECTION_2LINES)&&(hspi->Init.Mode == SPI_MODE_MASTER))
 2674              		.loc 1 1213 0
 2675 1090 FB68     		ldr	r3, [r7, #12]
 2676 1092 9B68     		ldr	r3, [r3, #8]
 2677 1094 002B     		cmp	r3, #0
 2678 1096 10D1     		bne	.L141
 2679              		.loc 1 1213 0 is_stmt 0 discriminator 1
 2680 1098 FB68     		ldr	r3, [r7, #12]
 2681 109a 5B68     		ldr	r3, [r3, #4]
 2682 109c B3F5827F 		cmp	r3, #260
 2683 10a0 0BD1     		bne	.L141
1214:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1215:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****        /* Process Unlocked */
1216:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****        __HAL_UNLOCK(hspi);
 2684              		.loc 1 1216 0 is_stmt 1
 2685 10a2 FB68     		ldr	r3, [r7, #12]
 2686 10a4 0022     		movs	r2, #0
 2687 10a6 83F85020 		strb	r2, [r3, #80]
1217:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1218:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****        /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK li
1219:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****        return HAL_SPI_TransmitReceive_DMA(hspi, pData, pData, Size);
 2688              		.loc 1 1219 0
 2689 10aa FB88     		ldrh	r3, [r7, #6]
 2690 10ac F868     		ldr	r0, [r7, #12]
 2691 10ae B968     		ldr	r1, [r7, #8]
 2692 10b0 BA68     		ldr	r2, [r7, #8]
 2693 10b2 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_DMA
 2694 10b6 0346     		mov	r3, r0
 2695 10b8 4DE0     		b	.L138
 2696              	.L141:
1220:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1221:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1222:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Reset CRC Calculation */
1223:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED)
 2697              		.loc 1 1223 0
 2698 10ba FB68     		ldr	r3, [r7, #12]
 2699 10bc 9B6A     		ldr	r3, [r3, #40]
 2700 10be B3F5005F 		cmp	r3, #8192
 2701 10c2 0FD1     		bne	.L142
1224:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1225:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_RESET_CRC(hspi);
 2702              		.loc 1 1225 0
 2703 10c4 FB68     		ldr	r3, [r7, #12]
 2704 10c6 1B68     		ldr	r3, [r3]
 2705 10c8 FA68     		ldr	r2, [r7, #12]
 2706 10ca 1268     		ldr	r2, [r2]
 2707 10cc 1268     		ldr	r2, [r2]
 2708 10ce 22F40052 		bic	r2, r2, #8192
 2709 10d2 1A60     		str	r2, [r3]
 2710 10d4 FB68     		ldr	r3, [r7, #12]
 2711 10d6 1B68     		ldr	r3, [r3]
 2712 10d8 FA68     		ldr	r2, [r7, #12]
 2713 10da 1268     		ldr	r2, [r2]
 2714 10dc 1268     		ldr	r2, [r2]
 2715 10de 42F40052 		orr	r2, r2, #8192
 2716 10e2 1A60     		str	r2, [r3]
 2717              	.L142:
1226:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1227:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1228:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Set the SPI Rx DMA transfer complete callback */
1229:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
 2718              		.loc 1 1229 0
 2719 10e4 FB68     		ldr	r3, [r7, #12]
 2720 10e6 5A6C     		ldr	r2, [r3, #68]
 2721 10e8 40F20003 		movw	r3, #:lower16:SPI_DMAReceiveCplt
 2722 10ec C0F20003 		movt	r3, #:upper16:SPI_DMAReceiveCplt
 2723 10f0 D363     		str	r3, [r2, #60]
1230:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1231:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Set the DMA error callback */
1232:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->hdmarx->XferErrorCallback = SPI_DMAError;
 2724              		.loc 1 1232 0
 2725 10f2 FB68     		ldr	r3, [r7, #12]
 2726 10f4 5A6C     		ldr	r2, [r3, #68]
 2727 10f6 40F20003 		movw	r3, #:lower16:SPI_DMAError
 2728 10fa C0F20003 		movt	r3, #:upper16:SPI_DMAError
 2729 10fe 9364     		str	r3, [r2, #72]
1233:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1234:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Enable the Rx DMA Stream */
1235:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBuffPtr, hspi-
 2730              		.loc 1 1235 0
 2731 1100 FB68     		ldr	r3, [r7, #12]
 2732 1102 586C     		ldr	r0, [r3, #68]
 2733 1104 FB68     		ldr	r3, [r7, #12]
 2734 1106 1B68     		ldr	r3, [r3]
 2735 1108 0C33     		adds	r3, r3, #12
 2736 110a 1946     		mov	r1, r3
 2737 110c FB68     		ldr	r3, [r7, #12]
 2738 110e 9B6B     		ldr	r3, [r3, #56]
 2739 1110 1A46     		mov	r2, r3
 2740 1112 FB68     		ldr	r3, [r7, #12]
 2741 1114 DB8F     		ldrh	r3, [r3, #62]
 2742 1116 FFF7FEFF 		bl	HAL_DMA_Start_IT
1236:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1237:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Enable Rx DMA Request */  
1238:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->Instance->CR2 |= SPI_CR2_RXDMAEN;  
 2743              		.loc 1 1238 0
 2744 111a FB68     		ldr	r3, [r7, #12]
 2745 111c 1B68     		ldr	r3, [r3]
 2746 111e FA68     		ldr	r2, [r7, #12]
 2747 1120 1268     		ldr	r2, [r2]
 2748 1122 5268     		ldr	r2, [r2, #4]
 2749 1124 42F00102 		orr	r2, r2, #1
 2750 1128 5A60     		str	r2, [r3, #4]
1239:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1240:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Process Unlocked */
1241:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 2751              		.loc 1 1241 0
 2752 112a FB68     		ldr	r3, [r7, #12]
 2753 112c 0022     		movs	r2, #0
 2754 112e 83F85020 		strb	r2, [r3, #80]
1242:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1243:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Check if the SPI is already enabled */ 
1244:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
 2755              		.loc 1 1244 0
 2756 1132 FB68     		ldr	r3, [r7, #12]
 2757 1134 1B68     		ldr	r3, [r3]
 2758 1136 1B68     		ldr	r3, [r3]
 2759 1138 03F04003 		and	r3, r3, #64
 2760 113c 002B     		cmp	r3, #0
 2761 113e 07D1     		bne	.L143
1245:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1246:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Enable SPI peripheral */
1247:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
 2762              		.loc 1 1247 0
 2763 1140 FB68     		ldr	r3, [r7, #12]
 2764 1142 1B68     		ldr	r3, [r3]
 2765 1144 FA68     		ldr	r2, [r7, #12]
 2766 1146 1268     		ldr	r2, [r2]
 2767 1148 1268     		ldr	r2, [r2]
 2768 114a 42F04002 		orr	r2, r2, #64
 2769 114e 1A60     		str	r2, [r3]
 2770              	.L143:
1248:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1249:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1250:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     return HAL_OK;
 2771              		.loc 1 1250 0
 2772 1150 0023     		movs	r3, #0
 2773 1152 00E0     		b	.L138
 2774              	.L135:
1251:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1252:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   else
1253:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1254:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     return HAL_BUSY;
 2775              		.loc 1 1254 0
 2776 1154 0223     		movs	r3, #2
 2777              	.L138:
1255:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1256:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 2778              		.loc 1 1256 0
 2779 1156 1846     		mov	r0, r3
 2780 1158 1037     		adds	r7, r7, #16
 2781 115a BD46     		mov	sp, r7
 2782              		@ sp needed
 2783 115c 80BD     		pop	{r7, pc}
 2784              		.cfi_endproc
 2785              	.LFE66:
 2787 115e 00BF     		.align	2
 2788              		.global	HAL_SPI_TransmitReceive_DMA
 2789              		.thumb
 2790              		.thumb_func
 2792              	HAL_SPI_TransmitReceive_DMA:
 2793              	.LFB67:
1257:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1258:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
1259:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in no-blocking mode with DMA 
1260:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  hspi: SPI handle
1261:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  pTxData: pointer to transmission data buffer
1262:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  pRxData: pointer to reception data buffer
1263:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @note  When the CRC feature is enabled the pRxData Length must be Size + 1 
1264:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  Size: amount of data to be sent
1265:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval HAL status
1266:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
1267:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *p
1268:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 2794              		.loc 1 1268 0
 2795              		.cfi_startproc
 2796              		@ args = 0, pretend = 0, frame = 24
 2797              		@ frame_needed = 1, uses_anonymous_args = 0
 2798 1160 80B5     		push	{r7, lr}
 2799              		.cfi_def_cfa_offset 8
 2800              		.cfi_offset 7, -8
 2801              		.cfi_offset 14, -4
 2802 1162 86B0     		sub	sp, sp, #24
 2803              		.cfi_def_cfa_offset 32
 2804 1164 00AF     		add	r7, sp, #0
 2805              		.cfi_def_cfa_register 7
 2806 1166 F860     		str	r0, [r7, #12]
 2807 1168 B960     		str	r1, [r7, #8]
 2808 116a 7A60     		str	r2, [r7, #4]
 2809 116c 7B80     		strh	r3, [r7, #2]	@ movhi
1269:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   uint32_t tmpstate = 0;
 2810              		.loc 1 1269 0
 2811 116e 0023     		movs	r3, #0
 2812 1170 7B61     		str	r3, [r7, #20]
1270:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   tmpstate = hspi->State;
 2813              		.loc 1 1270 0
 2814 1172 FB68     		ldr	r3, [r7, #12]
 2815 1174 93F85130 		ldrb	r3, [r3, #81]
 2816 1178 DBB2     		uxtb	r3, r3
 2817 117a 7B61     		str	r3, [r7, #20]
1271:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if((tmpstate == HAL_SPI_STATE_READY) || (tmpstate == HAL_SPI_STATE_BUSY_RX))
 2818              		.loc 1 1271 0
 2819 117c 7B69     		ldr	r3, [r7, #20]
 2820 117e 012B     		cmp	r3, #1
 2821 1180 03D0     		beq	.L145
 2822              		.loc 1 1271 0 is_stmt 0 discriminator 1
 2823 1182 7B69     		ldr	r3, [r7, #20]
 2824 1184 222B     		cmp	r3, #34
 2825 1186 40F0B780 		bne	.L146
 2826              	.L145:
1272:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1273:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if((pTxData == NULL ) || (pRxData == NULL ) || (Size == 0))
 2827              		.loc 1 1273 0 is_stmt 1
 2828 118a BB68     		ldr	r3, [r7, #8]
 2829 118c 002B     		cmp	r3, #0
 2830 118e 05D0     		beq	.L147
 2831              		.loc 1 1273 0 is_stmt 0 discriminator 1
 2832 1190 7B68     		ldr	r3, [r7, #4]
 2833 1192 002B     		cmp	r3, #0
 2834 1194 02D0     		beq	.L147
 2835 1196 7B88     		ldrh	r3, [r7, #2]
 2836 1198 002B     		cmp	r3, #0
 2837 119a 01D1     		bne	.L148
 2838              	.L147:
1274:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1275:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       return  HAL_ERROR;
 2839              		.loc 1 1275 0 is_stmt 1
 2840 119c 0123     		movs	r3, #1
 2841 119e ACE0     		b	.L149
 2842              	.L148:
1276:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1277:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1278:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Check the parameters */
1279:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1280:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     
1281:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Process locked */
1282:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_LOCK(hspi);
 2843              		.loc 1 1282 0
 2844 11a0 FB68     		ldr	r3, [r7, #12]
 2845 11a2 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 2846 11a6 012B     		cmp	r3, #1
 2847 11a8 01D1     		bne	.L150
 2848              		.loc 1 1282 0 is_stmt 0 discriminator 1
 2849 11aa 0223     		movs	r3, #2
 2850 11ac A5E0     		b	.L149
 2851              	.L150:
 2852              		.loc 1 1282 0 discriminator 2
 2853 11ae FB68     		ldr	r3, [r7, #12]
 2854 11b0 0122     		movs	r2, #1
 2855 11b2 83F85020 		strb	r2, [r3, #80]
1283:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1284:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1285:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->State == HAL_SPI_STATE_READY)
 2856              		.loc 1 1285 0 is_stmt 1 discriminator 2
 2857 11b6 FB68     		ldr	r3, [r7, #12]
 2858 11b8 93F85130 		ldrb	r3, [r3, #81]
 2859 11bc DBB2     		uxtb	r3, r3
 2860 11be 012B     		cmp	r3, #1
 2861 11c0 03D1     		bne	.L151
1286:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1287:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 2862              		.loc 1 1287 0
 2863 11c2 FB68     		ldr	r3, [r7, #12]
 2864 11c4 3222     		movs	r2, #50
 2865 11c6 83F85120 		strb	r2, [r3, #81]
 2866              	.L151:
1288:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1289:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1290:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Configure communication */
1291:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2867              		.loc 1 1291 0
 2868 11ca FB68     		ldr	r3, [r7, #12]
 2869 11cc 0022     		movs	r2, #0
 2870 11ce 83F85220 		strb	r2, [r3, #82]
1292:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1293:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->pTxBuffPtr  = (uint8_t*)pTxData;
 2871              		.loc 1 1293 0
 2872 11d2 FB68     		ldr	r3, [r7, #12]
 2873 11d4 BA68     		ldr	r2, [r7, #8]
 2874 11d6 1A63     		str	r2, [r3, #48]
1294:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxXferSize  = Size;
 2875              		.loc 1 1294 0
 2876 11d8 FB68     		ldr	r3, [r7, #12]
 2877 11da 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2878 11dc 9A86     		strh	r2, [r3, #52]	@ movhi
1295:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxXferCount = Size;
 2879              		.loc 1 1295 0
 2880 11de FB68     		ldr	r3, [r7, #12]
 2881 11e0 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2882 11e2 DA86     		strh	r2, [r3, #54]	@ movhi
1296:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1297:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->pRxBuffPtr  = (uint8_t*)pRxData;
 2883              		.loc 1 1297 0
 2884 11e4 FB68     		ldr	r3, [r7, #12]
 2885 11e6 7A68     		ldr	r2, [r7, #4]
 2886 11e8 9A63     		str	r2, [r3, #56]
1298:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxXferSize  = Size;
 2887              		.loc 1 1298 0
 2888 11ea FB68     		ldr	r3, [r7, #12]
 2889 11ec 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2890 11ee 9A87     		strh	r2, [r3, #60]	@ movhi
1299:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxXferCount = Size;
 2891              		.loc 1 1299 0
 2892 11f0 FB68     		ldr	r3, [r7, #12]
 2893 11f2 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2894 11f4 DA87     		strh	r2, [r3, #62]	@ movhi
1300:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1301:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /*Init field not used in handle to zero */
1302:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxISR = 0;
 2895              		.loc 1 1302 0
 2896 11f6 FB68     		ldr	r3, [r7, #12]
 2897 11f8 0022     		movs	r2, #0
 2898 11fa 9A64     		str	r2, [r3, #72]
1303:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxISR = 0;
 2899              		.loc 1 1303 0
 2900 11fc FB68     		ldr	r3, [r7, #12]
 2901 11fe 0022     		movs	r2, #0
 2902 1200 DA64     		str	r2, [r3, #76]
1304:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1305:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Reset CRC Calculation */
1306:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED)
 2903              		.loc 1 1306 0
 2904 1202 FB68     		ldr	r3, [r7, #12]
 2905 1204 9B6A     		ldr	r3, [r3, #40]
 2906 1206 B3F5005F 		cmp	r3, #8192
 2907 120a 0FD1     		bne	.L152
1307:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1308:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_RESET_CRC(hspi);
 2908              		.loc 1 1308 0
 2909 120c FB68     		ldr	r3, [r7, #12]
 2910 120e 1B68     		ldr	r3, [r3]
 2911 1210 FA68     		ldr	r2, [r7, #12]
 2912 1212 1268     		ldr	r2, [r2]
 2913 1214 1268     		ldr	r2, [r2]
 2914 1216 22F40052 		bic	r2, r2, #8192
 2915 121a 1A60     		str	r2, [r3]
 2916 121c FB68     		ldr	r3, [r7, #12]
 2917 121e 1B68     		ldr	r3, [r3]
 2918 1220 FA68     		ldr	r2, [r7, #12]
 2919 1222 1268     		ldr	r2, [r2]
 2920 1224 1268     		ldr	r2, [r2]
 2921 1226 42F40052 		orr	r2, r2, #8192
 2922 122a 1A60     		str	r2, [r3]
 2923              	.L152:
1309:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1310:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1311:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Check if we are in Rx only or in Rx/Tx Mode and configure the DMA transfer complete callback
1312:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->State == HAL_SPI_STATE_BUSY_RX)
 2924              		.loc 1 1312 0
 2925 122c FB68     		ldr	r3, [r7, #12]
 2926 122e 93F85130 		ldrb	r3, [r3, #81]
 2927 1232 DBB2     		uxtb	r3, r3
 2928 1234 222B     		cmp	r3, #34
 2929 1236 07D1     		bne	.L153
1313:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1314:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
 2930              		.loc 1 1314 0
 2931 1238 FB68     		ldr	r3, [r7, #12]
 2932 123a 5A6C     		ldr	r2, [r3, #68]
 2933 123c 40F20003 		movw	r3, #:lower16:SPI_DMAReceiveCplt
 2934 1240 C0F20003 		movt	r3, #:upper16:SPI_DMAReceiveCplt
 2935 1244 D363     		str	r3, [r2, #60]
 2936 1246 06E0     		b	.L154
 2937              	.L153:
1315:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1316:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     else
1317:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1318:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->hdmarx->XferCpltCallback = SPI_DMATransmitReceiveCplt;
 2938              		.loc 1 1318 0
 2939 1248 FB68     		ldr	r3, [r7, #12]
 2940 124a 5A6C     		ldr	r2, [r3, #68]
 2941 124c 40F20003 		movw	r3, #:lower16:SPI_DMATransmitReceiveCplt
 2942 1250 C0F20003 		movt	r3, #:upper16:SPI_DMATransmitReceiveCplt
 2943 1254 D363     		str	r3, [r2, #60]
 2944              	.L154:
1319:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1320:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1321:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Set the DMA error callback */
1322:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->hdmarx->XferErrorCallback = SPI_DMAError;
 2945              		.loc 1 1322 0
 2946 1256 FB68     		ldr	r3, [r7, #12]
 2947 1258 5A6C     		ldr	r2, [r3, #68]
 2948 125a 40F20003 		movw	r3, #:lower16:SPI_DMAError
 2949 125e C0F20003 		movt	r3, #:upper16:SPI_DMAError
 2950 1262 9364     		str	r3, [r2, #72]
1323:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1324:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Enable the Rx DMA Stream */
1325:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBuffPtr, hspi-
 2951              		.loc 1 1325 0
 2952 1264 FB68     		ldr	r3, [r7, #12]
 2953 1266 586C     		ldr	r0, [r3, #68]
 2954 1268 FB68     		ldr	r3, [r7, #12]
 2955 126a 1B68     		ldr	r3, [r3]
 2956 126c 0C33     		adds	r3, r3, #12
 2957 126e 1946     		mov	r1, r3
 2958 1270 FB68     		ldr	r3, [r7, #12]
 2959 1272 9B6B     		ldr	r3, [r3, #56]
 2960 1274 1A46     		mov	r2, r3
 2961 1276 FB68     		ldr	r3, [r7, #12]
 2962 1278 DB8F     		ldrh	r3, [r3, #62]
 2963 127a FFF7FEFF 		bl	HAL_DMA_Start_IT
1326:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1327:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Enable Rx DMA Request */  
1328:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->Instance->CR2 |= SPI_CR2_RXDMAEN;
 2964              		.loc 1 1328 0
 2965 127e FB68     		ldr	r3, [r7, #12]
 2966 1280 1B68     		ldr	r3, [r3]
 2967 1282 FA68     		ldr	r2, [r7, #12]
 2968 1284 1268     		ldr	r2, [r2]
 2969 1286 5268     		ldr	r2, [r2, #4]
 2970 1288 42F00102 		orr	r2, r2, #1
 2971 128c 5A60     		str	r2, [r3, #4]
1329:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1330:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Set the SPI Tx DMA transfer complete callback as NULL because the communication closing
1331:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     is performed in DMA reception complete callback  */
1332:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->hdmatx->XferCpltCallback = NULL;
 2972              		.loc 1 1332 0
 2973 128e FB68     		ldr	r3, [r7, #12]
 2974 1290 1B6C     		ldr	r3, [r3, #64]
 2975 1292 0022     		movs	r2, #0
 2976 1294 DA63     		str	r2, [r3, #60]
1333:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1334:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Set the DMA error callback */
1335:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 2977              		.loc 1 1335 0
 2978 1296 FB68     		ldr	r3, [r7, #12]
 2979 1298 1A6C     		ldr	r2, [r3, #64]
 2980 129a 40F20003 		movw	r3, #:lower16:SPI_DMAError
 2981 129e C0F20003 		movt	r3, #:upper16:SPI_DMAError
 2982 12a2 9364     		str	r3, [r2, #72]
1336:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1337:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Enable the Tx DMA Stream */
1338:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR, hspi-
 2983              		.loc 1 1338 0
 2984 12a4 FB68     		ldr	r3, [r7, #12]
 2985 12a6 186C     		ldr	r0, [r3, #64]
 2986 12a8 FB68     		ldr	r3, [r7, #12]
 2987 12aa 1B6B     		ldr	r3, [r3, #48]
 2988 12ac 1946     		mov	r1, r3
 2989 12ae FB68     		ldr	r3, [r7, #12]
 2990 12b0 1B68     		ldr	r3, [r3]
 2991 12b2 0C33     		adds	r3, r3, #12
 2992 12b4 1A46     		mov	r2, r3
 2993 12b6 FB68     		ldr	r3, [r7, #12]
 2994 12b8 DB8E     		ldrh	r3, [r3, #54]
 2995 12ba FFF7FEFF 		bl	HAL_DMA_Start_IT
1339:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1340:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Enable Tx DMA Request */  
1341:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->Instance->CR2 |= SPI_CR2_TXDMAEN;
 2996              		.loc 1 1341 0
 2997 12be FB68     		ldr	r3, [r7, #12]
 2998 12c0 1B68     		ldr	r3, [r3]
 2999 12c2 FA68     		ldr	r2, [r7, #12]
 3000 12c4 1268     		ldr	r2, [r2]
 3001 12c6 5268     		ldr	r2, [r2, #4]
 3002 12c8 42F00202 		orr	r2, r2, #2
 3003 12cc 5A60     		str	r2, [r3, #4]
1342:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1343:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Process Unlocked */
1344:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 3004              		.loc 1 1344 0
 3005 12ce FB68     		ldr	r3, [r7, #12]
 3006 12d0 0022     		movs	r2, #0
 3007 12d2 83F85020 		strb	r2, [r3, #80]
1345:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1346:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         /* Check if the SPI is already enabled */ 
1347:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
 3008              		.loc 1 1347 0
 3009 12d6 FB68     		ldr	r3, [r7, #12]
 3010 12d8 1B68     		ldr	r3, [r3]
 3011 12da 1B68     		ldr	r3, [r3]
 3012 12dc 03F04003 		and	r3, r3, #64
 3013 12e0 002B     		cmp	r3, #0
 3014 12e2 07D1     		bne	.L155
1348:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1349:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Enable SPI peripheral */
1350:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
 3015              		.loc 1 1350 0
 3016 12e4 FB68     		ldr	r3, [r7, #12]
 3017 12e6 1B68     		ldr	r3, [r3]
 3018 12e8 FA68     		ldr	r2, [r7, #12]
 3019 12ea 1268     		ldr	r2, [r2]
 3020 12ec 1268     		ldr	r2, [r2]
 3021 12ee 42F04002 		orr	r2, r2, #64
 3022 12f2 1A60     		str	r2, [r3]
 3023              	.L155:
1351:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1352:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1353:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     return HAL_OK;
 3024              		.loc 1 1353 0
 3025 12f4 0023     		movs	r3, #0
 3026 12f6 00E0     		b	.L149
 3027              	.L146:
1354:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1355:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   else
1356:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1357:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     return HAL_BUSY;
 3028              		.loc 1 1357 0
 3029 12f8 0223     		movs	r3, #2
 3030              	.L149:
1358:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1359:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 3031              		.loc 1 1359 0
 3032 12fa 1846     		mov	r0, r3
 3033 12fc 1837     		adds	r7, r7, #24
 3034 12fe BD46     		mov	sp, r7
 3035              		@ sp needed
 3036 1300 80BD     		pop	{r7, pc}
 3037              		.cfi_endproc
 3038              	.LFE67:
 3040 1302 00BF     		.align	2
 3041              		.global	HAL_SPI_IRQHandler
 3042              		.thumb
 3043              		.thumb_func
 3045              	HAL_SPI_IRQHandler:
 3046              	.LFB68:
1360:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1361:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
1362:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief  This function handles SPI interrupt request.
1363:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  hspi: SPI handle
1364:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval HAL status
1365:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
1366:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
1367:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 3047              		.loc 1 1367 0
 3048              		.cfi_startproc
 3049              		@ args = 0, pretend = 0, frame = 24
 3050              		@ frame_needed = 1, uses_anonymous_args = 0
 3051 1304 80B5     		push	{r7, lr}
 3052              		.cfi_def_cfa_offset 8
 3053              		.cfi_offset 7, -8
 3054              		.cfi_offset 14, -4
 3055 1306 86B0     		sub	sp, sp, #24
 3056              		.cfi_def_cfa_offset 32
 3057 1308 00AF     		add	r7, sp, #0
 3058              		.cfi_def_cfa_register 7
 3059 130a 7860     		str	r0, [r7, #4]
1368:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   uint32_t tmp1 = 0, tmp2 = 0, tmp3 = 0;
 3060              		.loc 1 1368 0
 3061 130c 0023     		movs	r3, #0
 3062 130e 7B61     		str	r3, [r7, #20]
 3063 1310 0023     		movs	r3, #0
 3064 1312 3B61     		str	r3, [r7, #16]
 3065 1314 0023     		movs	r3, #0
 3066 1316 FB60     		str	r3, [r7, #12]
1369:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1370:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   tmp1 = __HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE);
 3067              		.loc 1 1370 0
 3068 1318 7B68     		ldr	r3, [r7, #4]
 3069 131a 1B68     		ldr	r3, [r3]
 3070 131c 9B68     		ldr	r3, [r3, #8]
 3071 131e 03F00103 		and	r3, r3, #1
 3072 1322 002B     		cmp	r3, #0
 3073 1324 0CBF     		ite	eq
 3074 1326 0023     		moveq	r3, #0
 3075 1328 0123     		movne	r3, #1
 3076 132a DBB2     		uxtb	r3, r3
 3077 132c 7B61     		str	r3, [r7, #20]
1371:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   tmp2 = __HAL_SPI_GET_IT_SOURCE(hspi, SPI_IT_RXNE);
 3078              		.loc 1 1371 0
 3079 132e 7B68     		ldr	r3, [r7, #4]
 3080 1330 1B68     		ldr	r3, [r3]
 3081 1332 5B68     		ldr	r3, [r3, #4]
 3082 1334 03F04003 		and	r3, r3, #64
 3083 1338 002B     		cmp	r3, #0
 3084 133a 0CBF     		ite	eq
 3085 133c 0023     		moveq	r3, #0
 3086 133e 0123     		movne	r3, #1
 3087 1340 DBB2     		uxtb	r3, r3
 3088 1342 3B61     		str	r3, [r7, #16]
1372:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   tmp3 = __HAL_SPI_GET_FLAG(hspi, SPI_FLAG_OVR);
 3089              		.loc 1 1372 0
 3090 1344 7B68     		ldr	r3, [r7, #4]
 3091 1346 1B68     		ldr	r3, [r3]
 3092 1348 9B68     		ldr	r3, [r3, #8]
 3093 134a 03F04003 		and	r3, r3, #64
 3094 134e 002B     		cmp	r3, #0
 3095 1350 0CBF     		ite	eq
 3096 1352 0023     		moveq	r3, #0
 3097 1354 0123     		movne	r3, #1
 3098 1356 DBB2     		uxtb	r3, r3
 3099 1358 FB60     		str	r3, [r7, #12]
1373:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* SPI in mode Receiver and Overrun not occurred ---------------------------*/
1374:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if((tmp1 != RESET) && (tmp2 != RESET) && (tmp3 == RESET))
 3100              		.loc 1 1374 0
 3101 135a 7B69     		ldr	r3, [r7, #20]
 3102 135c 002B     		cmp	r3, #0
 3103 135e 0AD0     		beq	.L157
 3104              		.loc 1 1374 0 is_stmt 0 discriminator 1
 3105 1360 3B69     		ldr	r3, [r7, #16]
 3106 1362 002B     		cmp	r3, #0
 3107 1364 07D0     		beq	.L157
 3108 1366 FB68     		ldr	r3, [r7, #12]
 3109 1368 002B     		cmp	r3, #0
 3110 136a 04D1     		bne	.L157
1375:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1376:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxISR(hspi);
 3111              		.loc 1 1376 0 is_stmt 1
 3112 136c 7B68     		ldr	r3, [r7, #4]
 3113 136e 9B6C     		ldr	r3, [r3, #72]
 3114 1370 7868     		ldr	r0, [r7, #4]
 3115 1372 9847     		blx	r3
1377:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     return;
 3116              		.loc 1 1377 0
 3117 1374 9AE0     		b	.L156
 3118              	.L157:
1378:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   } 
1379:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1380:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   tmp1 = __HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE);
 3119              		.loc 1 1380 0
 3120 1376 7B68     		ldr	r3, [r7, #4]
 3121 1378 1B68     		ldr	r3, [r3]
 3122 137a 9B68     		ldr	r3, [r3, #8]
 3123 137c 03F00203 		and	r3, r3, #2
 3124 1380 002B     		cmp	r3, #0
 3125 1382 0CBF     		ite	eq
 3126 1384 0023     		moveq	r3, #0
 3127 1386 0123     		movne	r3, #1
 3128 1388 DBB2     		uxtb	r3, r3
 3129 138a 7B61     		str	r3, [r7, #20]
1381:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   tmp2 = __HAL_SPI_GET_IT_SOURCE(hspi, SPI_IT_TXE);
 3130              		.loc 1 1381 0
 3131 138c 7B68     		ldr	r3, [r7, #4]
 3132 138e 1B68     		ldr	r3, [r3]
 3133 1390 5B68     		ldr	r3, [r3, #4]
 3134 1392 03F08003 		and	r3, r3, #128
 3135 1396 002B     		cmp	r3, #0
 3136 1398 0CBF     		ite	eq
 3137 139a 0023     		moveq	r3, #0
 3138 139c 0123     		movne	r3, #1
 3139 139e DBB2     		uxtb	r3, r3
 3140 13a0 3B61     		str	r3, [r7, #16]
1382:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* SPI in mode Tramitter ---------------------------------------------------*/
1383:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if((tmp1 != RESET) && (tmp2 != RESET))
 3141              		.loc 1 1383 0
 3142 13a2 7B69     		ldr	r3, [r7, #20]
 3143 13a4 002B     		cmp	r3, #0
 3144 13a6 07D0     		beq	.L159
 3145              		.loc 1 1383 0 is_stmt 0 discriminator 1
 3146 13a8 3B69     		ldr	r3, [r7, #16]
 3147 13aa 002B     		cmp	r3, #0
 3148 13ac 04D0     		beq	.L159
1384:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1385:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->TxISR(hspi);
 3149              		.loc 1 1385 0 is_stmt 1
 3150 13ae 7B68     		ldr	r3, [r7, #4]
 3151 13b0 DB6C     		ldr	r3, [r3, #76]
 3152 13b2 7868     		ldr	r0, [r7, #4]
 3153 13b4 9847     		blx	r3
1386:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     return;
 3154              		.loc 1 1386 0
 3155 13b6 79E0     		b	.L156
 3156              	.L159:
1387:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1388:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1389:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(__HAL_SPI_GET_IT_SOURCE(hspi, SPI_IT_ERR) != RESET)
 3157              		.loc 1 1389 0
 3158 13b8 7B68     		ldr	r3, [r7, #4]
 3159 13ba 1B68     		ldr	r3, [r3]
 3160 13bc 5B68     		ldr	r3, [r3, #4]
 3161 13be 03F02003 		and	r3, r3, #32
 3162 13c2 002B     		cmp	r3, #0
 3163 13c4 72D0     		beq	.L156
1390:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1391:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* SPI CRC error interrupt occured ---------------------------------------*/
1392:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
 3164              		.loc 1 1392 0
 3165 13c6 7B68     		ldr	r3, [r7, #4]
 3166 13c8 1B68     		ldr	r3, [r3]
 3167 13ca 9B68     		ldr	r3, [r3, #8]
 3168 13cc 03F01003 		and	r3, r3, #16
 3169 13d0 002B     		cmp	r3, #0
 3170 13d2 11D0     		beq	.L160
1393:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1394:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->ErrorCode |= HAL_SPI_ERROR_CRC;
 3171              		.loc 1 1394 0
 3172 13d4 7B68     		ldr	r3, [r7, #4]
 3173 13d6 93F85230 		ldrb	r3, [r3, #82]
 3174 13da DBB2     		uxtb	r3, r3
 3175 13dc 43F00203 		orr	r3, r3, #2
 3176 13e0 DAB2     		uxtb	r2, r3
 3177 13e2 7B68     		ldr	r3, [r7, #4]
 3178 13e4 83F85220 		strb	r2, [r3, #82]
1395:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
 3179              		.loc 1 1395 0
 3180 13e8 7B68     		ldr	r3, [r7, #4]
 3181 13ea 1B68     		ldr	r3, [r3]
 3182 13ec 7A68     		ldr	r2, [r7, #4]
 3183 13ee 1268     		ldr	r2, [r2]
 3184 13f0 9268     		ldr	r2, [r2, #8]
 3185 13f2 22F01002 		bic	r2, r2, #16
 3186 13f6 9A60     		str	r2, [r3, #8]
 3187              	.L160:
1396:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1397:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* SPI Mode Fault error interrupt occured --------------------------------*/
1398:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_MODF) != RESET)
 3188              		.loc 1 1398 0
 3189 13f8 7B68     		ldr	r3, [r7, #4]
 3190 13fa 1B68     		ldr	r3, [r3]
 3191 13fc 9B68     		ldr	r3, [r3, #8]
 3192 13fe 03F02003 		and	r3, r3, #32
 3193 1402 002B     		cmp	r3, #0
 3194 1404 14D0     		beq	.L161
1399:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1400:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->ErrorCode |= HAL_SPI_ERROR_MODF;
 3195              		.loc 1 1400 0
 3196 1406 7B68     		ldr	r3, [r7, #4]
 3197 1408 93F85230 		ldrb	r3, [r3, #82]
 3198 140c DBB2     		uxtb	r3, r3
 3199 140e 43F00103 		orr	r3, r3, #1
 3200 1412 DAB2     		uxtb	r2, r3
 3201 1414 7B68     		ldr	r3, [r7, #4]
 3202 1416 83F85220 		strb	r2, [r3, #82]
1401:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
 3203              		.loc 1 1401 0
 3204 141a 7B68     		ldr	r3, [r7, #4]
 3205 141c 1B68     		ldr	r3, [r3]
 3206 141e 9B68     		ldr	r3, [r3, #8]
 3207 1420 7B68     		ldr	r3, [r7, #4]
 3208 1422 1B68     		ldr	r3, [r3]
 3209 1424 7A68     		ldr	r2, [r7, #4]
 3210 1426 1268     		ldr	r2, [r2]
 3211 1428 1268     		ldr	r2, [r2]
 3212 142a 22F04002 		bic	r2, r2, #64
 3213 142e 1A60     		str	r2, [r3]
 3214              	.L161:
1402:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1403:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     
1404:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* SPI Overrun error interrupt occured -----------------------------------*/
1405:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_OVR) != RESET)
 3215              		.loc 1 1405 0
 3216 1430 7B68     		ldr	r3, [r7, #4]
 3217 1432 1B68     		ldr	r3, [r3]
 3218 1434 9B68     		ldr	r3, [r3, #8]
 3219 1436 03F04003 		and	r3, r3, #64
 3220 143a 002B     		cmp	r3, #0
 3221 143c 15D0     		beq	.L162
1406:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1407:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       if(hspi->State != HAL_SPI_STATE_BUSY_TX)
 3222              		.loc 1 1407 0
 3223 143e 7B68     		ldr	r3, [r7, #4]
 3224 1440 93F85130 		ldrb	r3, [r3, #81]
 3225 1444 DBB2     		uxtb	r3, r3
 3226 1446 122B     		cmp	r3, #18
 3227 1448 0FD0     		beq	.L162
1408:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
1409:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->ErrorCode |= HAL_SPI_ERROR_OVR;
 3228              		.loc 1 1409 0
 3229 144a 7B68     		ldr	r3, [r7, #4]
 3230 144c 93F85230 		ldrb	r3, [r3, #82]
 3231 1450 DBB2     		uxtb	r3, r3
 3232 1452 43F00403 		orr	r3, r3, #4
 3233 1456 DAB2     		uxtb	r2, r3
 3234 1458 7B68     		ldr	r3, [r7, #4]
 3235 145a 83F85220 		strb	r2, [r3, #82]
1410:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);      
 3236              		.loc 1 1410 0
 3237 145e 7B68     		ldr	r3, [r7, #4]
 3238 1460 1B68     		ldr	r3, [r3]
 3239 1462 DB68     		ldr	r3, [r3, #12]
 3240 1464 7B68     		ldr	r3, [r7, #4]
 3241 1466 1B68     		ldr	r3, [r3]
 3242 1468 9B68     		ldr	r3, [r3, #8]
 3243              	.L162:
1411:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       }
1412:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1413:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1414:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* SPI Frame error interrupt occured -------------------------------------*/
1415:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_FRE) != RESET)
 3244              		.loc 1 1415 0
 3245 146a 7B68     		ldr	r3, [r7, #4]
 3246 146c 1B68     		ldr	r3, [r3]
 3247 146e 9B68     		ldr	r3, [r3, #8]
 3248 1470 03F48073 		and	r3, r3, #256
 3249 1474 002B     		cmp	r3, #0
 3250 1476 0CD0     		beq	.L163
1416:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1417:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->ErrorCode |= HAL_SPI_ERROR_FRE;
 3251              		.loc 1 1417 0
 3252 1478 7B68     		ldr	r3, [r7, #4]
 3253 147a 93F85230 		ldrb	r3, [r3, #82]
 3254 147e DBB2     		uxtb	r3, r3
 3255 1480 43F00803 		orr	r3, r3, #8
 3256 1484 DAB2     		uxtb	r2, r3
 3257 1486 7B68     		ldr	r3, [r7, #4]
 3258 1488 83F85220 		strb	r2, [r3, #82]
1418:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
 3259              		.loc 1 1418 0
 3260 148c 7B68     		ldr	r3, [r7, #4]
 3261 148e 1B68     		ldr	r3, [r3]
 3262 1490 9B68     		ldr	r3, [r3, #8]
 3263              	.L163:
1419:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1420:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1421:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Call the Error call Back in case of Errors */
1422:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->ErrorCode!=HAL_SPI_ERROR_NONE)
 3264              		.loc 1 1422 0
 3265 1492 7B68     		ldr	r3, [r7, #4]
 3266 1494 93F85230 		ldrb	r3, [r3, #82]
 3267 1498 DBB2     		uxtb	r3, r3
 3268 149a 002B     		cmp	r3, #0
 3269 149c 06D0     		beq	.L156
1423:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1424:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
 3270              		.loc 1 1424 0
 3271 149e 7B68     		ldr	r3, [r7, #4]
 3272 14a0 0122     		movs	r2, #1
 3273 14a2 83F85120 		strb	r2, [r3, #81]
1425:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 3274              		.loc 1 1425 0
 3275 14a6 7868     		ldr	r0, [r7, #4]
 3276 14a8 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 3277              	.L156:
1426:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1427:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1428:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 3278              		.loc 1 1428 0
 3279 14ac 1837     		adds	r7, r7, #24
 3280 14ae BD46     		mov	sp, r7
 3281              		@ sp needed
 3282 14b0 80BD     		pop	{r7, pc}
 3283              		.cfi_endproc
 3284              	.LFE68:
 3286 14b2 00BF     		.align	2
 3287              		.weak	HAL_SPI_TxCpltCallback
 3288              		.thumb
 3289              		.thumb_func
 3291              	HAL_SPI_TxCpltCallback:
 3292              	.LFB69:
1429:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1430:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
1431:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief Tx Transfer completed callbacks
1432:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param hspi: SPI handle
1433:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval None
1434:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
1435:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** __weak void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
1436:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 3293              		.loc 1 1436 0
 3294              		.cfi_startproc
 3295              		@ args = 0, pretend = 0, frame = 8
 3296              		@ frame_needed = 1, uses_anonymous_args = 0
 3297              		@ link register save eliminated.
 3298 14b4 80B4     		push	{r7}
 3299              		.cfi_def_cfa_offset 4
 3300              		.cfi_offset 7, -4
 3301 14b6 83B0     		sub	sp, sp, #12
 3302              		.cfi_def_cfa_offset 16
 3303 14b8 00AF     		add	r7, sp, #0
 3304              		.cfi_def_cfa_register 7
 3305 14ba 7860     		str	r0, [r7, #4]
1437:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1438:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****             the HAL_SPI_TxCpltCallback could be implenetd in the user file
1439:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****    */
1440:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 3306              		.loc 1 1440 0
 3307 14bc 0C37     		adds	r7, r7, #12
 3308 14be BD46     		mov	sp, r7
 3309              		@ sp needed
 3310 14c0 5DF8047B 		ldr	r7, [sp], #4
 3311 14c4 7047     		bx	lr
 3312              		.cfi_endproc
 3313              	.LFE69:
 3315 14c6 00BF     		.align	2
 3316              		.weak	HAL_SPI_RxCpltCallback
 3317              		.thumb
 3318              		.thumb_func
 3320              	HAL_SPI_RxCpltCallback:
 3321              	.LFB70:
1441:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1442:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
1443:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief Rx Transfer completed callbacks
1444:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param hspi: SPI handle
1445:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval None
1446:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
1447:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** __weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
1448:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 3322              		.loc 1 1448 0
 3323              		.cfi_startproc
 3324              		@ args = 0, pretend = 0, frame = 8
 3325              		@ frame_needed = 1, uses_anonymous_args = 0
 3326              		@ link register save eliminated.
 3327 14c8 80B4     		push	{r7}
 3328              		.cfi_def_cfa_offset 4
 3329              		.cfi_offset 7, -4
 3330 14ca 83B0     		sub	sp, sp, #12
 3331              		.cfi_def_cfa_offset 16
 3332 14cc 00AF     		add	r7, sp, #0
 3333              		.cfi_def_cfa_register 7
 3334 14ce 7860     		str	r0, [r7, #4]
1449:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1450:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****             the HAL_SPI_RxCpltCallback() could be implenetd in the user file
1451:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****    */
1452:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 3335              		.loc 1 1452 0
 3336 14d0 0C37     		adds	r7, r7, #12
 3337 14d2 BD46     		mov	sp, r7
 3338              		@ sp needed
 3339 14d4 5DF8047B 		ldr	r7, [sp], #4
 3340 14d8 7047     		bx	lr
 3341              		.cfi_endproc
 3342              	.LFE70:
 3344 14da 00BF     		.align	2
 3345              		.weak	HAL_SPI_TxRxCpltCallback
 3346              		.thumb
 3347              		.thumb_func
 3349              	HAL_SPI_TxRxCpltCallback:
 3350              	.LFB71:
1453:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1454:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
1455:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief Tx and Rx Transfer completed callbacks
1456:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param hspi: SPI handle
1457:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval None
1458:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
1459:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** __weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
1460:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 3351              		.loc 1 1460 0
 3352              		.cfi_startproc
 3353              		@ args = 0, pretend = 0, frame = 8
 3354              		@ frame_needed = 1, uses_anonymous_args = 0
 3355              		@ link register save eliminated.
 3356 14dc 80B4     		push	{r7}
 3357              		.cfi_def_cfa_offset 4
 3358              		.cfi_offset 7, -4
 3359 14de 83B0     		sub	sp, sp, #12
 3360              		.cfi_def_cfa_offset 16
 3361 14e0 00AF     		add	r7, sp, #0
 3362              		.cfi_def_cfa_register 7
 3363 14e2 7860     		str	r0, [r7, #4]
1461:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1462:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****             the HAL_SPI_TxRxCpltCallback() could be implenetd in the user file
1463:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****    */
1464:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 3364              		.loc 1 1464 0
 3365 14e4 0C37     		adds	r7, r7, #12
 3366 14e6 BD46     		mov	sp, r7
 3367              		@ sp needed
 3368 14e8 5DF8047B 		ldr	r7, [sp], #4
 3369 14ec 7047     		bx	lr
 3370              		.cfi_endproc
 3371              	.LFE71:
 3373 14ee 00BF     		.align	2
 3374              		.weak	HAL_SPI_ErrorCallback
 3375              		.thumb
 3376              		.thumb_func
 3378              	HAL_SPI_ErrorCallback:
 3379              	.LFB72:
1465:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1466:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
1467:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief SPI error callbacks
1468:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param hspi: SPI handle
1469:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval None
1470:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
1471:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****  __weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
1472:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 3380              		.loc 1 1472 0
 3381              		.cfi_startproc
 3382              		@ args = 0, pretend = 0, frame = 8
 3383              		@ frame_needed = 1, uses_anonymous_args = 0
 3384              		@ link register save eliminated.
 3385 14f0 80B4     		push	{r7}
 3386              		.cfi_def_cfa_offset 4
 3387              		.cfi_offset 7, -4
 3388 14f2 83B0     		sub	sp, sp, #12
 3389              		.cfi_def_cfa_offset 16
 3390 14f4 00AF     		add	r7, sp, #0
 3391              		.cfi_def_cfa_register 7
 3392 14f6 7860     		str	r0, [r7, #4]
1473:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* NOTE : - This function Should not be modified, when the callback is needed,
1474:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****             the HAL_SPI_ErrorCallback() could be implenetd in the user file.
1475:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****             - The ErrorCode parameter in the hspi handle is updated by the SPI processes
1476:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****             and user can use HAL_SPI_GetError() API to check the latest error occured.
1477:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****    */
1478:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 3393              		.loc 1 1478 0
 3394 14f8 0C37     		adds	r7, r7, #12
 3395 14fa BD46     		mov	sp, r7
 3396              		@ sp needed
 3397 14fc 5DF8047B 		ldr	r7, [sp], #4
 3398 1500 7047     		bx	lr
 3399              		.cfi_endproc
 3400              	.LFE72:
 3402 1502 00BF     		.align	2
 3403              		.global	HAL_SPI_GetState
 3404              		.thumb
 3405              		.thumb_func
 3407              	HAL_SPI_GetState:
 3408              	.LFB73:
1479:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1480:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
1481:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @}
1482:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
1483:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1484:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /** @defgroup SPI_Group3 Peripheral State and Errors functions 
1485:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   *  @brief   SPI control functions 
1486:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   *
1487:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** @verbatim
1488:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****  ===============================================================================
1489:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****                       ##### Peripheral State and Errors functions #####
1490:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****  ===============================================================================  
1491:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     [..]
1492:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     This subsection provides a set of functions allowing to control the SPI.
1493:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****      (+) HAL_SPI_GetState() API can be helpful to check in run-time the state of the SPI peripheral
1494:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****      (+) HAL_SPI_GetError() check in run-time Errors occurring during communication
1495:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** @endverbatim
1496:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @{
1497:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
1498:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1499:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
1500:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief  Return the SPI state
1501:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  hspi : SPI handle
1502:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval SPI state
1503:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
1504:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** HAL_SPI_StateTypeDef HAL_SPI_GetState(SPI_HandleTypeDef *hspi)
1505:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 3409              		.loc 1 1505 0
 3410              		.cfi_startproc
 3411              		@ args = 0, pretend = 0, frame = 8
 3412              		@ frame_needed = 1, uses_anonymous_args = 0
 3413              		@ link register save eliminated.
 3414 1504 80B4     		push	{r7}
 3415              		.cfi_def_cfa_offset 4
 3416              		.cfi_offset 7, -4
 3417 1506 83B0     		sub	sp, sp, #12
 3418              		.cfi_def_cfa_offset 16
 3419 1508 00AF     		add	r7, sp, #0
 3420              		.cfi_def_cfa_register 7
 3421 150a 7860     		str	r0, [r7, #4]
1506:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   return hspi->State;
 3422              		.loc 1 1506 0
 3423 150c 7B68     		ldr	r3, [r7, #4]
 3424 150e 93F85130 		ldrb	r3, [r3, #81]
 3425 1512 DBB2     		uxtb	r3, r3
1507:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 3426              		.loc 1 1507 0
 3427 1514 1846     		mov	r0, r3
 3428 1516 0C37     		adds	r7, r7, #12
 3429 1518 BD46     		mov	sp, r7
 3430              		@ sp needed
 3431 151a 5DF8047B 		ldr	r7, [sp], #4
 3432 151e 7047     		bx	lr
 3433              		.cfi_endproc
 3434              	.LFE73:
 3436              		.align	2
 3437              		.global	HAL_SPI_GetError
 3438              		.thumb
 3439              		.thumb_func
 3441              	HAL_SPI_GetError:
 3442              	.LFB74:
1508:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1509:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
1510:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief  Return the SPI error code
1511:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  hspi : SPI handle
1512:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval SPI Error Code
1513:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
1514:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** HAL_SPI_ErrorTypeDef HAL_SPI_GetError(SPI_HandleTypeDef *hspi)
1515:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 3443              		.loc 1 1515 0
 3444              		.cfi_startproc
 3445              		@ args = 0, pretend = 0, frame = 8
 3446              		@ frame_needed = 1, uses_anonymous_args = 0
 3447              		@ link register save eliminated.
 3448 1520 80B4     		push	{r7}
 3449              		.cfi_def_cfa_offset 4
 3450              		.cfi_offset 7, -4
 3451 1522 83B0     		sub	sp, sp, #12
 3452              		.cfi_def_cfa_offset 16
 3453 1524 00AF     		add	r7, sp, #0
 3454              		.cfi_def_cfa_register 7
 3455 1526 7860     		str	r0, [r7, #4]
1516:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   return hspi->ErrorCode;
 3456              		.loc 1 1516 0
 3457 1528 7B68     		ldr	r3, [r7, #4]
 3458 152a 93F85230 		ldrb	r3, [r3, #82]
 3459 152e DBB2     		uxtb	r3, r3
1517:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 3460              		.loc 1 1517 0
 3461 1530 1846     		mov	r0, r3
 3462 1532 0C37     		adds	r7, r7, #12
 3463 1534 BD46     		mov	sp, r7
 3464              		@ sp needed
 3465 1536 5DF8047B 		ldr	r7, [sp], #4
 3466 153a 7047     		bx	lr
 3467              		.cfi_endproc
 3468              	.LFE74:
 3470              		.align	2
 3471              		.thumb
 3472              		.thumb_func
 3474              	SPI_TxCloseIRQHandler:
 3475              	.LFB75:
1518:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1519:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
1520:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @}
1521:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
1522:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1523:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /**
1524:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief  Interrupt Handler to close Tx transfer 
1525:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  hspi: SPI handle
1526:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval void
1527:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
1528:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** static void SPI_TxCloseIRQHandler(SPI_HandleTypeDef *hspi)
1529:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 3476              		.loc 1 1529 0
 3477              		.cfi_startproc
 3478              		@ args = 0, pretend = 0, frame = 8
 3479              		@ frame_needed = 1, uses_anonymous_args = 0
 3480 153c 80B5     		push	{r7, lr}
 3481              		.cfi_def_cfa_offset 8
 3482              		.cfi_offset 7, -8
 3483              		.cfi_offset 14, -4
 3484 153e 82B0     		sub	sp, sp, #8
 3485              		.cfi_def_cfa_offset 16
 3486 1540 00AF     		add	r7, sp, #0
 3487              		.cfi_def_cfa_register 7
 3488 1542 7860     		str	r0, [r7, #4]
1530:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Wait until TXE flag is set to send data */
1531:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_TXE, RESET, SPI_TIMEOUT_VALUE) != HAL_OK)
 3489              		.loc 1 1531 0
 3490 1544 7868     		ldr	r0, [r7, #4]
 3491 1546 0221     		movs	r1, #2
 3492 1548 0022     		movs	r2, #0
 3493 154a 0A23     		movs	r3, #10
 3494 154c 00F050FB 		bl	SPI_WaitOnFlagUntilTimeout
 3495 1550 0346     		mov	r3, r0
 3496 1552 002B     		cmp	r3, #0
 3497 1554 09D0     		beq	.L173
1532:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1533:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->ErrorCode |= HAL_SPI_ERROR_FLAG;
 3498              		.loc 1 1533 0
 3499 1556 7B68     		ldr	r3, [r7, #4]
 3500 1558 93F85230 		ldrb	r3, [r3, #82]
 3501 155c DBB2     		uxtb	r3, r3
 3502 155e 43F02003 		orr	r3, r3, #32
 3503 1562 DAB2     		uxtb	r2, r3
 3504 1564 7B68     		ldr	r3, [r7, #4]
 3505 1566 83F85220 		strb	r2, [r3, #82]
 3506              	.L173:
1534:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1535:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1536:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Disable TXE interrupt */
1537:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE ));
 3507              		.loc 1 1537 0
 3508 156a 7B68     		ldr	r3, [r7, #4]
 3509 156c 1B68     		ldr	r3, [r3]
 3510 156e 7A68     		ldr	r2, [r7, #4]
 3511 1570 1268     		ldr	r2, [r2]
 3512 1572 5268     		ldr	r2, [r2, #4]
 3513 1574 22F08002 		bic	r2, r2, #128
 3514 1578 5A60     		str	r2, [r3, #4]
1538:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1539:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Disable ERR interrupt if Receive process is finished */
1540:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(__HAL_SPI_GET_IT_SOURCE(hspi, SPI_IT_RXNE) == RESET)
 3515              		.loc 1 1540 0
 3516 157a 7B68     		ldr	r3, [r7, #4]
 3517 157c 1B68     		ldr	r3, [r3]
 3518 157e 5B68     		ldr	r3, [r3, #4]
 3519 1580 03F04003 		and	r3, r3, #64
 3520 1584 002B     		cmp	r3, #0
 3521 1586 47D1     		bne	.L172
1541:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1542:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_ERR));
 3522              		.loc 1 1542 0
 3523 1588 7B68     		ldr	r3, [r7, #4]
 3524 158a 1B68     		ldr	r3, [r3]
 3525 158c 7A68     		ldr	r2, [r7, #4]
 3526 158e 1268     		ldr	r2, [r2]
 3527 1590 5268     		ldr	r2, [r2, #4]
 3528 1592 22F02002 		bic	r2, r2, #32
 3529 1596 5A60     		str	r2, [r3, #4]
1543:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1544:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Wait until Busy flag is reset before disabling SPI */
1545:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_BSY, SET, SPI_TIMEOUT_VALUE) != HAL_OK)
 3530              		.loc 1 1545 0
 3531 1598 7868     		ldr	r0, [r7, #4]
 3532 159a 8021     		movs	r1, #128
 3533 159c 0122     		movs	r2, #1
 3534 159e 0A23     		movs	r3, #10
 3535 15a0 00F026FB 		bl	SPI_WaitOnFlagUntilTimeout
 3536 15a4 0346     		mov	r3, r0
 3537 15a6 002B     		cmp	r3, #0
 3538 15a8 09D0     		beq	.L175
1546:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1547:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->ErrorCode |= HAL_SPI_ERROR_FLAG;
 3539              		.loc 1 1547 0
 3540 15aa 7B68     		ldr	r3, [r7, #4]
 3541 15ac 93F85230 		ldrb	r3, [r3, #82]
 3542 15b0 DBB2     		uxtb	r3, r3
 3543 15b2 43F02003 		orr	r3, r3, #32
 3544 15b6 DAB2     		uxtb	r2, r3
 3545 15b8 7B68     		ldr	r3, [r7, #4]
 3546 15ba 83F85220 		strb	r2, [r3, #82]
 3547              	.L175:
1548:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1549:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1550:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Clear OVERUN flag in 2 Lines communication mode because received is not read */
1551:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_2LINES)
 3548              		.loc 1 1551 0
 3549 15be 7B68     		ldr	r3, [r7, #4]
 3550 15c0 9B68     		ldr	r3, [r3, #8]
 3551 15c2 002B     		cmp	r3, #0
 3552 15c4 05D1     		bne	.L176
1552:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1553:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
 3553              		.loc 1 1553 0
 3554 15c6 7B68     		ldr	r3, [r7, #4]
 3555 15c8 1B68     		ldr	r3, [r3]
 3556 15ca DB68     		ldr	r3, [r3, #12]
 3557 15cc 7B68     		ldr	r3, [r7, #4]
 3558 15ce 1B68     		ldr	r3, [r3]
 3559 15d0 9B68     		ldr	r3, [r3, #8]
 3560              	.L176:
1554:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1555:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     
1556:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Check if Errors has been detected during transfer */
1557:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->ErrorCode ==  HAL_SPI_ERROR_NONE)
 3561              		.loc 1 1557 0
 3562 15d2 7B68     		ldr	r3, [r7, #4]
 3563 15d4 93F85230 		ldrb	r3, [r3, #82]
 3564 15d8 DBB2     		uxtb	r3, r3
 3565 15da 002B     		cmp	r3, #0
 3566 15dc 15D1     		bne	.L177
1558:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1559:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Check if we are in Tx or in Rx/Tx Mode */
1560:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       if(hspi->State == HAL_SPI_STATE_BUSY_TX_RX)
 3567              		.loc 1 1560 0
 3568 15de 7B68     		ldr	r3, [r7, #4]
 3569 15e0 93F85130 		ldrb	r3, [r3, #81]
 3570 15e4 DBB2     		uxtb	r3, r3
 3571 15e6 322B     		cmp	r3, #50
 3572 15e8 07D1     		bne	.L178
1561:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
1562:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         /* Set state to READY before run the Callback Complete */
1563:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 3573              		.loc 1 1563 0
 3574 15ea 7B68     		ldr	r3, [r7, #4]
 3575 15ec 0122     		movs	r2, #1
 3576 15ee 83F85120 		strb	r2, [r3, #81]
1564:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
 3577              		.loc 1 1564 0
 3578 15f2 7868     		ldr	r0, [r7, #4]
 3579 15f4 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 3580 15f8 0EE0     		b	.L172
 3581              	.L178:
1565:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       }
1566:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       else
1567:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
1568:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         /* Set state to READY before run the Callback Complete */
1569:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 3582              		.loc 1 1569 0
 3583 15fa 7B68     		ldr	r3, [r7, #4]
 3584 15fc 0122     		movs	r2, #1
 3585 15fe 83F85120 		strb	r2, [r3, #81]
1570:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         HAL_SPI_TxCpltCallback(hspi);
 3586              		.loc 1 1570 0
 3587 1602 7868     		ldr	r0, [r7, #4]
 3588 1604 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 3589 1608 06E0     		b	.L172
 3590              	.L177:
1571:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       }
1572:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1573:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     else
1574:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1575:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Set state to READY before run the Callback Complete */
1576:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
 3591              		.loc 1 1576 0
 3592 160a 7B68     		ldr	r3, [r7, #4]
 3593 160c 0122     		movs	r2, #1
 3594 160e 83F85120 		strb	r2, [r3, #81]
1577:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Call Error call back in case of Error */
1578:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 3595              		.loc 1 1578 0
 3596 1612 7868     		ldr	r0, [r7, #4]
 3597 1614 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 3598              	.L172:
1579:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1580:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1581:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 3599              		.loc 1 1581 0
 3600 1618 0837     		adds	r7, r7, #8
 3601 161a BD46     		mov	sp, r7
 3602              		@ sp needed
 3603 161c 80BD     		pop	{r7, pc}
 3604              		.cfi_endproc
 3605              	.LFE75:
 3607 161e 00BF     		.align	2
 3608              		.thumb
 3609              		.thumb_func
 3611              	SPI_TxISR:
 3612              	.LFB76:
1582:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1583:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
1584:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief  Interrupt Handler to transmit amount of data in no-blocking mode 
1585:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  hspi: SPI handle
1586:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval void
1587:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
1588:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** static void SPI_TxISR(SPI_HandleTypeDef *hspi)
1589:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 3613              		.loc 1 1589 0
 3614              		.cfi_startproc
 3615              		@ args = 0, pretend = 0, frame = 8
 3616              		@ frame_needed = 1, uses_anonymous_args = 0
 3617 1620 80B5     		push	{r7, lr}
 3618              		.cfi_def_cfa_offset 8
 3619              		.cfi_offset 7, -8
 3620              		.cfi_offset 14, -4
 3621 1622 82B0     		sub	sp, sp, #8
 3622              		.cfi_def_cfa_offset 16
 3623 1624 00AF     		add	r7, sp, #0
 3624              		.cfi_def_cfa_register 7
 3625 1626 7860     		str	r0, [r7, #4]
1590:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
1591:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 3626              		.loc 1 1591 0
 3627 1628 7B68     		ldr	r3, [r7, #4]
 3628 162a DB68     		ldr	r3, [r3, #12]
 3629 162c 002B     		cmp	r3, #0
 3630 162e 09D1     		bne	.L181
1592:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1593:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->Instance->DR = (*hspi->pTxBuffPtr++);
 3631              		.loc 1 1593 0
 3632 1630 7B68     		ldr	r3, [r7, #4]
 3633 1632 1A68     		ldr	r2, [r3]
 3634 1634 7B68     		ldr	r3, [r7, #4]
 3635 1636 1B6B     		ldr	r3, [r3, #48]
 3636 1638 581C     		adds	r0, r3, #1
 3637 163a 7968     		ldr	r1, [r7, #4]
 3638 163c 0863     		str	r0, [r1, #48]
 3639 163e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3640 1640 D360     		str	r3, [r2, #12]
 3641 1642 0AE0     		b	.L182
 3642              	.L181:
1594:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1595:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
1596:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   else
1597:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1598:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->Instance->DR = *((uint16_t*)hspi->pTxBuffPtr);
 3643              		.loc 1 1598 0
 3644 1644 7B68     		ldr	r3, [r7, #4]
 3645 1646 1B68     		ldr	r3, [r3]
 3646 1648 7A68     		ldr	r2, [r7, #4]
 3647 164a 126B     		ldr	r2, [r2, #48]
 3648 164c 1288     		ldrh	r2, [r2]
 3649 164e DA60     		str	r2, [r3, #12]
1599:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->pTxBuffPtr+=2;
 3650              		.loc 1 1599 0
 3651 1650 7B68     		ldr	r3, [r7, #4]
 3652 1652 1B6B     		ldr	r3, [r3, #48]
 3653 1654 9A1C     		adds	r2, r3, #2
 3654 1656 7B68     		ldr	r3, [r7, #4]
 3655 1658 1A63     		str	r2, [r3, #48]
 3656              	.L182:
1600:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1601:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->TxXferCount--;
 3657              		.loc 1 1601 0
 3658 165a 7B68     		ldr	r3, [r7, #4]
 3659 165c DB8E     		ldrh	r3, [r3, #54]
 3660 165e 013B     		subs	r3, r3, #1
 3661 1660 9AB2     		uxth	r2, r3
 3662 1662 7B68     		ldr	r3, [r7, #4]
 3663 1664 DA86     		strh	r2, [r3, #54]	@ movhi
1602:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1603:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(hspi->TxXferCount == 0)
 3664              		.loc 1 1603 0
 3665 1666 7B68     		ldr	r3, [r7, #4]
 3666 1668 DB8E     		ldrh	r3, [r3, #54]
 3667 166a 002B     		cmp	r3, #0
 3668 166c 0FD1     		bne	.L180
1604:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1605:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED)
 3669              		.loc 1 1605 0
 3670 166e 7B68     		ldr	r3, [r7, #4]
 3671 1670 9B6A     		ldr	r3, [r3, #40]
 3672 1672 B3F5005F 		cmp	r3, #8192
 3673 1676 07D1     		bne	.L184
1606:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1607:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* calculate and transfer CRC on Tx line */
1608:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->Instance->CR1 |= SPI_CR1_CRCNEXT;
 3674              		.loc 1 1608 0
 3675 1678 7B68     		ldr	r3, [r7, #4]
 3676 167a 1B68     		ldr	r3, [r3]
 3677 167c 7A68     		ldr	r2, [r7, #4]
 3678 167e 1268     		ldr	r2, [r2]
 3679 1680 1268     		ldr	r2, [r2]
 3680 1682 42F48052 		orr	r2, r2, #4096
 3681 1686 1A60     		str	r2, [r3]
 3682              	.L184:
1609:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1610:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     SPI_TxCloseIRQHandler(hspi);
 3683              		.loc 1 1610 0
 3684 1688 7868     		ldr	r0, [r7, #4]
 3685 168a FFF757FF 		bl	SPI_TxCloseIRQHandler
 3686              	.L180:
1611:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1612:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 3687              		.loc 1 1612 0
 3688 168e 0837     		adds	r7, r7, #8
 3689 1690 BD46     		mov	sp, r7
 3690              		@ sp needed
 3691 1692 80BD     		pop	{r7, pc}
 3692              		.cfi_endproc
 3693              	.LFE76:
 3695              		.align	2
 3696              		.thumb
 3697              		.thumb_func
 3699              	SPI_RxCloseIRQHandler:
 3700              	.LFB77:
1613:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1614:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
1615:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief  Interrupt Handler to close Rx transfer 
1616:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  hspi: SPI handle
1617:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval void
1618:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
1619:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** static void SPI_RxCloseIRQHandler(SPI_HandleTypeDef *hspi)
1620:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 3701              		.loc 1 1620 0
 3702              		.cfi_startproc
 3703              		@ args = 0, pretend = 0, frame = 16
 3704              		@ frame_needed = 1, uses_anonymous_args = 0
 3705 1694 80B5     		push	{r7, lr}
 3706              		.cfi_def_cfa_offset 8
 3707              		.cfi_offset 7, -8
 3708              		.cfi_offset 14, -4
 3709 1696 84B0     		sub	sp, sp, #16
 3710              		.cfi_def_cfa_offset 24
 3711 1698 00AF     		add	r7, sp, #0
 3712              		.cfi_def_cfa_register 7
 3713 169a 7860     		str	r0, [r7, #4]
1621:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   __IO uint16_t tmpreg;
1622:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1623:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED)
 3714              		.loc 1 1623 0
 3715 169c 7B68     		ldr	r3, [r7, #4]
 3716 169e 9B6A     		ldr	r3, [r3, #40]
 3717 16a0 B3F5005F 		cmp	r3, #8192
 3718 16a4 4BD1     		bne	.L186
1624:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1625:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Wait until RXNE flag is set to send data */
1626:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, SPI_TIMEOUT_VALUE) != HAL_OK)
 3719              		.loc 1 1626 0
 3720 16a6 7868     		ldr	r0, [r7, #4]
 3721 16a8 0121     		movs	r1, #1
 3722 16aa 0022     		movs	r2, #0
 3723 16ac 0A23     		movs	r3, #10
 3724 16ae 00F09FFA 		bl	SPI_WaitOnFlagUntilTimeout
 3725 16b2 0346     		mov	r3, r0
 3726 16b4 002B     		cmp	r3, #0
 3727 16b6 09D0     		beq	.L187
1627:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1628:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->ErrorCode |= HAL_SPI_ERROR_FLAG;
 3728              		.loc 1 1628 0
 3729 16b8 7B68     		ldr	r3, [r7, #4]
 3730 16ba 93F85230 		ldrb	r3, [r3, #82]
 3731 16be DBB2     		uxtb	r3, r3
 3732 16c0 43F02003 		orr	r3, r3, #32
 3733 16c4 DAB2     		uxtb	r2, r3
 3734 16c6 7B68     		ldr	r3, [r7, #4]
 3735 16c8 83F85220 		strb	r2, [r3, #82]
 3736              	.L187:
1629:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1630:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1631:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Read CRC to reset RXNE flag */
1632:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     tmpreg = hspi->Instance->DR;
 3737              		.loc 1 1632 0
 3738 16cc 7B68     		ldr	r3, [r7, #4]
 3739 16ce 1B68     		ldr	r3, [r3]
 3740 16d0 DB68     		ldr	r3, [r3, #12]
 3741 16d2 9BB2     		uxth	r3, r3
 3742 16d4 FB81     		strh	r3, [r7, #14]	@ movhi
1633:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1634:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Wait until RXNE flag is set to send data */
1635:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_TIMEOUT_VALUE) != HAL_OK)
 3743              		.loc 1 1635 0
 3744 16d6 7868     		ldr	r0, [r7, #4]
 3745 16d8 0121     		movs	r1, #1
 3746 16da 0122     		movs	r2, #1
 3747 16dc 0A23     		movs	r3, #10
 3748 16de 00F087FA 		bl	SPI_WaitOnFlagUntilTimeout
 3749 16e2 0346     		mov	r3, r0
 3750 16e4 002B     		cmp	r3, #0
 3751 16e6 09D0     		beq	.L188
1636:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1637:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->ErrorCode |= HAL_SPI_ERROR_FLAG;
 3752              		.loc 1 1637 0
 3753 16e8 7B68     		ldr	r3, [r7, #4]
 3754 16ea 93F85230 		ldrb	r3, [r3, #82]
 3755 16ee DBB2     		uxtb	r3, r3
 3756 16f0 43F02003 		orr	r3, r3, #32
 3757 16f4 DAB2     		uxtb	r2, r3
 3758 16f6 7B68     		ldr	r3, [r7, #4]
 3759 16f8 83F85220 		strb	r2, [r3, #82]
 3760              	.L188:
1638:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1639:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1640:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Check if CRC error occurred */
1641:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
 3761              		.loc 1 1641 0
 3762 16fc 7B68     		ldr	r3, [r7, #4]
 3763 16fe 1B68     		ldr	r3, [r3]
 3764 1700 9B68     		ldr	r3, [r3, #8]
 3765 1702 03F01003 		and	r3, r3, #16
 3766 1706 002B     		cmp	r3, #0
 3767 1708 19D0     		beq	.L186
1642:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1643:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->ErrorCode |= HAL_SPI_ERROR_CRC;
 3768              		.loc 1 1643 0
 3769 170a 7B68     		ldr	r3, [r7, #4]
 3770 170c 93F85230 		ldrb	r3, [r3, #82]
 3771 1710 DBB2     		uxtb	r3, r3
 3772 1712 43F00203 		orr	r3, r3, #2
 3773 1716 DAB2     		uxtb	r2, r3
 3774 1718 7B68     		ldr	r3, [r7, #4]
 3775 171a 83F85220 		strb	r2, [r3, #82]
1644:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1645:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Reset CRC Calculation */
1646:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_RESET_CRC(hspi);
 3776              		.loc 1 1646 0
 3777 171e 7B68     		ldr	r3, [r7, #4]
 3778 1720 1B68     		ldr	r3, [r3]
 3779 1722 7A68     		ldr	r2, [r7, #4]
 3780 1724 1268     		ldr	r2, [r2]
 3781 1726 1268     		ldr	r2, [r2]
 3782 1728 22F40052 		bic	r2, r2, #8192
 3783 172c 1A60     		str	r2, [r3]
 3784 172e 7B68     		ldr	r3, [r7, #4]
 3785 1730 1B68     		ldr	r3, [r3]
 3786 1732 7A68     		ldr	r2, [r7, #4]
 3787 1734 1268     		ldr	r2, [r2]
 3788 1736 1268     		ldr	r2, [r2]
 3789 1738 42F40052 		orr	r2, r2, #8192
 3790 173c 1A60     		str	r2, [r3]
 3791              	.L186:
1647:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1648:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1649:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1650:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
1651:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE));
 3792              		.loc 1 1651 0
 3793 173e 7B68     		ldr	r3, [r7, #4]
 3794 1740 1B68     		ldr	r3, [r3]
 3795 1742 7A68     		ldr	r2, [r7, #4]
 3796 1744 1268     		ldr	r2, [r2]
 3797 1746 5268     		ldr	r2, [r2, #4]
 3798 1748 22F04002 		bic	r2, r2, #64
 3799 174c 5A60     		str	r2, [r3, #4]
1652:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1653:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* if Transmit process is finished */
1654:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(__HAL_SPI_GET_IT_SOURCE(hspi, SPI_IT_TXE) == RESET)
 3800              		.loc 1 1654 0
 3801 174e 7B68     		ldr	r3, [r7, #4]
 3802 1750 1B68     		ldr	r3, [r3]
 3803 1752 5B68     		ldr	r3, [r3, #4]
 3804 1754 03F08003 		and	r3, r3, #128
 3805 1758 002B     		cmp	r3, #0
 3806 175a 41D1     		bne	.L185
1655:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1656:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Disable ERR interrupt */
1657:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_ERR));
 3807              		.loc 1 1657 0
 3808 175c 7B68     		ldr	r3, [r7, #4]
 3809 175e 1B68     		ldr	r3, [r3]
 3810 1760 7A68     		ldr	r2, [r7, #4]
 3811 1762 1268     		ldr	r2, [r2]
 3812 1764 5268     		ldr	r2, [r2, #4]
 3813 1766 22F02002 		bic	r2, r2, #32
 3814 176a 5A60     		str	r2, [r3, #4]
1658:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1659:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if((hspi->Init.Mode == SPI_MODE_MASTER)&&((hspi->Init.Direction == SPI_DIRECTION_1LINE)||(hspi-
 3815              		.loc 1 1659 0
 3816 176c 7B68     		ldr	r3, [r7, #4]
 3817 176e 5B68     		ldr	r3, [r3, #4]
 3818 1770 B3F5827F 		cmp	r3, #260
 3819 1774 11D1     		bne	.L190
 3820              		.loc 1 1659 0 is_stmt 0 discriminator 1
 3821 1776 7B68     		ldr	r3, [r7, #4]
 3822 1778 9B68     		ldr	r3, [r3, #8]
 3823 177a B3F5004F 		cmp	r3, #32768
 3824 177e 04D0     		beq	.L191
 3825 1780 7B68     		ldr	r3, [r7, #4]
 3826 1782 9B68     		ldr	r3, [r3, #8]
 3827 1784 B3F5806F 		cmp	r3, #1024
 3828 1788 07D1     		bne	.L190
 3829              	.L191:
1660:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1661:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Disable SPI peripheral */
1662:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
 3830              		.loc 1 1662 0 is_stmt 1
 3831 178a 7B68     		ldr	r3, [r7, #4]
 3832 178c 1B68     		ldr	r3, [r3]
 3833 178e 7A68     		ldr	r2, [r7, #4]
 3834 1790 1268     		ldr	r2, [r2]
 3835 1792 1268     		ldr	r2, [r2]
 3836 1794 22F04002 		bic	r2, r2, #64
 3837 1798 1A60     		str	r2, [r3]
 3838              	.L190:
1663:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1664:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     
1665:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Check if Errors has been detected during transfer */
1666:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(hspi->ErrorCode ==  HAL_SPI_ERROR_NONE)
 3839              		.loc 1 1666 0
 3840 179a 7B68     		ldr	r3, [r7, #4]
 3841 179c 93F85230 		ldrb	r3, [r3, #82]
 3842 17a0 DBB2     		uxtb	r3, r3
 3843 17a2 002B     		cmp	r3, #0
 3844 17a4 15D1     		bne	.L192
1667:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1668:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Check if we are in Rx or in Rx/Tx Mode */
1669:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       if(hspi->State == HAL_SPI_STATE_BUSY_TX_RX)
 3845              		.loc 1 1669 0
 3846 17a6 7B68     		ldr	r3, [r7, #4]
 3847 17a8 93F85130 		ldrb	r3, [r3, #81]
 3848 17ac DBB2     		uxtb	r3, r3
 3849 17ae 322B     		cmp	r3, #50
 3850 17b0 07D1     		bne	.L193
1670:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
1671:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         /* Set state to READY before run the Callback Complete */
1672:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 3851              		.loc 1 1672 0
 3852 17b2 7B68     		ldr	r3, [r7, #4]
 3853 17b4 0122     		movs	r2, #1
 3854 17b6 83F85120 		strb	r2, [r3, #81]
1673:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
 3855              		.loc 1 1673 0
 3856 17ba 7868     		ldr	r0, [r7, #4]
 3857 17bc FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 3858 17c0 0EE0     		b	.L185
 3859              	.L193:
1674:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       }else
1675:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
1676:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         /* Set state to READY before run the Callback Complete */
1677:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 3860              		.loc 1 1677 0
 3861 17c2 7B68     		ldr	r3, [r7, #4]
 3862 17c4 0122     		movs	r2, #1
 3863 17c6 83F85120 		strb	r2, [r3, #81]
1678:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         HAL_SPI_RxCpltCallback(hspi);
 3864              		.loc 1 1678 0
 3865 17ca 7868     		ldr	r0, [r7, #4]
 3866 17cc FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 3867 17d0 06E0     		b	.L185
 3868              	.L192:
1679:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       }
1680:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1681:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     else
1682:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1683:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Set state to READY before run the Callback Complete */
1684:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
 3869              		.loc 1 1684 0
 3870 17d2 7B68     		ldr	r3, [r7, #4]
 3871 17d4 0122     		movs	r2, #1
 3872 17d6 83F85120 		strb	r2, [r3, #81]
1685:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Call Error call back in case of Error */
1686:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 3873              		.loc 1 1686 0
 3874 17da 7868     		ldr	r0, [r7, #4]
 3875 17dc FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 3876              	.L185:
1687:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1688:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1689:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 3877              		.loc 1 1689 0
 3878 17e0 1037     		adds	r7, r7, #16
 3879 17e2 BD46     		mov	sp, r7
 3880              		@ sp needed
 3881 17e4 80BD     		pop	{r7, pc}
 3882              		.cfi_endproc
 3883              	.LFE77:
 3885 17e6 00BF     		.align	2
 3886              		.thumb
 3887              		.thumb_func
 3889              	SPI_2LinesRxISR:
 3890              	.LFB78:
1690:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1691:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
1692:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief  Interrupt Handler to receive amount of data in 2Lines mode 
1693:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  hspi: SPI handle
1694:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval void
1695:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
1696:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** static void SPI_2LinesRxISR(SPI_HandleTypeDef *hspi)
1697:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 3891              		.loc 1 1697 0
 3892              		.cfi_startproc
 3893              		@ args = 0, pretend = 0, frame = 8
 3894              		@ frame_needed = 1, uses_anonymous_args = 0
 3895 17e8 80B5     		push	{r7, lr}
 3896              		.cfi_def_cfa_offset 8
 3897              		.cfi_offset 7, -8
 3898              		.cfi_offset 14, -4
 3899 17ea 82B0     		sub	sp, sp, #8
 3900              		.cfi_def_cfa_offset 16
 3901 17ec 00AF     		add	r7, sp, #0
 3902              		.cfi_def_cfa_register 7
 3903 17ee 7860     		str	r0, [r7, #4]
1698:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
1699:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 3904              		.loc 1 1699 0
 3905 17f0 7B68     		ldr	r3, [r7, #4]
 3906 17f2 DB68     		ldr	r3, [r3, #12]
 3907 17f4 002B     		cmp	r3, #0
 3908 17f6 0AD1     		bne	.L196
1700:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1701:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     (*hspi->pRxBuffPtr++) = hspi->Instance->DR;
 3909              		.loc 1 1701 0
 3910 17f8 7B68     		ldr	r3, [r7, #4]
 3911 17fa 9B6B     		ldr	r3, [r3, #56]
 3912 17fc 591C     		adds	r1, r3, #1
 3913 17fe 7A68     		ldr	r2, [r7, #4]
 3914 1800 9163     		str	r1, [r2, #56]
 3915 1802 7A68     		ldr	r2, [r7, #4]
 3916 1804 1268     		ldr	r2, [r2]
 3917 1806 D268     		ldr	r2, [r2, #12]
 3918 1808 D2B2     		uxtb	r2, r2
 3919 180a 1A70     		strb	r2, [r3]
 3920 180c 0BE0     		b	.L197
 3921              	.L196:
1702:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1703:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
1704:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   else
1705:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1706:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     *((uint16_t*)hspi->pRxBuffPtr) = hspi->Instance->DR;
 3922              		.loc 1 1706 0
 3923 180e 7B68     		ldr	r3, [r7, #4]
 3924 1810 9B6B     		ldr	r3, [r3, #56]
 3925 1812 7A68     		ldr	r2, [r7, #4]
 3926 1814 1268     		ldr	r2, [r2]
 3927 1816 D268     		ldr	r2, [r2, #12]
 3928 1818 92B2     		uxth	r2, r2
 3929 181a 1A80     		strh	r2, [r3]	@ movhi
1707:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->pRxBuffPtr+=2;
 3930              		.loc 1 1707 0
 3931 181c 7B68     		ldr	r3, [r7, #4]
 3932 181e 9B6B     		ldr	r3, [r3, #56]
 3933 1820 9A1C     		adds	r2, r3, #2
 3934 1822 7B68     		ldr	r3, [r7, #4]
 3935 1824 9A63     		str	r2, [r3, #56]
 3936              	.L197:
1708:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1709:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->RxXferCount--;
 3937              		.loc 1 1709 0
 3938 1826 7B68     		ldr	r3, [r7, #4]
 3939 1828 DB8F     		ldrh	r3, [r3, #62]
 3940 182a 013B     		subs	r3, r3, #1
 3941 182c 9AB2     		uxth	r2, r3
 3942 182e 7B68     		ldr	r3, [r7, #4]
 3943 1830 DA87     		strh	r2, [r3, #62]	@ movhi
1710:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1711:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(hspi->RxXferCount==0)
 3944              		.loc 1 1711 0
 3945 1832 7B68     		ldr	r3, [r7, #4]
 3946 1834 DB8F     		ldrh	r3, [r3, #62]
 3947 1836 002B     		cmp	r3, #0
 3948 1838 02D1     		bne	.L195
1712:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1713:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     SPI_RxCloseIRQHandler(hspi);
 3949              		.loc 1 1713 0
 3950 183a 7868     		ldr	r0, [r7, #4]
 3951 183c FFF72AFF 		bl	SPI_RxCloseIRQHandler
 3952              	.L195:
1714:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1715:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 3953              		.loc 1 1715 0
 3954 1840 0837     		adds	r7, r7, #8
 3955 1842 BD46     		mov	sp, r7
 3956              		@ sp needed
 3957 1844 80BD     		pop	{r7, pc}
 3958              		.cfi_endproc
 3959              	.LFE78:
 3961 1846 00BF     		.align	2
 3962              		.thumb
 3963              		.thumb_func
 3965              	SPI_RxISR:
 3966              	.LFB79:
1716:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1717:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
1718:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief  Interrupt Handler to receive amount of data in no-blocking mode 
1719:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param  hspi: SPI handle
1720:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval void
1721:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
1722:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** static void SPI_RxISR(SPI_HandleTypeDef *hspi)
1723:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 3967              		.loc 1 1723 0
 3968              		.cfi_startproc
 3969              		@ args = 0, pretend = 0, frame = 8
 3970              		@ frame_needed = 1, uses_anonymous_args = 0
 3971 1848 80B5     		push	{r7, lr}
 3972              		.cfi_def_cfa_offset 8
 3973              		.cfi_offset 7, -8
 3974              		.cfi_offset 14, -4
 3975 184a 82B0     		sub	sp, sp, #8
 3976              		.cfi_def_cfa_offset 16
 3977 184c 00AF     		add	r7, sp, #0
 3978              		.cfi_def_cfa_register 7
 3979 184e 7860     		str	r0, [r7, #4]
1724:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
1725:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 3980              		.loc 1 1725 0
 3981 1850 7B68     		ldr	r3, [r7, #4]
 3982 1852 DB68     		ldr	r3, [r3, #12]
 3983 1854 002B     		cmp	r3, #0
 3984 1856 0AD1     		bne	.L200
1726:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1727:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     (*hspi->pRxBuffPtr++) = hspi->Instance->DR;
 3985              		.loc 1 1727 0
 3986 1858 7B68     		ldr	r3, [r7, #4]
 3987 185a 9B6B     		ldr	r3, [r3, #56]
 3988 185c 591C     		adds	r1, r3, #1
 3989 185e 7A68     		ldr	r2, [r7, #4]
 3990 1860 9163     		str	r1, [r2, #56]
 3991 1862 7A68     		ldr	r2, [r7, #4]
 3992 1864 1268     		ldr	r2, [r2]
 3993 1866 D268     		ldr	r2, [r2, #12]
 3994 1868 D2B2     		uxtb	r2, r2
 3995 186a 1A70     		strb	r2, [r3]
 3996 186c 0BE0     		b	.L201
 3997              	.L200:
1728:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1729:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
1730:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   else
1731:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1732:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     *((uint16_t*)hspi->pRxBuffPtr) = hspi->Instance->DR;
 3998              		.loc 1 1732 0
 3999 186e 7B68     		ldr	r3, [r7, #4]
 4000 1870 9B6B     		ldr	r3, [r3, #56]
 4001 1872 7A68     		ldr	r2, [r7, #4]
 4002 1874 1268     		ldr	r2, [r2]
 4003 1876 D268     		ldr	r2, [r2, #12]
 4004 1878 92B2     		uxth	r2, r2
 4005 187a 1A80     		strh	r2, [r3]	@ movhi
1733:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->pRxBuffPtr+=2;
 4006              		.loc 1 1733 0
 4007 187c 7B68     		ldr	r3, [r7, #4]
 4008 187e 9B6B     		ldr	r3, [r3, #56]
 4009 1880 9A1C     		adds	r2, r3, #2
 4010 1882 7B68     		ldr	r3, [r7, #4]
 4011 1884 9A63     		str	r2, [r3, #56]
 4012              	.L201:
1734:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1735:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->RxXferCount--;
 4013              		.loc 1 1735 0
 4014 1886 7B68     		ldr	r3, [r7, #4]
 4015 1888 DB8F     		ldrh	r3, [r3, #62]
 4016 188a 013B     		subs	r3, r3, #1
 4017 188c 9AB2     		uxth	r2, r3
 4018 188e 7B68     		ldr	r3, [r7, #4]
 4019 1890 DA87     		strh	r2, [r3, #62]	@ movhi
1736:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1737:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Enable CRC Transmission */
1738:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if((hspi->RxXferCount == 1) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED))
 4020              		.loc 1 1738 0
 4021 1892 7B68     		ldr	r3, [r7, #4]
 4022 1894 DB8F     		ldrh	r3, [r3, #62]
 4023 1896 012B     		cmp	r3, #1
 4024 1898 0CD1     		bne	.L202
 4025              		.loc 1 1738 0 is_stmt 0 discriminator 1
 4026 189a 7B68     		ldr	r3, [r7, #4]
 4027 189c 9B6A     		ldr	r3, [r3, #40]
 4028 189e B3F5005F 		cmp	r3, #8192
 4029 18a2 07D1     		bne	.L202
1739:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1740:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Set CRC Next to calculate CRC on Rx side */
1741:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->Instance->CR1 |= SPI_CR1_CRCNEXT;  
 4030              		.loc 1 1741 0 is_stmt 1
 4031 18a4 7B68     		ldr	r3, [r7, #4]
 4032 18a6 1B68     		ldr	r3, [r3]
 4033 18a8 7A68     		ldr	r2, [r7, #4]
 4034 18aa 1268     		ldr	r2, [r2]
 4035 18ac 1268     		ldr	r2, [r2]
 4036 18ae 42F48052 		orr	r2, r2, #4096
 4037 18b2 1A60     		str	r2, [r3]
 4038              	.L202:
1742:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1743:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1744:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(hspi->RxXferCount == 0)
 4039              		.loc 1 1744 0
 4040 18b4 7B68     		ldr	r3, [r7, #4]
 4041 18b6 DB8F     		ldrh	r3, [r3, #62]
 4042 18b8 002B     		cmp	r3, #0
 4043 18ba 02D1     		bne	.L199
1745:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1746:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     SPI_RxCloseIRQHandler(hspi);
 4044              		.loc 1 1746 0
 4045 18bc 7868     		ldr	r0, [r7, #4]
 4046 18be FFF7E9FE 		bl	SPI_RxCloseIRQHandler
 4047              	.L199:
1747:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1748:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 4048              		.loc 1 1748 0
 4049 18c2 0837     		adds	r7, r7, #8
 4050 18c4 BD46     		mov	sp, r7
 4051              		@ sp needed
 4052 18c6 80BD     		pop	{r7, pc}
 4053              		.cfi_endproc
 4054              	.LFE79:
 4056              		.align	2
 4057              		.thumb
 4058              		.thumb_func
 4060              	SPI_DMATransmitCplt:
 4061              	.LFB80:
1749:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1750:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
1751:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief DMA SPI transmit process complete callback 
1752:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param hdma : DMA handle
1753:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval None
1754:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
1755:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
1756:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 4062              		.loc 1 1756 0
 4063              		.cfi_startproc
 4064              		@ args = 0, pretend = 0, frame = 16
 4065              		@ frame_needed = 1, uses_anonymous_args = 0
 4066 18c8 80B5     		push	{r7, lr}
 4067              		.cfi_def_cfa_offset 8
 4068              		.cfi_offset 7, -8
 4069              		.cfi_offset 14, -4
 4070 18ca 84B0     		sub	sp, sp, #16
 4071              		.cfi_def_cfa_offset 24
 4072 18cc 00AF     		add	r7, sp, #0
 4073              		.cfi_def_cfa_register 7
 4074 18ce 7860     		str	r0, [r7, #4]
1757:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4075              		.loc 1 1757 0
 4076 18d0 7B68     		ldr	r3, [r7, #4]
 4077 18d2 9B6B     		ldr	r3, [r3, #56]
 4078 18d4 FB60     		str	r3, [r7, #12]
1758:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1759:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Wait until TXE flag is set to send data */
1760:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_TXE, RESET, SPI_TIMEOUT_VALUE) != HAL_OK)
 4079              		.loc 1 1760 0
 4080 18d6 F868     		ldr	r0, [r7, #12]
 4081 18d8 0221     		movs	r1, #2
 4082 18da 0022     		movs	r2, #0
 4083 18dc 0A23     		movs	r3, #10
 4084 18de 00F087F9 		bl	SPI_WaitOnFlagUntilTimeout
 4085 18e2 0346     		mov	r3, r0
 4086 18e4 002B     		cmp	r3, #0
 4087 18e6 09D0     		beq	.L205
1761:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1762:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->ErrorCode |= HAL_SPI_ERROR_FLAG;
 4088              		.loc 1 1762 0
 4089 18e8 FB68     		ldr	r3, [r7, #12]
 4090 18ea 93F85230 		ldrb	r3, [r3, #82]
 4091 18ee DBB2     		uxtb	r3, r3
 4092 18f0 43F02003 		orr	r3, r3, #32
 4093 18f4 DAB2     		uxtb	r2, r3
 4094 18f6 FB68     		ldr	r3, [r7, #12]
 4095 18f8 83F85220 		strb	r2, [r3, #82]
 4096              	.L205:
1763:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1764:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1765:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Disable Tx DMA Request */
1766:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->Instance->CR2 &= (uint32_t)(~SPI_CR2_TXDMAEN);
 4097              		.loc 1 1766 0
 4098 18fc FB68     		ldr	r3, [r7, #12]
 4099 18fe 1B68     		ldr	r3, [r3]
 4100 1900 FA68     		ldr	r2, [r7, #12]
 4101 1902 1268     		ldr	r2, [r2]
 4102 1904 5268     		ldr	r2, [r2, #4]
 4103 1906 22F00202 		bic	r2, r2, #2
 4104 190a 5A60     		str	r2, [r3, #4]
1767:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1768:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Wait until Busy flag is reset before disabling SPI */
1769:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_BSY, SET, SPI_TIMEOUT_VALUE) != HAL_OK)
 4105              		.loc 1 1769 0
 4106 190c F868     		ldr	r0, [r7, #12]
 4107 190e 8021     		movs	r1, #128
 4108 1910 0122     		movs	r2, #1
 4109 1912 0A23     		movs	r3, #10
 4110 1914 00F06CF9 		bl	SPI_WaitOnFlagUntilTimeout
 4111 1918 0346     		mov	r3, r0
 4112 191a 002B     		cmp	r3, #0
 4113 191c 09D0     		beq	.L206
1770:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1771:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->ErrorCode |= HAL_SPI_ERROR_FLAG;
 4114              		.loc 1 1771 0
 4115 191e FB68     		ldr	r3, [r7, #12]
 4116 1920 93F85230 		ldrb	r3, [r3, #82]
 4117 1924 DBB2     		uxtb	r3, r3
 4118 1926 43F02003 		orr	r3, r3, #32
 4119 192a DAB2     		uxtb	r2, r3
 4120 192c FB68     		ldr	r3, [r7, #12]
 4121 192e 83F85220 		strb	r2, [r3, #82]
 4122              	.L206:
1772:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1773:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1774:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->TxXferCount = 0;
 4123              		.loc 1 1774 0
 4124 1932 FB68     		ldr	r3, [r7, #12]
 4125 1934 0022     		movs	r2, #0
 4126 1936 DA86     		strh	r2, [r3, #54]	@ movhi
1775:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1776:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 4127              		.loc 1 1776 0
 4128 1938 FB68     		ldr	r3, [r7, #12]
 4129 193a 0122     		movs	r2, #1
 4130 193c 83F85120 		strb	r2, [r3, #81]
1777:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1778:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Clear OVERUN flag in 2 Lines communication mode because received is not read */
1779:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(hspi->Init.Direction == SPI_DIRECTION_2LINES)
 4131              		.loc 1 1779 0
 4132 1940 FB68     		ldr	r3, [r7, #12]
 4133 1942 9B68     		ldr	r3, [r3, #8]
 4134 1944 002B     		cmp	r3, #0
 4135 1946 05D1     		bne	.L207
1780:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1781:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 4136              		.loc 1 1781 0
 4137 1948 FB68     		ldr	r3, [r7, #12]
 4138 194a 1B68     		ldr	r3, [r3]
 4139 194c DB68     		ldr	r3, [r3, #12]
 4140 194e FB68     		ldr	r3, [r7, #12]
 4141 1950 1B68     		ldr	r3, [r3]
 4142 1952 9B68     		ldr	r3, [r3, #8]
 4143              	.L207:
1782:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1783:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1784:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Check if Errors has been detected during transfer */
1785:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 4144              		.loc 1 1785 0
 4145 1954 FB68     		ldr	r3, [r7, #12]
 4146 1956 93F85230 		ldrb	r3, [r3, #82]
 4147 195a DBB2     		uxtb	r3, r3
 4148 195c 002B     		cmp	r3, #0
 4149 195e 03D0     		beq	.L208
1786:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1787:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
 4150              		.loc 1 1787 0
 4151 1960 F868     		ldr	r0, [r7, #12]
 4152 1962 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4153 1966 02E0     		b	.L204
 4154              	.L208:
1788:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1789:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   else
1790:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1791:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     HAL_SPI_TxCpltCallback(hspi);
 4155              		.loc 1 1791 0
 4156 1968 F868     		ldr	r0, [r7, #12]
 4157 196a FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 4158              	.L204:
1792:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1793:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 4159              		.loc 1 1793 0
 4160 196e 1037     		adds	r7, r7, #16
 4161 1970 BD46     		mov	sp, r7
 4162              		@ sp needed
 4163 1972 80BD     		pop	{r7, pc}
 4164              		.cfi_endproc
 4165              	.LFE80:
 4167              		.align	2
 4168              		.thumb
 4169              		.thumb_func
 4171              	SPI_DMAReceiveCplt:
 4172              	.LFB81:
1794:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1795:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
1796:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief DMA SPI receive process complete callback 
1797:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param hdma : DMA handle
1798:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval None
1799:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
1800:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
1801:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 4173              		.loc 1 1801 0
 4174              		.cfi_startproc
 4175              		@ args = 0, pretend = 0, frame = 16
 4176              		@ frame_needed = 1, uses_anonymous_args = 0
 4177 1974 80B5     		push	{r7, lr}
 4178              		.cfi_def_cfa_offset 8
 4179              		.cfi_offset 7, -8
 4180              		.cfi_offset 14, -4
 4181 1976 84B0     		sub	sp, sp, #16
 4182              		.cfi_def_cfa_offset 24
 4183 1978 00AF     		add	r7, sp, #0
 4184              		.cfi_def_cfa_register 7
 4185 197a 7860     		str	r0, [r7, #4]
1802:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   __IO uint16_t tmpreg;
1803:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1804:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4186              		.loc 1 1804 0
 4187 197c 7B68     		ldr	r3, [r7, #4]
 4188 197e 9B6B     		ldr	r3, [r3, #56]
 4189 1980 FB60     		str	r3, [r7, #12]
1805:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1806:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if((hspi->Init.Mode == SPI_MODE_MASTER)&&((hspi->Init.Direction == SPI_DIRECTION_1LINE)||(hspi->I
 4190              		.loc 1 1806 0
 4191 1982 FB68     		ldr	r3, [r7, #12]
 4192 1984 5B68     		ldr	r3, [r3, #4]
 4193 1986 B3F5827F 		cmp	r3, #260
 4194 198a 11D1     		bne	.L211
 4195              		.loc 1 1806 0 is_stmt 0 discriminator 1
 4196 198c FB68     		ldr	r3, [r7, #12]
 4197 198e 9B68     		ldr	r3, [r3, #8]
 4198 1990 B3F5004F 		cmp	r3, #32768
 4199 1994 04D0     		beq	.L212
 4200 1996 FB68     		ldr	r3, [r7, #12]
 4201 1998 9B68     		ldr	r3, [r3, #8]
 4202 199a B3F5806F 		cmp	r3, #1024
 4203 199e 07D1     		bne	.L211
 4204              	.L212:
1807:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1808:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Disable SPI peripheral */
1809:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
 4205              		.loc 1 1809 0 is_stmt 1
 4206 19a0 FB68     		ldr	r3, [r7, #12]
 4207 19a2 1B68     		ldr	r3, [r3]
 4208 19a4 FA68     		ldr	r2, [r7, #12]
 4209 19a6 1268     		ldr	r2, [r2]
 4210 19a8 1268     		ldr	r2, [r2]
 4211 19aa 22F04002 		bic	r2, r2, #64
 4212 19ae 1A60     		str	r2, [r3]
 4213              	.L211:
1810:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1811:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1812:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Disable Rx DMA Request */
1813:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->Instance->CR2 &= (uint32_t)(~SPI_CR2_RXDMAEN);
 4214              		.loc 1 1813 0
 4215 19b0 FB68     		ldr	r3, [r7, #12]
 4216 19b2 1B68     		ldr	r3, [r3]
 4217 19b4 FA68     		ldr	r2, [r7, #12]
 4218 19b6 1268     		ldr	r2, [r2]
 4219 19b8 5268     		ldr	r2, [r2, #4]
 4220 19ba 22F00102 		bic	r2, r2, #1
 4221 19be 5A60     		str	r2, [r3, #4]
1814:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1815:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Reset CRC Calculation */
1816:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED)
 4222              		.loc 1 1816 0
 4223 19c0 FB68     		ldr	r3, [r7, #12]
 4224 19c2 9B6A     		ldr	r3, [r3, #40]
 4225 19c4 B3F5005F 		cmp	r3, #8192
 4226 19c8 2AD1     		bne	.L213
1817:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1818:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Wait until RXNE flag is set to send data */
1819:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, SPI_TIMEOUT_VALUE) != HAL_OK)
 4227              		.loc 1 1819 0
 4228 19ca F868     		ldr	r0, [r7, #12]
 4229 19cc 0121     		movs	r1, #1
 4230 19ce 0022     		movs	r2, #0
 4231 19d0 0A23     		movs	r3, #10
 4232 19d2 00F00DF9 		bl	SPI_WaitOnFlagUntilTimeout
 4233 19d6 0346     		mov	r3, r0
 4234 19d8 002B     		cmp	r3, #0
 4235 19da 09D0     		beq	.L214
1820:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1821:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->ErrorCode |= HAL_SPI_ERROR_FLAG;
 4236              		.loc 1 1821 0
 4237 19dc FB68     		ldr	r3, [r7, #12]
 4238 19de 93F85230 		ldrb	r3, [r3, #82]
 4239 19e2 DBB2     		uxtb	r3, r3
 4240 19e4 43F02003 		orr	r3, r3, #32
 4241 19e8 DAB2     		uxtb	r2, r3
 4242 19ea FB68     		ldr	r3, [r7, #12]
 4243 19ec 83F85220 		strb	r2, [r3, #82]
 4244              	.L214:
1822:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1823:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1824:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Read CRC */
1825:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     tmpreg = hspi->Instance->DR;
 4245              		.loc 1 1825 0
 4246 19f0 FB68     		ldr	r3, [r7, #12]
 4247 19f2 1B68     		ldr	r3, [r3]
 4248 19f4 DB68     		ldr	r3, [r3, #12]
 4249 19f6 9BB2     		uxth	r3, r3
 4250 19f8 7B81     		strh	r3, [r7, #10]	@ movhi
1826:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1827:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Wait until RXNE flag is set to send data */
1828:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_TIMEOUT_VALUE) != HAL_OK)
 4251              		.loc 1 1828 0
 4252 19fa F868     		ldr	r0, [r7, #12]
 4253 19fc 0121     		movs	r1, #1
 4254 19fe 0122     		movs	r2, #1
 4255 1a00 0A23     		movs	r3, #10
 4256 1a02 00F0F5F8 		bl	SPI_WaitOnFlagUntilTimeout
 4257 1a06 0346     		mov	r3, r0
 4258 1a08 002B     		cmp	r3, #0
 4259 1a0a 09D0     		beq	.L213
1829:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1830:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       hspi->ErrorCode |= HAL_SPI_ERROR_FLAG;
 4260              		.loc 1 1830 0
 4261 1a0c FB68     		ldr	r3, [r7, #12]
 4262 1a0e 93F85230 		ldrb	r3, [r3, #82]
 4263 1a12 DBB2     		uxtb	r3, r3
 4264 1a14 43F02003 		orr	r3, r3, #32
 4265 1a18 DAB2     		uxtb	r2, r3
 4266 1a1a FB68     		ldr	r3, [r7, #12]
 4267 1a1c 83F85220 		strb	r2, [r3, #82]
 4268              	.L213:
1831:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1832:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1833:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1834:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->RxXferCount = 0;
 4269              		.loc 1 1834 0
 4270 1a20 FB68     		ldr	r3, [r7, #12]
 4271 1a22 0022     		movs	r2, #0
 4272 1a24 DA87     		strh	r2, [r3, #62]	@ movhi
1835:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 4273              		.loc 1 1835 0
 4274 1a26 FB68     		ldr	r3, [r7, #12]
 4275 1a28 0122     		movs	r2, #1
 4276 1a2a 83F85120 		strb	r2, [r3, #81]
1836:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1837:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Check if CRC error occurred */
1838:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
 4277              		.loc 1 1838 0
 4278 1a2e FB68     		ldr	r3, [r7, #12]
 4279 1a30 1B68     		ldr	r3, [r3]
 4280 1a32 9B68     		ldr	r3, [r3, #8]
 4281 1a34 03F01003 		and	r3, r3, #16
 4282 1a38 002B     		cmp	r3, #0
 4283 1a3a 11D0     		beq	.L215
1839:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1840:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->ErrorCode |= HAL_SPI_ERROR_CRC;
 4284              		.loc 1 1840 0
 4285 1a3c FB68     		ldr	r3, [r7, #12]
 4286 1a3e 93F85230 		ldrb	r3, [r3, #82]
 4287 1a42 DBB2     		uxtb	r3, r3
 4288 1a44 43F00203 		orr	r3, r3, #2
 4289 1a48 DAB2     		uxtb	r2, r3
 4290 1a4a FB68     		ldr	r3, [r7, #12]
 4291 1a4c 83F85220 		strb	r2, [r3, #82]
1841:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
 4292              		.loc 1 1841 0
 4293 1a50 FB68     		ldr	r3, [r7, #12]
 4294 1a52 1B68     		ldr	r3, [r3]
 4295 1a54 FA68     		ldr	r2, [r7, #12]
 4296 1a56 1268     		ldr	r2, [r2]
 4297 1a58 9268     		ldr	r2, [r2, #8]
 4298 1a5a 22F01002 		bic	r2, r2, #16
 4299 1a5e 9A60     		str	r2, [r3, #8]
 4300              	.L215:
1842:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1843:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1844:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Check if Errors has been detected during transfer */
1845:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 4301              		.loc 1 1845 0
 4302 1a60 FB68     		ldr	r3, [r7, #12]
 4303 1a62 93F85230 		ldrb	r3, [r3, #82]
 4304 1a66 DBB2     		uxtb	r3, r3
 4305 1a68 002B     		cmp	r3, #0
 4306 1a6a 03D0     		beq	.L216
1846:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1847:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
 4307              		.loc 1 1847 0
 4308 1a6c F868     		ldr	r0, [r7, #12]
 4309 1a6e FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4310 1a72 02E0     		b	.L210
 4311              	.L216:
1848:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1849:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   else
1850:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1851:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     HAL_SPI_RxCpltCallback(hspi);
 4312              		.loc 1 1851 0
 4313 1a74 F868     		ldr	r0, [r7, #12]
 4314 1a76 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 4315              	.L210:
1852:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1853:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 4316              		.loc 1 1853 0
 4317 1a7a 1037     		adds	r7, r7, #16
 4318 1a7c BD46     		mov	sp, r7
 4319              		@ sp needed
 4320 1a7e 80BD     		pop	{r7, pc}
 4321              		.cfi_endproc
 4322              	.LFE81:
 4324              		.align	2
 4325              		.thumb
 4326              		.thumb_func
 4328              	SPI_DMATransmitReceiveCplt:
 4329              	.LFB82:
1854:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1855:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
1856:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief DMA SPI transmit receive process complete callback 
1857:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param hdma : DMA handle
1858:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval None
1859:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
1860:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma)   
1861:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 4330              		.loc 1 1861 0
 4331              		.cfi_startproc
 4332              		@ args = 0, pretend = 0, frame = 16
 4333              		@ frame_needed = 1, uses_anonymous_args = 0
 4334 1a80 80B5     		push	{r7, lr}
 4335              		.cfi_def_cfa_offset 8
 4336              		.cfi_offset 7, -8
 4337              		.cfi_offset 14, -4
 4338 1a82 84B0     		sub	sp, sp, #16
 4339              		.cfi_def_cfa_offset 24
 4340 1a84 00AF     		add	r7, sp, #0
 4341              		.cfi_def_cfa_register 7
 4342 1a86 7860     		str	r0, [r7, #4]
1862:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   __IO uint16_t tmpreg;
1863:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1864:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4343              		.loc 1 1864 0
 4344 1a88 7B68     		ldr	r3, [r7, #4]
 4345 1a8a 9B6B     		ldr	r3, [r3, #56]
 4346 1a8c FB60     		str	r3, [r7, #12]
1865:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1866:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Reset CRC Calculation */
1867:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED)
 4347              		.loc 1 1867 0
 4348 1a8e FB68     		ldr	r3, [r7, #12]
 4349 1a90 9B6A     		ldr	r3, [r3, #40]
 4350 1a92 B3F5005F 		cmp	r3, #8192
 4351 1a96 20D1     		bne	.L219
1868:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1869:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Check if CRC is done on going (RXNE flag set) */
1870:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_TIMEOUT_VALUE) == HAL_OK)
 4352              		.loc 1 1870 0
 4353 1a98 F868     		ldr	r0, [r7, #12]
 4354 1a9a 0121     		movs	r1, #1
 4355 1a9c 0122     		movs	r2, #1
 4356 1a9e 0A23     		movs	r3, #10
 4357 1aa0 00F0A6F8 		bl	SPI_WaitOnFlagUntilTimeout
 4358 1aa4 0346     		mov	r3, r0
 4359 1aa6 002B     		cmp	r3, #0
 4360 1aa8 12D1     		bne	.L220
1871:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1872:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       /* Wait until RXNE flag is set to send data */
1873:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, SPI_TIMEOUT_VALUE) != HAL_OK)
 4361              		.loc 1 1873 0
 4362 1aaa F868     		ldr	r0, [r7, #12]
 4363 1aac 0121     		movs	r1, #1
 4364 1aae 0022     		movs	r2, #0
 4365 1ab0 0A23     		movs	r3, #10
 4366 1ab2 00F09DF8 		bl	SPI_WaitOnFlagUntilTimeout
 4367 1ab6 0346     		mov	r3, r0
 4368 1ab8 002B     		cmp	r3, #0
 4369 1aba 09D0     		beq	.L220
1874:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
1875:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         hspi->ErrorCode |= HAL_SPI_ERROR_FLAG;
 4370              		.loc 1 1875 0
 4371 1abc FB68     		ldr	r3, [r7, #12]
 4372 1abe 93F85230 		ldrb	r3, [r3, #82]
 4373 1ac2 DBB2     		uxtb	r3, r3
 4374 1ac4 43F02003 		orr	r3, r3, #32
 4375 1ac8 DAB2     		uxtb	r2, r3
 4376 1aca FB68     		ldr	r3, [r7, #12]
 4377 1acc 83F85220 		strb	r2, [r3, #82]
 4378              	.L220:
1876:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       }
1877:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1878:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     /* Read CRC */
1879:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     tmpreg = hspi->Instance->DR;
 4379              		.loc 1 1879 0
 4380 1ad0 FB68     		ldr	r3, [r7, #12]
 4381 1ad2 1B68     		ldr	r3, [r3]
 4382 1ad4 DB68     		ldr	r3, [r3, #12]
 4383 1ad6 9BB2     		uxth	r3, r3
 4384 1ad8 7B81     		strh	r3, [r7, #10]	@ movhi
 4385              	.L219:
1880:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1881:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1882:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Wait until TXE flag is set to send data */
1883:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_TXE, RESET, SPI_TIMEOUT_VALUE) != HAL_OK)
 4386              		.loc 1 1883 0
 4387 1ada F868     		ldr	r0, [r7, #12]
 4388 1adc 0221     		movs	r1, #2
 4389 1ade 0022     		movs	r2, #0
 4390 1ae0 0A23     		movs	r3, #10
 4391 1ae2 00F085F8 		bl	SPI_WaitOnFlagUntilTimeout
 4392 1ae6 0346     		mov	r3, r0
 4393 1ae8 002B     		cmp	r3, #0
 4394 1aea 09D0     		beq	.L221
1884:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1885:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->ErrorCode |= HAL_SPI_ERROR_FLAG;
 4395              		.loc 1 1885 0
 4396 1aec FB68     		ldr	r3, [r7, #12]
 4397 1aee 93F85230 		ldrb	r3, [r3, #82]
 4398 1af2 DBB2     		uxtb	r3, r3
 4399 1af4 43F02003 		orr	r3, r3, #32
 4400 1af8 DAB2     		uxtb	r2, r3
 4401 1afa FB68     		ldr	r3, [r7, #12]
 4402 1afc 83F85220 		strb	r2, [r3, #82]
 4403              	.L221:
1886:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1887:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Disable Tx DMA Request */
1888:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->Instance->CR2 &= (uint32_t)(~SPI_CR2_TXDMAEN);
 4404              		.loc 1 1888 0
 4405 1b00 FB68     		ldr	r3, [r7, #12]
 4406 1b02 1B68     		ldr	r3, [r3]
 4407 1b04 FA68     		ldr	r2, [r7, #12]
 4408 1b06 1268     		ldr	r2, [r2]
 4409 1b08 5268     		ldr	r2, [r2, #4]
 4410 1b0a 22F00202 		bic	r2, r2, #2
 4411 1b0e 5A60     		str	r2, [r3, #4]
1889:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1890:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Wait until Busy flag is reset before disabling SPI */
1891:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_BSY, SET, SPI_TIMEOUT_VALUE) != HAL_OK)
 4412              		.loc 1 1891 0
 4413 1b10 F868     		ldr	r0, [r7, #12]
 4414 1b12 8021     		movs	r1, #128
 4415 1b14 0122     		movs	r2, #1
 4416 1b16 0A23     		movs	r3, #10
 4417 1b18 00F06AF8 		bl	SPI_WaitOnFlagUntilTimeout
 4418 1b1c 0346     		mov	r3, r0
 4419 1b1e 002B     		cmp	r3, #0
 4420 1b20 09D0     		beq	.L222
1892:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1893:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->ErrorCode |= HAL_SPI_ERROR_FLAG;
 4421              		.loc 1 1893 0
 4422 1b22 FB68     		ldr	r3, [r7, #12]
 4423 1b24 93F85230 		ldrb	r3, [r3, #82]
 4424 1b28 DBB2     		uxtb	r3, r3
 4425 1b2a 43F02003 		orr	r3, r3, #32
 4426 1b2e DAB2     		uxtb	r2, r3
 4427 1b30 FB68     		ldr	r3, [r7, #12]
 4428 1b32 83F85220 		strb	r2, [r3, #82]
 4429              	.L222:
1894:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1895:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1896:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Disable Rx DMA Request */
1897:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->Instance->CR2 &= (uint32_t)(~SPI_CR2_RXDMAEN);
 4430              		.loc 1 1897 0
 4431 1b36 FB68     		ldr	r3, [r7, #12]
 4432 1b38 1B68     		ldr	r3, [r3]
 4433 1b3a FA68     		ldr	r2, [r7, #12]
 4434 1b3c 1268     		ldr	r2, [r2]
 4435 1b3e 5268     		ldr	r2, [r2, #4]
 4436 1b40 22F00102 		bic	r2, r2, #1
 4437 1b44 5A60     		str	r2, [r3, #4]
1898:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1899:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->TxXferCount = 0;
 4438              		.loc 1 1899 0
 4439 1b46 FB68     		ldr	r3, [r7, #12]
 4440 1b48 0022     		movs	r2, #0
 4441 1b4a DA86     		strh	r2, [r3, #54]	@ movhi
1900:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->RxXferCount = 0;
 4442              		.loc 1 1900 0
 4443 1b4c FB68     		ldr	r3, [r7, #12]
 4444 1b4e 0022     		movs	r2, #0
 4445 1b50 DA87     		strh	r2, [r3, #62]	@ movhi
1901:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1902:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 4446              		.loc 1 1902 0
 4447 1b52 FB68     		ldr	r3, [r7, #12]
 4448 1b54 0122     		movs	r2, #1
 4449 1b56 83F85120 		strb	r2, [r3, #81]
1903:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1904:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Check if CRC error occurred */
1905:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
 4450              		.loc 1 1905 0
 4451 1b5a FB68     		ldr	r3, [r7, #12]
 4452 1b5c 1B68     		ldr	r3, [r3]
 4453 1b5e 9B68     		ldr	r3, [r3, #8]
 4454 1b60 03F01003 		and	r3, r3, #16
 4455 1b64 002B     		cmp	r3, #0
 4456 1b66 11D0     		beq	.L223
1906:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1907:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     hspi->ErrorCode |= HAL_SPI_ERROR_CRC;
 4457              		.loc 1 1907 0
 4458 1b68 FB68     		ldr	r3, [r7, #12]
 4459 1b6a 93F85230 		ldrb	r3, [r3, #82]
 4460 1b6e DBB2     		uxtb	r3, r3
 4461 1b70 43F00203 		orr	r3, r3, #2
 4462 1b74 DAB2     		uxtb	r2, r3
 4463 1b76 FB68     		ldr	r3, [r7, #12]
 4464 1b78 83F85220 		strb	r2, [r3, #82]
1908:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
 4465              		.loc 1 1908 0
 4466 1b7c FB68     		ldr	r3, [r7, #12]
 4467 1b7e 1B68     		ldr	r3, [r3]
 4468 1b80 FA68     		ldr	r2, [r7, #12]
 4469 1b82 1268     		ldr	r2, [r2]
 4470 1b84 9268     		ldr	r2, [r2, #8]
 4471 1b86 22F01002 		bic	r2, r2, #16
 4472 1b8a 9A60     		str	r2, [r3, #8]
 4473              	.L223:
1909:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1910:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1911:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Check if Errors has been detected during transfer */
1912:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 4474              		.loc 1 1912 0
 4475 1b8c FB68     		ldr	r3, [r7, #12]
 4476 1b8e 93F85230 		ldrb	r3, [r3, #82]
 4477 1b92 DBB2     		uxtb	r3, r3
 4478 1b94 002B     		cmp	r3, #0
 4479 1b96 03D0     		beq	.L224
1913:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1914:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
 4480              		.loc 1 1914 0
 4481 1b98 F868     		ldr	r0, [r7, #12]
 4482 1b9a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4483 1b9e 02E0     		b	.L218
 4484              	.L224:
1915:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1916:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   else
1917:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1918:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     HAL_SPI_TxRxCpltCallback(hspi);
 4485              		.loc 1 1918 0
 4486 1ba0 F868     		ldr	r0, [r7, #12]
 4487 1ba2 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 4488              	.L218:
1919:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1920:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 4489              		.loc 1 1920 0
 4490 1ba6 1037     		adds	r7, r7, #16
 4491 1ba8 BD46     		mov	sp, r7
 4492              		@ sp needed
 4493 1baa 80BD     		pop	{r7, pc}
 4494              		.cfi_endproc
 4495              	.LFE82:
 4497              		.align	2
 4498              		.thumb
 4499              		.thumb_func
 4501              	SPI_DMAError:
 4502              	.LFB83:
1921:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1922:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
1923:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief DMA SPI communication error callback 
1924:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param hdma : DMA handle
1925:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval None
1926:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
1927:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma)
1928:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 4503              		.loc 1 1928 0
 4504              		.cfi_startproc
 4505              		@ args = 0, pretend = 0, frame = 16
 4506              		@ frame_needed = 1, uses_anonymous_args = 0
 4507 1bac 80B5     		push	{r7, lr}
 4508              		.cfi_def_cfa_offset 8
 4509              		.cfi_offset 7, -8
 4510              		.cfi_offset 14, -4
 4511 1bae 84B0     		sub	sp, sp, #16
 4512              		.cfi_def_cfa_offset 24
 4513 1bb0 00AF     		add	r7, sp, #0
 4514              		.cfi_def_cfa_register 7
 4515 1bb2 7860     		str	r0, [r7, #4]
1929:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = (SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4516              		.loc 1 1929 0
 4517 1bb4 7B68     		ldr	r3, [r7, #4]
 4518 1bb6 9B6B     		ldr	r3, [r3, #56]
 4519 1bb8 FB60     		str	r3, [r7, #12]
1930:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->TxXferCount = 0;
 4520              		.loc 1 1930 0
 4521 1bba FB68     		ldr	r3, [r7, #12]
 4522 1bbc 0022     		movs	r2, #0
 4523 1bbe DA86     		strh	r2, [r3, #54]	@ movhi
1931:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->RxXferCount = 0;
 4524              		.loc 1 1931 0
 4525 1bc0 FB68     		ldr	r3, [r7, #12]
 4526 1bc2 0022     		movs	r2, #0
 4527 1bc4 DA87     		strh	r2, [r3, #62]	@ movhi
1932:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->State= HAL_SPI_STATE_READY;
 4528              		.loc 1 1932 0
 4529 1bc6 FB68     		ldr	r3, [r7, #12]
 4530 1bc8 0122     		movs	r2, #1
 4531 1bca 83F85120 		strb	r2, [r3, #81]
1933:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   hspi->ErrorCode |= HAL_SPI_ERROR_DMA;
 4532              		.loc 1 1933 0
 4533 1bce FB68     		ldr	r3, [r7, #12]
 4534 1bd0 93F85230 		ldrb	r3, [r3, #82]
 4535 1bd4 DBB2     		uxtb	r3, r3
 4536 1bd6 43F01003 		orr	r3, r3, #16
 4537 1bda DAB2     		uxtb	r2, r3
 4538 1bdc FB68     		ldr	r3, [r7, #12]
 4539 1bde 83F85220 		strb	r2, [r3, #82]
1934:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
 4540              		.loc 1 1934 0
 4541 1be2 F868     		ldr	r0, [r7, #12]
 4542 1be4 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
1935:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 4543              		.loc 1 1935 0
 4544 1be8 1037     		adds	r7, r7, #16
 4545 1bea BD46     		mov	sp, r7
 4546              		@ sp needed
 4547 1bec 80BD     		pop	{r7, pc}
 4548              		.cfi_endproc
 4549              	.LFE83:
 4551 1bee 00BF     		.align	2
 4552              		.thumb
 4553              		.thumb_func
 4555              	SPI_WaitOnFlagUntilTimeout:
 4556              	.LFB84:
1936:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1937:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** /**
1938:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @brief This function handles SPI Communication Timeout.
1939:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @param hspi: SPI handle
1940:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   * @retval HAL status
1941:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   */
1942:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitOnFlagUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagSta
1943:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** {
 4557              		.loc 1 1943 0
 4558              		.cfi_startproc
 4559              		@ args = 0, pretend = 0, frame = 24
 4560              		@ frame_needed = 1, uses_anonymous_args = 0
 4561 1bf0 80B5     		push	{r7, lr}
 4562              		.cfi_def_cfa_offset 8
 4563              		.cfi_offset 7, -8
 4564              		.cfi_offset 14, -4
 4565 1bf2 86B0     		sub	sp, sp, #24
 4566              		.cfi_def_cfa_offset 32
 4567 1bf4 00AF     		add	r7, sp, #0
 4568              		.cfi_def_cfa_register 7
 4569 1bf6 F860     		str	r0, [r7, #12]
 4570 1bf8 B960     		str	r1, [r7, #8]
 4571 1bfa 3B60     		str	r3, [r7]
 4572 1bfc 1346     		mov	r3, r2
 4573 1bfe FB71     		strb	r3, [r7, #7]
1944:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   uint32_t timeout = 0;
 4574              		.loc 1 1944 0
 4575 1c00 0023     		movs	r3, #0
 4576 1c02 7B61     		str	r3, [r7, #20]
1945:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1946:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   timeout = HAL_GetTick() + Timeout;
 4577              		.loc 1 1946 0
 4578 1c04 FFF7FEFF 		bl	HAL_GetTick
 4579 1c08 0246     		mov	r2, r0
 4580 1c0a 3B68     		ldr	r3, [r7]
 4581 1c0c 1344     		add	r3, r3, r2
 4582 1c0e 7B61     		str	r3, [r7, #20]
1947:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1948:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   /* Wait until flag is set */
1949:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   if(Status == RESET)
 4583              		.loc 1 1949 0
 4584 1c10 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4585 1c12 002B     		cmp	r3, #0
 4586 1c14 42D1     		bne	.L228
1950:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1951:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     while(__HAL_SPI_GET_FLAG(hspi, Flag) == RESET)
 4587              		.loc 1 1951 0
 4588 1c16 38E0     		b	.L229
 4589              	.L232:
1952:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1953:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       if(Timeout != HAL_MAX_DELAY)
 4590              		.loc 1 1953 0
 4591 1c18 3B68     		ldr	r3, [r7]
 4592 1c1a B3F1FF3F 		cmp	r3, #-1
 4593 1c1e 34D0     		beq	.L229
1954:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
1955:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         if(HAL_GetTick() >= timeout)
 4594              		.loc 1 1955 0
 4595 1c20 FFF7FEFF 		bl	HAL_GetTick
 4596 1c24 0246     		mov	r2, r0
 4597 1c26 7B69     		ldr	r3, [r7, #20]
 4598 1c28 9A42     		cmp	r2, r3
 4599 1c2a 2ED3     		bcc	.L229
1956:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         {
1957:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           /* Disable the SPI and reset the CRC: the CRC value should be cleared
1958:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****              on both master and slave sides in order to resynchronize the master
1959:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****              and slave for their respective CRC calculation */
1960:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1961:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
1962:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 4600              		.loc 1 1962 0
 4601 1c2c FB68     		ldr	r3, [r7, #12]
 4602 1c2e 1B68     		ldr	r3, [r3]
 4603 1c30 FA68     		ldr	r2, [r7, #12]
 4604 1c32 1268     		ldr	r2, [r2]
 4605 1c34 5268     		ldr	r2, [r2, #4]
 4606 1c36 22F0E002 		bic	r2, r2, #224
 4607 1c3a 5A60     		str	r2, [r3, #4]
1963:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1964:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           /* Disable SPI peripheral */
1965:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
 4608              		.loc 1 1965 0
 4609 1c3c FB68     		ldr	r3, [r7, #12]
 4610 1c3e 1B68     		ldr	r3, [r3]
 4611 1c40 FA68     		ldr	r2, [r7, #12]
 4612 1c42 1268     		ldr	r2, [r2]
 4613 1c44 1268     		ldr	r2, [r2]
 4614 1c46 22F04002 		bic	r2, r2, #64
 4615 1c4a 1A60     		str	r2, [r3]
1966:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1967:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           /* Reset CRC Calculation */
1968:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED)
 4616              		.loc 1 1968 0
 4617 1c4c FB68     		ldr	r3, [r7, #12]
 4618 1c4e 9B6A     		ldr	r3, [r3, #40]
 4619 1c50 B3F5005F 		cmp	r3, #8192
 4620 1c54 0FD1     		bne	.L230
1969:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           {
1970:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****             __HAL_SPI_RESET_CRC(hspi);
 4621              		.loc 1 1970 0
 4622 1c56 FB68     		ldr	r3, [r7, #12]
 4623 1c58 1B68     		ldr	r3, [r3]
 4624 1c5a FA68     		ldr	r2, [r7, #12]
 4625 1c5c 1268     		ldr	r2, [r2]
 4626 1c5e 1268     		ldr	r2, [r2]
 4627 1c60 22F40052 		bic	r2, r2, #8192
 4628 1c64 1A60     		str	r2, [r3]
 4629 1c66 FB68     		ldr	r3, [r7, #12]
 4630 1c68 1B68     		ldr	r3, [r3]
 4631 1c6a FA68     		ldr	r2, [r7, #12]
 4632 1c6c 1268     		ldr	r2, [r2]
 4633 1c6e 1268     		ldr	r2, [r2]
 4634 1c70 42F40052 		orr	r2, r2, #8192
 4635 1c74 1A60     		str	r2, [r3]
 4636              	.L230:
1971:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           }
1972:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1973:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           hspi->State= HAL_SPI_STATE_READY;
 4637              		.loc 1 1973 0
 4638 1c76 FB68     		ldr	r3, [r7, #12]
 4639 1c78 0122     		movs	r2, #1
 4640 1c7a 83F85120 		strb	r2, [r3, #81]
1974:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1975:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           /* Process Unlocked */
1976:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
 4641              		.loc 1 1976 0
 4642 1c7e FB68     		ldr	r3, [r7, #12]
 4643 1c80 0022     		movs	r2, #0
 4644 1c82 83F85020 		strb	r2, [r3, #80]
1977:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1978:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           return HAL_TIMEOUT;
 4645              		.loc 1 1978 0
 4646 1c86 0323     		movs	r3, #3
 4647 1c88 4BE0     		b	.L231
 4648              	.L229:
1951:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 4649              		.loc 1 1951 0 discriminator 1
 4650 1c8a FB68     		ldr	r3, [r7, #12]
 4651 1c8c 1B68     		ldr	r3, [r3]
 4652 1c8e 9A68     		ldr	r2, [r3, #8]
 4653 1c90 BB68     		ldr	r3, [r7, #8]
 4654 1c92 1A40     		ands	r2, r2, r3
 4655 1c94 BB68     		ldr	r3, [r7, #8]
 4656 1c96 9A42     		cmp	r2, r3
 4657 1c98 BED1     		bne	.L232
 4658 1c9a 41E0     		b	.L233
 4659              	.L228:
1979:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         }
1980:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       }
1981:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
1982:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
1983:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   else
1984:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   {
1985:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     while(__HAL_SPI_GET_FLAG(hspi, Flag) != RESET)
 4660              		.loc 1 1985 0
 4661 1c9c 38E0     		b	.L234
 4662              	.L236:
1986:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
1987:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       if(Timeout != HAL_MAX_DELAY)
 4663              		.loc 1 1987 0
 4664 1c9e 3B68     		ldr	r3, [r7]
 4665 1ca0 B3F1FF3F 		cmp	r3, #-1
 4666 1ca4 34D0     		beq	.L234
1988:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       {
1989:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         if(HAL_GetTick() >= timeout)
 4667              		.loc 1 1989 0
 4668 1ca6 FFF7FEFF 		bl	HAL_GetTick
 4669 1caa 0246     		mov	r2, r0
 4670 1cac 7B69     		ldr	r3, [r7, #20]
 4671 1cae 9A42     		cmp	r2, r3
 4672 1cb0 2ED3     		bcc	.L234
1990:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         {
1991:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           /* Disable the SPI and reset the CRC: the CRC value should be cleared
1992:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****              on both master and slave sides in order to resynchronize the master
1993:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****              and slave for their respective CRC calculation */
1994:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1995:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
1996:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 4673              		.loc 1 1996 0
 4674 1cb2 FB68     		ldr	r3, [r7, #12]
 4675 1cb4 1B68     		ldr	r3, [r3]
 4676 1cb6 FA68     		ldr	r2, [r7, #12]
 4677 1cb8 1268     		ldr	r2, [r2]
 4678 1cba 5268     		ldr	r2, [r2, #4]
 4679 1cbc 22F0E002 		bic	r2, r2, #224
 4680 1cc0 5A60     		str	r2, [r3, #4]
1997:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
1998:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           /* Disable SPI peripheral */
1999:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
 4681              		.loc 1 1999 0
 4682 1cc2 FB68     		ldr	r3, [r7, #12]
 4683 1cc4 1B68     		ldr	r3, [r3]
 4684 1cc6 FA68     		ldr	r2, [r7, #12]
 4685 1cc8 1268     		ldr	r2, [r2]
 4686 1cca 1268     		ldr	r2, [r2]
 4687 1ccc 22F04002 		bic	r2, r2, #64
 4688 1cd0 1A60     		str	r2, [r3]
2000:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
2001:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           /* Reset CRC Calculation */
2002:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLED)
 4689              		.loc 1 2002 0
 4690 1cd2 FB68     		ldr	r3, [r7, #12]
 4691 1cd4 9B6A     		ldr	r3, [r3, #40]
 4692 1cd6 B3F5005F 		cmp	r3, #8192
 4693 1cda 0FD1     		bne	.L235
2003:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           {
2004:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****             __HAL_SPI_RESET_CRC(hspi);
 4694              		.loc 1 2004 0
 4695 1cdc FB68     		ldr	r3, [r7, #12]
 4696 1cde 1B68     		ldr	r3, [r3]
 4697 1ce0 FA68     		ldr	r2, [r7, #12]
 4698 1ce2 1268     		ldr	r2, [r2]
 4699 1ce4 1268     		ldr	r2, [r2]
 4700 1ce6 22F40052 		bic	r2, r2, #8192
 4701 1cea 1A60     		str	r2, [r3]
 4702 1cec FB68     		ldr	r3, [r7, #12]
 4703 1cee 1B68     		ldr	r3, [r3]
 4704 1cf0 FA68     		ldr	r2, [r7, #12]
 4705 1cf2 1268     		ldr	r2, [r2]
 4706 1cf4 1268     		ldr	r2, [r2]
 4707 1cf6 42F40052 		orr	r2, r2, #8192
 4708 1cfa 1A60     		str	r2, [r3]
 4709              	.L235:
2005:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           }
2006:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
2007:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           hspi->State= HAL_SPI_STATE_READY;
 4710              		.loc 1 2007 0
 4711 1cfc FB68     		ldr	r3, [r7, #12]
 4712 1cfe 0122     		movs	r2, #1
 4713 1d00 83F85120 		strb	r2, [r3, #81]
2008:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
2009:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           /* Process Unlocked */
2010:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
 4714              		.loc 1 2010 0
 4715 1d04 FB68     		ldr	r3, [r7, #12]
 4716 1d06 0022     		movs	r2, #0
 4717 1d08 83F85020 		strb	r2, [r3, #80]
2011:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** 
2012:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****           return HAL_TIMEOUT;
 4718              		.loc 1 2012 0
 4719 1d0c 0323     		movs	r3, #3
 4720 1d0e 08E0     		b	.L231
 4721              	.L234:
1985:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     {
 4722              		.loc 1 1985 0 discriminator 1
 4723 1d10 FB68     		ldr	r3, [r7, #12]
 4724 1d12 1B68     		ldr	r3, [r3]
 4725 1d14 9A68     		ldr	r2, [r3, #8]
 4726 1d16 BB68     		ldr	r3, [r7, #8]
 4727 1d18 1A40     		ands	r2, r2, r3
 4728 1d1a BB68     		ldr	r3, [r7, #8]
 4729 1d1c 9A42     		cmp	r2, r3
 4730 1d1e BED0     		beq	.L236
 4731              	.L233:
2013:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****         }
2014:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****       }
2015:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****     }
2016:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   }
2017:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c ****   return HAL_OK;
 4732              		.loc 1 2017 0
 4733 1d20 0023     		movs	r3, #0
 4734              	.L231:
2018:../STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_spi.c **** }
 4735              		.loc 1 2018 0
 4736 1d22 1846     		mov	r0, r3
 4737 1d24 1837     		adds	r7, r7, #24
 4738 1d26 BD46     		mov	sp, r7
 4739              		@ sp needed
 4740 1d28 80BD     		pop	{r7, pc}
 4741              		.cfi_endproc
 4742              	.LFE84:
 4744              	.Letext0:
 4745              		.file 2 "c:\\program files (x86)\\codesourcery\\arm-none-eabi\\include\\stdint.h"
 4746              		.file 3 "D:\\workspace\\console800480\\system/stm32f217xx.h"
 4747              		.file 4 "D:\\workspace\\console800480\\system/stm32f2xx.h"
 4748              		.file 5 "D:\\workspace\\console800480\\STM32F2xx_HAL_Driver\\Inc/stm32f2xx_hal_def.h"
 4749              		.file 6 "D:\\workspace\\console800480\\STM32F2xx_HAL_Driver\\Inc/stm32f2xx_hal_dma.h"
 4750              		.file 7 "D:\\workspace\\console800480\\STM32F2xx_HAL_Driver\\Inc/stm32f2xx_hal_spi.h"
 4751              		.file 8 "D:\\workspace\\console800480\\system/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f2xx_hal_spi.c
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:18     .text:00000000 $t
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:23     .text:00000000 HAL_SPI_Init
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:220    .text:00000110 HAL_SPI_MspInit
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:157    .text:000000c4 HAL_SPI_DeInit
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:249    .text:00000124 HAL_SPI_MspDeInit
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:278    .text:00000138 HAL_SPI_Transmit
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:4555   .text:00001bf0 SPI_WaitOnFlagUntilTimeout
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:652    .text:0000039c HAL_SPI_Receive
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:1125   .text:000006b8 HAL_SPI_TransmitReceive
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:1811   .text:00000b3c HAL_SPI_Transmit_IT
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:3611   .text:00001620 SPI_TxISR
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:1999   .text:00000c64 HAL_SPI_Receive_IT
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:3965   .text:00001848 SPI_RxISR
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:2194   .text:00000d9c HAL_SPI_TransmitReceive_IT
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:3889   .text:000017e8 SPI_2LinesRxISR
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:2378   .text:00000ebc HAL_SPI_Transmit_DMA
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:4060   .text:000018c8 SPI_DMATransmitCplt
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:4501   .text:00001bac SPI_DMAError
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:2573   .text:00000ff8 HAL_SPI_Receive_DMA
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:2792   .text:00001160 HAL_SPI_TransmitReceive_DMA
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:4171   .text:00001974 SPI_DMAReceiveCplt
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:4328   .text:00001a80 SPI_DMATransmitReceiveCplt
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:3045   .text:00001304 HAL_SPI_IRQHandler
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:3378   .text:000014f0 HAL_SPI_ErrorCallback
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:3291   .text:000014b4 HAL_SPI_TxCpltCallback
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:3320   .text:000014c8 HAL_SPI_RxCpltCallback
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:3349   .text:000014dc HAL_SPI_TxRxCpltCallback
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:3407   .text:00001504 HAL_SPI_GetState
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:3441   .text:00001520 HAL_SPI_GetError
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:3474   .text:0000153c SPI_TxCloseIRQHandler
C:\Users\sagok\AppData\Local\Temp\ccGRvoGJ.s:3699   .text:00001694 SPI_RxCloseIRQHandler
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.7f551ac7fcad8b79b9df4bfdaa536673
                           .group:00000000 wm4.stm32f2xx_hal_conf.h.40.007126baefb9f966c36646edbf8040d2
                           .group:00000000 wm4.stm32f2xx.h.57.5ec1581efc43612c411d33a8686e9ec7
                           .group:00000000 wm4.stm32f217xx.h.52.9c940d76d00294b78837dc334c172fdd
                           .group:00000000 wm4.core_cm3.h.32.49180ccb4d36cabd2d7016d2a51d91ae
                           .group:00000000 wm4.newlib.h.8.384a112feabb3bef7b573ae48cde2e3b
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4.config.h.183.aa62afef667fb61d15fa64c48beb2f14
                           .group:00000000 wm4._ansi.h.23.5644b60c990a4800b02a6e654e88f93a
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:00000000 wm4.core_cm3.h.130.63ab2348a6eed0fdb318040d970b676c
                           .group:00000000 wm4.stm32f217xx.h.978.a5c681952b2f704a0e7f2ba21d08adf5
                           .group:00000000 wm4.stm32f2xx.h.142.bc2155a1f7498bab16371e38413a9e41
                           .group:00000000 wm4.stm32f2xx_hal_def.h.74.8ad2dc8aa82c4fd02e5aeaae592641ba
                           .group:00000000 wm4.stm32f2xx_hal_rcc.h.142.ec0f91cc6576a6acebd17e6dd85829ae
                           .group:00000000 wm4.stm32f2xx_hal_rcc_ex.h.40.0829033e864455c6bdd0db01f8ba5a50
                           .group:00000000 wm4.stm32f2xx_hal_gpio.h.40.ba64e0bb94d9a68835f80159f39a86f1
                           .group:00000000 wm4.stm32f2xx_hal_gpio_ex.h.40.24e547fd402281923f446b510381083f
                           .group:00000000 wm4.stm32f2xx_hal_dma.h.40.5d9732ace2a21a4526ce8f0c52428fff
                           .group:00000000 wm4.stm32f2xx_hal_cortex.h.40.e10263d2ec5d4fa79b4180ce1a38aff1
                           .group:00000000 wm4.stm32f2xx_hal_adc.h.40.89ac8b78113cac4cf63847587daabac9
                           .group:00000000 wm4.stm32f2xx_hal_adc_ex.h.40.7de68ed256ef25526ee31cc017f2c291
                           .group:00000000 wm4.stm32f2xx_hal_flash.h.40.c3171719ce015e9cff20c795e44e886d
                           .group:00000000 wm4.stm32f2xx_hal_flash_ex.h.40.7389508bd24a0aeb077bde0c9fb651eb
                           .group:00000000 wm4.stm32f2xx_ll_fsmc.h.40.c1c32f2e1862f4dd342bd9b80fb895bb
                           .group:00000000 wm4.stm32f2xx_hal_pwr.h.40.812df32e5c31b609a128e9db0eb4cbd0
                           .group:00000000 wm4.stm32f2xx_hal_rtc.h.40.850fda5fe2cce8797446913dee18382f
                           .group:00000000 wm4.stm32f2xx_hal_rtc_ex.h.40.f3e0c408e3bf4e8a0352d7ec9a18a822
                           .group:00000000 wm4.stm32f2xx_ll_sdmmc.h.40.3719ab487c4b77401c572f459adf6eb7
                           .group:00000000 wm4.stm32f2xx_hal_sd.h.58.760215394dcc316161a6482c0af9b866
                           .group:00000000 wm4.stm32f2xx_hal_spi.h.40.7984243dbaba8b21c6392998a47e6987
                           .group:00000000 wm4.stm32f2xx_hal_tim.h.40.d79172f25d0e9a15dc346aba8515bdd6
                           .group:00000000 wm4.stm32f2xx_hal_tim_ex.h.40.361f280a7a3f60b4b238bb99ca728d83
                           .group:00000000 wm4.stm32f2xx_hal_uart.h.40.d74def561ae6f78f40f477c8426ecbef
                           .group:00000000 wm4.stm32f2xx_ll_usb.h.40.9b0206a05bc6ce3bec1648b51f22cb81
                           .group:00000000 wm4.stm32f2xx_hal_pcd.h.99.11faba414c39e357b2f23364912d0605
                           .group:00000000 wm4.stm32f2xx_hal_hcd.h.40.44ee5e972983ae0139ddbacdc75c44ef
                           .group:00000000 wm4.stm32f2xx_hal.h.64.ed79ee83e52b151b3c365392b398f866

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_GetTick
